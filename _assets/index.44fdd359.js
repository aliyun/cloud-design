/** @license React v16.13.0
 * react.production.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
const React = {};
(function(d2) {
  function r2(a) {
    for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c2 = 1; c2 < arguments.length; c2++)
      b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
    return "Minified React error #" + a + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  function w2(a, b2, c2) {
    this.props = a;
    this.context = b2;
    this.refs = ba;
    this.updater = c2 || ca;
  }
  function da() {
  }
  function L(a, b2, c2) {
    this.props = a;
    this.context = b2;
    this.refs = ba;
    this.updater = c2 || ca;
  }
  function ea(a, b2, c2) {
    var g2, e2 = {}, fa = null, d3 = null;
    if (b2 != null)
      for (g2 in b2.ref !== void 0 && (d3 = b2.ref), b2.key !== void 0 && (fa = "" + b2.key), b2)
        ha.call(b2, g2) && !ia.hasOwnProperty(g2) && (e2[g2] = b2[g2]);
    var h2 = arguments.length - 2;
    if (h2 === 1)
      e2.children = c2;
    else if (1 < h2) {
      for (var k2 = Array(h2), f3 = 0; f3 < h2; f3++)
        k2[f3] = arguments[f3 + 2];
      e2.children = k2;
    }
    if (a && a.defaultProps)
      for (g2 in h2 = a.defaultProps, h2)
        e2[g2] === void 0 && (e2[g2] = h2[g2]);
    return {$$typeof: x2, type: a, key: fa, ref: d3, props: e2, _owner: M.current};
  }
  function va(a, b2) {
    return {$$typeof: x2, type: a.type, key: b2, ref: a.ref, props: a.props, _owner: a._owner};
  }
  function N(a) {
    return typeof a === "object" && a !== null && a.$$typeof === x2;
  }
  function wa(a) {
    var b2 = {"=": "=0", ":": "=2"};
    return "$" + ("" + a).replace(/[=:]/g, function(a2) {
      return b2[a2];
    });
  }
  function ja(a, b2, c2, g2) {
    if (C.length) {
      var e2 = C.pop();
      e2.result = a;
      e2.keyPrefix = b2;
      e2.func = c2;
      e2.context = g2;
      e2.count = 0;
      return e2;
    }
    return {
      result: a,
      keyPrefix: b2,
      func: c2,
      context: g2,
      count: 0
    };
  }
  function ka(a) {
    a.result = null;
    a.keyPrefix = null;
    a.func = null;
    a.context = null;
    a.count = 0;
    10 > C.length && C.push(a);
  }
  function O(a, b2, c2, g2) {
    var e2 = typeof a;
    if (e2 === "undefined" || e2 === "boolean")
      a = null;
    var d3 = false;
    if (a === null)
      d3 = true;
    else
      switch (e2) {
        case "string":
        case "number":
          d3 = true;
          break;
        case "object":
          switch (a.$$typeof) {
            case x2:
            case xa:
              d3 = true;
          }
      }
    if (d3)
      return c2(g2, a, b2 === "" ? "." + P(a, 0) : b2), 1;
    d3 = 0;
    b2 = b2 === "" ? "." : b2 + ":";
    if (Array.isArray(a))
      for (var f3 = 0; f3 < a.length; f3++) {
        e2 = a[f3];
        var h2 = b2 + P(e2, f3);
        d3 += O(e2, h2, c2, g2);
      }
    else if (a === null || typeof a !== "object" ? h2 = null : (h2 = la && a[la] || a["@@iterator"], h2 = typeof h2 === "function" ? h2 : null), typeof h2 === "function")
      for (a = h2.call(a), f3 = 0; !(e2 = a.next()).done; )
        e2 = e2.value, h2 = b2 + P(e2, f3++), d3 += O(e2, h2, c2, g2);
    else if (e2 === "object")
      throw c2 = "" + a, Error(r2(31, c2 === "[object Object]" ? "object with keys {" + Object.keys(a).join(", ") + "}" : c2, ""));
    return d3;
  }
  function Q(a, b2, c2) {
    return a == null ? 0 : O(a, "", b2, c2);
  }
  function P(a, b2) {
    return typeof a === "object" && a !== null && a.key != null ? wa(a.key) : b2.toString(36);
  }
  function ya(a, b2, c2) {
    a.func.call(a.context, b2, a.count++);
  }
  function za(a, b2, c2) {
    var g2 = a.result, e2 = a.keyPrefix;
    a = a.func.call(a.context, b2, a.count++);
    Array.isArray(a) ? R(a, g2, c2, function(a2) {
      return a2;
    }) : a != null && (N(a) && (a = va(a, e2 + (!a.key || b2 && b2.key === a.key ? "" : ("" + a.key).replace(ma, "$&/") + "/") + c2)), g2.push(a));
  }
  function R(a, b2, c2, g2, e2) {
    var d3 = "";
    c2 != null && (d3 = ("" + c2).replace(ma, "$&/") + "/");
    b2 = ja(b2, d3, g2, e2);
    Q(a, za, b2);
    ka(b2);
  }
  function t2() {
    var a = na.current;
    if (a === null)
      throw Error(r2(321));
    return a;
  }
  function S(a, b2) {
    var c2 = a.length;
    a.push(b2);
    a:
      for (; ; ) {
        var g2 = c2 - 1 >>> 1, e2 = a[g2];
        if (e2 !== void 0 && 0 < D(e2, b2))
          a[g2] = b2, a[c2] = e2, c2 = g2;
        else
          break a;
      }
  }
  function n2(a) {
    a = a[0];
    return a === void 0 ? null : a;
  }
  function E(a) {
    var b2 = a[0];
    if (b2 !== void 0) {
      var c2 = a.pop();
      if (c2 !== b2) {
        a[0] = c2;
        a:
          for (var g2 = 0, e2 = a.length; g2 < e2; ) {
            var d3 = 2 * (g2 + 1) - 1, f3 = a[d3], h2 = d3 + 1, k2 = a[h2];
            if (f3 !== void 0 && 0 > D(f3, c2))
              k2 !== void 0 && 0 > D(k2, f3) ? (a[g2] = k2, a[h2] = c2, g2 = h2) : (a[g2] = f3, a[d3] = c2, g2 = d3);
            else if (k2 !== void 0 && 0 > D(k2, c2))
              a[g2] = k2, a[h2] = c2, g2 = h2;
            else
              break a;
          }
      }
      return b2;
    }
    return null;
  }
  function D(a, b2) {
    var c2 = a.sortIndex - b2.sortIndex;
    return c2 !== 0 ? c2 : a.id - b2.id;
  }
  function F(a) {
    for (var b2 = n2(u); b2 !== null; ) {
      if (b2.callback === null)
        E(u);
      else if (b2.startTime <= a)
        E(u), b2.sortIndex = b2.expirationTime, S(p2, b2);
      else
        break;
      b2 = n2(u);
    }
  }
  function T(a) {
    y2 = false;
    F(a);
    if (!v2)
      if (n2(p2) !== null)
        v2 = true, z2(U);
      else {
        var b2 = n2(u);
        b2 !== null && G(T, b2.startTime - a);
      }
  }
  function U(a, b2) {
    v2 = false;
    y2 && (y2 = false, V());
    H = true;
    var c2 = m2;
    try {
      F(b2);
      for (l2 = n2(p2); l2 !== null && (!(l2.expirationTime > b2) || a && !W()); ) {
        var g2 = l2.callback;
        if (g2 !== null) {
          l2.callback = null;
          m2 = l2.priorityLevel;
          var e2 = g2(l2.expirationTime <= b2);
          b2 = q2();
          typeof e2 === "function" ? l2.callback = e2 : l2 === n2(p2) && E(p2);
          F(b2);
        } else
          E(p2);
        l2 = n2(p2);
      }
      if (l2 !== null)
        var d3 = true;
      else {
        var f3 = n2(u);
        f3 !== null && G(T, f3.startTime - b2);
        d3 = false;
      }
      return d3;
    } finally {
      l2 = null, m2 = c2, H = false;
    }
  }
  function oa(a) {
    switch (a) {
      case 1:
        return -1;
      case 2:
        return 250;
      case 5:
        return 1073741823;
      case 4:
        return 1e4;
      default:
        return 5e3;
    }
  }
  var f2 = typeof Symbol === "function" && Symbol.for, x2 = f2 ? Symbol.for("react.element") : 60103, xa = f2 ? Symbol.for("react.portal") : 60106, Aa = f2 ? Symbol.for("react.fragment") : 60107, Ba = f2 ? Symbol.for("react.strict_mode") : 60108, Ca = f2 ? Symbol.for("react.profiler") : 60114, Da = f2 ? Symbol.for("react.provider") : 60109, Ea = f2 ? Symbol.for("react.context") : 60110, Fa = f2 ? Symbol.for("react.forward_ref") : 60112, Ga = f2 ? Symbol.for("react.suspense") : 60113, Ha = f2 ? Symbol.for("react.memo") : 60115, Ia = f2 ? Symbol.for("react.lazy") : 60116, la = typeof Symbol === "function" && Symbol.iterator, pa = Object.getOwnPropertySymbols, Ja = Object.prototype.hasOwnProperty, Ka = Object.prototype.propertyIsEnumerable, I = function() {
    try {
      if (!Object.assign)
        return false;
      var a = new String("abc");
      a[5] = "de";
      if (Object.getOwnPropertyNames(a)[0] === "5")
        return false;
      var b2 = {};
      for (a = 0; 10 > a; a++)
        b2["_" + String.fromCharCode(a)] = a;
      if (Object.getOwnPropertyNames(b2).map(function(a2) {
        return b2[a2];
      }).join("") !== "0123456789")
        return false;
      var c2 = {};
      "abcdefghijklmnopqrst".split("").forEach(function(a2) {
        c2[a2] = a2;
      });
      return Object.keys(Object.assign({}, c2)).join("") !== "abcdefghijklmnopqrst" ? false : true;
    } catch (g2) {
      return false;
    }
  }() ? Object.assign : function(a, b2) {
    if (a === null || a === void 0)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    var c2 = Object(a);
    for (var g2, e2 = 1; e2 < arguments.length; e2++) {
      var d3 = Object(arguments[e2]);
      for (var f3 in d3)
        Ja.call(d3, f3) && (c2[f3] = d3[f3]);
      if (pa) {
        g2 = pa(d3);
        for (var h2 = 0; h2 < g2.length; h2++)
          Ka.call(d3, g2[h2]) && (c2[g2[h2]] = d3[g2[h2]]);
      }
    }
    return c2;
  }, ca = {isMounted: function(a) {
    return false;
  }, enqueueForceUpdate: function(a, b2, c2) {
  }, enqueueReplaceState: function(a, b2, c2, d3) {
  }, enqueueSetState: function(a, b2, c2, d3) {
  }}, ba = {};
  w2.prototype.isReactComponent = {};
  w2.prototype.setState = function(a, b2) {
    if (typeof a !== "object" && typeof a !== "function" && a != null)
      throw Error(r2(85));
    this.updater.enqueueSetState(this, a, b2, "setState");
  };
  w2.prototype.forceUpdate = function(a) {
    this.updater.enqueueForceUpdate(this, a, "forceUpdate");
  };
  da.prototype = w2.prototype;
  f2 = L.prototype = new da();
  f2.constructor = L;
  I(f2, w2.prototype);
  f2.isPureReactComponent = true;
  var M = {current: null}, ha = Object.prototype.hasOwnProperty, ia = {key: true, ref: true, __self: true, __source: true}, ma = /\/+/g, C = [], na = {current: null}, X;
  if (typeof window === "undefined" || typeof MessageChannel !== "function") {
    var A2 = null, qa = null, ra = function() {
      if (A2 !== null)
        try {
          var a = q2();
          A2(true, a);
          A2 = null;
        } catch (b2) {
          throw setTimeout(ra, 0), b2;
        }
    }, La = Date.now();
    var q2 = function() {
      return Date.now() - La;
    };
    var z2 = function(a) {
      A2 !== null ? setTimeout(z2, 0, a) : (A2 = a, setTimeout(ra, 0));
    };
    var G = function(a, b2) {
      qa = setTimeout(a, b2);
    };
    var V = function() {
      clearTimeout(qa);
    };
    var W = function() {
      return false;
    };
    f2 = X = function() {
    };
  } else {
    var Y = window.performance, sa = window.Date, Ma = window.setTimeout, Na = window.clearTimeout;
    typeof console !== "undefined" && (f2 = window.cancelAnimationFrame, typeof window.requestAnimationFrame !== "function" && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"), typeof f2 !== "function" && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));
    if (typeof Y === "object" && typeof Y.now === "function")
      q2 = function() {
        return Y.now();
      };
    else {
      var Oa = sa.now();
      q2 = function() {
        return sa.now() - Oa;
      };
    }
    var J = false, K = null, Z = -1, ta = 5, ua = 0;
    W = function() {
      return q2() >= ua;
    };
    f2 = function() {
    };
    X = function(a) {
      0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported") : ta = 0 < a ? Math.floor(1e3 / a) : 5;
    };
    var B = new MessageChannel(), aa = B.port2;
    B.port1.onmessage = function() {
      if (K !== null) {
        var a = q2();
        ua = a + ta;
        try {
          K(true, a) ? aa.postMessage(null) : (J = false, K = null);
        } catch (b2) {
          throw aa.postMessage(null), b2;
        }
      } else
        J = false;
    };
    z2 = function(a) {
      K = a;
      J || (J = true, aa.postMessage(null));
    };
    G = function(a, b2) {
      Z = Ma(function() {
        a(q2());
      }, b2);
    };
    V = function() {
      Na(Z);
      Z = -1;
    };
  }
  var p2 = [], u = [], Pa = 1, l2 = null, m2 = 3, H = false, v2 = false, y2 = false, Qa = 0;
  B = {ReactCurrentDispatcher: na, ReactCurrentOwner: M, IsSomeRendererActing: {current: false}, assign: I};
  I(B, {Scheduler: {
    __proto__: null,
    unstable_ImmediatePriority: 1,
    unstable_UserBlockingPriority: 2,
    unstable_NormalPriority: 3,
    unstable_IdlePriority: 5,
    unstable_LowPriority: 4,
    unstable_runWithPriority: function(a, b2) {
      switch (a) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          a = 3;
      }
      var c2 = m2;
      m2 = a;
      try {
        return b2();
      } finally {
        m2 = c2;
      }
    },
    unstable_next: function(a) {
      switch (m2) {
        case 1:
        case 2:
        case 3:
          var b2 = 3;
          break;
        default:
          b2 = m2;
      }
      var c2 = m2;
      m2 = b2;
      try {
        return a();
      } finally {
        m2 = c2;
      }
    },
    unstable_scheduleCallback: function(a, b2, c2) {
      var d3 = q2();
      if (typeof c2 === "object" && c2 !== null) {
        var e2 = c2.delay;
        e2 = typeof e2 === "number" && 0 < e2 ? d3 + e2 : d3;
        c2 = typeof c2.timeout === "number" ? c2.timeout : oa(a);
      } else
        c2 = oa(a), e2 = d3;
      c2 = e2 + c2;
      a = {id: Pa++, callback: b2, priorityLevel: a, startTime: e2, expirationTime: c2, sortIndex: -1};
      e2 > d3 ? (a.sortIndex = e2, S(u, a), n2(p2) === null && a === n2(u) && (y2 ? V() : y2 = true, G(T, e2 - d3))) : (a.sortIndex = c2, S(p2, a), v2 || H || (v2 = true, z2(U)));
      return a;
    },
    unstable_cancelCallback: function(a) {
      a.callback = null;
    },
    unstable_wrapCallback: function(a) {
      var b2 = m2;
      return function() {
        var c2 = m2;
        m2 = b2;
        try {
          return a.apply(this, arguments);
        } finally {
          m2 = c2;
        }
      };
    },
    unstable_getCurrentPriorityLevel: function() {
      return m2;
    },
    unstable_shouldYield: function() {
      var a = q2();
      F(a);
      var b2 = n2(p2);
      return b2 !== l2 && l2 !== null && b2 !== null && b2.callback !== null && b2.startTime <= a && b2.expirationTime < l2.expirationTime || W();
    },
    unstable_requestPaint: f2,
    unstable_continueExecution: function() {
      v2 || H || (v2 = true, z2(U));
    },
    unstable_pauseExecution: function() {
    },
    unstable_getFirstCallbackNode: function() {
      return n2(p2);
    },
    get unstable_now() {
      return q2;
    },
    get unstable_forceFrameRate() {
      return X;
    },
    unstable_Profiling: null
  }, SchedulerTracing: {
    __proto__: null,
    __interactionsRef: null,
    __subscriberRef: null,
    unstable_clear: function(a) {
      return a();
    },
    unstable_getCurrent: function() {
      return null;
    },
    unstable_getThreadID: function() {
      return ++Qa;
    },
    unstable_trace: function(a, b2, c2) {
      return c2();
    },
    unstable_wrap: function(a) {
      return a;
    },
    unstable_subscribe: function(a) {
    },
    unstable_unsubscribe: function(a) {
    }
  }});
  d2.Children = {
    map: function(a, b2, c2) {
      if (a == null)
        return a;
      var d3 = [];
      R(a, d3, null, b2, c2);
      return d3;
    },
    forEach: function(a, b2, c2) {
      if (a == null)
        return a;
      b2 = ja(null, null, b2, c2);
      Q(a, ya, b2);
      ka(b2);
    },
    count: function(a) {
      return Q(a, function() {
        return null;
      }, null);
    },
    toArray: function(a) {
      var b2 = [];
      R(a, b2, null, function(a2) {
        return a2;
      });
      return b2;
    },
    only: function(a) {
      if (!N(a))
        throw Error(r2(143));
      return a;
    }
  };
  d2.Component = w2;
  d2.Fragment = Aa;
  d2.Profiler = Ca;
  d2.PureComponent = L;
  d2.StrictMode = Ba;
  d2.Suspense = Ga;
  d2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = B;
  d2.cloneElement = function(a, b2, c2) {
    if (a === null || a === void 0)
      throw Error(r2(267, a));
    var d3 = I({}, a.props), e2 = a.key, f3 = a.ref, m3 = a._owner;
    if (b2 != null) {
      b2.ref !== void 0 && (f3 = b2.ref, m3 = M.current);
      b2.key !== void 0 && (e2 = "" + b2.key);
      if (a.type && a.type.defaultProps)
        var h2 = a.type.defaultProps;
      for (k2 in b2)
        ha.call(b2, k2) && !ia.hasOwnProperty(k2) && (d3[k2] = b2[k2] === void 0 && h2 !== void 0 ? h2[k2] : b2[k2]);
    }
    var k2 = arguments.length - 2;
    if (k2 === 1)
      d3.children = c2;
    else if (1 < k2) {
      h2 = Array(k2);
      for (var l3 = 0; l3 < k2; l3++)
        h2[l3] = arguments[l3 + 2];
      d3.children = h2;
    }
    return {$$typeof: x2, type: a.type, key: e2, ref: f3, props: d3, _owner: m3};
  };
  d2.createContext = function(a, b2) {
    b2 === void 0 && (b2 = null);
    a = {$$typeof: Ea, _calculateChangedBits: b2, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null};
    a.Provider = {$$typeof: Da, _context: a};
    return a.Consumer = a;
  };
  d2.createElement = ea;
  d2.createFactory = function(a) {
    var b2 = ea.bind(null, a);
    b2.type = a;
    return b2;
  };
  d2.createRef = function() {
    return {current: null};
  };
  d2.forwardRef = function(a) {
    return {$$typeof: Fa, render: a};
  };
  d2.isValidElement = N;
  d2.lazy = function(a) {
    return {$$typeof: Ia, _ctor: a, _status: -1, _result: null};
  };
  d2.memo = function(a, b2) {
    return {$$typeof: Ha, type: a, compare: b2 === void 0 ? null : b2};
  };
  d2.useCallback = function(a, b2) {
    return t2().useCallback(a, b2);
  };
  d2.useContext = function(a, b2) {
    return t2().useContext(a, b2);
  };
  d2.useDebugValue = function(a, b2) {
  };
  d2.useEffect = function(a, b2) {
    return t2().useEffect(a, b2);
  };
  d2.useImperativeHandle = function(a, b2, c2) {
    return t2().useImperativeHandle(a, b2, c2);
  };
  d2.useLayoutEffect = function(a, b2) {
    return t2().useLayoutEffect(a, b2);
  };
  d2.useMemo = function(a, b2) {
    return t2().useMemo(a, b2);
  };
  d2.useReducer = function(a, b2, c2) {
    return t2().useReducer(a, b2, c2);
  };
  d2.useRef = function(a) {
    return t2().useRef(a);
  };
  d2.useState = function(a) {
    return t2().useState(a);
  };
  d2.version = "16.13.0";
})(React);
const {Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version} = React;
var source_production = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  default: React,
  Children,
  Component,
  Fragment,
  Profiler,
  PureComponent,
  StrictMode,
  Suspense,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  cloneElement,
  createContext,
  createElement,
  createFactory,
  createRef,
  forwardRef,
  isValidElement,
  lazy,
  memo,
  useCallback,
  useContext,
  useDebugValue,
  useEffect,
  useImperativeHandle,
  useLayoutEffect,
  useMemo,
  useReducer,
  useRef,
  useState,
  version
});
/** @license React v16.13.0
 * react-dom.production.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
const ReactDOM = {};
(function(I, ea) {
  function k2(a) {
    for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c2 = 1; c2 < arguments.length; c2++)
      b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
    return "Minified React error #" + a + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  function ji(a, b2, c2, d2, e2, f2, g2, h2, m2) {
    yb = false;
    gc = null;
    ki.apply(li, arguments);
  }
  function mi(a, b2, c2, d2, e2, f2, g2, h2, m2) {
    ji.apply(this, arguments);
    if (yb) {
      if (yb) {
        var n2 = gc;
        yb = false;
        gc = null;
      } else
        throw Error(k2(198));
      hc || (hc = true, pd = n2);
    }
  }
  function lf(a, b2, c2) {
    var d2 = a.type || "unknown-event";
    a.currentTarget = mf(c2);
    mi(d2, b2, void 0, a);
    a.currentTarget = null;
  }
  function zb(a) {
    if (a === null || typeof a !== "object")
      return null;
    a = nf && a[nf] || a["@@iterator"];
    return typeof a === "function" ? a : null;
  }
  function ni(a) {
    if (a._status === -1) {
      a._status = 0;
      var b2 = a._ctor;
      b2 = b2();
      a._result = b2;
      b2.then(function(b3) {
        a._status === 0 && (b3 = b3.default, a._status = 1, a._result = b3);
      }, function(b3) {
        a._status === 0 && (a._status = 2, a._result = b3);
      });
    }
  }
  function na(a) {
    if (a == null)
      return null;
    if (typeof a === "function")
      return a.displayName || a.name || null;
    if (typeof a === "string")
      return a;
    switch (a) {
      case Ma:
        return "Fragment";
      case cb:
        return "Portal";
      case ic:
        return "Profiler";
      case of:
        return "StrictMode";
      case jc:
        return "Suspense";
      case qd:
        return "SuspenseList";
    }
    if (typeof a === "object")
      switch (a.$$typeof) {
        case pf:
          return "Context.Consumer";
        case qf:
          return "Context.Provider";
        case rd:
          var b2 = a.render;
          b2 = b2.displayName || b2.name || "";
          return a.displayName || (b2 !== "" ? "ForwardRef(" + b2 + ")" : "ForwardRef");
        case sd:
          return na(a.type);
        case rf:
          return na(a.render);
        case sf:
          if (a = a._status === 1 ? a._result : null)
            return na(a);
      }
    return null;
  }
  function td(a) {
    var b2 = "";
    do {
      a:
        switch (a.tag) {
          case 3:
          case 4:
          case 6:
          case 7:
          case 10:
          case 9:
            var c2 = "";
            break a;
          default:
            var d2 = a._debugOwner, e2 = a._debugSource, f2 = na(a.type);
            c2 = null;
            d2 && (c2 = na(d2.type));
            d2 = f2;
            f2 = "";
            e2 ? f2 = " (at " + e2.fileName.replace(oi, "") + ":" + e2.lineNumber + ")" : c2 && (f2 = " (created by " + c2 + ")");
            c2 = "\n    in " + (d2 || "Unknown") + f2;
        }
      b2 += c2;
      a = a.return;
    } while (a);
    return b2;
  }
  function tf() {
    if (kc)
      for (var a in db) {
        var b2 = db[a], c2 = kc.indexOf(a);
        if (!(-1 < c2))
          throw Error(k2(96, a));
        if (!lc[c2]) {
          if (!b2.extractEvents)
            throw Error(k2(97, a));
          lc[c2] = b2;
          c2 = b2.eventTypes;
          for (var d2 in c2) {
            var e2 = void 0;
            var f2 = c2[d2], g2 = b2, h2 = d2;
            if (ud.hasOwnProperty(h2))
              throw Error(k2(99, h2));
            ud[h2] = f2;
            var m2 = f2.phasedRegistrationNames;
            if (m2) {
              for (e2 in m2)
                m2.hasOwnProperty(e2) && uf(m2[e2], g2, h2);
              e2 = true;
            } else
              f2.registrationName ? (uf(f2.registrationName, g2, h2), e2 = true) : e2 = false;
            if (!e2)
              throw Error(k2(98, d2, a));
          }
        }
      }
  }
  function uf(a, b2, c2) {
    if (eb[a])
      throw Error(k2(100, a));
    eb[a] = b2;
    vd[a] = b2.eventTypes[c2].dependencies;
  }
  function vf(a) {
    var b2 = false, c2;
    for (c2 in a)
      if (a.hasOwnProperty(c2)) {
        var d2 = a[c2];
        if (!db.hasOwnProperty(c2) || db[c2] !== d2) {
          if (db[c2])
            throw Error(k2(102, c2));
          db[c2] = d2;
          b2 = true;
        }
      }
    b2 && tf();
  }
  function wf(a) {
    if (a = xf(a)) {
      if (typeof wd !== "function")
        throw Error(k2(280));
      var b2 = a.stateNode;
      b2 && (b2 = xd(b2), wd(a.stateNode, a.type, b2));
    }
  }
  function yf(a) {
    fb ? gb ? gb.push(a) : gb = [a] : fb = a;
  }
  function zf() {
    if (fb) {
      var a = fb, b2 = gb;
      gb = fb = null;
      wf(a);
      if (b2)
        for (a = 0; a < b2.length; a++)
          wf(b2[a]);
    }
  }
  function yd() {
    if (fb !== null || gb !== null)
      zd(), zf();
  }
  function Af(a, b2, c2) {
    if (Ad)
      return a(b2, c2);
    Ad = true;
    try {
      return Bf(a, b2, c2);
    } finally {
      Ad = false, yd();
    }
  }
  function pi(a) {
    if (Cf.call(Df, a))
      return true;
    if (Cf.call(Ef, a))
      return false;
    if (qi.test(a))
      return Df[a] = true;
    Ef[a] = true;
    return false;
  }
  function ri(a, b2, c2, d2) {
    if (c2 !== null && c2.type === 0)
      return false;
    switch (typeof b2) {
      case "function":
      case "symbol":
        return true;
      case "boolean":
        if (d2)
          return false;
        if (c2 !== null)
          return !c2.acceptsBooleans;
        a = a.toLowerCase().slice(0, 5);
        return a !== "data-" && a !== "aria-";
      default:
        return false;
    }
  }
  function si(a, b2, c2, d2) {
    if (b2 === null || typeof b2 === "undefined" || ri(a, b2, c2, d2))
      return true;
    if (d2)
      return false;
    if (c2 !== null)
      switch (c2.type) {
        case 3:
          return !b2;
        case 4:
          return b2 === false;
        case 5:
          return isNaN(b2);
        case 6:
          return isNaN(b2) || 1 > b2;
      }
    return false;
  }
  function L(a, b2, c2, d2, e2, f2) {
    this.acceptsBooleans = b2 === 2 || b2 === 3 || b2 === 4;
    this.attributeName = d2;
    this.attributeNamespace = e2;
    this.mustUseProperty = c2;
    this.propertyName = a;
    this.type = b2;
    this.sanitizeURL = f2;
  }
  function Bd(a, b2, c2, d2) {
    var e2 = E.hasOwnProperty(b2) ? E[b2] : null;
    var f2 = e2 !== null ? e2.type === 0 : d2 ? false : !(2 < b2.length) || b2[0] !== "o" && b2[0] !== "O" || b2[1] !== "n" && b2[1] !== "N" ? false : true;
    f2 || (si(b2, c2, e2, d2) && (c2 = null), d2 || e2 === null ? pi(b2) && (c2 === null ? a.removeAttribute(b2) : a.setAttribute(b2, "" + c2)) : e2.mustUseProperty ? a[e2.propertyName] = c2 === null ? e2.type === 3 ? false : "" : c2 : (b2 = e2.attributeName, d2 = e2.attributeNamespace, c2 === null ? a.removeAttribute(b2) : (e2 = e2.type, c2 = e2 === 3 || e2 === 4 && c2 === true ? "" : "" + c2, d2 ? a.setAttributeNS(d2, b2, c2) : a.setAttribute(b2, c2))));
  }
  function va(a) {
    switch (typeof a) {
      case "boolean":
      case "number":
      case "object":
      case "string":
      case "undefined":
        return a;
      default:
        return "";
    }
  }
  function Ff(a) {
    var b2 = a.type;
    return (a = a.nodeName) && a.toLowerCase() === "input" && (b2 === "checkbox" || b2 === "radio");
  }
  function ti(a) {
    var b2 = Ff(a) ? "checked" : "value", c2 = Object.getOwnPropertyDescriptor(a.constructor.prototype, b2), d2 = "" + a[b2];
    if (!a.hasOwnProperty(b2) && typeof c2 !== "undefined" && typeof c2.get === "function" && typeof c2.set === "function") {
      var e2 = c2.get, f2 = c2.set;
      Object.defineProperty(a, b2, {configurable: true, get: function() {
        return e2.call(this);
      }, set: function(a2) {
        d2 = "" + a2;
        f2.call(this, a2);
      }});
      Object.defineProperty(a, b2, {enumerable: c2.enumerable});
      return {getValue: function() {
        return d2;
      }, setValue: function(a2) {
        d2 = "" + a2;
      }, stopTracking: function() {
        a._valueTracker = null;
        delete a[b2];
      }};
    }
  }
  function mc(a) {
    a._valueTracker || (a._valueTracker = ti(a));
  }
  function Gf(a) {
    if (!a)
      return false;
    var b2 = a._valueTracker;
    if (!b2)
      return true;
    var c2 = b2.getValue();
    var d2 = "";
    a && (d2 = Ff(a) ? a.checked ? "true" : "false" : a.value);
    a = d2;
    return a !== c2 ? (b2.setValue(a), true) : false;
  }
  function Cd(a, b2) {
    var c2 = b2.checked;
    return M({}, b2, {defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c2 != null ? c2 : a._wrapperState.initialChecked});
  }
  function Hf(a, b2) {
    var c2 = b2.defaultValue == null ? "" : b2.defaultValue, d2 = b2.checked != null ? b2.checked : b2.defaultChecked;
    c2 = va(b2.value != null ? b2.value : c2);
    a._wrapperState = {initialChecked: d2, initialValue: c2, controlled: b2.type === "checkbox" || b2.type === "radio" ? b2.checked != null : b2.value != null};
  }
  function If(a, b2) {
    b2 = b2.checked;
    b2 != null && Bd(a, "checked", b2, false);
  }
  function Dd(a, b2) {
    If(a, b2);
    var c2 = va(b2.value), d2 = b2.type;
    if (c2 != null)
      if (d2 === "number") {
        if (c2 === 0 && a.value === "" || a.value != c2)
          a.value = "" + c2;
      } else
        a.value !== "" + c2 && (a.value = "" + c2);
    else if (d2 === "submit" || d2 === "reset") {
      a.removeAttribute("value");
      return;
    }
    b2.hasOwnProperty("value") ? Ed(a, b2.type, c2) : b2.hasOwnProperty("defaultValue") && Ed(a, b2.type, va(b2.defaultValue));
    b2.checked == null && b2.defaultChecked != null && (a.defaultChecked = !!b2.defaultChecked);
  }
  function Jf(a, b2, c2) {
    if (b2.hasOwnProperty("value") || b2.hasOwnProperty("defaultValue")) {
      var d2 = b2.type;
      if (!(d2 !== "submit" && d2 !== "reset" || b2.value !== void 0 && b2.value !== null))
        return;
      b2 = "" + a._wrapperState.initialValue;
      c2 || b2 === a.value || (a.value = b2);
      a.defaultValue = b2;
    }
    c2 = a.name;
    c2 !== "" && (a.name = "");
    a.defaultChecked = !!a._wrapperState.initialChecked;
    c2 !== "" && (a.name = c2);
  }
  function Ed(a, b2, c2) {
    if (b2 !== "number" || a.ownerDocument.activeElement !== a)
      c2 == null ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c2 && (a.defaultValue = "" + c2);
  }
  function ui(a) {
    var b2 = "";
    ea.Children.forEach(a, function(a2) {
      a2 != null && (b2 += a2);
    });
    return b2;
  }
  function Fd(a, b2) {
    a = M({children: void 0}, b2);
    if (b2 = ui(b2.children))
      a.children = b2;
    return a;
  }
  function hb(a, b2, c2, d2) {
    a = a.options;
    if (b2) {
      b2 = {};
      for (var e2 = 0; e2 < c2.length; e2++)
        b2["$" + c2[e2]] = true;
      for (c2 = 0; c2 < a.length; c2++)
        e2 = b2.hasOwnProperty("$" + a[c2].value), a[c2].selected !== e2 && (a[c2].selected = e2), e2 && d2 && (a[c2].defaultSelected = true);
    } else {
      c2 = "" + va(c2);
      b2 = null;
      for (e2 = 0; e2 < a.length; e2++) {
        if (a[e2].value === c2) {
          a[e2].selected = true;
          d2 && (a[e2].defaultSelected = true);
          return;
        }
        b2 !== null || a[e2].disabled || (b2 = a[e2]);
      }
      b2 !== null && (b2.selected = true);
    }
  }
  function Gd(a, b2) {
    if (b2.dangerouslySetInnerHTML != null)
      throw Error(k2(91));
    return M({}, b2, {value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue});
  }
  function Kf(a, b2) {
    var c2 = b2.value;
    if (c2 == null) {
      c2 = b2.children;
      b2 = b2.defaultValue;
      if (c2 != null) {
        if (b2 != null)
          throw Error(k2(92));
        if (Array.isArray(c2)) {
          if (!(1 >= c2.length))
            throw Error(k2(93));
          c2 = c2[0];
        }
        b2 = c2;
      }
      b2 == null && (b2 = "");
      c2 = b2;
    }
    a._wrapperState = {initialValue: va(c2)};
  }
  function Lf(a, b2) {
    var c2 = va(b2.value), d2 = va(b2.defaultValue);
    c2 != null && (c2 = "" + c2, c2 !== a.value && (a.value = c2), b2.defaultValue == null && a.defaultValue !== c2 && (a.defaultValue = c2));
    d2 != null && (a.defaultValue = "" + d2);
  }
  function Mf(a, b2) {
    b2 = a.textContent;
    b2 === a._wrapperState.initialValue && b2 !== "" && b2 !== null && (a.value = b2);
  }
  function Nf(a) {
    switch (a) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function Hd(a, b2) {
    return a == null || a === "http://www.w3.org/1999/xhtml" ? Nf(b2) : a === "http://www.w3.org/2000/svg" && b2 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a;
  }
  function nc(a, b2) {
    var c2 = {};
    c2[a.toLowerCase()] = b2.toLowerCase();
    c2["Webkit" + a] = "webkit" + b2;
    c2["Moz" + a] = "moz" + b2;
    return c2;
  }
  function oc(a) {
    if (Id[a])
      return Id[a];
    if (!ib[a])
      return a;
    var b2 = ib[a], c2;
    for (c2 in b2)
      if (b2.hasOwnProperty(c2) && c2 in Of)
        return Id[a] = b2[c2];
    return a;
  }
  function Jd(a) {
    var b2 = Pf.get(a);
    b2 === void 0 && (b2 = new Map(), Pf.set(a, b2));
    return b2;
  }
  function Na(a) {
    var b2 = a, c2 = a;
    if (a.alternate)
      for (; b2.return; )
        b2 = b2.return;
    else {
      a = b2;
      do
        b2 = a, (b2.effectTag & 1026) !== 0 && (c2 = b2.return), a = b2.return;
      while (a);
    }
    return b2.tag === 3 ? c2 : null;
  }
  function Qf(a) {
    if (a.tag === 13) {
      var b2 = a.memoizedState;
      b2 === null && (a = a.alternate, a !== null && (b2 = a.memoizedState));
      if (b2 !== null)
        return b2.dehydrated;
    }
    return null;
  }
  function Rf(a) {
    if (Na(a) !== a)
      throw Error(k2(188));
  }
  function vi(a) {
    var b2 = a.alternate;
    if (!b2) {
      b2 = Na(a);
      if (b2 === null)
        throw Error(k2(188));
      return b2 !== a ? null : a;
    }
    for (var c2 = a, d2 = b2; ; ) {
      var e2 = c2.return;
      if (e2 === null)
        break;
      var f2 = e2.alternate;
      if (f2 === null) {
        d2 = e2.return;
        if (d2 !== null) {
          c2 = d2;
          continue;
        }
        break;
      }
      if (e2.child === f2.child) {
        for (f2 = e2.child; f2; ) {
          if (f2 === c2)
            return Rf(e2), a;
          if (f2 === d2)
            return Rf(e2), b2;
          f2 = f2.sibling;
        }
        throw Error(k2(188));
      }
      if (c2.return !== d2.return)
        c2 = e2, d2 = f2;
      else {
        for (var g2 = false, h2 = e2.child; h2; ) {
          if (h2 === c2) {
            g2 = true;
            c2 = e2;
            d2 = f2;
            break;
          }
          if (h2 === d2) {
            g2 = true;
            d2 = e2;
            c2 = f2;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g2) {
          for (h2 = f2.child; h2; ) {
            if (h2 === c2) {
              g2 = true;
              c2 = f2;
              d2 = e2;
              break;
            }
            if (h2 === d2) {
              g2 = true;
              d2 = f2;
              c2 = e2;
              break;
            }
            h2 = h2.sibling;
          }
          if (!g2)
            throw Error(k2(189));
        }
      }
      if (c2.alternate !== d2)
        throw Error(k2(190));
    }
    if (c2.tag !== 3)
      throw Error(k2(188));
    return c2.stateNode.current === c2 ? a : b2;
  }
  function Sf(a) {
    a = vi(a);
    if (!a)
      return null;
    for (var b2 = a; ; ) {
      if (b2.tag === 5 || b2.tag === 6)
        return b2;
      if (b2.child)
        b2.child.return = b2, b2 = b2.child;
      else {
        if (b2 === a)
          break;
        for (; !b2.sibling; ) {
          if (!b2.return || b2.return === a)
            return null;
          b2 = b2.return;
        }
        b2.sibling.return = b2.return;
        b2 = b2.sibling;
      }
    }
    return null;
  }
  function jb(a, b2) {
    if (b2 == null)
      throw Error(k2(30));
    if (a == null)
      return b2;
    if (Array.isArray(a)) {
      if (Array.isArray(b2))
        return a.push.apply(a, b2), a;
      a.push(b2);
      return a;
    }
    return Array.isArray(b2) ? [a].concat(b2) : [a, b2];
  }
  function Kd(a, b2, c2) {
    Array.isArray(a) ? a.forEach(b2, c2) : a && b2.call(c2, a);
  }
  function pc(a) {
    a !== null && (Ab = jb(Ab, a));
    a = Ab;
    Ab = null;
    if (a) {
      Kd(a, wi);
      if (Ab)
        throw Error(k2(95));
      if (hc)
        throw a = pd, hc = false, pd = null, a;
    }
  }
  function Ld(a) {
    a = a.target || a.srcElement || window;
    a.correspondingUseElement && (a = a.correspondingUseElement);
    return a.nodeType === 3 ? a.parentNode : a;
  }
  function Tf(a) {
    if (!wa)
      return false;
    a = "on" + a;
    var b2 = a in document;
    b2 || (b2 = document.createElement("div"), b2.setAttribute(a, "return;"), b2 = typeof b2[a] === "function");
    return b2;
  }
  function Uf(a) {
    a.topLevelType = null;
    a.nativeEvent = null;
    a.targetInst = null;
    a.ancestors.length = 0;
    10 > qc.length && qc.push(a);
  }
  function Vf(a, b2, c2, d2) {
    if (qc.length) {
      var e2 = qc.pop();
      e2.topLevelType = a;
      e2.eventSystemFlags = d2;
      e2.nativeEvent = b2;
      e2.targetInst = c2;
      return e2;
    }
    return {topLevelType: a, eventSystemFlags: d2, nativeEvent: b2, targetInst: c2, ancestors: []};
  }
  function Wf(a) {
    var b2 = a.targetInst, c2 = b2;
    do {
      if (!c2) {
        a.ancestors.push(c2);
        break;
      }
      var d2 = c2;
      if (d2.tag === 3)
        d2 = d2.stateNode.containerInfo;
      else {
        for (; d2.return; )
          d2 = d2.return;
        d2 = d2.tag !== 3 ? null : d2.stateNode.containerInfo;
      }
      if (!d2)
        break;
      b2 = c2.tag;
      b2 !== 5 && b2 !== 6 || a.ancestors.push(c2);
      c2 = Bb(d2);
    } while (c2);
    for (c2 = 0; c2 < a.ancestors.length; c2++) {
      b2 = a.ancestors[c2];
      var e2 = Ld(a.nativeEvent);
      d2 = a.topLevelType;
      var f2 = a.nativeEvent, g2 = a.eventSystemFlags;
      c2 === 0 && (g2 |= 64);
      for (var h2 = null, m2 = 0; m2 < lc.length; m2++) {
        var n2 = lc[m2];
        n2 && (n2 = n2.extractEvents(d2, b2, f2, e2, g2)) && (h2 = jb(h2, n2));
      }
      pc(h2);
    }
  }
  function Md(a, b2, c2) {
    if (!c2.has(a)) {
      switch (a) {
        case "scroll":
          Cb(b2, "scroll", true);
          break;
        case "focus":
        case "blur":
          Cb(b2, "focus", true);
          Cb(b2, "blur", true);
          c2.set("blur", null);
          c2.set("focus", null);
          break;
        case "cancel":
        case "close":
          Tf(a) && Cb(b2, a, true);
          break;
        case "invalid":
        case "submit":
        case "reset":
          break;
        default:
          Db.indexOf(a) === -1 && w2(a, b2);
      }
      c2.set(a, null);
    }
  }
  function xi(a, b2) {
    var c2 = Jd(b2);
    Nd.forEach(function(a2) {
      Md(a2, b2, c2);
    });
    yi.forEach(function(a2) {
      Md(a2, b2, c2);
    });
  }
  function Od(a, b2, c2, d2, e2) {
    return {
      blockedOn: a,
      topLevelType: b2,
      eventSystemFlags: c2 | 32,
      nativeEvent: e2,
      container: d2
    };
  }
  function Xf(a, b2) {
    switch (a) {
      case "focus":
      case "blur":
        xa = null;
        break;
      case "dragenter":
      case "dragleave":
        ya = null;
        break;
      case "mouseover":
      case "mouseout":
        za = null;
        break;
      case "pointerover":
      case "pointerout":
        Eb.delete(b2.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        Fb.delete(b2.pointerId);
    }
  }
  function Gb(a, b2, c2, d2, e2, f2) {
    if (a === null || a.nativeEvent !== f2)
      return a = Od(b2, c2, d2, e2, f2), b2 !== null && (b2 = Hb(b2), b2 !== null && Yf(b2)), a;
    a.eventSystemFlags |= d2;
    return a;
  }
  function zi(a, b2, c2, d2, e2) {
    switch (b2) {
      case "focus":
        return xa = Gb(xa, a, b2, c2, d2, e2), true;
      case "dragenter":
        return ya = Gb(ya, a, b2, c2, d2, e2), true;
      case "mouseover":
        return za = Gb(za, a, b2, c2, d2, e2), true;
      case "pointerover":
        var f2 = e2.pointerId;
        Eb.set(f2, Gb(Eb.get(f2) || null, a, b2, c2, d2, e2));
        return true;
      case "gotpointercapture":
        return f2 = e2.pointerId, Fb.set(f2, Gb(Fb.get(f2) || null, a, b2, c2, d2, e2)), true;
    }
    return false;
  }
  function Ai(a) {
    var b2 = Bb(a.target);
    if (b2 !== null) {
      var c2 = Na(b2);
      if (c2 !== null) {
        if (b2 = c2.tag, b2 === 13) {
          if (b2 = Qf(c2), b2 !== null) {
            a.blockedOn = b2;
            Pd(a.priority, function() {
              Bi(c2);
            });
            return;
          }
        } else if (b2 === 3 && c2.stateNode.hydrate) {
          a.blockedOn = c2.tag === 3 ? c2.stateNode.containerInfo : null;
          return;
        }
      }
    }
    a.blockedOn = null;
  }
  function rc(a) {
    if (a.blockedOn !== null)
      return false;
    var b2 = Qd(a.topLevelType, a.eventSystemFlags, a.container, a.nativeEvent);
    if (b2 !== null) {
      var c2 = Hb(b2);
      c2 !== null && Yf(c2);
      a.blockedOn = b2;
      return false;
    }
    return true;
  }
  function Zf(a, b2, c2) {
    rc(a) && c2.delete(b2);
  }
  function Ci() {
    for (Rd = false; 0 < fa.length; ) {
      var a = fa[0];
      if (a.blockedOn !== null) {
        a = Hb(a.blockedOn);
        a !== null && Di(a);
        break;
      }
      var b2 = Qd(a.topLevelType, a.eventSystemFlags, a.container, a.nativeEvent);
      b2 !== null ? a.blockedOn = b2 : fa.shift();
    }
    xa !== null && rc(xa) && (xa = null);
    ya !== null && rc(ya) && (ya = null);
    za !== null && rc(za) && (za = null);
    Eb.forEach(Zf);
    Fb.forEach(Zf);
  }
  function Ib(a, b2) {
    a.blockedOn === b2 && (a.blockedOn = null, Rd || (Rd = true, $f(ag, Ci)));
  }
  function bg(a) {
    if (0 < fa.length) {
      Ib(fa[0], a);
      for (var b2 = 1; b2 < fa.length; b2++) {
        var c2 = fa[b2];
        c2.blockedOn === a && (c2.blockedOn = null);
      }
    }
    xa !== null && Ib(xa, a);
    ya !== null && Ib(ya, a);
    za !== null && Ib(za, a);
    b2 = function(b3) {
      return Ib(b3, a);
    };
    Eb.forEach(b2);
    Fb.forEach(b2);
    for (b2 = 0; b2 < Jb.length; b2++)
      c2 = Jb[b2], c2.blockedOn === a && (c2.blockedOn = null);
    for (; 0 < Jb.length && (b2 = Jb[0], b2.blockedOn === null); )
      Ai(b2), b2.blockedOn === null && Jb.shift();
  }
  function Sd(a, b2) {
    for (var c2 = 0; c2 < a.length; c2 += 2) {
      var d2 = a[c2], e2 = a[c2 + 1], f2 = "on" + (e2[0].toUpperCase() + e2.slice(1));
      f2 = {phasedRegistrationNames: {bubbled: f2, captured: f2 + "Capture"}, dependencies: [d2], eventPriority: b2};
      Td.set(d2, b2);
      cg.set(d2, f2);
      dg[e2] = f2;
    }
  }
  function w2(a, b2) {
    Cb(b2, a, false);
  }
  function Cb(a, b2, c2) {
    var d2 = Td.get(b2);
    switch (d2 === void 0 ? 2 : d2) {
      case 0:
        d2 = Ei.bind(null, b2, 1, a);
        break;
      case 1:
        d2 = Fi.bind(null, b2, 1, a);
        break;
      default:
        d2 = sc.bind(null, b2, 1, a);
    }
    c2 ? a.addEventListener(b2, d2, true) : a.addEventListener(b2, d2, false);
  }
  function Ei(a, b2, c2, d2) {
    Oa || zd();
    var e2 = sc, f2 = Oa;
    Oa = true;
    try {
      eg(e2, a, b2, c2, d2);
    } finally {
      (Oa = f2) || yd();
    }
  }
  function Fi(a, b2, c2, d2) {
    Gi(Hi, sc.bind(null, a, b2, c2, d2));
  }
  function sc(a, b2, c2, d2) {
    if (tc)
      if (0 < fa.length && -1 < Nd.indexOf(a))
        a = Od(null, a, b2, c2, d2), fa.push(a);
      else {
        var e2 = Qd(a, b2, c2, d2);
        if (e2 === null)
          Xf(a, d2);
        else if (-1 < Nd.indexOf(a))
          a = Od(e2, a, b2, c2, d2), fa.push(a);
        else if (!zi(e2, a, b2, c2, d2)) {
          Xf(a, d2);
          a = Vf(a, d2, null, b2);
          try {
            Af(Wf, a);
          } finally {
            Uf(a);
          }
        }
      }
  }
  function Qd(a, b2, c2, d2) {
    c2 = Ld(d2);
    c2 = Bb(c2);
    if (c2 !== null) {
      var e2 = Na(c2);
      if (e2 === null)
        c2 = null;
      else {
        var f2 = e2.tag;
        if (f2 === 13) {
          c2 = Qf(e2);
          if (c2 !== null)
            return c2;
          c2 = null;
        } else if (f2 === 3) {
          if (e2.stateNode.hydrate)
            return e2.tag === 3 ? e2.stateNode.containerInfo : null;
          c2 = null;
        } else
          e2 !== c2 && (c2 = null);
      }
    }
    a = Vf(a, d2, c2, b2);
    try {
      Af(Wf, a);
    } finally {
      Uf(a);
    }
    return null;
  }
  function fg(a, b2, c2) {
    return b2 == null || typeof b2 === "boolean" || b2 === "" ? "" : c2 || typeof b2 !== "number" || b2 === 0 || Kb.hasOwnProperty(a) && Kb[a] ? ("" + b2).trim() : b2 + "px";
  }
  function gg(a, b2) {
    a = a.style;
    for (var c2 in b2)
      if (b2.hasOwnProperty(c2)) {
        var d2 = c2.indexOf("--") === 0, e2 = fg(c2, b2[c2], d2);
        c2 === "float" && (c2 = "cssFloat");
        d2 ? a.setProperty(c2, e2) : a[c2] = e2;
      }
  }
  function Ud(a, b2) {
    if (b2) {
      if (Ii[a] && (b2.children != null || b2.dangerouslySetInnerHTML != null))
        throw Error(k2(137, a, ""));
      if (b2.dangerouslySetInnerHTML != null) {
        if (b2.children != null)
          throw Error(k2(60));
        if (!(typeof b2.dangerouslySetInnerHTML === "object" && "__html" in b2.dangerouslySetInnerHTML))
          throw Error(k2(61));
      }
      if (b2.style != null && typeof b2.style !== "object")
        throw Error(k2(62, ""));
    }
  }
  function Vd(a, b2) {
    if (a.indexOf("-") === -1)
      return typeof b2.is === "string";
    switch (a) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return false;
      default:
        return true;
    }
  }
  function oa(a, b2) {
    a = a.nodeType === 9 || a.nodeType === 11 ? a : a.ownerDocument;
    var c2 = Jd(a);
    b2 = vd[b2];
    for (var d2 = 0; d2 < b2.length; d2++)
      Md(b2[d2], a, c2);
  }
  function uc() {
  }
  function Wd(a) {
    a = a || (typeof document !== "undefined" ? document : void 0);
    if (typeof a === "undefined")
      return null;
    try {
      return a.activeElement || a.body;
    } catch (b2) {
      return a.body;
    }
  }
  function hg(a) {
    for (; a && a.firstChild; )
      a = a.firstChild;
    return a;
  }
  function ig(a, b2) {
    var c2 = hg(a);
    a = 0;
    for (var d2; c2; ) {
      if (c2.nodeType === 3) {
        d2 = a + c2.textContent.length;
        if (a <= b2 && d2 >= b2)
          return {
            node: c2,
            offset: b2 - a
          };
        a = d2;
      }
      a: {
        for (; c2; ) {
          if (c2.nextSibling) {
            c2 = c2.nextSibling;
            break a;
          }
          c2 = c2.parentNode;
        }
        c2 = void 0;
      }
      c2 = hg(c2);
    }
  }
  function jg(a, b2) {
    return a && b2 ? a === b2 ? true : a && a.nodeType === 3 ? false : b2 && b2.nodeType === 3 ? jg(a, b2.parentNode) : "contains" in a ? a.contains(b2) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b2) & 16) : false : false;
  }
  function kg() {
    for (var a = window, b2 = Wd(); b2 instanceof a.HTMLIFrameElement; ) {
      try {
        var c2 = typeof b2.contentWindow.location.href === "string";
      } catch (d2) {
        c2 = false;
      }
      if (c2)
        a = b2.contentWindow;
      else
        break;
      b2 = Wd(a.document);
    }
    return b2;
  }
  function Xd(a) {
    var b2 = a && a.nodeName && a.nodeName.toLowerCase();
    return b2 && (b2 === "input" && (a.type === "text" || a.type === "search" || a.type === "tel" || a.type === "url" || a.type === "password") || b2 === "textarea" || a.contentEditable === "true");
  }
  function lg(a, b2) {
    switch (a) {
      case "button":
      case "input":
      case "select":
      case "textarea":
        return !!b2.autoFocus;
    }
    return false;
  }
  function Yd(a, b2) {
    return a === "textarea" || a === "option" || a === "noscript" || typeof b2.children === "string" || typeof b2.children === "number" || typeof b2.dangerouslySetInnerHTML === "object" && b2.dangerouslySetInnerHTML !== null && b2.dangerouslySetInnerHTML.__html != null;
  }
  function kb(a) {
    for (; a != null; a = a.nextSibling) {
      var b2 = a.nodeType;
      if (b2 === 1 || b2 === 3)
        break;
    }
    return a;
  }
  function mg(a) {
    a = a.previousSibling;
    for (var b2 = 0; a; ) {
      if (a.nodeType === 8) {
        var c2 = a.data;
        if (c2 === ng || c2 === Zd || c2 === $d) {
          if (b2 === 0)
            return a;
          b2--;
        } else
          c2 === og && b2++;
      }
      a = a.previousSibling;
    }
    return null;
  }
  function Bb(a) {
    var b2 = a[Aa];
    if (b2)
      return b2;
    for (var c2 = a.parentNode; c2; ) {
      if (b2 = c2[Lb] || c2[Aa]) {
        c2 = b2.alternate;
        if (b2.child !== null || c2 !== null && c2.child !== null)
          for (a = mg(a); a !== null; ) {
            if (c2 = a[Aa])
              return c2;
            a = mg(a);
          }
        return b2;
      }
      a = c2;
      c2 = a.parentNode;
    }
    return null;
  }
  function Hb(a) {
    a = a[Aa] || a[Lb];
    return !a || a.tag !== 5 && a.tag !== 6 && a.tag !== 13 && a.tag !== 3 ? null : a;
  }
  function Pa(a) {
    if (a.tag === 5 || a.tag === 6)
      return a.stateNode;
    throw Error(k2(33));
  }
  function ae(a) {
    return a[vc] || null;
  }
  function pa(a) {
    do
      a = a.return;
    while (a && a.tag !== 5);
    return a ? a : null;
  }
  function pg(a, b2) {
    var c2 = a.stateNode;
    if (!c2)
      return null;
    var d2 = xd(c2);
    if (!d2)
      return null;
    c2 = d2[b2];
    a:
      switch (b2) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          (d2 = !d2.disabled) || (a = a.type, d2 = !(a === "button" || a === "input" || a === "select" || a === "textarea"));
          a = !d2;
          break a;
        default:
          a = false;
      }
    if (a)
      return null;
    if (c2 && typeof c2 !== "function")
      throw Error(k2(231, b2, typeof c2));
    return c2;
  }
  function qg(a, b2, c2) {
    if (b2 = pg(a, c2.dispatchConfig.phasedRegistrationNames[b2]))
      c2._dispatchListeners = jb(c2._dispatchListeners, b2), c2._dispatchInstances = jb(c2._dispatchInstances, a);
  }
  function Ji(a) {
    if (a && a.dispatchConfig.phasedRegistrationNames) {
      for (var b2 = a._targetInst, c2 = []; b2; )
        c2.push(b2), b2 = pa(b2);
      for (b2 = c2.length; 0 < b2--; )
        qg(c2[b2], "captured", a);
      for (b2 = 0; b2 < c2.length; b2++)
        qg(c2[b2], "bubbled", a);
    }
  }
  function be(a, b2, c2) {
    a && c2 && c2.dispatchConfig.registrationName && (b2 = pg(a, c2.dispatchConfig.registrationName)) && (c2._dispatchListeners = jb(c2._dispatchListeners, b2), c2._dispatchInstances = jb(c2._dispatchInstances, a));
  }
  function Ki(a) {
    a && a.dispatchConfig.registrationName && be(a._targetInst, null, a);
  }
  function lb(a) {
    Kd(a, Ji);
  }
  function rg() {
    if (wc)
      return wc;
    var a, b2 = ce, c2 = b2.length, d2, e2 = "value" in Ba ? Ba.value : Ba.textContent, f2 = e2.length;
    for (a = 0; a < c2 && b2[a] === e2[a]; a++)
      ;
    var g2 = c2 - a;
    for (d2 = 1; d2 <= g2 && b2[c2 - d2] === e2[f2 - d2]; d2++)
      ;
    return wc = e2.slice(a, 1 < d2 ? 1 - d2 : void 0);
  }
  function xc() {
    return true;
  }
  function yc() {
    return false;
  }
  function R(a, b2, c2, d2) {
    this.dispatchConfig = a;
    this._targetInst = b2;
    this.nativeEvent = c2;
    a = this.constructor.Interface;
    for (var e2 in a)
      a.hasOwnProperty(e2) && ((b2 = a[e2]) ? this[e2] = b2(c2) : e2 === "target" ? this.target = d2 : this[e2] = c2[e2]);
    this.isDefaultPrevented = (c2.defaultPrevented != null ? c2.defaultPrevented : c2.returnValue === false) ? xc : yc;
    this.isPropagationStopped = yc;
    return this;
  }
  function Li(a, b2, c2, d2) {
    if (this.eventPool.length) {
      var e2 = this.eventPool.pop();
      this.call(e2, a, b2, c2, d2);
      return e2;
    }
    return new this(a, b2, c2, d2);
  }
  function Mi(a) {
    if (!(a instanceof this))
      throw Error(k2(279));
    a.destructor();
    10 > this.eventPool.length && this.eventPool.push(a);
  }
  function sg(a) {
    a.eventPool = [];
    a.getPooled = Li;
    a.release = Mi;
  }
  function tg(a, b2) {
    switch (a) {
      case "keyup":
        return Ni.indexOf(b2.keyCode) !== -1;
      case "keydown":
        return b2.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "blur":
        return true;
      default:
        return false;
    }
  }
  function ug(a) {
    a = a.detail;
    return typeof a === "object" && "data" in a ? a.data : null;
  }
  function Oi(a, b2) {
    switch (a) {
      case "compositionend":
        return ug(b2);
      case "keypress":
        if (b2.which !== 32)
          return null;
        vg = true;
        return wg;
      case "textInput":
        return a = b2.data, a === wg && vg ? null : a;
      default:
        return null;
    }
  }
  function Pi(a, b2) {
    if (mb)
      return a === "compositionend" || !de && tg(a, b2) ? (a = rg(), wc = ce = Ba = null, mb = false, a) : null;
    switch (a) {
      case "paste":
        return null;
      case "keypress":
        if (!(b2.ctrlKey || b2.altKey || b2.metaKey) || b2.ctrlKey && b2.altKey) {
          if (b2.char && 1 < b2.char.length)
            return b2.char;
          if (b2.which)
            return String.fromCharCode(b2.which);
        }
        return null;
      case "compositionend":
        return xg && b2.locale !== "ko" ? null : b2.data;
      default:
        return null;
    }
  }
  function yg(a) {
    var b2 = a && a.nodeName && a.nodeName.toLowerCase();
    return b2 === "input" ? !!Qi[a.type] : b2 === "textarea" ? true : false;
  }
  function zg(a, b2, c2) {
    a = R.getPooled(Ag.change, a, b2, c2);
    a.type = "change";
    yf(c2);
    lb(a);
    return a;
  }
  function Ri(a) {
    pc(a);
  }
  function zc(a) {
    var b2 = Pa(a);
    if (Gf(b2))
      return a;
  }
  function Si(a, b2) {
    if (a === "change")
      return b2;
  }
  function Bg() {
    Mb && (Mb.detachEvent("onpropertychange", Cg), Nb = Mb = null);
  }
  function Cg(a) {
    if (a.propertyName === "value" && zc(Nb))
      if (a = zg(Nb, a, Ld(a)), Oa)
        pc(a);
      else {
        Oa = true;
        try {
          ee(Ri, a);
        } finally {
          Oa = false, yd();
        }
      }
  }
  function Ti(a, b2, c2) {
    a === "focus" ? (Bg(), Mb = b2, Nb = c2, Mb.attachEvent("onpropertychange", Cg)) : a === "blur" && Bg();
  }
  function Ui(a, b2) {
    if (a === "selectionchange" || a === "keyup" || a === "keydown")
      return zc(Nb);
  }
  function Vi(a, b2) {
    if (a === "click")
      return zc(b2);
  }
  function Wi(a, b2) {
    if (a === "input" || a === "change")
      return zc(b2);
  }
  function Xi(a) {
    var b2 = this.nativeEvent;
    return b2.getModifierState ? b2.getModifierState(a) : (a = Yi[a]) ? !!b2[a] : false;
  }
  function fe(a) {
    return Xi;
  }
  function Zi(a, b2) {
    return a === b2 && (a !== 0 || 1 / a === 1 / b2) || a !== a && b2 !== b2;
  }
  function Ob(a, b2) {
    if (Qa(a, b2))
      return true;
    if (typeof a !== "object" || a === null || typeof b2 !== "object" || b2 === null)
      return false;
    var c2 = Object.keys(a), d2 = Object.keys(b2);
    if (c2.length !== d2.length)
      return false;
    for (d2 = 0; d2 < c2.length; d2++)
      if (!$i.call(b2, c2[d2]) || !Qa(a[c2[d2]], b2[c2[d2]]))
        return false;
    return true;
  }
  function Dg(a, b2) {
    var c2 = b2.window === b2 ? b2.document : b2.nodeType === 9 ? b2 : b2.ownerDocument;
    if (ge || nb == null || nb !== Wd(c2))
      return null;
    c2 = nb;
    "selectionStart" in c2 && Xd(c2) ? c2 = {
      start: c2.selectionStart,
      end: c2.selectionEnd
    } : (c2 = (c2.ownerDocument && c2.ownerDocument.defaultView || window).getSelection(), c2 = {anchorNode: c2.anchorNode, anchorOffset: c2.anchorOffset, focusNode: c2.focusNode, focusOffset: c2.focusOffset});
    return Pb && Ob(Pb, c2) ? null : (Pb = c2, a = R.getPooled(Eg.select, he, a, b2), a.type = "select", a.target = nb, lb(a), a);
  }
  function Ac(a) {
    var b2 = a.keyCode;
    "charCode" in a ? (a = a.charCode, a === 0 && b2 === 13 && (a = 13)) : a = b2;
    a === 10 && (a = 13);
    return 32 <= a || a === 13 ? a : 0;
  }
  function q2(a, b2) {
    0 > ob || (a.current = ie[ob], ie[ob] = null, ob--);
  }
  function y2(a, b2, c2) {
    ob++;
    ie[ob] = a.current;
    a.current = b2;
  }
  function pb(a, b2) {
    var c2 = a.type.contextTypes;
    if (!c2)
      return Ca;
    var d2 = a.stateNode;
    if (d2 && d2.__reactInternalMemoizedUnmaskedChildContext === b2)
      return d2.__reactInternalMemoizedMaskedChildContext;
    var e2 = {}, f2;
    for (f2 in c2)
      e2[f2] = b2[f2];
    d2 && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b2, a.__reactInternalMemoizedMaskedChildContext = e2);
    return e2;
  }
  function N(a) {
    a = a.childContextTypes;
    return a !== null && a !== void 0;
  }
  function Fg(a, b2, c2) {
    if (B.current !== Ca)
      throw Error(k2(168));
    y2(B, b2);
    y2(G, c2);
  }
  function Gg(a, b2, c2) {
    var d2 = a.stateNode;
    a = b2.childContextTypes;
    if (typeof d2.getChildContext !== "function")
      return c2;
    d2 = d2.getChildContext();
    for (var e2 in d2)
      if (!(e2 in a))
        throw Error(k2(108, na(b2) || "Unknown", e2));
    return M({}, c2, {}, d2);
  }
  function Bc(a) {
    a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Ca;
    Ra = B.current;
    y2(B, a);
    y2(G, G.current);
    return true;
  }
  function Hg(a, b2, c2) {
    var d2 = a.stateNode;
    if (!d2)
      throw Error(k2(169));
    c2 ? (a = Gg(a, b2, Ra), d2.__reactInternalMemoizedMergedChildContext = a, q2(G), q2(B), y2(B, a)) : q2(G);
    y2(G, c2);
  }
  function Cc() {
    switch (aj()) {
      case Dc:
        return 99;
      case Ig:
        return 98;
      case Jg:
        return 97;
      case Kg:
        return 96;
      case Lg:
        return 95;
      default:
        throw Error(k2(332));
    }
  }
  function Mg(a) {
    switch (a) {
      case 99:
        return Dc;
      case 98:
        return Ig;
      case 97:
        return Jg;
      case 96:
        return Kg;
      case 95:
        return Lg;
      default:
        throw Error(k2(332));
    }
  }
  function Da(a, b2) {
    a = Mg(a);
    return bj(a, b2);
  }
  function Ng(a, b2, c2) {
    a = Mg(a);
    return je(a, b2, c2);
  }
  function Og(a) {
    qa === null ? (qa = [a], Ec = je(Dc, Pg)) : qa.push(a);
    return Qg;
  }
  function ha() {
    if (Ec !== null) {
      var a = Ec;
      Ec = null;
      Rg(a);
    }
    Pg();
  }
  function Pg() {
    if (!ke && qa !== null) {
      ke = true;
      var a = 0;
      try {
        var b2 = qa;
        Da(99, function() {
          for (; a < b2.length; a++) {
            var c2 = b2[a];
            do
              c2 = c2(true);
            while (c2 !== null);
          }
        });
        qa = null;
      } catch (c2) {
        throw qa !== null && (qa = qa.slice(a + 1)), je(Dc, ha), c2;
      } finally {
        ke = false;
      }
    }
  }
  function Fc(a, b2, c2) {
    c2 /= 10;
    return 1073741821 - (((1073741821 - a + b2 / 10) / c2 | 0) + 1) * c2;
  }
  function aa(a, b2) {
    if (a && a.defaultProps) {
      b2 = M({}, b2);
      a = a.defaultProps;
      for (var c2 in a)
        b2[c2] === void 0 && (b2[c2] = a[c2]);
    }
    return b2;
  }
  function le() {
    Gc = qb = Hc = null;
  }
  function me(a) {
    var b2 = Ic.current;
    q2(Ic);
    a.type._context._currentValue = b2;
  }
  function Sg(a, b2) {
    for (; a !== null; ) {
      var c2 = a.alternate;
      if (a.childExpirationTime < b2)
        a.childExpirationTime = b2, c2 !== null && c2.childExpirationTime < b2 && (c2.childExpirationTime = b2);
      else if (c2 !== null && c2.childExpirationTime < b2)
        c2.childExpirationTime = b2;
      else
        break;
      a = a.return;
    }
  }
  function rb(a, b2) {
    Hc = a;
    Gc = qb = null;
    a = a.dependencies;
    a !== null && a.firstContext !== null && (a.expirationTime >= b2 && (ia = true), a.firstContext = null);
  }
  function W(a, b2) {
    if (Gc !== a && b2 !== false && b2 !== 0) {
      if (typeof b2 !== "number" || b2 === 1073741823)
        Gc = a, b2 = 1073741823;
      b2 = {context: a, observedBits: b2, next: null};
      if (qb === null) {
        if (Hc === null)
          throw Error(k2(308));
        qb = b2;
        Hc.dependencies = {expirationTime: 0, firstContext: b2, responders: null};
      } else
        qb = qb.next = b2;
    }
    return a._currentValue;
  }
  function ne(a) {
    a.updateQueue = {baseState: a.memoizedState, baseQueue: null, shared: {pending: null}, effects: null};
  }
  function oe(a, b2) {
    a = a.updateQueue;
    b2.updateQueue === a && (b2.updateQueue = {baseState: a.baseState, baseQueue: a.baseQueue, shared: a.shared, effects: a.effects});
  }
  function Ea(a, b2) {
    a = {expirationTime: a, suspenseConfig: b2, tag: Tg, payload: null, callback: null, next: null};
    return a.next = a;
  }
  function Fa(a, b2) {
    a = a.updateQueue;
    if (a !== null) {
      a = a.shared;
      var c2 = a.pending;
      c2 === null ? b2.next = b2 : (b2.next = c2.next, c2.next = b2);
      a.pending = b2;
    }
  }
  function Ug(a, b2) {
    var c2 = a.alternate;
    c2 !== null && oe(c2, a);
    a = a.updateQueue;
    c2 = a.baseQueue;
    c2 === null ? (a.baseQueue = b2.next = b2, b2.next = b2) : (b2.next = c2.next, c2.next = b2);
  }
  function Qb(a, b2, c2, d2) {
    var e2 = a.updateQueue;
    Ga = false;
    var f2 = e2.baseQueue, g2 = e2.shared.pending;
    if (g2 !== null) {
      if (f2 !== null) {
        var h2 = f2.next;
        f2.next = g2.next;
        g2.next = h2;
      }
      f2 = g2;
      e2.shared.pending = null;
      h2 = a.alternate;
      h2 !== null && (h2 = h2.updateQueue, h2 !== null && (h2.baseQueue = g2));
    }
    if (f2 !== null) {
      h2 = f2.next;
      var m2 = e2.baseState, n2 = 0, k3 = null, ba = null, l3 = null;
      if (h2 !== null) {
        var p3 = h2;
        do {
          g2 = p3.expirationTime;
          if (g2 < d2) {
            var t3 = {expirationTime: p3.expirationTime, suspenseConfig: p3.suspenseConfig, tag: p3.tag, payload: p3.payload, callback: p3.callback, next: null};
            l3 === null ? (ba = l3 = t3, k3 = m2) : l3 = l3.next = t3;
            g2 > n2 && (n2 = g2);
          } else {
            l3 !== null && (l3 = l3.next = {expirationTime: 1073741823, suspenseConfig: p3.suspenseConfig, tag: p3.tag, payload: p3.payload, callback: p3.callback, next: null});
            Vg(g2, p3.suspenseConfig);
            a: {
              var q3 = a, r2 = p3;
              g2 = b2;
              t3 = c2;
              switch (r2.tag) {
                case 1:
                  q3 = r2.payload;
                  if (typeof q3 === "function") {
                    m2 = q3.call(t3, m2, g2);
                    break a;
                  }
                  m2 = q3;
                  break a;
                case 3:
                  q3.effectTag = q3.effectTag & -4097 | 64;
                case Tg:
                  q3 = r2.payload;
                  g2 = typeof q3 === "function" ? q3.call(t3, m2, g2) : q3;
                  if (g2 === null || g2 === void 0)
                    break a;
                  m2 = M({}, m2, g2);
                  break a;
                case Jc:
                  Ga = true;
              }
            }
            p3.callback !== null && (a.effectTag |= 32, g2 = e2.effects, g2 === null ? e2.effects = [p3] : g2.push(p3));
          }
          p3 = p3.next;
          if (p3 === null || p3 === h2)
            if (g2 = e2.shared.pending, g2 === null)
              break;
            else
              p3 = f2.next = g2.next, g2.next = h2, e2.baseQueue = f2 = g2, e2.shared.pending = null;
        } while (1);
      }
      l3 === null ? k3 = m2 : l3.next = ba;
      e2.baseState = k3;
      e2.baseQueue = l3;
      Kc(n2);
      a.expirationTime = n2;
      a.memoizedState = m2;
    }
  }
  function Wg(a, b2, c2) {
    a = b2.effects;
    b2.effects = null;
    if (a !== null)
      for (b2 = 0; b2 < a.length; b2++) {
        var d2 = a[b2], e2 = d2.callback;
        if (e2 !== null) {
          d2.callback = null;
          d2 = e2;
          e2 = c2;
          if (typeof d2 !== "function")
            throw Error(k2(191, d2));
          d2.call(e2);
        }
      }
  }
  function Lc(a, b2, c2, d2) {
    b2 = a.memoizedState;
    c2 = c2(d2, b2);
    c2 = c2 === null || c2 === void 0 ? b2 : M({}, b2, c2);
    a.memoizedState = c2;
    a.expirationTime === 0 && (a.updateQueue.baseState = c2);
  }
  function Xg(a, b2, c2, d2, e2, f2, g2) {
    a = a.stateNode;
    return typeof a.shouldComponentUpdate === "function" ? a.shouldComponentUpdate(d2, f2, g2) : b2.prototype && b2.prototype.isPureReactComponent ? !Ob(c2, d2) || !Ob(e2, f2) : true;
  }
  function Yg(a, b2, c2) {
    var d2 = false, e2 = Ca;
    var f2 = b2.contextType;
    typeof f2 === "object" && f2 !== null ? f2 = W(f2) : (e2 = N(b2) ? Ra : B.current, d2 = b2.contextTypes, f2 = (d2 = d2 !== null && d2 !== void 0) ? pb(a, e2) : Ca);
    b2 = new b2(c2, f2);
    a.memoizedState = b2.state !== null && b2.state !== void 0 ? b2.state : null;
    b2.updater = Mc;
    a.stateNode = b2;
    b2._reactInternalFiber = a;
    d2 && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e2, a.__reactInternalMemoizedMaskedChildContext = f2);
    return b2;
  }
  function Zg(a, b2, c2, d2) {
    a = b2.state;
    typeof b2.componentWillReceiveProps === "function" && b2.componentWillReceiveProps(c2, d2);
    typeof b2.UNSAFE_componentWillReceiveProps === "function" && b2.UNSAFE_componentWillReceiveProps(c2, d2);
    b2.state !== a && Mc.enqueueReplaceState(b2, b2.state, null);
  }
  function pe(a, b2, c2, d2) {
    var e2 = a.stateNode;
    e2.props = c2;
    e2.state = a.memoizedState;
    e2.refs = $g;
    ne(a);
    var f2 = b2.contextType;
    typeof f2 === "object" && f2 !== null ? e2.context = W(f2) : (f2 = N(b2) ? Ra : B.current, e2.context = pb(a, f2));
    Qb(a, c2, e2, d2);
    e2.state = a.memoizedState;
    f2 = b2.getDerivedStateFromProps;
    typeof f2 === "function" && (Lc(a, b2, f2, c2), e2.state = a.memoizedState);
    typeof b2.getDerivedStateFromProps === "function" || typeof e2.getSnapshotBeforeUpdate === "function" || typeof e2.UNSAFE_componentWillMount !== "function" && typeof e2.componentWillMount !== "function" || (b2 = e2.state, typeof e2.componentWillMount === "function" && e2.componentWillMount(), typeof e2.UNSAFE_componentWillMount === "function" && e2.UNSAFE_componentWillMount(), b2 !== e2.state && Mc.enqueueReplaceState(e2, e2.state, null), Qb(a, c2, e2, d2), e2.state = a.memoizedState);
    typeof e2.componentDidMount === "function" && (a.effectTag |= 4);
  }
  function Rb(a, b2, c2) {
    a = c2.ref;
    if (a !== null && typeof a !== "function" && typeof a !== "object") {
      if (c2._owner) {
        c2 = c2._owner;
        if (c2) {
          if (c2.tag !== 1)
            throw Error(k2(309));
          var d2 = c2.stateNode;
        }
        if (!d2)
          throw Error(k2(147, a));
        var e2 = "" + a;
        if (b2 !== null && b2.ref !== null && typeof b2.ref === "function" && b2.ref._stringRef === e2)
          return b2.ref;
        b2 = function(a2) {
          var b3 = d2.refs;
          b3 === $g && (b3 = d2.refs = {});
          a2 === null ? delete b3[e2] : b3[e2] = a2;
        };
        b2._stringRef = e2;
        return b2;
      }
      if (typeof a !== "string")
        throw Error(k2(284));
      if (!c2._owner)
        throw Error(k2(290, a));
    }
    return a;
  }
  function Nc(a, b2) {
    if (a.type !== "textarea")
      throw Error(k2(31, Object.prototype.toString.call(b2) === "[object Object]" ? "object with keys {" + Object.keys(b2).join(", ") + "}" : b2, ""));
  }
  function ah(a) {
    function b2(b3, c3) {
      if (a) {
        var d3 = b3.lastEffect;
        d3 !== null ? (d3.nextEffect = c3, b3.lastEffect = c3) : b3.firstEffect = b3.lastEffect = c3;
        c3.nextEffect = null;
        c3.effectTag = 8;
      }
    }
    function c2(c3, d3) {
      if (!a)
        return null;
      for (; d3 !== null; )
        b2(c3, d3), d3 = d3.sibling;
      return null;
    }
    function d2(a2, b3) {
      for (a2 = new Map(); b3 !== null; )
        b3.key !== null ? a2.set(b3.key, b3) : a2.set(b3.index, b3), b3 = b3.sibling;
      return a2;
    }
    function e2(a2, b3) {
      a2 = Sa(a2, b3);
      a2.index = 0;
      a2.sibling = null;
      return a2;
    }
    function f2(b3, c3, d3) {
      b3.index = d3;
      if (!a)
        return c3;
      d3 = b3.alternate;
      if (d3 !== null)
        return d3 = d3.index, d3 < c3 ? (b3.effectTag = 2, c3) : d3;
      b3.effectTag = 2;
      return c3;
    }
    function g2(b3) {
      a && b3.alternate === null && (b3.effectTag = 2);
      return b3;
    }
    function h2(a2, b3, c3, d3) {
      if (b3 === null || b3.tag !== 6)
        return b3 = qe(c3, a2.mode, d3), b3.return = a2, b3;
      b3 = e2(b3, c3);
      b3.return = a2;
      return b3;
    }
    function m2(a2, b3, c3, d3) {
      if (b3 !== null && b3.elementType === c3.type)
        return d3 = e2(b3, c3.props), d3.ref = Rb(a2, b3, c3), d3.return = a2, d3;
      d3 = Oc(c3.type, c3.key, c3.props, null, a2.mode, d3);
      d3.ref = Rb(a2, b3, c3);
      d3.return = a2;
      return d3;
    }
    function n2(a2, b3, c3, d3) {
      if (b3 === null || b3.tag !== 4 || b3.stateNode.containerInfo !== c3.containerInfo || b3.stateNode.implementation !== c3.implementation)
        return b3 = re(c3, a2.mode, d3), b3.return = a2, b3;
      b3 = e2(b3, c3.children || []);
      b3.return = a2;
      return b3;
    }
    function l3(a2, b3, c3, d3, f3) {
      if (b3 === null || b3.tag !== 7)
        return b3 = Ha(c3, a2.mode, d3, f3), b3.return = a2, b3;
      b3 = e2(b3, c3);
      b3.return = a2;
      return b3;
    }
    function ba(a2, b3, c3) {
      if (typeof b3 === "string" || typeof b3 === "number")
        return b3 = qe("" + b3, a2.mode, c3), b3.return = a2, b3;
      if (typeof b3 === "object" && b3 !== null) {
        switch (b3.$$typeof) {
          case Pc:
            return c3 = Oc(b3.type, b3.key, b3.props, null, a2.mode, c3), c3.ref = Rb(a2, null, b3), c3.return = a2, c3;
          case cb:
            return b3 = re(b3, a2.mode, c3), b3.return = a2, b3;
        }
        if (Qc(b3) || zb(b3))
          return b3 = Ha(b3, a2.mode, c3, null), b3.return = a2, b3;
        Nc(a2, b3);
      }
      return null;
    }
    function p3(a2, b3, c3, d3) {
      var e3 = b3 !== null ? b3.key : null;
      if (typeof c3 === "string" || typeof c3 === "number")
        return e3 !== null ? null : h2(a2, b3, "" + c3, d3);
      if (typeof c3 === "object" && c3 !== null) {
        switch (c3.$$typeof) {
          case Pc:
            return c3.key === e3 ? c3.type === Ma ? l3(a2, b3, c3.props.children, d3, e3) : m2(a2, b3, c3, d3) : null;
          case cb:
            return c3.key === e3 ? n2(a2, b3, c3, d3) : null;
        }
        if (Qc(c3) || zb(c3))
          return e3 !== null ? null : l3(a2, b3, c3, d3, null);
        Nc(a2, c3);
      }
      return null;
    }
    function t3(a2, b3, c3, d3, e3) {
      if (typeof d3 === "string" || typeof d3 === "number")
        return a2 = a2.get(c3) || null, h2(b3, a2, "" + d3, e3);
      if (typeof d3 === "object" && d3 !== null) {
        switch (d3.$$typeof) {
          case Pc:
            return a2 = a2.get(d3.key === null ? c3 : d3.key) || null, d3.type === Ma ? l3(b3, a2, d3.props.children, e3, d3.key) : m2(b3, a2, d3, e3);
          case cb:
            return a2 = a2.get(d3.key === null ? c3 : d3.key) || null, n2(b3, a2, d3, e3);
        }
        if (Qc(d3) || zb(d3))
          return a2 = a2.get(c3) || null, l3(b3, a2, d3, e3, null);
        Nc(b3, d3);
      }
      return null;
    }
    function q3(e3, g3, h3, m3) {
      for (var n3 = null, k3 = null, l4 = g3, r2 = g3 = 0, C = null; l4 !== null && r2 < h3.length; r2++) {
        l4.index > r2 ? (C = l4, l4 = null) : C = l4.sibling;
        var O = p3(e3, l4, h3[r2], m3);
        if (O === null) {
          l4 === null && (l4 = C);
          break;
        }
        a && l4 && O.alternate === null && b2(e3, l4);
        g3 = f2(O, g3, r2);
        k3 === null ? n3 = O : k3.sibling = O;
        k3 = O;
        l4 = C;
      }
      if (r2 === h3.length)
        return c2(e3, l4), n3;
      if (l4 === null) {
        for (; r2 < h3.length; r2++)
          l4 = ba(e3, h3[r2], m3), l4 !== null && (g3 = f2(l4, g3, r2), k3 === null ? n3 = l4 : k3.sibling = l4, k3 = l4);
        return n3;
      }
      for (l4 = d2(e3, l4); r2 < h3.length; r2++)
        C = t3(l4, e3, r2, h3[r2], m3), C !== null && (a && C.alternate !== null && l4.delete(C.key === null ? r2 : C.key), g3 = f2(C, g3, r2), k3 === null ? n3 = C : k3.sibling = C, k3 = C);
      a && l4.forEach(function(a2) {
        return b2(e3, a2);
      });
      return n3;
    }
    function w3(e3, g3, h3, n3) {
      var m3 = zb(h3);
      if (typeof m3 !== "function")
        throw Error(k2(150));
      h3 = m3.call(h3);
      if (h3 == null)
        throw Error(k2(151));
      for (var l4 = m3 = null, r2 = g3, C = g3 = 0, O = null, v2 = h3.next(); r2 !== null && !v2.done; C++, v2 = h3.next()) {
        r2.index > C ? (O = r2, r2 = null) : O = r2.sibling;
        var q4 = p3(e3, r2, v2.value, n3);
        if (q4 === null) {
          r2 === null && (r2 = O);
          break;
        }
        a && r2 && q4.alternate === null && b2(e3, r2);
        g3 = f2(q4, g3, C);
        l4 === null ? m3 = q4 : l4.sibling = q4;
        l4 = q4;
        r2 = O;
      }
      if (v2.done)
        return c2(e3, r2), m3;
      if (r2 === null) {
        for (; !v2.done; C++, v2 = h3.next())
          v2 = ba(e3, v2.value, n3), v2 !== null && (g3 = f2(v2, g3, C), l4 === null ? m3 = v2 : l4.sibling = v2, l4 = v2);
        return m3;
      }
      for (r2 = d2(e3, r2); !v2.done; C++, v2 = h3.next())
        v2 = t3(r2, e3, C, v2.value, n3), v2 !== null && (a && v2.alternate !== null && r2.delete(v2.key === null ? C : v2.key), g3 = f2(v2, g3, C), l4 === null ? m3 = v2 : l4.sibling = v2, l4 = v2);
      a && r2.forEach(function(a2) {
        return b2(e3, a2);
      });
      return m3;
    }
    return function(a2, d3, f3, h3) {
      var m3 = typeof f3 === "object" && f3 !== null && f3.type === Ma && f3.key === null;
      m3 && (f3 = f3.props.children);
      var n3 = typeof f3 === "object" && f3 !== null;
      if (n3)
        switch (f3.$$typeof) {
          case Pc:
            a: {
              n3 = f3.key;
              for (m3 = d3; m3 !== null; ) {
                if (m3.key === n3) {
                  switch (m3.tag) {
                    case 7:
                      if (f3.type === Ma) {
                        c2(a2, m3.sibling);
                        d3 = e2(m3, f3.props.children);
                        d3.return = a2;
                        a2 = d3;
                        break a;
                      }
                      break;
                    default:
                      if (m3.elementType === f3.type) {
                        c2(a2, m3.sibling);
                        d3 = e2(m3, f3.props);
                        d3.ref = Rb(a2, m3, f3);
                        d3.return = a2;
                        a2 = d3;
                        break a;
                      }
                  }
                  c2(a2, m3);
                  break;
                } else
                  b2(a2, m3);
                m3 = m3.sibling;
              }
              f3.type === Ma ? (d3 = Ha(f3.props.children, a2.mode, h3, f3.key), d3.return = a2, a2 = d3) : (h3 = Oc(f3.type, f3.key, f3.props, null, a2.mode, h3), h3.ref = Rb(a2, d3, f3), h3.return = a2, a2 = h3);
            }
            return g2(a2);
          case cb:
            a: {
              for (m3 = f3.key; d3 !== null; ) {
                if (d3.key === m3)
                  if (d3.tag === 4 && d3.stateNode.containerInfo === f3.containerInfo && d3.stateNode.implementation === f3.implementation) {
                    c2(a2, d3.sibling);
                    d3 = e2(d3, f3.children || []);
                    d3.return = a2;
                    a2 = d3;
                    break a;
                  } else {
                    c2(a2, d3);
                    break;
                  }
                else
                  b2(a2, d3);
                d3 = d3.sibling;
              }
              d3 = re(f3, a2.mode, h3);
              d3.return = a2;
              a2 = d3;
            }
            return g2(a2);
        }
      if (typeof f3 === "string" || typeof f3 === "number")
        return f3 = "" + f3, d3 !== null && d3.tag === 6 ? (c2(a2, d3.sibling), d3 = e2(d3, f3), d3.return = a2, a2 = d3) : (c2(a2, d3), d3 = qe(f3, a2.mode, h3), d3.return = a2, a2 = d3), g2(a2);
      if (Qc(f3))
        return q3(a2, d3, f3, h3);
      if (zb(f3))
        return w3(a2, d3, f3, h3);
      n3 && Nc(a2, f3);
      if (typeof f3 === "undefined" && !m3)
        switch (a2.tag) {
          case 1:
          case 0:
            throw a2 = a2.type, Error(k2(152, a2.displayName || a2.name || "Component"));
        }
      return c2(a2, d3);
    };
  }
  function Ta(a) {
    if (a === Sb)
      throw Error(k2(174));
    return a;
  }
  function se(a, b2) {
    y2(Tb, b2);
    y2(Ub, a);
    y2(ja, Sb);
    a = b2.nodeType;
    switch (a) {
      case 9:
      case 11:
        b2 = (b2 = b2.documentElement) ? b2.namespaceURI : Hd(null, "");
        break;
      default:
        a = a === 8 ? b2.parentNode : b2, b2 = a.namespaceURI || null, a = a.tagName, b2 = Hd(b2, a);
    }
    q2(ja);
    y2(ja, b2);
  }
  function tb(a) {
    q2(ja);
    q2(Ub);
    q2(Tb);
  }
  function bh(a) {
    Ta(Tb.current);
    var b2 = Ta(ja.current);
    var c2 = Hd(b2, a.type);
    b2 !== c2 && (y2(Ub, a), y2(ja, c2));
  }
  function te(a) {
    Ub.current === a && (q2(ja), q2(Ub));
  }
  function Rc(a) {
    for (var b2 = a; b2 !== null; ) {
      if (b2.tag === 13) {
        var c2 = b2.memoizedState;
        if (c2 !== null && (c2 = c2.dehydrated, c2 === null || c2.data === $d || c2.data === Zd))
          return b2;
      } else if (b2.tag === 19 && b2.memoizedProps.revealOrder !== void 0) {
        if ((b2.effectTag & 64) !== 0)
          return b2;
      } else if (b2.child !== null) {
        b2.child.return = b2;
        b2 = b2.child;
        continue;
      }
      if (b2 === a)
        break;
      for (; b2.sibling === null; ) {
        if (b2.return === null || b2.return === a)
          return null;
        b2 = b2.return;
      }
      b2.sibling.return = b2.return;
      b2 = b2.sibling;
    }
    return null;
  }
  function ue(a, b2) {
    return {responder: a, props: b2};
  }
  function S() {
    throw Error(k2(321));
  }
  function ve(a, b2) {
    if (b2 === null)
      return false;
    for (var c2 = 0; c2 < b2.length && c2 < a.length; c2++)
      if (!Qa(a[c2], b2[c2]))
        return false;
    return true;
  }
  function we(a, b2, c2, d2, e2, f2) {
    Ia = f2;
    z2 = b2;
    b2.memoizedState = null;
    b2.updateQueue = null;
    b2.expirationTime = 0;
    Sc.current = a === null || a.memoizedState === null ? dj : ej;
    a = c2(d2, e2);
    if (b2.expirationTime === Ia) {
      f2 = 0;
      do {
        b2.expirationTime = 0;
        if (!(25 > f2))
          throw Error(k2(301));
        f2 += 1;
        J = K = null;
        b2.updateQueue = null;
        Sc.current = fj;
        a = c2(d2, e2);
      } while (b2.expirationTime === Ia);
    }
    Sc.current = Tc;
    b2 = K !== null && K.next !== null;
    Ia = 0;
    J = K = z2 = null;
    Uc = false;
    if (b2)
      throw Error(k2(300));
    return a;
  }
  function ub() {
    var a = {memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null};
    J === null ? z2.memoizedState = J = a : J = J.next = a;
    return J;
  }
  function vb() {
    if (K === null) {
      var a = z2.alternate;
      a = a !== null ? a.memoizedState : null;
    } else
      a = K.next;
    var b2 = J === null ? z2.memoizedState : J.next;
    if (b2 !== null)
      J = b2, K = a;
    else {
      if (a === null)
        throw Error(k2(310));
      K = a;
      a = {memoizedState: K.memoizedState, baseState: K.baseState, baseQueue: K.baseQueue, queue: K.queue, next: null};
      J === null ? z2.memoizedState = J = a : J = J.next = a;
    }
    return J;
  }
  function Ua(a, b2) {
    return typeof b2 === "function" ? b2(a) : b2;
  }
  function Vc(a, b2, c2) {
    b2 = vb();
    c2 = b2.queue;
    if (c2 === null)
      throw Error(k2(311));
    c2.lastRenderedReducer = a;
    var d2 = K, e2 = d2.baseQueue, f2 = c2.pending;
    if (f2 !== null) {
      if (e2 !== null) {
        var g2 = e2.next;
        e2.next = f2.next;
        f2.next = g2;
      }
      d2.baseQueue = e2 = f2;
      c2.pending = null;
    }
    if (e2 !== null) {
      e2 = e2.next;
      d2 = d2.baseState;
      var h2 = g2 = f2 = null, m2 = e2;
      do {
        var n2 = m2.expirationTime;
        if (n2 < Ia) {
          var l3 = {
            expirationTime: m2.expirationTime,
            suspenseConfig: m2.suspenseConfig,
            action: m2.action,
            eagerReducer: m2.eagerReducer,
            eagerState: m2.eagerState,
            next: null
          };
          h2 === null ? (g2 = h2 = l3, f2 = d2) : h2 = h2.next = l3;
          n2 > z2.expirationTime && (z2.expirationTime = n2, Kc(n2));
        } else
          h2 !== null && (h2 = h2.next = {expirationTime: 1073741823, suspenseConfig: m2.suspenseConfig, action: m2.action, eagerReducer: m2.eagerReducer, eagerState: m2.eagerState, next: null}), Vg(n2, m2.suspenseConfig), d2 = m2.eagerReducer === a ? m2.eagerState : a(d2, m2.action);
        m2 = m2.next;
      } while (m2 !== null && m2 !== e2);
      h2 === null ? f2 = d2 : h2.next = g2;
      Qa(d2, b2.memoizedState) || (ia = true);
      b2.memoizedState = d2;
      b2.baseState = f2;
      b2.baseQueue = h2;
      c2.lastRenderedState = d2;
    }
    return [
      b2.memoizedState,
      c2.dispatch
    ];
  }
  function Wc(a, b2, c2) {
    b2 = vb();
    c2 = b2.queue;
    if (c2 === null)
      throw Error(k2(311));
    c2.lastRenderedReducer = a;
    var d2 = c2.dispatch, e2 = c2.pending, f2 = b2.memoizedState;
    if (e2 !== null) {
      c2.pending = null;
      var g2 = e2 = e2.next;
      do
        f2 = a(f2, g2.action), g2 = g2.next;
      while (g2 !== e2);
      Qa(f2, b2.memoizedState) || (ia = true);
      b2.memoizedState = f2;
      b2.baseQueue === null && (b2.baseState = f2);
      c2.lastRenderedState = f2;
    }
    return [f2, d2];
  }
  function xe(a) {
    var b2 = ub();
    typeof a === "function" && (a = a());
    b2.memoizedState = b2.baseState = a;
    a = b2.queue = {
      pending: null,
      dispatch: null,
      lastRenderedReducer: Ua,
      lastRenderedState: a
    };
    a = a.dispatch = ch.bind(null, z2, a);
    return [b2.memoizedState, a];
  }
  function ye(a, b2, c2, d2) {
    a = {tag: a, create: b2, destroy: c2, deps: d2, next: null};
    b2 = z2.updateQueue;
    b2 === null ? (b2 = {lastEffect: null}, z2.updateQueue = b2, b2.lastEffect = a.next = a) : (c2 = b2.lastEffect, c2 === null ? b2.lastEffect = a.next = a : (d2 = c2.next, c2.next = a, a.next = d2, b2.lastEffect = a));
    return a;
  }
  function dh(a) {
    return vb().memoizedState;
  }
  function ze(a, b2, c2, d2) {
    var e2 = ub();
    z2.effectTag |= a;
    e2.memoizedState = ye(1 | b2, c2, void 0, d2 === void 0 ? null : d2);
  }
  function Ae(a, b2, c2, d2) {
    var e2 = vb();
    d2 = d2 === void 0 ? null : d2;
    var f2 = void 0;
    if (K !== null) {
      var g2 = K.memoizedState;
      f2 = g2.destroy;
      if (d2 !== null && ve(d2, g2.deps)) {
        ye(b2, c2, f2, d2);
        return;
      }
    }
    z2.effectTag |= a;
    e2.memoizedState = ye(1 | b2, c2, f2, d2);
  }
  function eh(a, b2) {
    return ze(516, 4, a, b2);
  }
  function Xc(a, b2) {
    return Ae(516, 4, a, b2);
  }
  function fh(a, b2) {
    return Ae(4, 2, a, b2);
  }
  function gh(a, b2) {
    if (typeof b2 === "function")
      return a = a(), b2(a), function() {
        b2(null);
      };
    if (b2 !== null && b2 !== void 0)
      return a = a(), b2.current = a, function() {
        b2.current = null;
      };
  }
  function hh(a, b2, c2) {
    c2 = c2 !== null && c2 !== void 0 ? c2.concat([a]) : null;
    return Ae(4, 2, gh.bind(null, b2, a), c2);
  }
  function Be(a, b2) {
  }
  function ih(a, b2) {
    ub().memoizedState = [a, b2 === void 0 ? null : b2];
    return a;
  }
  function Yc(a, b2) {
    var c2 = vb();
    b2 = b2 === void 0 ? null : b2;
    var d2 = c2.memoizedState;
    if (d2 !== null && b2 !== null && ve(b2, d2[1]))
      return d2[0];
    c2.memoizedState = [a, b2];
    return a;
  }
  function jh(a, b2) {
    var c2 = vb();
    b2 = b2 === void 0 ? null : b2;
    var d2 = c2.memoizedState;
    if (d2 !== null && b2 !== null && ve(b2, d2[1]))
      return d2[0];
    a = a();
    c2.memoizedState = [a, b2];
    return a;
  }
  function Ce(a, b2, c2) {
    var d2 = Cc();
    Da(98 > d2 ? 98 : d2, function() {
      a(true);
    });
    Da(97 < d2 ? 97 : d2, function() {
      var d3 = X.suspense;
      X.suspense = b2 === void 0 ? null : b2;
      try {
        a(false), c2();
      } finally {
        X.suspense = d3;
      }
    });
  }
  function ch(a, b2, c2) {
    var d2 = ka(), e2 = Vb.suspense;
    d2 = Va(d2, a, e2);
    e2 = {expirationTime: d2, suspenseConfig: e2, action: c2, eagerReducer: null, eagerState: null, next: null};
    var f2 = b2.pending;
    f2 === null ? e2.next = e2 : (e2.next = f2.next, f2.next = e2);
    b2.pending = e2;
    f2 = a.alternate;
    if (a === z2 || f2 !== null && f2 === z2)
      Uc = true, e2.expirationTime = Ia, z2.expirationTime = Ia;
    else {
      if (a.expirationTime === 0 && (f2 === null || f2.expirationTime === 0) && (f2 = b2.lastRenderedReducer, f2 !== null))
        try {
          var g2 = b2.lastRenderedState, h2 = f2(g2, c2);
          e2.eagerReducer = f2;
          e2.eagerState = h2;
          if (Qa(h2, g2))
            return;
        } catch (m2) {
        } finally {
        }
      Ja(a, d2);
    }
  }
  function kh(a, b2) {
    var c2 = la(5, null, null, 0);
    c2.elementType = "DELETED";
    c2.type = "DELETED";
    c2.stateNode = b2;
    c2.return = a;
    c2.effectTag = 8;
    a.lastEffect !== null ? (a.lastEffect.nextEffect = c2, a.lastEffect = c2) : a.firstEffect = a.lastEffect = c2;
  }
  function lh(a, b2) {
    switch (a.tag) {
      case 5:
        var c2 = a.type;
        b2 = b2.nodeType !== 1 || c2.toLowerCase() !== b2.nodeName.toLowerCase() ? null : b2;
        return b2 !== null ? (a.stateNode = b2, true) : false;
      case 6:
        return b2 = a.pendingProps === "" || b2.nodeType !== 3 ? null : b2, b2 !== null ? (a.stateNode = b2, true) : false;
      case 13:
        return false;
      default:
        return false;
    }
  }
  function De(a) {
    if (Wa) {
      var b2 = Ka;
      if (b2) {
        var c2 = b2;
        if (!lh(a, b2)) {
          b2 = kb(c2.nextSibling);
          if (!b2 || !lh(a, b2)) {
            a.effectTag = a.effectTag & -1025 | 2;
            Wa = false;
            ra = a;
            return;
          }
          kh(ra, c2);
        }
        ra = a;
        Ka = kb(b2.firstChild);
      } else
        a.effectTag = a.effectTag & -1025 | 2, Wa = false, ra = a;
    }
  }
  function mh(a) {
    for (a = a.return; a !== null && a.tag !== 5 && a.tag !== 3 && a.tag !== 13; )
      a = a.return;
    ra = a;
  }
  function Zc(a) {
    if (a !== ra)
      return false;
    if (!Wa)
      return mh(a), Wa = true, false;
    var b2 = a.type;
    if (a.tag !== 5 || b2 !== "head" && b2 !== "body" && !Yd(b2, a.memoizedProps))
      for (b2 = Ka; b2; )
        kh(a, b2), b2 = kb(b2.nextSibling);
    mh(a);
    if (a.tag === 13) {
      a = a.memoizedState;
      a = a !== null ? a.dehydrated : null;
      if (!a)
        throw Error(k2(317));
      a: {
        a = a.nextSibling;
        for (b2 = 0; a; ) {
          if (a.nodeType === 8) {
            var c2 = a.data;
            if (c2 === og) {
              if (b2 === 0) {
                Ka = kb(a.nextSibling);
                break a;
              }
              b2--;
            } else
              c2 !== ng && c2 !== Zd && c2 !== $d || b2++;
          }
          a = a.nextSibling;
        }
        Ka = null;
      }
    } else
      Ka = ra ? kb(a.stateNode.nextSibling) : null;
    return true;
  }
  function Ee() {
    Ka = ra = null;
    Wa = false;
  }
  function T(a, b2, c2, d2) {
    b2.child = a === null ? Fe(b2, null, c2, d2) : wb(b2, a.child, c2, d2);
  }
  function nh(a, b2, c2, d2, e2) {
    c2 = c2.render;
    var f2 = b2.ref;
    rb(b2, e2);
    d2 = we(a, b2, c2, d2, f2, e2);
    if (a !== null && !ia)
      return b2.updateQueue = a.updateQueue, b2.effectTag &= -517, a.expirationTime <= e2 && (a.expirationTime = 0), sa(a, b2, e2);
    b2.effectTag |= 1;
    T(a, b2, d2, e2);
    return b2.child;
  }
  function oh(a, b2, c2, d2, e2, f2) {
    if (a === null) {
      var g2 = c2.type;
      if (typeof g2 === "function" && !Ge(g2) && g2.defaultProps === void 0 && c2.compare === null && c2.defaultProps === void 0)
        return b2.tag = 15, b2.type = g2, ph(a, b2, g2, d2, e2, f2);
      a = Oc(c2.type, null, d2, null, b2.mode, f2);
      a.ref = b2.ref;
      a.return = b2;
      return b2.child = a;
    }
    g2 = a.child;
    if (e2 < f2 && (e2 = g2.memoizedProps, c2 = c2.compare, c2 = c2 !== null ? c2 : Ob, c2(e2, d2) && a.ref === b2.ref))
      return sa(a, b2, f2);
    b2.effectTag |= 1;
    a = Sa(g2, d2);
    a.ref = b2.ref;
    a.return = b2;
    return b2.child = a;
  }
  function ph(a, b2, c2, d2, e2, f2) {
    return a !== null && Ob(a.memoizedProps, d2) && a.ref === b2.ref && (ia = false, e2 < f2) ? (b2.expirationTime = a.expirationTime, sa(a, b2, f2)) : He(a, b2, c2, d2, f2);
  }
  function qh(a, b2) {
    var c2 = b2.ref;
    if (a === null && c2 !== null || a !== null && a.ref !== c2)
      b2.effectTag |= 128;
  }
  function He(a, b2, c2, d2, e2) {
    var f2 = N(c2) ? Ra : B.current;
    f2 = pb(b2, f2);
    rb(b2, e2);
    c2 = we(a, b2, c2, d2, f2, e2);
    if (a !== null && !ia)
      return b2.updateQueue = a.updateQueue, b2.effectTag &= -517, a.expirationTime <= e2 && (a.expirationTime = 0), sa(a, b2, e2);
    b2.effectTag |= 1;
    T(a, b2, c2, e2);
    return b2.child;
  }
  function rh(a, b2, c2, d2, e2) {
    if (N(c2)) {
      var f2 = true;
      Bc(b2);
    } else
      f2 = false;
    rb(b2, e2);
    if (b2.stateNode === null)
      a !== null && (a.alternate = null, b2.alternate = null, b2.effectTag |= 2), Yg(b2, c2, d2), pe(b2, c2, d2, e2), d2 = true;
    else if (a === null) {
      var g2 = b2.stateNode, h2 = b2.memoizedProps;
      g2.props = h2;
      var m2 = g2.context, n2 = c2.contextType;
      typeof n2 === "object" && n2 !== null ? n2 = W(n2) : (n2 = N(c2) ? Ra : B.current, n2 = pb(b2, n2));
      var l3 = c2.getDerivedStateFromProps, k3 = typeof l3 === "function" || typeof g2.getSnapshotBeforeUpdate === "function";
      k3 || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== d2 || m2 !== n2) && Zg(b2, g2, d2, n2);
      Ga = false;
      var p3 = b2.memoizedState;
      g2.state = p3;
      Qb(b2, d2, g2, e2);
      m2 = b2.memoizedState;
      h2 !== d2 || p3 !== m2 || G.current || Ga ? (typeof l3 === "function" && (Lc(b2, c2, l3, d2), m2 = b2.memoizedState), (h2 = Ga || Xg(b2, c2, h2, d2, p3, m2, n2)) ? (k3 || typeof g2.UNSAFE_componentWillMount !== "function" && typeof g2.componentWillMount !== "function" || (typeof g2.componentWillMount === "function" && g2.componentWillMount(), typeof g2.UNSAFE_componentWillMount === "function" && g2.UNSAFE_componentWillMount()), typeof g2.componentDidMount === "function" && (b2.effectTag |= 4)) : (typeof g2.componentDidMount === "function" && (b2.effectTag |= 4), b2.memoizedProps = d2, b2.memoizedState = m2), g2.props = d2, g2.state = m2, g2.context = n2, d2 = h2) : (typeof g2.componentDidMount === "function" && (b2.effectTag |= 4), d2 = false);
    } else
      g2 = b2.stateNode, oe(a, b2), h2 = b2.memoizedProps, g2.props = b2.type === b2.elementType ? h2 : aa(b2.type, h2), m2 = g2.context, n2 = c2.contextType, typeof n2 === "object" && n2 !== null ? n2 = W(n2) : (n2 = N(c2) ? Ra : B.current, n2 = pb(b2, n2)), l3 = c2.getDerivedStateFromProps, (k3 = typeof l3 === "function" || typeof g2.getSnapshotBeforeUpdate === "function") || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== d2 || m2 !== n2) && Zg(b2, g2, d2, n2), Ga = false, m2 = b2.memoizedState, g2.state = m2, Qb(b2, d2, g2, e2), p3 = b2.memoizedState, h2 !== d2 || m2 !== p3 || G.current || Ga ? (typeof l3 === "function" && (Lc(b2, c2, l3, d2), p3 = b2.memoizedState), (l3 = Ga || Xg(b2, c2, h2, d2, m2, p3, n2)) ? (k3 || typeof g2.UNSAFE_componentWillUpdate !== "function" && typeof g2.componentWillUpdate !== "function" || (typeof g2.componentWillUpdate === "function" && g2.componentWillUpdate(d2, p3, n2), typeof g2.UNSAFE_componentWillUpdate === "function" && g2.UNSAFE_componentWillUpdate(d2, p3, n2)), typeof g2.componentDidUpdate === "function" && (b2.effectTag |= 4), typeof g2.getSnapshotBeforeUpdate === "function" && (b2.effectTag |= 256)) : (typeof g2.componentDidUpdate !== "function" || h2 === a.memoizedProps && m2 === a.memoizedState || (b2.effectTag |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a.memoizedProps && m2 === a.memoizedState || (b2.effectTag |= 256), b2.memoizedProps = d2, b2.memoizedState = p3), g2.props = d2, g2.state = p3, g2.context = n2, d2 = l3) : (typeof g2.componentDidUpdate !== "function" || h2 === a.memoizedProps && m2 === a.memoizedState || (b2.effectTag |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a.memoizedProps && m2 === a.memoizedState || (b2.effectTag |= 256), d2 = false);
    return Ie(a, b2, c2, d2, f2, e2);
  }
  function Ie(a, b2, c2, d2, e2, f2) {
    qh(a, b2);
    var g2 = (b2.effectTag & 64) !== 0;
    if (!d2 && !g2)
      return e2 && Hg(b2, c2, false), sa(a, b2, f2);
    d2 = b2.stateNode;
    gj.current = b2;
    var h2 = g2 && typeof c2.getDerivedStateFromError !== "function" ? null : d2.render();
    b2.effectTag |= 1;
    a !== null && g2 ? (b2.child = wb(b2, a.child, null, f2), b2.child = wb(b2, null, h2, f2)) : T(a, b2, h2, f2);
    b2.memoizedState = d2.state;
    e2 && Hg(b2, c2, true);
    return b2.child;
  }
  function sh(a) {
    var b2 = a.stateNode;
    b2.pendingContext ? Fg(a, b2.pendingContext, b2.pendingContext !== b2.context) : b2.context && Fg(a, b2.context, false);
    se(a, b2.containerInfo);
  }
  function th(a, b2, c2) {
    var d2 = b2.mode, e2 = b2.pendingProps, f2 = D.current, g2 = false, h2;
    (h2 = (b2.effectTag & 64) !== 0) || (h2 = (f2 & 2) !== 0 && (a === null || a.memoizedState !== null));
    h2 ? (g2 = true, b2.effectTag &= -65) : a !== null && a.memoizedState === null || e2.fallback === void 0 || e2.unstable_avoidThisFallback === true || (f2 |= 1);
    y2(D, f2 & 1);
    if (a === null) {
      e2.fallback !== void 0 && De(b2);
      if (g2) {
        g2 = e2.fallback;
        e2 = Ha(null, d2, 0, null);
        e2.return = b2;
        if ((b2.mode & 2) === 0)
          for (a = b2.memoizedState !== null ? b2.child.child : b2.child, e2.child = a; a !== null; )
            a.return = e2, a = a.sibling;
        c2 = Ha(g2, d2, c2, null);
        c2.return = b2;
        e2.sibling = c2;
        b2.memoizedState = Je;
        b2.child = e2;
        return c2;
      }
      d2 = e2.children;
      b2.memoizedState = null;
      return b2.child = Fe(b2, null, d2, c2);
    }
    if (a.memoizedState !== null) {
      a = a.child;
      d2 = a.sibling;
      if (g2) {
        e2 = e2.fallback;
        c2 = Sa(a, a.pendingProps);
        c2.return = b2;
        if ((b2.mode & 2) === 0 && (g2 = b2.memoizedState !== null ? b2.child.child : b2.child, g2 !== a.child))
          for (c2.child = g2; g2 !== null; )
            g2.return = c2, g2 = g2.sibling;
        d2 = Sa(d2, e2);
        d2.return = b2;
        c2.sibling = d2;
        c2.childExpirationTime = 0;
        b2.memoizedState = Je;
        b2.child = c2;
        return d2;
      }
      c2 = wb(b2, a.child, e2.children, c2);
      b2.memoizedState = null;
      return b2.child = c2;
    }
    a = a.child;
    if (g2) {
      g2 = e2.fallback;
      e2 = Ha(null, d2, 0, null);
      e2.return = b2;
      e2.child = a;
      a !== null && (a.return = e2);
      if ((b2.mode & 2) === 0)
        for (a = b2.memoizedState !== null ? b2.child.child : b2.child, e2.child = a; a !== null; )
          a.return = e2, a = a.sibling;
      c2 = Ha(g2, d2, c2, null);
      c2.return = b2;
      e2.sibling = c2;
      c2.effectTag |= 2;
      e2.childExpirationTime = 0;
      b2.memoizedState = Je;
      b2.child = e2;
      return c2;
    }
    b2.memoizedState = null;
    return b2.child = wb(b2, a, e2.children, c2);
  }
  function uh(a, b2) {
    a.expirationTime < b2 && (a.expirationTime = b2);
    var c2 = a.alternate;
    c2 !== null && c2.expirationTime < b2 && (c2.expirationTime = b2);
    Sg(a.return, b2);
  }
  function Ke(a, b2, c2, d2, e2, f2) {
    var g2 = a.memoizedState;
    g2 === null ? a.memoizedState = {
      isBackwards: b2,
      rendering: null,
      renderingStartTime: 0,
      last: d2,
      tail: c2,
      tailExpiration: 0,
      tailMode: e2,
      lastEffect: f2
    } : (g2.isBackwards = b2, g2.rendering = null, g2.renderingStartTime = 0, g2.last = d2, g2.tail = c2, g2.tailExpiration = 0, g2.tailMode = e2, g2.lastEffect = f2);
  }
  function vh(a, b2, c2) {
    var d2 = b2.pendingProps, e2 = d2.revealOrder, f2 = d2.tail;
    T(a, b2, d2.children, c2);
    d2 = D.current;
    if ((d2 & 2) !== 0)
      d2 = d2 & 1 | 2, b2.effectTag |= 64;
    else {
      if (a !== null && (a.effectTag & 64) !== 0)
        a:
          for (a = b2.child; a !== null; ) {
            if (a.tag === 13)
              a.memoizedState !== null && uh(a, c2);
            else if (a.tag === 19)
              uh(a, c2);
            else if (a.child !== null) {
              a.child.return = a;
              a = a.child;
              continue;
            }
            if (a === b2)
              break a;
            for (; a.sibling === null; ) {
              if (a.return === null || a.return === b2)
                break a;
              a = a.return;
            }
            a.sibling.return = a.return;
            a = a.sibling;
          }
      d2 &= 1;
    }
    y2(D, d2);
    if ((b2.mode & 2) === 0)
      b2.memoizedState = null;
    else
      switch (e2) {
        case "forwards":
          c2 = b2.child;
          for (e2 = null; c2 !== null; )
            a = c2.alternate, a !== null && Rc(a) === null && (e2 = c2), c2 = c2.sibling;
          c2 = e2;
          c2 === null ? (e2 = b2.child, b2.child = null) : (e2 = c2.sibling, c2.sibling = null);
          Ke(b2, false, e2, c2, f2, b2.lastEffect);
          break;
        case "backwards":
          c2 = null;
          e2 = b2.child;
          for (b2.child = null; e2 !== null; ) {
            a = e2.alternate;
            if (a !== null && Rc(a) === null) {
              b2.child = e2;
              break;
            }
            a = e2.sibling;
            e2.sibling = c2;
            c2 = e2;
            e2 = a;
          }
          Ke(b2, true, c2, null, f2, b2.lastEffect);
          break;
        case "together":
          Ke(b2, false, null, null, void 0, b2.lastEffect);
          break;
        default:
          b2.memoizedState = null;
      }
    return b2.child;
  }
  function sa(a, b2, c2) {
    a !== null && (b2.dependencies = a.dependencies);
    var d2 = b2.expirationTime;
    d2 !== 0 && Kc(d2);
    if (b2.childExpirationTime < c2)
      return null;
    if (a !== null && b2.child !== a.child)
      throw Error(k2(153));
    if (b2.child !== null) {
      a = b2.child;
      c2 = Sa(a, a.pendingProps);
      b2.child = c2;
      for (c2.return = b2; a.sibling !== null; )
        a = a.sibling, c2 = c2.sibling = Sa(a, a.pendingProps), c2.return = b2;
      c2.sibling = null;
    }
    return b2.child;
  }
  function $c(a, b2) {
    switch (a.tailMode) {
      case "hidden":
        b2 = a.tail;
        for (var c2 = null; b2 !== null; )
          b2.alternate !== null && (c2 = b2), b2 = b2.sibling;
        c2 === null ? a.tail = null : c2.sibling = null;
        break;
      case "collapsed":
        c2 = a.tail;
        for (var d2 = null; c2 !== null; )
          c2.alternate !== null && (d2 = c2), c2 = c2.sibling;
        d2 === null ? b2 || a.tail === null ? a.tail = null : a.tail.sibling = null : d2.sibling = null;
    }
  }
  function hj(a, b2, c2) {
    var d2 = b2.pendingProps;
    switch (b2.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return null;
      case 1:
        return N(b2.type) && (q2(G), q2(B)), null;
      case 3:
        return tb(), q2(G), q2(B), c2 = b2.stateNode, c2.pendingContext && (c2.context = c2.pendingContext, c2.pendingContext = null), a !== null && a.child !== null || !Zc(b2) || (b2.effectTag |= 4), null;
      case 5:
        te(b2);
        c2 = Ta(Tb.current);
        var e2 = b2.type;
        if (a !== null && b2.stateNode != null)
          ij(a, b2, e2, d2, c2), a.ref !== b2.ref && (b2.effectTag |= 128);
        else {
          if (!d2) {
            if (b2.stateNode === null)
              throw Error(k2(166));
            return null;
          }
          a = Ta(ja.current);
          if (Zc(b2)) {
            d2 = b2.stateNode;
            e2 = b2.type;
            var f2 = b2.memoizedProps;
            d2[Aa] = b2;
            d2[vc] = f2;
            switch (e2) {
              case "iframe":
              case "object":
              case "embed":
                w2("load", d2);
                break;
              case "video":
              case "audio":
                for (a = 0; a < Db.length; a++)
                  w2(Db[a], d2);
                break;
              case "source":
                w2("error", d2);
                break;
              case "img":
              case "image":
              case "link":
                w2("error", d2);
                w2("load", d2);
                break;
              case "form":
                w2("reset", d2);
                w2("submit", d2);
                break;
              case "details":
                w2("toggle", d2);
                break;
              case "input":
                Hf(d2, f2);
                w2("invalid", d2);
                oa(c2, "onChange");
                break;
              case "select":
                d2._wrapperState = {wasMultiple: !!f2.multiple};
                w2("invalid", d2);
                oa(c2, "onChange");
                break;
              case "textarea":
                Kf(d2, f2), w2("invalid", d2), oa(c2, "onChange");
            }
            Ud(e2, f2);
            a = null;
            for (var g2 in f2)
              if (f2.hasOwnProperty(g2)) {
                var h2 = f2[g2];
                g2 === "children" ? typeof h2 === "string" ? d2.textContent !== h2 && (a = ["children", h2]) : typeof h2 === "number" && d2.textContent !== "" + h2 && (a = ["children", "" + h2]) : eb.hasOwnProperty(g2) && h2 != null && oa(c2, g2);
              }
            switch (e2) {
              case "input":
                mc(d2);
                Jf(d2, f2, true);
                break;
              case "textarea":
                mc(d2);
                Mf(d2);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof f2.onClick === "function" && (d2.onclick = uc);
            }
            c2 = a;
            b2.updateQueue = c2;
            c2 !== null && (b2.effectTag |= 4);
          } else {
            g2 = c2.nodeType === 9 ? c2 : c2.ownerDocument;
            a === "http://www.w3.org/1999/xhtml" && (a = Nf(e2));
            a === "http://www.w3.org/1999/xhtml" ? e2 === "script" ? (a = g2.createElement("div"), a.innerHTML = "<script></script>", a = a.removeChild(a.firstChild)) : typeof d2.is === "string" ? a = g2.createElement(e2, {is: d2.is}) : (a = g2.createElement(e2), e2 === "select" && (g2 = a, d2.multiple ? g2.multiple = true : d2.size && (g2.size = d2.size))) : a = g2.createElementNS(a, e2);
            a[Aa] = b2;
            a[vc] = d2;
            jj(a, b2, false);
            b2.stateNode = a;
            g2 = Vd(e2, d2);
            switch (e2) {
              case "iframe":
              case "object":
              case "embed":
                w2("load", a);
                h2 = d2;
                break;
              case "video":
              case "audio":
                for (h2 = 0; h2 < Db.length; h2++)
                  w2(Db[h2], a);
                h2 = d2;
                break;
              case "source":
                w2("error", a);
                h2 = d2;
                break;
              case "img":
              case "image":
              case "link":
                w2("error", a);
                w2("load", a);
                h2 = d2;
                break;
              case "form":
                w2("reset", a);
                w2("submit", a);
                h2 = d2;
                break;
              case "details":
                w2("toggle", a);
                h2 = d2;
                break;
              case "input":
                Hf(a, d2);
                h2 = Cd(a, d2);
                w2("invalid", a);
                oa(c2, "onChange");
                break;
              case "option":
                h2 = Fd(a, d2);
                break;
              case "select":
                a._wrapperState = {wasMultiple: !!d2.multiple};
                h2 = M({}, d2, {value: void 0});
                w2("invalid", a);
                oa(c2, "onChange");
                break;
              case "textarea":
                Kf(a, d2);
                h2 = Gd(a, d2);
                w2("invalid", a);
                oa(c2, "onChange");
                break;
              default:
                h2 = d2;
            }
            Ud(e2, h2);
            var m2 = h2;
            for (f2 in m2)
              if (m2.hasOwnProperty(f2)) {
                var n2 = m2[f2];
                f2 === "style" ? gg(a, n2) : f2 === "dangerouslySetInnerHTML" ? (n2 = n2 ? n2.__html : void 0, n2 != null && xh(a, n2)) : f2 === "children" ? typeof n2 === "string" ? (e2 !== "textarea" || n2 !== "") && Wb(a, n2) : typeof n2 === "number" && Wb(a, "" + n2) : f2 !== "suppressContentEditableWarning" && f2 !== "suppressHydrationWarning" && f2 !== "autoFocus" && (eb.hasOwnProperty(f2) ? n2 != null && oa(c2, f2) : n2 != null && Bd(a, f2, n2, g2));
              }
            switch (e2) {
              case "input":
                mc(a);
                Jf(a, d2, false);
                break;
              case "textarea":
                mc(a);
                Mf(a);
                break;
              case "option":
                d2.value != null && a.setAttribute("value", "" + va(d2.value));
                break;
              case "select":
                a.multiple = !!d2.multiple;
                c2 = d2.value;
                c2 != null ? hb(a, !!d2.multiple, c2, false) : d2.defaultValue != null && hb(a, !!d2.multiple, d2.defaultValue, true);
                break;
              default:
                typeof h2.onClick === "function" && (a.onclick = uc);
            }
            lg(e2, d2) && (b2.effectTag |= 4);
          }
          b2.ref !== null && (b2.effectTag |= 128);
        }
        return null;
      case 6:
        if (a && b2.stateNode != null)
          kj(a, b2, a.memoizedProps, d2);
        else {
          if (typeof d2 !== "string" && b2.stateNode === null)
            throw Error(k2(166));
          c2 = Ta(Tb.current);
          Ta(ja.current);
          Zc(b2) ? (c2 = b2.stateNode, d2 = b2.memoizedProps, c2[Aa] = b2, c2.nodeValue !== d2 && (b2.effectTag |= 4)) : (c2 = (c2.nodeType === 9 ? c2 : c2.ownerDocument).createTextNode(d2), c2[Aa] = b2, b2.stateNode = c2);
        }
        return null;
      case 13:
        q2(D);
        d2 = b2.memoizedState;
        if ((b2.effectTag & 64) !== 0)
          return b2.expirationTime = c2, b2;
        c2 = d2 !== null;
        d2 = false;
        a === null ? b2.memoizedProps.fallback !== void 0 && Zc(b2) : (e2 = a.memoizedState, d2 = e2 !== null, c2 || e2 === null || (e2 = a.child.sibling, e2 !== null && (f2 = b2.firstEffect, f2 !== null ? (b2.firstEffect = e2, e2.nextEffect = f2) : (b2.firstEffect = b2.lastEffect = e2, e2.nextEffect = null), e2.effectTag = 8)));
        if (c2 && !d2 && (b2.mode & 2) !== 0)
          if (a === null && b2.memoizedProps.unstable_avoidThisFallback !== true || (D.current & 1) !== 0)
            F === Xa && (F = ad);
          else {
            if (F === Xa || F === ad)
              F = bd;
            Xb !== 0 && U !== null && (Ya(U, P), yh(U, Xb));
          }
        if (c2 || d2)
          b2.effectTag |= 4;
        return null;
      case 4:
        return tb(), null;
      case 10:
        return me(b2), null;
      case 17:
        return N(b2.type) && (q2(G), q2(B)), null;
      case 19:
        q2(D);
        d2 = b2.memoizedState;
        if (d2 === null)
          return null;
        e2 = (b2.effectTag & 64) !== 0;
        f2 = d2.rendering;
        if (f2 === null)
          if (e2)
            $c(d2, false);
          else {
            if (F !== Xa || a !== null && (a.effectTag & 64) !== 0)
              for (f2 = b2.child; f2 !== null; ) {
                a = Rc(f2);
                if (a !== null) {
                  b2.effectTag |= 64;
                  $c(d2, false);
                  e2 = a.updateQueue;
                  e2 !== null && (b2.updateQueue = e2, b2.effectTag |= 4);
                  d2.lastEffect === null && (b2.firstEffect = null);
                  b2.lastEffect = d2.lastEffect;
                  for (d2 = b2.child; d2 !== null; )
                    e2 = d2, f2 = c2, e2.effectTag &= 2, e2.nextEffect = null, e2.firstEffect = null, e2.lastEffect = null, a = e2.alternate, a === null ? (e2.childExpirationTime = 0, e2.expirationTime = f2, e2.child = null, e2.memoizedProps = null, e2.memoizedState = null, e2.updateQueue = null, e2.dependencies = null) : (e2.childExpirationTime = a.childExpirationTime, e2.expirationTime = a.expirationTime, e2.child = a.child, e2.memoizedProps = a.memoizedProps, e2.memoizedState = a.memoizedState, e2.updateQueue = a.updateQueue, f2 = a.dependencies, e2.dependencies = f2 === null ? null : {expirationTime: f2.expirationTime, firstContext: f2.firstContext, responders: f2.responders}), d2 = d2.sibling;
                  y2(D, D.current & 1 | 2);
                  return b2.child;
                }
                f2 = f2.sibling;
              }
          }
        else {
          if (!e2)
            if (a = Rc(f2), a !== null) {
              if (b2.effectTag |= 64, e2 = true, c2 = a.updateQueue, c2 !== null && (b2.updateQueue = c2, b2.effectTag |= 4), $c(d2, true), d2.tail === null && d2.tailMode === "hidden" && !f2.alternate)
                return b2 = b2.lastEffect = d2.lastEffect, b2 !== null && (b2.nextEffect = null), null;
            } else
              2 * Y() - d2.renderingStartTime > d2.tailExpiration && 1 < c2 && (b2.effectTag |= 64, e2 = true, $c(d2, false), b2.expirationTime = b2.childExpirationTime = c2 - 1);
          d2.isBackwards ? (f2.sibling = b2.child, b2.child = f2) : (c2 = d2.last, c2 !== null ? c2.sibling = f2 : b2.child = f2, d2.last = f2);
        }
        return d2.tail !== null ? (d2.tailExpiration === 0 && (d2.tailExpiration = Y() + 500), c2 = d2.tail, d2.rendering = c2, d2.tail = c2.sibling, d2.lastEffect = b2.lastEffect, d2.renderingStartTime = Y(), c2.sibling = null, b2 = D.current, y2(D, e2 ? b2 & 1 | 2 : b2 & 1), c2) : null;
    }
    throw Error(k2(156, b2.tag));
  }
  function lj(a, b2) {
    switch (a.tag) {
      case 1:
        return N(a.type) && (q2(G), q2(B)), b2 = a.effectTag, b2 & 4096 ? (a.effectTag = b2 & -4097 | 64, a) : null;
      case 3:
        tb();
        q2(G);
        q2(B);
        b2 = a.effectTag;
        if ((b2 & 64) !== 0)
          throw Error(k2(285));
        a.effectTag = b2 & -4097 | 64;
        return a;
      case 5:
        return te(a), null;
      case 13:
        return q2(D), b2 = a.effectTag, b2 & 4096 ? (a.effectTag = b2 & -4097 | 64, a) : null;
      case 19:
        return q2(D), null;
      case 4:
        return tb(), null;
      case 10:
        return me(a), null;
      default:
        return null;
    }
  }
  function Le(a, b2) {
    return {value: a, source: b2, stack: td(b2)};
  }
  function Me(a, b2) {
    var c2 = b2.source, d2 = b2.stack;
    d2 === null && c2 !== null && (d2 = td(c2));
    c2 !== null && na(c2.type);
    b2 = b2.value;
    a !== null && a.tag === 1 && na(a.type);
    try {
      console.error(b2);
    } catch (e2) {
      setTimeout(function() {
        throw e2;
      });
    }
  }
  function mj(a, b2) {
    try {
      b2.props = a.memoizedProps, b2.state = a.memoizedState, b2.componentWillUnmount();
    } catch (c2) {
      Za(a, c2);
    }
  }
  function zh(a) {
    var b2 = a.ref;
    if (b2 !== null)
      if (typeof b2 === "function")
        try {
          b2(null);
        } catch (c2) {
          Za(a, c2);
        }
      else
        b2.current = null;
  }
  function nj(a, b2) {
    switch (b2.tag) {
      case 0:
      case 11:
      case 15:
      case 22:
        return;
      case 1:
        if (b2.effectTag & 256 && a !== null) {
          var c2 = a.memoizedProps, d2 = a.memoizedState;
          a = b2.stateNode;
          b2 = a.getSnapshotBeforeUpdate(b2.elementType === b2.type ? c2 : aa(b2.type, c2), d2);
          a.__reactInternalSnapshotBeforeUpdate = b2;
        }
        return;
      case 3:
      case 5:
      case 6:
      case 4:
      case 17:
        return;
    }
    throw Error(k2(163));
  }
  function Ah(a, b2) {
    b2 = b2.updateQueue;
    b2 = b2 !== null ? b2.lastEffect : null;
    if (b2 !== null) {
      var c2 = b2 = b2.next;
      do {
        if ((c2.tag & a) === a) {
          var d2 = c2.destroy;
          c2.destroy = void 0;
          d2 !== void 0 && d2();
        }
        c2 = c2.next;
      } while (c2 !== b2);
    }
  }
  function Bh(a, b2) {
    b2 = b2.updateQueue;
    b2 = b2 !== null ? b2.lastEffect : null;
    if (b2 !== null) {
      var c2 = b2 = b2.next;
      do {
        if ((c2.tag & a) === a) {
          var d2 = c2.create;
          c2.destroy = d2();
        }
        c2 = c2.next;
      } while (c2 !== b2);
    }
  }
  function oj(a, b2, c2, d2) {
    switch (c2.tag) {
      case 0:
      case 11:
      case 15:
      case 22:
        Bh(3, c2);
        return;
      case 1:
        a = c2.stateNode;
        c2.effectTag & 4 && (b2 === null ? a.componentDidMount() : (d2 = c2.elementType === c2.type ? b2.memoizedProps : aa(c2.type, b2.memoizedProps), a.componentDidUpdate(d2, b2.memoizedState, a.__reactInternalSnapshotBeforeUpdate)));
        b2 = c2.updateQueue;
        b2 !== null && Wg(c2, b2, a);
        return;
      case 3:
        b2 = c2.updateQueue;
        if (b2 !== null) {
          a = null;
          if (c2.child !== null)
            switch (c2.child.tag) {
              case 5:
                a = c2.child.stateNode;
                break;
              case 1:
                a = c2.child.stateNode;
            }
          Wg(c2, b2, a);
        }
        return;
      case 5:
        a = c2.stateNode;
        b2 === null && c2.effectTag & 4 && lg(c2.type, c2.memoizedProps) && a.focus();
        return;
      case 6:
        return;
      case 4:
        return;
      case 12:
        return;
      case 13:
        c2.memoizedState === null && (c2 = c2.alternate, c2 !== null && (c2 = c2.memoizedState, c2 !== null && (c2 = c2.dehydrated, c2 !== null && bg(c2))));
        return;
      case 19:
      case 17:
      case 20:
      case 21:
        return;
    }
    throw Error(k2(163));
  }
  function Ch(a, b2, c2) {
    typeof Ne === "function" && Ne(b2);
    switch (b2.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
      case 22:
        a = b2.updateQueue;
        if (a !== null && (a = a.lastEffect, a !== null)) {
          var d2 = a.next;
          Da(97 < c2 ? 97 : c2, function() {
            var a2 = d2;
            do {
              var c3 = a2.destroy;
              if (c3 !== void 0) {
                var g2 = b2;
                try {
                  c3();
                } catch (h2) {
                  Za(g2, h2);
                }
              }
              a2 = a2.next;
            } while (a2 !== d2);
          });
        }
        break;
      case 1:
        zh(b2);
        c2 = b2.stateNode;
        typeof c2.componentWillUnmount === "function" && mj(b2, c2);
        break;
      case 5:
        zh(b2);
        break;
      case 4:
        Dh(a, b2, c2);
    }
  }
  function Eh(a) {
    var b2 = a.alternate;
    a.return = null;
    a.child = null;
    a.memoizedState = null;
    a.updateQueue = null;
    a.dependencies = null;
    a.alternate = null;
    a.firstEffect = null;
    a.lastEffect = null;
    a.pendingProps = null;
    a.memoizedProps = null;
    a.stateNode = null;
    b2 !== null && Eh(b2);
  }
  function Fh(a) {
    return a.tag === 5 || a.tag === 3 || a.tag === 4;
  }
  function Gh(a) {
    a: {
      for (var b2 = a.return; b2 !== null; ) {
        if (Fh(b2)) {
          var c2 = b2;
          break a;
        }
        b2 = b2.return;
      }
      throw Error(k2(160));
    }
    b2 = c2.stateNode;
    switch (c2.tag) {
      case 5:
        var d2 = false;
        break;
      case 3:
        b2 = b2.containerInfo;
        d2 = true;
        break;
      case 4:
        b2 = b2.containerInfo;
        d2 = true;
        break;
      default:
        throw Error(k2(161));
    }
    c2.effectTag & 16 && (Wb(b2, ""), c2.effectTag &= -17);
    a:
      b:
        for (c2 = a; ; ) {
          for (; c2.sibling === null; ) {
            if (c2.return === null || Fh(c2.return)) {
              c2 = null;
              break a;
            }
            c2 = c2.return;
          }
          c2.sibling.return = c2.return;
          for (c2 = c2.sibling; c2.tag !== 5 && c2.tag !== 6 && c2.tag !== 18; ) {
            if (c2.effectTag & 2)
              continue b;
            if (c2.child === null || c2.tag === 4)
              continue b;
            else
              c2.child.return = c2, c2 = c2.child;
          }
          if (!(c2.effectTag & 2)) {
            c2 = c2.stateNode;
            break a;
          }
        }
    d2 ? Oe(a, c2, b2) : Pe(a, c2, b2);
  }
  function Oe(a, b2, c2) {
    var d2 = a.tag, e2 = d2 === 5 || d2 === 6;
    if (e2)
      a = e2 ? a.stateNode : a.stateNode.instance, b2 ? c2.nodeType === 8 ? c2.parentNode.insertBefore(a, b2) : c2.insertBefore(a, b2) : (c2.nodeType === 8 ? (b2 = c2.parentNode, b2.insertBefore(a, c2)) : (b2 = c2, b2.appendChild(a)), c2 = c2._reactRootContainer, c2 !== null && c2 !== void 0 || b2.onclick !== null || (b2.onclick = uc));
    else if (d2 !== 4 && (a = a.child, a !== null))
      for (Oe(a, b2, c2), a = a.sibling; a !== null; )
        Oe(a, b2, c2), a = a.sibling;
  }
  function Pe(a, b2, c2) {
    var d2 = a.tag, e2 = d2 === 5 || d2 === 6;
    if (e2)
      a = e2 ? a.stateNode : a.stateNode.instance, b2 ? c2.insertBefore(a, b2) : c2.appendChild(a);
    else if (d2 !== 4 && (a = a.child, a !== null))
      for (Pe(a, b2, c2), a = a.sibling; a !== null; )
        Pe(a, b2, c2), a = a.sibling;
  }
  function Dh(a, b2, c2) {
    for (var d2 = b2, e2 = false, f2, g2; ; ) {
      if (!e2) {
        e2 = d2.return;
        a:
          for (; ; ) {
            if (e2 === null)
              throw Error(k2(160));
            f2 = e2.stateNode;
            switch (e2.tag) {
              case 5:
                g2 = false;
                break a;
              case 3:
                f2 = f2.containerInfo;
                g2 = true;
                break a;
              case 4:
                f2 = f2.containerInfo;
                g2 = true;
                break a;
            }
            e2 = e2.return;
          }
        e2 = true;
      }
      if (d2.tag === 5 || d2.tag === 6) {
        a:
          for (var h2 = a, m2 = d2, n2 = c2, l3 = m2; ; )
            if (Ch(h2, l3, n2), l3.child !== null && l3.tag !== 4)
              l3.child.return = l3, l3 = l3.child;
            else {
              if (l3 === m2)
                break a;
              for (; l3.sibling === null; ) {
                if (l3.return === null || l3.return === m2)
                  break a;
                l3 = l3.return;
              }
              l3.sibling.return = l3.return;
              l3 = l3.sibling;
            }
        g2 ? (h2 = f2, m2 = d2.stateNode, h2.nodeType === 8 ? h2.parentNode.removeChild(m2) : h2.removeChild(m2)) : f2.removeChild(d2.stateNode);
      } else if (d2.tag === 4) {
        if (d2.child !== null) {
          f2 = d2.stateNode.containerInfo;
          g2 = true;
          d2.child.return = d2;
          d2 = d2.child;
          continue;
        }
      } else if (Ch(a, d2, c2), d2.child !== null) {
        d2.child.return = d2;
        d2 = d2.child;
        continue;
      }
      if (d2 === b2)
        break;
      for (; d2.sibling === null; ) {
        if (d2.return === null || d2.return === b2)
          return;
        d2 = d2.return;
        d2.tag === 4 && (e2 = false);
      }
      d2.sibling.return = d2.return;
      d2 = d2.sibling;
    }
  }
  function Qe(a, b2) {
    switch (b2.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
      case 22:
        Ah(3, b2);
        return;
      case 1:
        return;
      case 5:
        var c2 = b2.stateNode;
        if (c2 != null) {
          var d2 = b2.memoizedProps, e2 = a !== null ? a.memoizedProps : d2;
          a = b2.type;
          var f2 = b2.updateQueue;
          b2.updateQueue = null;
          if (f2 !== null) {
            c2[vc] = d2;
            a === "input" && d2.type === "radio" && d2.name != null && If(c2, d2);
            Vd(a, e2);
            b2 = Vd(a, d2);
            for (e2 = 0; e2 < f2.length; e2 += 2) {
              var g2 = f2[e2], h2 = f2[e2 + 1];
              g2 === "style" ? gg(c2, h2) : g2 === "dangerouslySetInnerHTML" ? xh(c2, h2) : g2 === "children" ? Wb(c2, h2) : Bd(c2, g2, h2, b2);
            }
            switch (a) {
              case "input":
                Dd(c2, d2);
                break;
              case "textarea":
                Lf(c2, d2);
                break;
              case "select":
                b2 = c2._wrapperState.wasMultiple, c2._wrapperState.wasMultiple = !!d2.multiple, a = d2.value, a != null ? hb(c2, !!d2.multiple, a, false) : b2 !== !!d2.multiple && (d2.defaultValue != null ? hb(c2, !!d2.multiple, d2.defaultValue, true) : hb(c2, !!d2.multiple, d2.multiple ? [] : "", false));
            }
          }
        }
        return;
      case 6:
        if (b2.stateNode === null)
          throw Error(k2(162));
        b2.stateNode.nodeValue = b2.memoizedProps;
        return;
      case 3:
        b2 = b2.stateNode;
        b2.hydrate && (b2.hydrate = false, bg(b2.containerInfo));
        return;
      case 12:
        return;
      case 13:
        c2 = b2;
        b2.memoizedState === null ? d2 = false : (d2 = true, c2 = b2.child, Re = Y());
        if (c2 !== null)
          a:
            for (a = c2; ; ) {
              if (a.tag === 5)
                f2 = a.stateNode, d2 ? (f2 = f2.style, typeof f2.setProperty === "function" ? f2.setProperty("display", "none", "important") : f2.display = "none") : (f2 = a.stateNode, e2 = a.memoizedProps.style, e2 = e2 !== void 0 && e2 !== null && e2.hasOwnProperty("display") ? e2.display : null, f2.style.display = fg("display", e2));
              else if (a.tag === 6)
                a.stateNode.nodeValue = d2 ? "" : a.memoizedProps;
              else if (a.tag === 13 && a.memoizedState !== null && a.memoizedState.dehydrated === null) {
                f2 = a.child.sibling;
                f2.return = a;
                a = f2;
                continue;
              } else if (a.child !== null) {
                a.child.return = a;
                a = a.child;
                continue;
              }
              if (a === c2)
                break;
              for (; a.sibling === null; ) {
                if (a.return === null || a.return === c2)
                  break a;
                a = a.return;
              }
              a.sibling.return = a.return;
              a = a.sibling;
            }
        Hh(b2);
        return;
      case 19:
        Hh(b2);
        return;
      case 17:
        return;
    }
    throw Error(k2(163));
  }
  function Hh(a) {
    var b2 = a.updateQueue;
    if (b2 !== null) {
      a.updateQueue = null;
      var c2 = a.stateNode;
      c2 === null && (c2 = a.stateNode = new pj());
      b2.forEach(function(b3) {
        var d2 = qj.bind(null, a, b3);
        c2.has(b3) || (c2.add(b3), b3.then(d2, d2));
      });
    }
  }
  function Ih(a, b2, c2) {
    c2 = Ea(c2, null);
    c2.tag = 3;
    c2.payload = {element: null};
    var d2 = b2.value;
    c2.callback = function() {
      cd || (cd = true, Se = d2);
      Me(a, b2);
    };
    return c2;
  }
  function Jh(a, b2, c2) {
    c2 = Ea(c2, null);
    c2.tag = 3;
    var d2 = a.type.getDerivedStateFromError;
    if (typeof d2 === "function") {
      var e2 = b2.value;
      c2.payload = function() {
        Me(a, b2);
        return d2(e2);
      };
    }
    var f2 = a.stateNode;
    f2 !== null && typeof f2.componentDidCatch === "function" && (c2.callback = function() {
      typeof d2 !== "function" && (La === null ? La = new Set([this]) : La.add(this), Me(a, b2));
      var c3 = b2.stack;
      this.componentDidCatch(b2.value, {componentStack: c3 !== null ? c3 : ""});
    });
    return c2;
  }
  function ka() {
    return (p2 & (ca | ma)) !== H ? 1073741821 - (Y() / 10 | 0) : dd !== 0 ? dd : dd = 1073741821 - (Y() / 10 | 0);
  }
  function Va(a, b2, c2) {
    b2 = b2.mode;
    if ((b2 & 2) === 0)
      return 1073741823;
    var d2 = Cc();
    if ((b2 & 4) === 0)
      return d2 === 99 ? 1073741823 : 1073741822;
    if ((p2 & ca) !== H)
      return P;
    if (c2 !== null)
      a = Fc(a, c2.timeoutMs | 0 || 5e3, 250);
    else
      switch (d2) {
        case 99:
          a = 1073741823;
          break;
        case 98:
          a = Fc(a, 150, 100);
          break;
        case 97:
        case 96:
          a = Fc(a, 5e3, 250);
          break;
        case 95:
          a = 2;
          break;
        default:
          throw Error(k2(326));
      }
    U !== null && a === P && --a;
    return a;
  }
  function ed(a, b2) {
    a.expirationTime < b2 && (a.expirationTime = b2);
    var c2 = a.alternate;
    c2 !== null && c2.expirationTime < b2 && (c2.expirationTime = b2);
    var d2 = a.return, e2 = null;
    if (d2 === null && a.tag === 3)
      e2 = a.stateNode;
    else
      for (; d2 !== null; ) {
        c2 = d2.alternate;
        d2.childExpirationTime < b2 && (d2.childExpirationTime = b2);
        c2 !== null && c2.childExpirationTime < b2 && (c2.childExpirationTime = b2);
        if (d2.return === null && d2.tag === 3) {
          e2 = d2.stateNode;
          break;
        }
        d2 = d2.return;
      }
    e2 !== null && (U === e2 && (Kc(b2), F === bd && Ya(e2, P)), yh(e2, b2));
    return e2;
  }
  function fd(a) {
    var b2 = a.lastExpiredTime;
    if (b2 !== 0)
      return b2;
    b2 = a.firstPendingTime;
    if (!Kh(a, b2))
      return b2;
    var c2 = a.lastPingedTime;
    a = a.nextKnownPendingLevel;
    a = c2 > a ? c2 : a;
    return 2 >= a && b2 !== a ? 0 : a;
  }
  function V(a) {
    if (a.lastExpiredTime !== 0)
      a.callbackExpirationTime = 1073741823, a.callbackPriority = 99, a.callbackNode = Og(Te.bind(null, a));
    else {
      var b2 = fd(a), c2 = a.callbackNode;
      if (b2 === 0)
        c2 !== null && (a.callbackNode = null, a.callbackExpirationTime = 0, a.callbackPriority = 90);
      else {
        var d2 = ka();
        b2 === 1073741823 ? d2 = 99 : b2 === 1 || b2 === 2 ? d2 = 95 : (d2 = 10 * (1073741821 - b2) - 10 * (1073741821 - d2), d2 = 0 >= d2 ? 99 : 250 >= d2 ? 98 : 5250 >= d2 ? 97 : 95);
        if (c2 !== null) {
          var e2 = a.callbackPriority;
          if (a.callbackExpirationTime === b2 && e2 >= d2)
            return;
          c2 !== Qg && Rg(c2);
        }
        a.callbackExpirationTime = b2;
        a.callbackPriority = d2;
        b2 = b2 === 1073741823 ? Og(Te.bind(null, a)) : Ng(d2, Lh.bind(null, a), {timeout: 10 * (1073741821 - b2) - Y()});
        a.callbackNode = b2;
      }
    }
  }
  function Lh(a, b2) {
    dd = 0;
    if (b2)
      return b2 = ka(), Ue(a, b2), V(a), null;
    var c2 = fd(a);
    if (c2 !== 0) {
      b2 = a.callbackNode;
      if ((p2 & (ca | ma)) !== H)
        throw Error(k2(327));
      xb();
      a === U && c2 === P || $a(a, c2);
      if (t2 !== null) {
        var d2 = p2;
        p2 |= ca;
        var e2 = Mh();
        do
          try {
            rj();
            break;
          } catch (h2) {
            Nh(a, h2);
          }
        while (1);
        le();
        p2 = d2;
        gd.current = e2;
        if (F === hd)
          throw b2 = id2, $a(a, c2), Ya(a, c2), V(a), b2;
        if (t2 === null)
          switch (e2 = a.finishedWork = a.current.alternate, a.finishedExpirationTime = c2, d2 = F, U = null, d2) {
            case Xa:
            case hd:
              throw Error(k2(345));
            case Oh:
              Ue(a, 2 < c2 ? 2 : c2);
              break;
            case ad:
              Ya(a, c2);
              d2 = a.lastSuspendedTime;
              c2 === d2 && (a.nextKnownPendingLevel = Ve(e2));
              if (ta === 1073741823 && (e2 = Re + Ph - Y(), 10 < e2)) {
                if (jd) {
                  var f2 = a.lastPingedTime;
                  if (f2 === 0 || f2 >= c2) {
                    a.lastPingedTime = c2;
                    $a(a, c2);
                    break;
                  }
                }
                f2 = fd(a);
                if (f2 !== 0 && f2 !== c2)
                  break;
                if (d2 !== 0 && d2 !== c2) {
                  a.lastPingedTime = d2;
                  break;
                }
                a.timeoutHandle = We(ab.bind(null, a), e2);
                break;
              }
              ab(a);
              break;
            case bd:
              Ya(a, c2);
              d2 = a.lastSuspendedTime;
              c2 === d2 && (a.nextKnownPendingLevel = Ve(e2));
              if (jd && (e2 = a.lastPingedTime, e2 === 0 || e2 >= c2)) {
                a.lastPingedTime = c2;
                $a(a, c2);
                break;
              }
              e2 = fd(a);
              if (e2 !== 0 && e2 !== c2)
                break;
              if (d2 !== 0 && d2 !== c2) {
                a.lastPingedTime = d2;
                break;
              }
              Yb !== 1073741823 ? d2 = 10 * (1073741821 - Yb) - Y() : ta === 1073741823 ? d2 = 0 : (d2 = 10 * (1073741821 - ta) - 5e3, e2 = Y(), c2 = 10 * (1073741821 - c2) - e2, d2 = e2 - d2, 0 > d2 && (d2 = 0), d2 = (120 > d2 ? 120 : 480 > d2 ? 480 : 1080 > d2 ? 1080 : 1920 > d2 ? 1920 : 3e3 > d2 ? 3e3 : 4320 > d2 ? 4320 : 1960 * sj(d2 / 1960)) - d2, c2 < d2 && (d2 = c2));
              if (10 < d2) {
                a.timeoutHandle = We(ab.bind(null, a), d2);
                break;
              }
              ab(a);
              break;
            case Xe:
              if (ta !== 1073741823 && kd !== null) {
                f2 = ta;
                var g2 = kd;
                d2 = g2.busyMinDurationMs | 0;
                0 >= d2 ? d2 = 0 : (e2 = g2.busyDelayMs | 0, f2 = Y() - (10 * (1073741821 - f2) - (g2.timeoutMs | 0 || 5e3)), d2 = f2 <= e2 ? 0 : e2 + d2 - f2);
                if (10 < d2) {
                  Ya(a, c2);
                  a.timeoutHandle = We(ab.bind(null, a), d2);
                  break;
                }
              }
              ab(a);
              break;
            default:
              throw Error(k2(329));
          }
        V(a);
        if (a.callbackNode === b2)
          return Lh.bind(null, a);
      }
    }
    return null;
  }
  function Te(a) {
    var b2 = a.lastExpiredTime;
    b2 = b2 !== 0 ? b2 : 1073741823;
    if ((p2 & (ca | ma)) !== H)
      throw Error(k2(327));
    xb();
    a === U && b2 === P || $a(a, b2);
    if (t2 !== null) {
      var c2 = p2;
      p2 |= ca;
      var d2 = Mh();
      do
        try {
          tj();
          break;
        } catch (e2) {
          Nh(a, e2);
        }
      while (1);
      le();
      p2 = c2;
      gd.current = d2;
      if (F === hd)
        throw c2 = id2, $a(a, b2), Ya(a, b2), V(a), c2;
      if (t2 !== null)
        throw Error(k2(261));
      a.finishedWork = a.current.alternate;
      a.finishedExpirationTime = b2;
      U = null;
      ab(a);
      V(a);
    }
    return null;
  }
  function uj() {
    if (bb !== null) {
      var a = bb;
      bb = null;
      a.forEach(function(a2, c2) {
        Ue(c2, a2);
        V(c2);
      });
      ha();
    }
  }
  function Qh(a, b2) {
    var c2 = p2;
    p2 |= 1;
    try {
      return a(b2);
    } finally {
      p2 = c2, p2 === H && ha();
    }
  }
  function Rh(a, b2) {
    var c2 = p2;
    p2 &= -2;
    p2 |= Ye;
    try {
      return a(b2);
    } finally {
      p2 = c2, p2 === H && ha();
    }
  }
  function $a(a, b2) {
    a.finishedWork = null;
    a.finishedExpirationTime = 0;
    var c2 = a.timeoutHandle;
    c2 !== -1 && (a.timeoutHandle = -1, vj(c2));
    if (t2 !== null)
      for (c2 = t2.return; c2 !== null; ) {
        var d2 = c2;
        switch (d2.tag) {
          case 1:
            d2 = d2.type.childContextTypes;
            d2 !== null && d2 !== void 0 && (q2(G), q2(B));
            break;
          case 3:
            tb();
            q2(G);
            q2(B);
            break;
          case 5:
            te(d2);
            break;
          case 4:
            tb();
            break;
          case 13:
            q2(D);
            break;
          case 19:
            q2(D);
            break;
          case 10:
            me(d2);
        }
        c2 = c2.return;
      }
    U = a;
    t2 = Sa(a.current, null);
    P = b2;
    F = Xa;
    id2 = null;
    Yb = ta = 1073741823;
    kd = null;
    Xb = 0;
    jd = false;
  }
  function Nh(a, b2) {
    do {
      try {
        le();
        Sc.current = Tc;
        if (Uc)
          for (var c2 = z2.memoizedState; c2 !== null; ) {
            var d2 = c2.queue;
            d2 !== null && (d2.pending = null);
            c2 = c2.next;
          }
        Ia = 0;
        J = K = z2 = null;
        Uc = false;
        if (t2 === null || t2.return === null)
          return F = hd, id2 = b2, t2 = null;
        a: {
          var e2 = a, f2 = t2.return, g2 = t2, h2 = b2;
          b2 = P;
          g2.effectTag |= 2048;
          g2.firstEffect = g2.lastEffect = null;
          if (h2 !== null && typeof h2 === "object" && typeof h2.then === "function") {
            var m2 = h2;
            if ((g2.mode & 2) === 0) {
              var n2 = g2.alternate;
              n2 ? (g2.memoizedState = n2.memoizedState, g2.expirationTime = n2.expirationTime) : g2.memoizedState = null;
            }
            var l3 = (D.current & 1) !== 0, k3 = f2;
            do {
              var p3;
              if (p3 = k3.tag === 13) {
                var q3 = k3.memoizedState;
                if (q3 !== null)
                  p3 = q3.dehydrated !== null ? true : false;
                else {
                  var w3 = k3.memoizedProps;
                  p3 = w3.fallback === void 0 ? false : w3.unstable_avoidThisFallback !== true ? true : l3 ? false : true;
                }
              }
              if (p3) {
                var y3 = k3.updateQueue;
                if (y3 === null) {
                  var r2 = new Set();
                  r2.add(m2);
                  k3.updateQueue = r2;
                } else
                  y3.add(m2);
                if ((k3.mode & 2) === 0) {
                  k3.effectTag |= 64;
                  g2.effectTag &= -2981;
                  if (g2.tag === 1)
                    if (g2.alternate === null)
                      g2.tag = 17;
                    else {
                      var O = Ea(1073741823, null);
                      O.tag = Jc;
                      Fa(g2, O);
                    }
                  g2.expirationTime = 1073741823;
                  break a;
                }
                h2 = void 0;
                g2 = b2;
                var v2 = e2.pingCache;
                v2 === null ? (v2 = e2.pingCache = new wj(), h2 = new Set(), v2.set(m2, h2)) : (h2 = v2.get(m2), h2 === void 0 && (h2 = new Set(), v2.set(m2, h2)));
                if (!h2.has(g2)) {
                  h2.add(g2);
                  var x2 = xj.bind(null, e2, m2, g2);
                  m2.then(x2, x2);
                }
                k3.effectTag |= 4096;
                k3.expirationTime = b2;
                break a;
              }
              k3 = k3.return;
            } while (k3 !== null);
            h2 = Error((na(g2.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + td(g2));
          }
          F !== Xe && (F = Oh);
          h2 = Le(h2, g2);
          k3 = f2;
          do {
            switch (k3.tag) {
              case 3:
                m2 = h2;
                k3.effectTag |= 4096;
                k3.expirationTime = b2;
                var A2 = Ih(k3, m2, b2);
                Ug(k3, A2);
                break a;
              case 1:
                m2 = h2;
                var u = k3.type, B2 = k3.stateNode;
                if ((k3.effectTag & 64) === 0 && (typeof u.getDerivedStateFromError === "function" || B2 !== null && typeof B2.componentDidCatch === "function" && (La === null || !La.has(B2)))) {
                  k3.effectTag |= 4096;
                  k3.expirationTime = b2;
                  var H2 = Jh(k3, m2, b2);
                  Ug(k3, H2);
                  break a;
                }
            }
            k3 = k3.return;
          } while (k3 !== null);
        }
        t2 = Sh(t2);
      } catch (cj) {
        b2 = cj;
        continue;
      }
      break;
    } while (1);
  }
  function Mh(a) {
    a = gd.current;
    gd.current = Tc;
    return a === null ? Tc : a;
  }
  function Vg(a, b2) {
    a < ta && 2 < a && (ta = a);
    b2 !== null && a < Yb && 2 < a && (Yb = a, kd = b2);
  }
  function Kc(a) {
    a > Xb && (Xb = a);
  }
  function tj() {
    for (; t2 !== null; )
      t2 = Th(t2);
  }
  function rj() {
    for (; t2 !== null && !yj(); )
      t2 = Th(t2);
  }
  function Th(a) {
    var b2 = zj(a.alternate, a, P);
    a.memoizedProps = a.pendingProps;
    b2 === null && (b2 = Sh(a));
    Uh.current = null;
    return b2;
  }
  function Sh(a) {
    t2 = a;
    do {
      var b2 = t2.alternate;
      a = t2.return;
      if ((t2.effectTag & 2048) === 0) {
        b2 = hj(b2, t2, P);
        if (P === 1 || t2.childExpirationTime !== 1) {
          for (var c2 = 0, d2 = t2.child; d2 !== null; ) {
            var e2 = d2.expirationTime, f2 = d2.childExpirationTime;
            e2 > c2 && (c2 = e2);
            f2 > c2 && (c2 = f2);
            d2 = d2.sibling;
          }
          t2.childExpirationTime = c2;
        }
        if (b2 !== null)
          return b2;
        a !== null && (a.effectTag & 2048) === 0 && (a.firstEffect === null && (a.firstEffect = t2.firstEffect), t2.lastEffect !== null && (a.lastEffect !== null && (a.lastEffect.nextEffect = t2.firstEffect), a.lastEffect = t2.lastEffect), 1 < t2.effectTag && (a.lastEffect !== null ? a.lastEffect.nextEffect = t2 : a.firstEffect = t2, a.lastEffect = t2));
      } else {
        b2 = lj(t2);
        if (b2 !== null)
          return b2.effectTag &= 2047, b2;
        a !== null && (a.firstEffect = a.lastEffect = null, a.effectTag |= 2048);
      }
      b2 = t2.sibling;
      if (b2 !== null)
        return b2;
      t2 = a;
    } while (t2 !== null);
    F === Xa && (F = Xe);
    return null;
  }
  function Ve(a) {
    var b2 = a.expirationTime;
    a = a.childExpirationTime;
    return b2 > a ? b2 : a;
  }
  function ab(a) {
    var b2 = Cc();
    Da(99, Aj.bind(null, a, b2));
    return null;
  }
  function Aj(a, b2) {
    do
      xb();
    while (Zb !== null);
    if ((p2 & (ca | ma)) !== H)
      throw Error(k2(327));
    var c2 = a.finishedWork, d2 = a.finishedExpirationTime;
    if (c2 === null)
      return null;
    a.finishedWork = null;
    a.finishedExpirationTime = 0;
    if (c2 === a.current)
      throw Error(k2(177));
    a.callbackNode = null;
    a.callbackExpirationTime = 0;
    a.callbackPriority = 90;
    a.nextKnownPendingLevel = 0;
    var e2 = Ve(c2);
    a.firstPendingTime = e2;
    d2 <= a.lastSuspendedTime ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : d2 <= a.firstSuspendedTime && (a.firstSuspendedTime = d2 - 1);
    d2 <= a.lastPingedTime && (a.lastPingedTime = 0);
    d2 <= a.lastExpiredTime && (a.lastExpiredTime = 0);
    a === U && (t2 = U = null, P = 0);
    1 < c2.effectTag ? c2.lastEffect !== null ? (c2.lastEffect.nextEffect = c2, e2 = c2.firstEffect) : e2 = c2 : e2 = c2.firstEffect;
    if (e2 !== null) {
      var f2 = p2;
      p2 |= ma;
      Uh.current = null;
      Ze = tc;
      var g2 = kg();
      if (Xd(g2)) {
        if ("selectionStart" in g2)
          var h2 = {start: g2.selectionStart, end: g2.selectionEnd};
        else
          a: {
            h2 = (h2 = g2.ownerDocument) && h2.defaultView || window;
            var m2 = h2.getSelection && h2.getSelection();
            if (m2 && m2.rangeCount !== 0) {
              h2 = m2.anchorNode;
              var n2 = m2.anchorOffset, q3 = m2.focusNode;
              m2 = m2.focusOffset;
              try {
                h2.nodeType, q3.nodeType;
              } catch (sb) {
                h2 = null;
                break a;
              }
              var ba = 0, w3 = -1, y3 = -1, B2 = 0, D2 = 0, r2 = g2, z3 = null;
              b:
                for (; ; ) {
                  for (var v2; ; ) {
                    r2 !== h2 || n2 !== 0 && r2.nodeType !== 3 || (w3 = ba + n2);
                    r2 !== q3 || m2 !== 0 && r2.nodeType !== 3 || (y3 = ba + m2);
                    r2.nodeType === 3 && (ba += r2.nodeValue.length);
                    if ((v2 = r2.firstChild) === null)
                      break;
                    z3 = r2;
                    r2 = v2;
                  }
                  for (; ; ) {
                    if (r2 === g2)
                      break b;
                    z3 === h2 && ++B2 === n2 && (w3 = ba);
                    z3 === q3 && ++D2 === m2 && (y3 = ba);
                    if ((v2 = r2.nextSibling) !== null)
                      break;
                    r2 = z3;
                    z3 = r2.parentNode;
                  }
                  r2 = v2;
                }
              h2 = w3 === -1 || y3 === -1 ? null : {start: w3, end: y3};
            } else
              h2 = null;
          }
        h2 = h2 || {start: 0, end: 0};
      } else
        h2 = null;
      $e = {activeElementDetached: null, focusedElem: g2, selectionRange: h2};
      tc = false;
      l2 = e2;
      do
        try {
          Bj();
        } catch (sb) {
          if (l2 === null)
            throw Error(k2(330));
          Za(l2, sb);
          l2 = l2.nextEffect;
        }
      while (l2 !== null);
      l2 = e2;
      do
        try {
          for (g2 = a, h2 = b2; l2 !== null; ) {
            var x2 = l2.effectTag;
            x2 & 16 && Wb(l2.stateNode, "");
            if (x2 & 128) {
              var A2 = l2.alternate;
              if (A2 !== null) {
                var u = A2.ref;
                u !== null && (typeof u === "function" ? u(null) : u.current = null);
              }
            }
            switch (x2 & 1038) {
              case 2:
                Gh(l2);
                l2.effectTag &= -3;
                break;
              case 6:
                Gh(l2);
                l2.effectTag &= -3;
                Qe(l2.alternate, l2);
                break;
              case 1024:
                l2.effectTag &= -1025;
                break;
              case 1028:
                l2.effectTag &= -1025;
                Qe(l2.alternate, l2);
                break;
              case 4:
                Qe(l2.alternate, l2);
                break;
              case 8:
                n2 = l2, Dh(g2, n2, h2), Eh(n2);
            }
            l2 = l2.nextEffect;
          }
        } catch (sb) {
          if (l2 === null)
            throw Error(k2(330));
          Za(l2, sb);
          l2 = l2.nextEffect;
        }
      while (l2 !== null);
      u = $e;
      A2 = kg();
      x2 = u.focusedElem;
      h2 = u.selectionRange;
      if (A2 !== x2 && x2 && x2.ownerDocument && jg(x2.ownerDocument.documentElement, x2)) {
        h2 !== null && Xd(x2) && (A2 = h2.start, u = h2.end, u === void 0 && (u = A2), "selectionStart" in x2 ? (x2.selectionStart = A2, x2.selectionEnd = Math.min(u, x2.value.length)) : (u = (A2 = x2.ownerDocument || document) && A2.defaultView || window, u.getSelection && (u = u.getSelection(), n2 = x2.textContent.length, g2 = Math.min(h2.start, n2), h2 = h2.end === void 0 ? g2 : Math.min(h2.end, n2), !u.extend && g2 > h2 && (n2 = h2, h2 = g2, g2 = n2), n2 = ig(x2, g2), q3 = ig(x2, h2), n2 && q3 && (u.rangeCount !== 1 || u.anchorNode !== n2.node || u.anchorOffset !== n2.offset || u.focusNode !== q3.node || u.focusOffset !== q3.offset) && (A2 = A2.createRange(), A2.setStart(n2.node, n2.offset), u.removeAllRanges(), g2 > h2 ? (u.addRange(A2), u.extend(q3.node, q3.offset)) : (A2.setEnd(q3.node, q3.offset), u.addRange(A2))))));
        A2 = [];
        for (u = x2; u = u.parentNode; )
          u.nodeType === 1 && A2.push({element: u, left: u.scrollLeft, top: u.scrollTop});
        typeof x2.focus === "function" && x2.focus();
        for (x2 = 0; x2 < A2.length; x2++)
          u = A2[x2], u.element.scrollLeft = u.left, u.element.scrollTop = u.top;
      }
      tc = !!Ze;
      $e = Ze = null;
      a.current = c2;
      l2 = e2;
      do
        try {
          for (x2 = a; l2 !== null; ) {
            var F2 = l2.effectTag;
            F2 & 36 && oj(x2, l2.alternate, l2);
            if (F2 & 128) {
              A2 = void 0;
              var E2 = l2.ref;
              if (E2 !== null) {
                var G2 = l2.stateNode;
                switch (l2.tag) {
                  case 5:
                    A2 = G2;
                    break;
                  default:
                    A2 = G2;
                }
                typeof E2 === "function" ? E2(A2) : E2.current = A2;
              }
            }
            l2 = l2.nextEffect;
          }
        } catch (sb) {
          if (l2 === null)
            throw Error(k2(330));
          Za(l2, sb);
          l2 = l2.nextEffect;
        }
      while (l2 !== null);
      l2 = null;
      Cj();
      p2 = f2;
    } else
      a.current = c2;
    if (ld)
      ld = false, Zb = a, $b = b2;
    else
      for (l2 = e2; l2 !== null; )
        b2 = l2.nextEffect, l2.nextEffect = null, l2 = b2;
    b2 = a.firstPendingTime;
    b2 === 0 && (La = null);
    b2 === 1073741823 ? a === af ? ac++ : (ac = 0, af = a) : ac = 0;
    typeof bf === "function" && bf(c2.stateNode, d2);
    V(a);
    if (cd)
      throw cd = false, a = Se, Se = null, a;
    if ((p2 & Ye) !== H)
      return null;
    ha();
    return null;
  }
  function Bj() {
    for (; l2 !== null; ) {
      var a = l2.effectTag;
      (a & 256) !== 0 && nj(l2.alternate, l2);
      (a & 512) === 0 || ld || (ld = true, Ng(97, function() {
        xb();
        return null;
      }));
      l2 = l2.nextEffect;
    }
  }
  function xb() {
    if ($b !== 90) {
      var a = 97 < $b ? 97 : $b;
      $b = 90;
      return Da(a, Dj);
    }
  }
  function Dj() {
    if (Zb === null)
      return false;
    var a = Zb;
    Zb = null;
    if ((p2 & (ca | ma)) !== H)
      throw Error(k2(331));
    var b2 = p2;
    p2 |= ma;
    for (a = a.current.firstEffect; a !== null; ) {
      try {
        var c2 = a;
        if ((c2.effectTag & 512) !== 0)
          switch (c2.tag) {
            case 0:
            case 11:
            case 15:
            case 22:
              Ah(5, c2), Bh(5, c2);
          }
      } catch (d2) {
        if (a === null)
          throw Error(k2(330));
        Za(a, d2);
      }
      c2 = a.nextEffect;
      a.nextEffect = null;
      a = c2;
    }
    p2 = b2;
    ha();
    return true;
  }
  function Vh(a, b2, c2) {
    b2 = Le(c2, b2);
    b2 = Ih(a, b2, 1073741823);
    Fa(a, b2);
    a = ed(a, 1073741823);
    a !== null && V(a);
  }
  function Za(a, b2) {
    if (a.tag === 3)
      Vh(a, a, b2);
    else
      for (var c2 = a.return; c2 !== null; ) {
        if (c2.tag === 3) {
          Vh(c2, a, b2);
          break;
        } else if (c2.tag === 1) {
          var d2 = c2.stateNode;
          if (typeof c2.type.getDerivedStateFromError === "function" || typeof d2.componentDidCatch === "function" && (La === null || !La.has(d2))) {
            a = Le(b2, a);
            a = Jh(c2, a, 1073741823);
            Fa(c2, a);
            c2 = ed(c2, 1073741823);
            c2 !== null && V(c2);
            break;
          }
        }
        c2 = c2.return;
      }
  }
  function xj(a, b2, c2) {
    var d2 = a.pingCache;
    d2 !== null && d2.delete(b2);
    U === a && P === c2 ? F === bd || F === ad && ta === 1073741823 && Y() - Re < Ph ? $a(a, P) : jd = true : Kh(a, c2) && (b2 = a.lastPingedTime, b2 !== 0 && b2 < c2 || (a.lastPingedTime = c2, V(a)));
  }
  function qj(a, b2) {
    var c2 = a.stateNode;
    c2 !== null && c2.delete(b2);
    b2 = 0;
    b2 === 0 && (b2 = ka(), b2 = Va(b2, a, null));
    a = ed(a, b2);
    a !== null && V(a);
  }
  function Ej(a) {
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined")
      return false;
    var b2 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (b2.isDisabled || !b2.supportsFiber)
      return true;
    try {
      var c2 = b2.inject(a);
      bf = function(a2, e2) {
        try {
          b2.onCommitFiberRoot(c2, a2, void 0, (a2.current.effectTag & 64) === 64);
        } catch (f2) {
        }
      };
      Ne = function(a2) {
        try {
          b2.onCommitFiberUnmount(c2, a2);
        } catch (e2) {
        }
      };
    } catch (d2) {
    }
    return true;
  }
  function Fj(a, b2, c2, d2) {
    this.tag = a;
    this.key = c2;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = b2;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = d2;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }
  function Ge(a) {
    a = a.prototype;
    return !(!a || !a.isReactComponent);
  }
  function Gj(a) {
    if (typeof a === "function")
      return Ge(a) ? 1 : 0;
    if (a !== void 0 && a !== null) {
      a = a.$$typeof;
      if (a === rd)
        return 11;
      if (a === sd)
        return 14;
    }
    return 2;
  }
  function Sa(a, b2) {
    var c2 = a.alternate;
    c2 === null ? (c2 = la(a.tag, b2, a.key, a.mode), c2.elementType = a.elementType, c2.type = a.type, c2.stateNode = a.stateNode, c2.alternate = a, a.alternate = c2) : (c2.pendingProps = b2, c2.effectTag = 0, c2.nextEffect = null, c2.firstEffect = null, c2.lastEffect = null);
    c2.childExpirationTime = a.childExpirationTime;
    c2.expirationTime = a.expirationTime;
    c2.child = a.child;
    c2.memoizedProps = a.memoizedProps;
    c2.memoizedState = a.memoizedState;
    c2.updateQueue = a.updateQueue;
    b2 = a.dependencies;
    c2.dependencies = b2 === null ? null : {expirationTime: b2.expirationTime, firstContext: b2.firstContext, responders: b2.responders};
    c2.sibling = a.sibling;
    c2.index = a.index;
    c2.ref = a.ref;
    return c2;
  }
  function Oc(a, b2, c2, d2, e2, f2) {
    var g2 = 2;
    d2 = a;
    if (typeof a === "function")
      Ge(a) && (g2 = 1);
    else if (typeof a === "string")
      g2 = 5;
    else
      a:
        switch (a) {
          case Ma:
            return Ha(c2.children, e2, f2, b2);
          case Hj:
            g2 = 8;
            e2 |= 7;
            break;
          case of:
            g2 = 8;
            e2 |= 1;
            break;
          case ic:
            return a = la(12, c2, b2, e2 | 8), a.elementType = ic, a.type = ic, a.expirationTime = f2, a;
          case jc:
            return a = la(13, c2, b2, e2), a.type = jc, a.elementType = jc, a.expirationTime = f2, a;
          case qd:
            return a = la(19, c2, b2, e2), a.elementType = qd, a.expirationTime = f2, a;
          default:
            if (typeof a === "object" && a !== null)
              switch (a.$$typeof) {
                case qf:
                  g2 = 10;
                  break a;
                case pf:
                  g2 = 9;
                  break a;
                case rd:
                  g2 = 11;
                  break a;
                case sd:
                  g2 = 14;
                  break a;
                case sf:
                  g2 = 16;
                  d2 = null;
                  break a;
                case rf:
                  g2 = 22;
                  break a;
              }
            throw Error(k2(130, a == null ? a : typeof a, ""));
        }
    b2 = la(g2, c2, b2, e2);
    b2.elementType = a;
    b2.type = d2;
    b2.expirationTime = f2;
    return b2;
  }
  function Ha(a, b2, c2, d2) {
    a = la(7, a, d2, b2);
    a.expirationTime = c2;
    return a;
  }
  function qe(a, b2, c2) {
    a = la(6, a, null, b2);
    a.expirationTime = c2;
    return a;
  }
  function re(a, b2, c2) {
    b2 = la(4, a.children !== null ? a.children : [], a.key, b2);
    b2.expirationTime = c2;
    b2.stateNode = {containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation};
    return b2;
  }
  function Ij(a, b2, c2) {
    this.tag = b2;
    this.current = null;
    this.containerInfo = a;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = c2;
    this.callbackNode = null;
    this.callbackPriority = 90;
    this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0;
  }
  function Kh(a, b2) {
    var c2 = a.firstSuspendedTime;
    a = a.lastSuspendedTime;
    return c2 !== 0 && c2 >= b2 && a <= b2;
  }
  function Ya(a, b2) {
    var c2 = a.firstSuspendedTime, d2 = a.lastSuspendedTime;
    c2 < b2 && (a.firstSuspendedTime = b2);
    if (d2 > b2 || c2 === 0)
      a.lastSuspendedTime = b2;
    b2 <= a.lastPingedTime && (a.lastPingedTime = 0);
    b2 <= a.lastExpiredTime && (a.lastExpiredTime = 0);
  }
  function yh(a, b2) {
    b2 > a.firstPendingTime && (a.firstPendingTime = b2);
    var c2 = a.firstSuspendedTime;
    c2 !== 0 && (b2 >= c2 ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : b2 >= a.lastSuspendedTime && (a.lastSuspendedTime = b2 + 1), b2 > a.nextKnownPendingLevel && (a.nextKnownPendingLevel = b2));
  }
  function Ue(a, b2) {
    var c2 = a.lastExpiredTime;
    if (c2 === 0 || c2 > b2)
      a.lastExpiredTime = b2;
  }
  function md(a, b2, c2, d2) {
    var e2 = b2.current, f2 = ka(), g2 = Vb.suspense;
    f2 = Va(f2, e2, g2);
    a:
      if (c2) {
        c2 = c2._reactInternalFiber;
        b: {
          if (Na(c2) !== c2 || c2.tag !== 1)
            throw Error(k2(170));
          var h2 = c2;
          do {
            switch (h2.tag) {
              case 3:
                h2 = h2.stateNode.context;
                break b;
              case 1:
                if (N(h2.type)) {
                  h2 = h2.stateNode.__reactInternalMemoizedMergedChildContext;
                  break b;
                }
            }
            h2 = h2.return;
          } while (h2 !== null);
          throw Error(k2(171));
        }
        if (c2.tag === 1) {
          var m2 = c2.type;
          if (N(m2)) {
            c2 = Gg(c2, m2, h2);
            break a;
          }
        }
        c2 = h2;
      } else
        c2 = Ca;
    b2.context === null ? b2.context = c2 : b2.pendingContext = c2;
    b2 = Ea(f2, g2);
    b2.payload = {element: a};
    d2 = d2 === void 0 ? null : d2;
    d2 !== null && (b2.callback = d2);
    Fa(e2, b2);
    Ja(e2, f2);
    return f2;
  }
  function cf(a) {
    a = a.current;
    if (!a.child)
      return null;
    switch (a.child.tag) {
      case 5:
        return a.child.stateNode;
      default:
        return a.child.stateNode;
    }
  }
  function Wh(a, b2) {
    a = a.memoizedState;
    a !== null && a.dehydrated !== null && a.retryTime < b2 && (a.retryTime = b2);
  }
  function df(a, b2) {
    Wh(a, b2);
    (a = a.alternate) && Wh(a, b2);
  }
  function ef(a, b2, c2) {
    c2 = c2 != null && c2.hydrate === true;
    var d2 = new Ij(a, b2, c2), e2 = la(3, null, null, b2 === 2 ? 7 : b2 === 1 ? 3 : 0);
    d2.current = e2;
    e2.stateNode = d2;
    ne(e2);
    a[Lb] = d2.current;
    c2 && b2 !== 0 && xi(a, a.nodeType === 9 ? a : a.ownerDocument);
    this._internalRoot = d2;
  }
  function bc(a) {
    return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11 && (a.nodeType !== 8 || a.nodeValue !== " react-mount-point-unstable "));
  }
  function Jj(a, b2) {
    b2 || (b2 = a ? a.nodeType === 9 ? a.documentElement : a.firstChild : null, b2 = !(!b2 || b2.nodeType !== 1 || !b2.hasAttribute("data-reactroot")));
    if (!b2)
      for (var c2; c2 = a.lastChild; )
        a.removeChild(c2);
    return new ef(a, 0, b2 ? {hydrate: true} : void 0);
  }
  function nd(a, b2, c2, d2, e2) {
    var f2 = c2._reactRootContainer;
    if (f2) {
      var g2 = f2._internalRoot;
      if (typeof e2 === "function") {
        var h2 = e2;
        e2 = function() {
          var a2 = cf(g2);
          h2.call(a2);
        };
      }
      md(b2, g2, a, e2);
    } else {
      f2 = c2._reactRootContainer = Jj(c2, d2);
      g2 = f2._internalRoot;
      if (typeof e2 === "function") {
        var m2 = e2;
        e2 = function() {
          var a2 = cf(g2);
          m2.call(a2);
        };
      }
      Rh(function() {
        md(b2, g2, a, e2);
      });
    }
    return cf(g2);
  }
  function Kj(a, b2, c2) {
    var d2 = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return {$$typeof: cb, key: d2 == null ? null : "" + d2, children: a, containerInfo: b2, implementation: c2};
  }
  function Xh(a, b2) {
    var c2 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!bc(b2))
      throw Error(k2(200));
    return Kj(a, b2, null, c2);
  }
  if (!ea)
    throw Error(k2(227));
  var ki = function(a, b2, c2, d2, e2, f2, g2, h2, m2) {
    var n2 = Array.prototype.slice.call(arguments, 3);
    try {
      b2.apply(c2, n2);
    } catch (C) {
      this.onError(C);
    }
  }, yb = false, gc = null, hc = false, pd = null, li = {onError: function(a) {
    yb = true;
    gc = a;
  }}, xd = null, xf = null, mf = null, da = ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  da.hasOwnProperty("ReactCurrentDispatcher") || (da.ReactCurrentDispatcher = {current: null});
  da.hasOwnProperty("ReactCurrentBatchConfig") || (da.ReactCurrentBatchConfig = {suspense: null});
  var oi = /^(.*)[\\\/]/, Q = typeof Symbol === "function" && Symbol.for, Pc = Q ? Symbol.for("react.element") : 60103, cb = Q ? Symbol.for("react.portal") : 60106, Ma = Q ? Symbol.for("react.fragment") : 60107, of = Q ? Symbol.for("react.strict_mode") : 60108, ic = Q ? Symbol.for("react.profiler") : 60114, qf = Q ? Symbol.for("react.provider") : 60109, pf = Q ? Symbol.for("react.context") : 60110, Hj = Q ? Symbol.for("react.concurrent_mode") : 60111, rd = Q ? Symbol.for("react.forward_ref") : 60112, jc = Q ? Symbol.for("react.suspense") : 60113, qd = Q ? Symbol.for("react.suspense_list") : 60120, sd = Q ? Symbol.for("react.memo") : 60115, sf = Q ? Symbol.for("react.lazy") : 60116, rf = Q ? Symbol.for("react.block") : 60121, nf = typeof Symbol === "function" && Symbol.iterator, kc = null, db = {}, lc = [], ud = {}, eb = {}, vd = {}, wa = !(typeof window === "undefined" || typeof window.document === "undefined" || typeof window.document.createElement === "undefined"), M = ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.assign, wd = null, fb = null, gb = null, ee = function(a, b2) {
    return a(b2);
  }, eg = function(a, b2, c2, d2, e2) {
    return a(b2, c2, d2, e2);
  }, zd = function() {
  }, Bf = ee, Oa = false, Ad = false, Z = ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.Scheduler, Lj = Z.unstable_cancelCallback, ff = Z.unstable_now, $f = Z.unstable_scheduleCallback, Mj = Z.unstable_shouldYield, Yh = Z.unstable_requestPaint, Pd = Z.unstable_runWithPriority, Nj = Z.unstable_getCurrentPriorityLevel, Oj = Z.unstable_ImmediatePriority, Zh = Z.unstable_UserBlockingPriority, ag = Z.unstable_NormalPriority, Pj = Z.unstable_LowPriority, Qj = Z.unstable_IdlePriority, qi = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, Cf = Object.prototype.hasOwnProperty, Ef = {}, Df = {}, E = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
    E[a] = new L(a, 0, false, a, null, false);
  });
  [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
    var b2 = a[0];
    E[b2] = new L(b2, 1, false, a[1], null, false);
  });
  ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
    E[a] = new L(a, 2, false, a.toLowerCase(), null, false);
  });
  ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
    E[a] = new L(a, 2, false, a, null, false);
  });
  "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
    E[a] = new L(a, 3, false, a.toLowerCase(), null, false);
  });
  ["checked", "multiple", "muted", "selected"].forEach(function(a) {
    E[a] = new L(a, 3, true, a, null, false);
  });
  ["capture", "download"].forEach(function(a) {
    E[a] = new L(a, 4, false, a, null, false);
  });
  ["cols", "rows", "size", "span"].forEach(function(a) {
    E[a] = new L(a, 6, false, a, null, false);
  });
  ["rowSpan", "start"].forEach(function(a) {
    E[a] = new L(a, 5, false, a.toLowerCase(), null, false);
  });
  var gf = /[\-:]([a-z])/g, hf = function(a) {
    return a[1].toUpperCase();
  };
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
    var b2 = a.replace(gf, hf);
    E[b2] = new L(b2, 1, false, a, null, false);
  });
  "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
    var b2 = a.replace(gf, hf);
    E[b2] = new L(b2, 1, false, a, "http://www.w3.org/1999/xlink", false);
  });
  ["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
    var b2 = a.replace(gf, hf);
    E[b2] = new L(b2, 1, false, a, "http://www.w3.org/XML/1998/namespace", false);
  });
  ["tabIndex", "crossOrigin"].forEach(function(a) {
    E[a] = new L(a, 1, false, a.toLowerCase(), null, false);
  });
  E.xlinkHref = new L("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true);
  ["src", "href", "action", "formAction"].forEach(function(a) {
    E[a] = new L(a, 1, false, a.toLowerCase(), null, true);
  });
  var od, xh = function(a) {
    return typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction ? function(b2, c2, d2, e2) {
      MSApp.execUnsafeLocalFunction(function() {
        return a(b2, c2, d2, e2);
      });
    } : a;
  }(function(a, b2) {
    if (a.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a)
      a.innerHTML = b2;
    else {
      od = od || document.createElement("div");
      od.innerHTML = "<svg>" + b2.valueOf().toString() + "</svg>";
      for (b2 = od.firstChild; a.firstChild; )
        a.removeChild(a.firstChild);
      for (; b2.firstChild; )
        a.appendChild(b2.firstChild);
    }
  }), Wb = function(a, b2) {
    if (b2) {
      var c2 = a.firstChild;
      if (c2 && c2 === a.lastChild && c2.nodeType === 3) {
        c2.nodeValue = b2;
        return;
      }
    }
    a.textContent = b2;
  }, ib = {animationend: nc("Animation", "AnimationEnd"), animationiteration: nc("Animation", "AnimationIteration"), animationstart: nc("Animation", "AnimationStart"), transitionend: nc("Transition", "TransitionEnd")}, Id = {}, Of = {};
  wa && (Of = document.createElement("div").style, "AnimationEvent" in window || (delete ib.animationend.animation, delete ib.animationiteration.animation, delete ib.animationstart.animation), "TransitionEvent" in window || delete ib.transitionend.transition);
  var $h = oc("animationend"), ai = oc("animationiteration"), bi = oc("animationstart"), ci = oc("transitionend"), Db = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Pf = new (typeof WeakMap === "function" ? WeakMap : Map)(), Ab = null, wi = function(a) {
    if (a) {
      var b2 = a._dispatchListeners, c2 = a._dispatchInstances;
      if (Array.isArray(b2))
        for (var d2 = 0; d2 < b2.length && !a.isPropagationStopped(); d2++)
          lf(a, b2[d2], c2[d2]);
      else
        b2 && lf(a, b2, c2);
      a._dispatchListeners = null;
      a._dispatchInstances = null;
      a.isPersistent() || a.constructor.release(a);
    }
  }, qc = [], Rd = false, fa = [], xa = null, ya = null, za = null, Eb = new Map(), Fb = new Map(), Jb = [], Nd = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "), yi = "focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" "), dg = {}, cg = new Map(), Td = new Map(), Rj = [
    "abort",
    "abort",
    $h,
    "animationEnd",
    ai,
    "animationIteration",
    bi,
    "animationStart",
    "canplay",
    "canPlay",
    "canplaythrough",
    "canPlayThrough",
    "durationchange",
    "durationChange",
    "emptied",
    "emptied",
    "encrypted",
    "encrypted",
    "ended",
    "ended",
    "error",
    "error",
    "gotpointercapture",
    "gotPointerCapture",
    "load",
    "load",
    "loadeddata",
    "loadedData",
    "loadedmetadata",
    "loadedMetadata",
    "loadstart",
    "loadStart",
    "lostpointercapture",
    "lostPointerCapture",
    "playing",
    "playing",
    "progress",
    "progress",
    "seeking",
    "seeking",
    "stalled",
    "stalled",
    "suspend",
    "suspend",
    "timeupdate",
    "timeUpdate",
    ci,
    "transitionEnd",
    "waiting",
    "waiting"
  ];
  Sd("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0);
  Sd("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1);
  Sd(Rj, 2);
  (function(a, b2) {
    for (var c2 = 0; c2 < a.length; c2++)
      Td.set(a[c2], b2);
  })("change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), 0);
  var Hi = Zh, Gi = Pd, tc = true, Kb = {
    animationIterationCount: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    columns: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridArea: true,
    gridRow: true,
    gridRowEnd: true,
    gridRowSpan: true,
    gridRowStart: true,
    gridColumn: true,
    gridColumnEnd: true,
    gridColumnSpan: true,
    gridColumnStart: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true
  }, Sj = ["Webkit", "ms", "Moz", "O"];
  Object.keys(Kb).forEach(function(a) {
    Sj.forEach(function(b2) {
      b2 = b2 + a.charAt(0).toUpperCase() + a.substring(1);
      Kb[b2] = Kb[a];
    });
  });
  var Ii = M({menuitem: true}, {area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true}), ng = "$", og = "/$", $d = "$?", Zd = "$!", Ze = null, $e = null, We = typeof setTimeout === "function" ? setTimeout : void 0, vj = typeof clearTimeout === "function" ? clearTimeout : void 0, jf = Math.random().toString(36).slice(2), Aa = "__reactInternalInstance$" + jf, vc = "__reactEventHandlers$" + jf, Lb = "__reactContainere$" + jf, Ba = null, ce = null, wc = null;
  M(R.prototype, {preventDefault: function() {
    this.defaultPrevented = true;
    var a = this.nativeEvent;
    a && (a.preventDefault ? a.preventDefault() : typeof a.returnValue !== "unknown" && (a.returnValue = false), this.isDefaultPrevented = xc);
  }, stopPropagation: function() {
    var a = this.nativeEvent;
    a && (a.stopPropagation ? a.stopPropagation() : typeof a.cancelBubble !== "unknown" && (a.cancelBubble = true), this.isPropagationStopped = xc);
  }, persist: function() {
    this.isPersistent = xc;
  }, isPersistent: yc, destructor: function() {
    var a = this.constructor.Interface, b2;
    for (b2 in a)
      this[b2] = null;
    this.nativeEvent = this._targetInst = this.dispatchConfig = null;
    this.isPropagationStopped = this.isDefaultPrevented = yc;
    this._dispatchInstances = this._dispatchListeners = null;
  }});
  R.Interface = {type: null, target: null, currentTarget: function() {
    return null;
  }, eventPhase: null, bubbles: null, cancelable: null, timeStamp: function(a) {
    return a.timeStamp || Date.now();
  }, defaultPrevented: null, isTrusted: null};
  R.extend = function(a) {
    function b2() {
      return c2.apply(this, arguments);
    }
    var c2 = this, d2 = function() {
    };
    d2.prototype = c2.prototype;
    d2 = new d2();
    M(d2, b2.prototype);
    b2.prototype = d2;
    b2.prototype.constructor = b2;
    b2.Interface = M({}, c2.Interface, a);
    b2.extend = c2.extend;
    sg(b2);
    return b2;
  };
  sg(R);
  var Tj = R.extend({data: null}), Uj = R.extend({data: null}), Ni = [9, 13, 27, 32], de = wa && "CompositionEvent" in window, cc = null;
  wa && "documentMode" in document && (cc = document.documentMode);
  var Vj = wa && "TextEvent" in window && !cc, xg = wa && (!de || cc && 8 < cc && 11 >= cc), wg = String.fromCharCode(32), ua = {beforeInput: {phasedRegistrationNames: {bubbled: "onBeforeInput", captured: "onBeforeInputCapture"}, dependencies: ["compositionend", "keypress", "textInput", "paste"]}, compositionEnd: {phasedRegistrationNames: {bubbled: "onCompositionEnd", captured: "onCompositionEndCapture"}, dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ")}, compositionStart: {
    phasedRegistrationNames: {bubbled: "onCompositionStart", captured: "onCompositionStartCapture"},
    dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ")
  }, compositionUpdate: {phasedRegistrationNames: {bubbled: "onCompositionUpdate", captured: "onCompositionUpdateCapture"}, dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ")}}, vg = false, mb = false, Wj = {eventTypes: ua, extractEvents: function(a, b2, c2, d2, e2) {
    var f2;
    if (de)
      b: {
        switch (a) {
          case "compositionstart":
            var g2 = ua.compositionStart;
            break b;
          case "compositionend":
            g2 = ua.compositionEnd;
            break b;
          case "compositionupdate":
            g2 = ua.compositionUpdate;
            break b;
        }
        g2 = void 0;
      }
    else
      mb ? tg(a, c2) && (g2 = ua.compositionEnd) : a === "keydown" && c2.keyCode === 229 && (g2 = ua.compositionStart);
    g2 ? (xg && c2.locale !== "ko" && (mb || g2 !== ua.compositionStart ? g2 === ua.compositionEnd && mb && (f2 = rg()) : (Ba = d2, ce = "value" in Ba ? Ba.value : Ba.textContent, mb = true)), e2 = Tj.getPooled(g2, b2, c2, d2), f2 ? e2.data = f2 : (f2 = ug(c2), f2 !== null && (e2.data = f2)), lb(e2), f2 = e2) : f2 = null;
    (a = Vj ? Oi(a, c2) : Pi(a, c2)) ? (b2 = Uj.getPooled(ua.beforeInput, b2, c2, d2), b2.data = a, lb(b2)) : b2 = null;
    return f2 === null ? b2 : b2 === null ? f2 : [f2, b2];
  }}, Qi = {
    color: true,
    date: true,
    datetime: true,
    "datetime-local": true,
    email: true,
    month: true,
    number: true,
    password: true,
    range: true,
    search: true,
    tel: true,
    text: true,
    time: true,
    url: true,
    week: true
  }, Ag = {change: {phasedRegistrationNames: {bubbled: "onChange", captured: "onChangeCapture"}, dependencies: "blur change click focus input keydown keyup selectionchange".split(" ")}}, Mb = null, Nb = null, kf = false;
  wa && (kf = Tf("input") && (!document.documentMode || 9 < document.documentMode));
  var Xj = {eventTypes: Ag, _isInputEventSupported: kf, extractEvents: function(a, b2, c2, d2, e2) {
    e2 = b2 ? Pa(b2) : window;
    var f2 = e2.nodeName && e2.nodeName.toLowerCase();
    if (f2 === "select" || f2 === "input" && e2.type === "file")
      var g2 = Si;
    else if (yg(e2))
      if (kf)
        g2 = Wi;
      else {
        g2 = Ui;
        var h2 = Ti;
      }
    else
      (f2 = e2.nodeName) && f2.toLowerCase() === "input" && (e2.type === "checkbox" || e2.type === "radio") && (g2 = Vi);
    if (g2 && (g2 = g2(a, b2)))
      return zg(g2, c2, d2);
    h2 && h2(a, e2, b2);
    a === "blur" && (a = e2._wrapperState) && a.controlled && e2.type === "number" && Ed(e2, "number", e2.value);
  }}, dc = R.extend({view: null, detail: null}), Yi = {Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey"}, di = 0, ei = 0, fi = false, gi = false, ec = dc.extend({
    screenX: null,
    screenY: null,
    clientX: null,
    clientY: null,
    pageX: null,
    pageY: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    getModifierState: fe,
    button: null,
    buttons: null,
    relatedTarget: function(a) {
      return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);
    },
    movementX: function(a) {
      if ("movementX" in a)
        return a.movementX;
      var b2 = di;
      di = a.screenX;
      return fi ? a.type === "mousemove" ? a.screenX - b2 : 0 : (fi = true, 0);
    },
    movementY: function(a) {
      if ("movementY" in a)
        return a.movementY;
      var b2 = ei;
      ei = a.screenY;
      return gi ? a.type === "mousemove" ? a.screenY - b2 : 0 : (gi = true, 0);
    }
  }), hi = ec.extend({pointerId: null, width: null, height: null, pressure: null, tangentialPressure: null, tiltX: null, tiltY: null, twist: null, pointerType: null, isPrimary: null}), fc = {mouseEnter: {registrationName: "onMouseEnter", dependencies: ["mouseout", "mouseover"]}, mouseLeave: {registrationName: "onMouseLeave", dependencies: ["mouseout", "mouseover"]}, pointerEnter: {registrationName: "onPointerEnter", dependencies: ["pointerout", "pointerover"]}, pointerLeave: {registrationName: "onPointerLeave", dependencies: [
    "pointerout",
    "pointerover"
  ]}}, Yj = {eventTypes: fc, extractEvents: function(a, b2, c2, d2, e2) {
    var f2 = a === "mouseover" || a === "pointerover", g2 = a === "mouseout" || a === "pointerout";
    if (f2 && (e2 & 32) === 0 && (c2.relatedTarget || c2.fromElement) || !g2 && !f2)
      return null;
    f2 = d2.window === d2 ? d2 : (f2 = d2.ownerDocument) ? f2.defaultView || f2.parentWindow : window;
    if (g2) {
      if (g2 = b2, b2 = (b2 = c2.relatedTarget || c2.toElement) ? Bb(b2) : null, b2 !== null) {
        var h2 = Na(b2);
        if (b2 !== h2 || b2.tag !== 5 && b2.tag !== 6)
          b2 = null;
      }
    } else
      g2 = null;
    if (g2 === b2)
      return null;
    if (a === "mouseout" || a === "mouseover") {
      var m2 = ec;
      var n2 = fc.mouseLeave;
      var l3 = fc.mouseEnter;
      var k3 = "mouse";
    } else if (a === "pointerout" || a === "pointerover")
      m2 = hi, n2 = fc.pointerLeave, l3 = fc.pointerEnter, k3 = "pointer";
    a = g2 == null ? f2 : Pa(g2);
    f2 = b2 == null ? f2 : Pa(b2);
    n2 = m2.getPooled(n2, g2, c2, d2);
    n2.type = k3 + "leave";
    n2.target = a;
    n2.relatedTarget = f2;
    c2 = m2.getPooled(l3, b2, c2, d2);
    c2.type = k3 + "enter";
    c2.target = f2;
    c2.relatedTarget = a;
    d2 = g2;
    k3 = b2;
    if (d2 && k3)
      a: {
        m2 = d2;
        l3 = k3;
        g2 = 0;
        for (a = m2; a; a = pa(a))
          g2++;
        a = 0;
        for (b2 = l3; b2; b2 = pa(b2))
          a++;
        for (; 0 < g2 - a; )
          m2 = pa(m2), g2--;
        for (; 0 < a - g2; )
          l3 = pa(l3), a--;
        for (; g2--; ) {
          if (m2 === l3 || m2 === l3.alternate)
            break a;
          m2 = pa(m2);
          l3 = pa(l3);
        }
        m2 = null;
      }
    else
      m2 = null;
    l3 = m2;
    for (m2 = []; d2 && d2 !== l3; ) {
      g2 = d2.alternate;
      if (g2 !== null && g2 === l3)
        break;
      m2.push(d2);
      d2 = pa(d2);
    }
    for (d2 = []; k3 && k3 !== l3; ) {
      g2 = k3.alternate;
      if (g2 !== null && g2 === l3)
        break;
      d2.push(k3);
      k3 = pa(k3);
    }
    for (k3 = 0; k3 < m2.length; k3++)
      be(m2[k3], "bubbled", n2);
    for (k3 = d2.length; 0 < k3--; )
      be(d2[k3], "captured", c2);
    return (e2 & 64) === 0 ? [n2] : [n2, c2];
  }}, Qa = typeof Object.is === "function" ? Object.is : Zi, $i = Object.prototype.hasOwnProperty, Zj = wa && "documentMode" in document && 11 >= document.documentMode, Eg = {select: {
    phasedRegistrationNames: {bubbled: "onSelect", captured: "onSelectCapture"},
    dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")
  }}, nb = null, he = null, Pb = null, ge = false, ak = {eventTypes: Eg, extractEvents: function(a, b2, c2, d2, e2, f2) {
    e2 = f2 || (d2.window === d2 ? d2.document : d2.nodeType === 9 ? d2 : d2.ownerDocument);
    if (!(f2 = !e2)) {
      a: {
        e2 = Jd(e2);
        f2 = vd.onSelect;
        for (var g2 = 0; g2 < f2.length; g2++)
          if (!e2.has(f2[g2])) {
            e2 = false;
            break a;
          }
        e2 = true;
      }
      f2 = !e2;
    }
    if (f2)
      return null;
    e2 = b2 ? Pa(b2) : window;
    switch (a) {
      case "focus":
        if (yg(e2) || e2.contentEditable === "true")
          nb = e2, he = b2, Pb = null;
        break;
      case "blur":
        Pb = he = nb = null;
        break;
      case "mousedown":
        ge = true;
        break;
      case "contextmenu":
      case "mouseup":
      case "dragend":
        return ge = false, Dg(c2, d2);
      case "selectionchange":
        if (Zj)
          break;
      case "keydown":
      case "keyup":
        return Dg(c2, d2);
    }
    return null;
  }}, bk = R.extend({animationName: null, elapsedTime: null, pseudoElement: null}), ck = R.extend({clipboardData: function(a) {
    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
  }}), dk = dc.extend({relatedTarget: null}), ek = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, fk = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, gk = dc.extend({key: function(a) {
    if (a.key) {
      var b2 = ek[a.key] || a.key;
      if (b2 !== "Unidentified")
        return b2;
    }
    return a.type === "keypress" ? (a = Ac(a), a === 13 ? "Enter" : String.fromCharCode(a)) : a.type === "keydown" || a.type === "keyup" ? fk[a.keyCode] || "Unidentified" : "";
  }, location: null, ctrlKey: null, shiftKey: null, altKey: null, metaKey: null, repeat: null, locale: null, getModifierState: fe, charCode: function(a) {
    return a.type === "keypress" ? Ac(a) : 0;
  }, keyCode: function(a) {
    return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
  }, which: function(a) {
    return a.type === "keypress" ? Ac(a) : a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
  }}), hk = ec.extend({dataTransfer: null}), ik = dc.extend({touches: null, targetTouches: null, changedTouches: null, altKey: null, metaKey: null, ctrlKey: null, shiftKey: null, getModifierState: fe}), jk = R.extend({propertyName: null, elapsedTime: null, pseudoElement: null}), kk = ec.extend({deltaX: function(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  }, deltaY: function(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  }, deltaZ: null, deltaMode: null}), lk = {eventTypes: dg, extractEvents: function(a, b2, c2, d2, e2) {
    e2 = cg.get(a);
    if (!e2)
      return null;
    switch (a) {
      case "keypress":
        if (Ac(c2) === 0)
          return null;
      case "keydown":
      case "keyup":
        a = gk;
        break;
      case "blur":
      case "focus":
        a = dk;
        break;
      case "click":
        if (c2.button === 2)
          return null;
      case "auxclick":
      case "dblclick":
      case "mousedown":
      case "mousemove":
      case "mouseup":
      case "mouseout":
      case "mouseover":
      case "contextmenu":
        a = ec;
        break;
      case "drag":
      case "dragend":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "dragstart":
      case "drop":
        a = hk;
        break;
      case "touchcancel":
      case "touchend":
      case "touchmove":
      case "touchstart":
        a = ik;
        break;
      case $h:
      case ai:
      case bi:
        a = bk;
        break;
      case ci:
        a = jk;
        break;
      case "scroll":
        a = dc;
        break;
      case "wheel":
        a = kk;
        break;
      case "copy":
      case "cut":
      case "paste":
        a = ck;
        break;
      case "gotpointercapture":
      case "lostpointercapture":
      case "pointercancel":
      case "pointerdown":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "pointerup":
        a = hi;
        break;
      default:
        a = R;
    }
    b2 = a.getPooled(e2, b2, c2, d2);
    lb(b2);
    return b2;
  }};
  (function(a) {
    if (kc)
      throw Error(k2(101));
    kc = Array.prototype.slice.call(a);
    tf();
  })("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));
  (function(a, b2, c2) {
    xd = a;
    xf = b2;
    mf = c2;
  })(ae, Hb, Pa);
  vf({SimpleEventPlugin: lk, EnterLeaveEventPlugin: Yj, ChangeEventPlugin: Xj, SelectEventPlugin: ak, BeforeInputEventPlugin: Wj});
  var ie = [], ob = -1, Ca = {}, B = {current: Ca}, G = {current: false}, Ra = Ca, bj = Pd, je = $f, Rg = Lj, aj = Nj, Dc = Oj, Ig = Zh, Jg = ag, Kg = Pj, Lg = Qj, Qg = {}, yj = Mj, Cj = Yh !== void 0 ? Yh : function() {
  }, qa = null, Ec = null, ke = false, ii = ff(), Y = 1e4 > ii ? ff : function() {
    return ff() - ii;
  }, Ic = {current: null}, Hc = null, qb = null, Gc = null, Tg = 0, Jc = 2, Ga = false, Vb = da.ReactCurrentBatchConfig, $g = new ea.Component().refs, Mc = {isMounted: function(a) {
    return (a = a._reactInternalFiber) ? Na(a) === a : false;
  }, enqueueSetState: function(a, b2, c2) {
    a = a._reactInternalFiber;
    var d2 = ka(), e2 = Vb.suspense;
    d2 = Va(d2, a, e2);
    e2 = Ea(d2, e2);
    e2.payload = b2;
    c2 !== void 0 && c2 !== null && (e2.callback = c2);
    Fa(a, e2);
    Ja(a, d2);
  }, enqueueReplaceState: function(a, b2, c2) {
    a = a._reactInternalFiber;
    var d2 = ka(), e2 = Vb.suspense;
    d2 = Va(d2, a, e2);
    e2 = Ea(d2, e2);
    e2.tag = 1;
    e2.payload = b2;
    c2 !== void 0 && c2 !== null && (e2.callback = c2);
    Fa(a, e2);
    Ja(a, d2);
  }, enqueueForceUpdate: function(a, b2) {
    a = a._reactInternalFiber;
    var c2 = ka(), d2 = Vb.suspense;
    c2 = Va(c2, a, d2);
    d2 = Ea(c2, d2);
    d2.tag = Jc;
    b2 !== void 0 && b2 !== null && (d2.callback = b2);
    Fa(a, d2);
    Ja(a, c2);
  }}, Qc = Array.isArray, wb = ah(true), Fe = ah(false), Sb = {}, ja = {current: Sb}, Ub = {current: Sb}, Tb = {current: Sb}, D = {current: 0}, Sc = da.ReactCurrentDispatcher, X = da.ReactCurrentBatchConfig, Ia = 0, z2 = null, K = null, J = null, Uc = false, Tc = {
    readContext: W,
    useCallback: S,
    useContext: S,
    useEffect: S,
    useImperativeHandle: S,
    useLayoutEffect: S,
    useMemo: S,
    useReducer: S,
    useRef: S,
    useState: S,
    useDebugValue: S,
    useResponder: S,
    useDeferredValue: S,
    useTransition: S
  }, dj = {readContext: W, useCallback: ih, useContext: W, useEffect: eh, useImperativeHandle: function(a, b2, c2) {
    c2 = c2 !== null && c2 !== void 0 ? c2.concat([a]) : null;
    return ze(4, 2, gh.bind(null, b2, a), c2);
  }, useLayoutEffect: function(a, b2) {
    return ze(4, 2, a, b2);
  }, useMemo: function(a, b2) {
    var c2 = ub();
    b2 = b2 === void 0 ? null : b2;
    a = a();
    c2.memoizedState = [a, b2];
    return a;
  }, useReducer: function(a, b2, c2) {
    var d2 = ub();
    b2 = c2 !== void 0 ? c2(b2) : b2;
    d2.memoizedState = d2.baseState = b2;
    a = d2.queue = {pending: null, dispatch: null, lastRenderedReducer: a, lastRenderedState: b2};
    a = a.dispatch = ch.bind(null, z2, a);
    return [d2.memoizedState, a];
  }, useRef: function(a) {
    var b2 = ub();
    a = {current: a};
    return b2.memoizedState = a;
  }, useState: xe, useDebugValue: Be, useResponder: ue, useDeferredValue: function(a, b2) {
    var c2 = xe(a), d2 = c2[0], e2 = c2[1];
    eh(function() {
      var c3 = X.suspense;
      X.suspense = b2 === void 0 ? null : b2;
      try {
        e2(a);
      } finally {
        X.suspense = c3;
      }
    }, [a, b2]);
    return d2;
  }, useTransition: function(a) {
    var b2 = xe(false), c2 = b2[0];
    b2 = b2[1];
    return [ih(Ce.bind(null, b2, a), [b2, a]), c2];
  }}, ej = {readContext: W, useCallback: Yc, useContext: W, useEffect: Xc, useImperativeHandle: hh, useLayoutEffect: fh, useMemo: jh, useReducer: Vc, useRef: dh, useState: function(a) {
    return Vc(Ua);
  }, useDebugValue: Be, useResponder: ue, useDeferredValue: function(a, b2) {
    var c2 = Vc(Ua), d2 = c2[0], e2 = c2[1];
    Xc(function() {
      var c3 = X.suspense;
      X.suspense = b2 === void 0 ? null : b2;
      try {
        e2(a);
      } finally {
        X.suspense = c3;
      }
    }, [a, b2]);
    return d2;
  }, useTransition: function(a) {
    var b2 = Vc(Ua), c2 = b2[0];
    b2 = b2[1];
    return [Yc(Ce.bind(null, b2, a), [b2, a]), c2];
  }}, fj = {readContext: W, useCallback: Yc, useContext: W, useEffect: Xc, useImperativeHandle: hh, useLayoutEffect: fh, useMemo: jh, useReducer: Wc, useRef: dh, useState: function(a) {
    return Wc(Ua);
  }, useDebugValue: Be, useResponder: ue, useDeferredValue: function(a, b2) {
    var c2 = Wc(Ua), d2 = c2[0], e2 = c2[1];
    Xc(function() {
      var c3 = X.suspense;
      X.suspense = b2 === void 0 ? null : b2;
      try {
        e2(a);
      } finally {
        X.suspense = c3;
      }
    }, [a, b2]);
    return d2;
  }, useTransition: function(a) {
    var b2 = Wc(Ua), c2 = b2[0];
    b2 = b2[1];
    return [Yc(Ce.bind(null, b2, a), [b2, a]), c2];
  }}, ra = null, Ka = null, Wa = false, gj = da.ReactCurrentOwner, ia = false, Je = {dehydrated: null, retryTime: 0};
  var jj = function(a, b2, c2, d2) {
    for (c2 = b2.child; c2 !== null; ) {
      if (c2.tag === 5 || c2.tag === 6)
        a.appendChild(c2.stateNode);
      else if (c2.tag !== 4 && c2.child !== null) {
        c2.child.return = c2;
        c2 = c2.child;
        continue;
      }
      if (c2 === b2)
        break;
      for (; c2.sibling === null; ) {
        if (c2.return === null || c2.return === b2)
          return;
        c2 = c2.return;
      }
      c2.sibling.return = c2.return;
      c2 = c2.sibling;
    }
  };
  var ij = function(a, b2, c2, d2, e2) {
    var f2 = a.memoizedProps;
    if (f2 !== d2) {
      var g2 = b2.stateNode;
      Ta(ja.current);
      a = null;
      switch (c2) {
        case "input":
          f2 = Cd(g2, f2);
          d2 = Cd(g2, d2);
          a = [];
          break;
        case "option":
          f2 = Fd(g2, f2);
          d2 = Fd(g2, d2);
          a = [];
          break;
        case "select":
          f2 = M({}, f2, {value: void 0});
          d2 = M({}, d2, {value: void 0});
          a = [];
          break;
        case "textarea":
          f2 = Gd(g2, f2);
          d2 = Gd(g2, d2);
          a = [];
          break;
        default:
          typeof f2.onClick !== "function" && typeof d2.onClick === "function" && (g2.onclick = uc);
      }
      Ud(c2, d2);
      var h2, m2;
      c2 = null;
      for (h2 in f2)
        if (!d2.hasOwnProperty(h2) && f2.hasOwnProperty(h2) && f2[h2] != null)
          if (h2 === "style")
            for (m2 in g2 = f2[h2], g2)
              g2.hasOwnProperty(m2) && (c2 || (c2 = {}), c2[m2] = "");
          else
            h2 !== "dangerouslySetInnerHTML" && h2 !== "children" && h2 !== "suppressContentEditableWarning" && h2 !== "suppressHydrationWarning" && h2 !== "autoFocus" && (eb.hasOwnProperty(h2) ? a || (a = []) : (a = a || []).push(h2, null));
      for (h2 in d2) {
        var k3 = d2[h2];
        g2 = f2 != null ? f2[h2] : void 0;
        if (d2.hasOwnProperty(h2) && k3 !== g2 && (k3 != null || g2 != null))
          if (h2 === "style")
            if (g2) {
              for (m2 in g2)
                !g2.hasOwnProperty(m2) || k3 && k3.hasOwnProperty(m2) || (c2 || (c2 = {}), c2[m2] = "");
              for (m2 in k3)
                k3.hasOwnProperty(m2) && g2[m2] !== k3[m2] && (c2 || (c2 = {}), c2[m2] = k3[m2]);
            } else
              c2 || (a || (a = []), a.push(h2, c2)), c2 = k3;
          else
            h2 === "dangerouslySetInnerHTML" ? (k3 = k3 ? k3.__html : void 0, g2 = g2 ? g2.__html : void 0, k3 != null && g2 !== k3 && (a = a || []).push(h2, k3)) : h2 === "children" ? g2 === k3 || typeof k3 !== "string" && typeof k3 !== "number" || (a = a || []).push(h2, "" + k3) : h2 !== "suppressContentEditableWarning" && h2 !== "suppressHydrationWarning" && (eb.hasOwnProperty(h2) ? (k3 != null && oa(e2, h2), a || g2 === k3 || (a = [])) : (a = a || []).push(h2, k3));
      }
      c2 && (a = a || []).push("style", c2);
      e2 = a;
      if (b2.updateQueue = e2)
        b2.effectTag |= 4;
    }
  };
  var kj = function(a, b2, c2, d2) {
    c2 !== d2 && (b2.effectTag |= 4);
  };
  var pj = typeof WeakSet === "function" ? WeakSet : Set, wj = typeof WeakMap === "function" ? WeakMap : Map, sj = Math.ceil, gd = da.ReactCurrentDispatcher, Uh = da.ReactCurrentOwner, H = 0, Ye = 8, ca = 16, ma = 32, Xa = 0, hd = 1, Oh = 2, ad = 3, bd = 4, Xe = 5, p2 = H, U = null, t2 = null, P = 0, F = Xa, id2 = null, ta = 1073741823, Yb = 1073741823, kd = null, Xb = 0, jd = false, Re = 0, Ph = 500, l2 = null, cd = false, Se = null, La = null, ld = false, Zb = null, $b = 90, bb = null, ac = 0, af = null, dd = 0, Ja = function(a, b2) {
    if (50 < ac)
      throw ac = 0, af = null, Error(k2(185));
    a = ed(a, b2);
    if (a !== null) {
      var c2 = Cc();
      b2 === 1073741823 ? (p2 & Ye) !== H && (p2 & (ca | ma)) === H ? Te(a) : (V(a), p2 === H && ha()) : V(a);
      (p2 & 4) === H || c2 !== 98 && c2 !== 99 || (bb === null ? bb = new Map([[a, b2]]) : (c2 = bb.get(a), (c2 === void 0 || c2 > b2) && bb.set(a, b2)));
    }
  };
  var zj = function(a, b2, c2) {
    var d2 = b2.expirationTime;
    if (a !== null) {
      var e2 = b2.pendingProps;
      if (a.memoizedProps !== e2 || G.current)
        ia = true;
      else {
        if (d2 < c2) {
          ia = false;
          switch (b2.tag) {
            case 3:
              sh(b2);
              Ee();
              break;
            case 5:
              bh(b2);
              if (b2.mode & 4 && c2 !== 1 && e2.hidden)
                return b2.expirationTime = b2.childExpirationTime = 1, null;
              break;
            case 1:
              N(b2.type) && Bc(b2);
              break;
            case 4:
              se(b2, b2.stateNode.containerInfo);
              break;
            case 10:
              d2 = b2.memoizedProps.value;
              e2 = b2.type._context;
              y2(Ic, e2._currentValue);
              e2._currentValue = d2;
              break;
            case 13:
              if (b2.memoizedState !== null) {
                d2 = b2.child.childExpirationTime;
                if (d2 !== 0 && d2 >= c2)
                  return th(a, b2, c2);
                y2(D, D.current & 1);
                b2 = sa(a, b2, c2);
                return b2 !== null ? b2.sibling : null;
              }
              y2(D, D.current & 1);
              break;
            case 19:
              d2 = b2.childExpirationTime >= c2;
              if ((a.effectTag & 64) !== 0) {
                if (d2)
                  return vh(a, b2, c2);
                b2.effectTag |= 64;
              }
              e2 = b2.memoizedState;
              e2 !== null && (e2.rendering = null, e2.tail = null);
              y2(D, D.current);
              if (!d2)
                return null;
          }
          return sa(a, b2, c2);
        }
        ia = false;
      }
    } else
      ia = false;
    b2.expirationTime = 0;
    switch (b2.tag) {
      case 2:
        d2 = b2.type;
        a !== null && (a.alternate = null, b2.alternate = null, b2.effectTag |= 2);
        a = b2.pendingProps;
        e2 = pb(b2, B.current);
        rb(b2, c2);
        e2 = we(null, b2, d2, a, e2, c2);
        b2.effectTag |= 1;
        if (typeof e2 === "object" && e2 !== null && typeof e2.render === "function" && e2.$$typeof === void 0) {
          b2.tag = 1;
          b2.memoizedState = null;
          b2.updateQueue = null;
          if (N(d2)) {
            var f2 = true;
            Bc(b2);
          } else
            f2 = false;
          b2.memoizedState = e2.state !== null && e2.state !== void 0 ? e2.state : null;
          ne(b2);
          var g2 = d2.getDerivedStateFromProps;
          typeof g2 === "function" && Lc(b2, d2, g2, a);
          e2.updater = Mc;
          b2.stateNode = e2;
          e2._reactInternalFiber = b2;
          pe(b2, d2, a, c2);
          b2 = Ie(null, b2, d2, true, f2, c2);
        } else
          b2.tag = 0, T(null, b2, e2, c2), b2 = b2.child;
        return b2;
      case 16:
        a: {
          e2 = b2.elementType;
          a !== null && (a.alternate = null, b2.alternate = null, b2.effectTag |= 2);
          a = b2.pendingProps;
          ni(e2);
          if (e2._status !== 1)
            throw e2._result;
          e2 = e2._result;
          b2.type = e2;
          f2 = b2.tag = Gj(e2);
          a = aa(e2, a);
          switch (f2) {
            case 0:
              b2 = He(null, b2, e2, a, c2);
              break a;
            case 1:
              b2 = rh(null, b2, e2, a, c2);
              break a;
            case 11:
              b2 = nh(null, b2, e2, a, c2);
              break a;
            case 14:
              b2 = oh(null, b2, e2, aa(e2.type, a), d2, c2);
              break a;
          }
          throw Error(k2(306, e2, ""));
        }
        return b2;
      case 0:
        return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : aa(d2, e2), He(a, b2, d2, e2, c2);
      case 1:
        return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : aa(d2, e2), rh(a, b2, d2, e2, c2);
      case 3:
        sh(b2);
        d2 = b2.updateQueue;
        if (a === null || d2 === null)
          throw Error(k2(282));
        d2 = b2.pendingProps;
        e2 = b2.memoizedState;
        e2 = e2 !== null ? e2.element : null;
        oe(a, b2);
        Qb(b2, d2, null, c2);
        d2 = b2.memoizedState.element;
        if (d2 === e2)
          Ee(), b2 = sa(a, b2, c2);
        else {
          if (e2 = b2.stateNode.hydrate)
            Ka = kb(b2.stateNode.containerInfo.firstChild), ra = b2, e2 = Wa = true;
          if (e2)
            for (c2 = Fe(b2, null, d2, c2), b2.child = c2; c2; )
              c2.effectTag = c2.effectTag & -3 | 1024, c2 = c2.sibling;
          else
            T(a, b2, d2, c2), Ee();
          b2 = b2.child;
        }
        return b2;
      case 5:
        return bh(b2), a === null && De(b2), d2 = b2.type, e2 = b2.pendingProps, f2 = a !== null ? a.memoizedProps : null, g2 = e2.children, Yd(d2, e2) ? g2 = null : f2 !== null && Yd(d2, f2) && (b2.effectTag |= 16), qh(a, b2), b2.mode & 4 && c2 !== 1 && e2.hidden ? (b2.expirationTime = b2.childExpirationTime = 1, b2 = null) : (T(a, b2, g2, c2), b2 = b2.child), b2;
      case 6:
        return a === null && De(b2), null;
      case 13:
        return th(a, b2, c2);
      case 4:
        return se(b2, b2.stateNode.containerInfo), d2 = b2.pendingProps, a === null ? b2.child = wb(b2, null, d2, c2) : T(a, b2, d2, c2), b2.child;
      case 11:
        return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : aa(d2, e2), nh(a, b2, d2, e2, c2);
      case 7:
        return T(a, b2, b2.pendingProps, c2), b2.child;
      case 8:
        return T(a, b2, b2.pendingProps.children, c2), b2.child;
      case 12:
        return T(a, b2, b2.pendingProps.children, c2), b2.child;
      case 10:
        a: {
          d2 = b2.type._context;
          e2 = b2.pendingProps;
          g2 = b2.memoizedProps;
          f2 = e2.value;
          var h2 = b2.type._context;
          y2(Ic, h2._currentValue);
          h2._currentValue = f2;
          if (g2 !== null)
            if (h2 = g2.value, f2 = Qa(h2, f2) ? 0 : (typeof d2._calculateChangedBits === "function" ? d2._calculateChangedBits(h2, f2) : 1073741823) | 0, f2 === 0) {
              if (g2.children === e2.children && !G.current) {
                b2 = sa(a, b2, c2);
                break a;
              }
            } else
              for (h2 = b2.child, h2 !== null && (h2.return = b2); h2 !== null; ) {
                var m2 = h2.dependencies;
                if (m2 !== null) {
                  g2 = h2.child;
                  for (var l3 = m2.firstContext; l3 !== null; ) {
                    if (l3.context === d2 && (l3.observedBits & f2) !== 0) {
                      h2.tag === 1 && (l3 = Ea(c2, null), l3.tag = Jc, Fa(h2, l3));
                      h2.expirationTime < c2 && (h2.expirationTime = c2);
                      l3 = h2.alternate;
                      l3 !== null && l3.expirationTime < c2 && (l3.expirationTime = c2);
                      Sg(h2.return, c2);
                      m2.expirationTime < c2 && (m2.expirationTime = c2);
                      break;
                    }
                    l3 = l3.next;
                  }
                } else
                  g2 = h2.tag === 10 ? h2.type === b2.type ? null : h2.child : h2.child;
                if (g2 !== null)
                  g2.return = h2;
                else
                  for (g2 = h2; g2 !== null; ) {
                    if (g2 === b2) {
                      g2 = null;
                      break;
                    }
                    h2 = g2.sibling;
                    if (h2 !== null) {
                      h2.return = g2.return;
                      g2 = h2;
                      break;
                    }
                    g2 = g2.return;
                  }
                h2 = g2;
              }
          T(a, b2, e2.children, c2);
          b2 = b2.child;
        }
        return b2;
      case 9:
        return e2 = b2.type, f2 = b2.pendingProps, d2 = f2.children, rb(b2, c2), e2 = W(e2, f2.unstable_observedBits), d2 = d2(e2), b2.effectTag |= 1, T(a, b2, d2, c2), b2.child;
      case 14:
        return e2 = b2.type, f2 = aa(e2, b2.pendingProps), f2 = aa(e2.type, f2), oh(a, b2, e2, f2, d2, c2);
      case 15:
        return ph(a, b2, b2.type, b2.pendingProps, d2, c2);
      case 17:
        return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : aa(d2, e2), a !== null && (a.alternate = null, b2.alternate = null, b2.effectTag |= 2), b2.tag = 1, N(d2) ? (a = true, Bc(b2)) : a = false, rb(b2, c2), Yg(b2, d2, e2), pe(b2, d2, e2, c2), Ie(null, b2, d2, true, a, c2);
      case 19:
        return vh(a, b2, c2);
    }
    throw Error(k2(156, b2.tag));
  };
  var bf = null, Ne = null, la = function(a, b2, c2, d2) {
    return new Fj(a, b2, c2, d2);
  };
  ef.prototype.render = function(a) {
    md(a, this._internalRoot, null, null);
  };
  ef.prototype.unmount = function() {
    var a = this._internalRoot, b2 = a.containerInfo;
    md(null, a, null, function() {
      b2[Lb] = null;
    });
  };
  var Di = function(a) {
    if (a.tag === 13) {
      var b2 = Fc(ka(), 150, 100);
      Ja(a, b2);
      df(a, b2);
    }
  };
  var Yf = function(a) {
    a.tag === 13 && (Ja(a, 3), df(a, 3));
  };
  var Bi = function(a) {
    if (a.tag === 13) {
      var b2 = ka();
      b2 = Va(b2, a, null);
      Ja(a, b2);
      df(a, b2);
    }
  };
  wd = function(a, b2, c2) {
    switch (b2) {
      case "input":
        Dd(a, c2);
        b2 = c2.name;
        if (c2.type === "radio" && b2 != null) {
          for (c2 = a; c2.parentNode; )
            c2 = c2.parentNode;
          c2 = c2.querySelectorAll("input[name=" + JSON.stringify("" + b2) + '][type="radio"]');
          for (b2 = 0; b2 < c2.length; b2++) {
            var d2 = c2[b2];
            if (d2 !== a && d2.form === a.form) {
              var e2 = ae(d2);
              if (!e2)
                throw Error(k2(90));
              Gf(d2);
              Dd(d2, e2);
            }
          }
        }
        break;
      case "textarea":
        Lf(a, c2);
        break;
      case "select":
        b2 = c2.value, b2 != null && hb(a, !!c2.multiple, b2, false);
    }
  };
  (function(a, b2, c2, d2) {
    ee = a;
    eg = b2;
    zd = c2;
    Bf = d2;
  })(Qh, function(a, b2, c2, d2, e2) {
    var f2 = p2;
    p2 |= 4;
    try {
      return Da(98, a.bind(null, b2, c2, d2, e2));
    } finally {
      p2 = f2, p2 === H && ha();
    }
  }, function() {
    (p2 & (1 | ca | ma)) === H && (uj(), xb());
  }, function(a, b2) {
    var c2 = p2;
    p2 |= 2;
    try {
      return a(b2);
    } finally {
      p2 = c2, p2 === H && ha();
    }
  });
  var mk = {Events: [Hb, Pa, ae, vf, ud, lb, function(a) {
    Kd(a, Ki);
  }, yf, zf, sc, pc, xb, {current: false}]};
  (function(a) {
    var b2 = a.findFiberByHostInstance;
    return Ej(M({}, a, {overrideHookState: null, overrideProps: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: da.ReactCurrentDispatcher, findHostInstanceByFiber: function(a2) {
      a2 = Sf(a2);
      return a2 === null ? null : a2.stateNode;
    }, findFiberByHostInstance: function(a2) {
      return b2 ? b2(a2) : null;
    }, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null}));
  })({findFiberByHostInstance: Bb, bundleType: 0, version: "16.13.0", rendererPackageName: "react-dom"});
  I.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = mk;
  I.createPortal = Xh;
  I.findDOMNode = function(a) {
    if (a == null)
      return null;
    if (a.nodeType === 1)
      return a;
    var b2 = a._reactInternalFiber;
    if (b2 === void 0) {
      if (typeof a.render === "function")
        throw Error(k2(188));
      throw Error(k2(268, Object.keys(a)));
    }
    a = Sf(b2);
    a = a === null ? null : a.stateNode;
    return a;
  };
  I.flushSync = function(a, b2) {
    if ((p2 & (ca | ma)) !== H)
      throw Error(k2(187));
    var c2 = p2;
    p2 |= 1;
    try {
      return Da(99, a.bind(null, b2));
    } finally {
      p2 = c2, ha();
    }
  };
  I.hydrate = function(a, b2, c2) {
    if (!bc(b2))
      throw Error(k2(200));
    return nd(null, a, b2, true, c2);
  };
  I.render = function(a, b2, c2) {
    if (!bc(b2))
      throw Error(k2(200));
    return nd(null, a, b2, false, c2);
  };
  I.unmountComponentAtNode = function(a) {
    if (!bc(a))
      throw Error(k2(40));
    return a._reactRootContainer ? (Rh(function() {
      nd(null, null, a, false, function() {
        a._reactRootContainer = null;
        a[Lb] = null;
      });
    }), true) : false;
  };
  I.unstable_batchedUpdates = Qh;
  I.unstable_createPortal = function(a, b2) {
    return Xh(a, b2, 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null);
  };
  I.unstable_renderSubtreeIntoContainer = function(a, b2, c2, d2) {
    if (!bc(c2))
      throw Error(k2(200));
    if (a == null || a._reactInternalFiber === void 0)
      throw Error(k2(38));
    return nd(a, b2, c2, false, d2);
  };
  I.version = "16.13.0";
})(ReactDOM, React);
const {__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED$1, createPortal, findDOMNode, flushSync, hydrate, render, unmountComponentAtNode, unstable_batchedUpdates, unstable_createPortal, unstable_renderSubtreeIntoContainer, version: version$1} = ReactDOM;
var source_production$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  default: ReactDOM,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED$1,
  createPortal,
  findDOMNode,
  flushSync,
  hydrate,
  render,
  unmountComponentAtNode,
  unstable_batchedUpdates,
  unstable_createPortal,
  unstable_renderSubtreeIntoContainer,
  version: version$1
});
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function createCommonjsModule(fn, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function(path, base) {
      return commonjsRequire(path, base === void 0 || base === null ? module.path : base);
    }
  }, fn(module, module.exports), module.exports;
}
function getAugmentedNamespace(n2) {
  if (n2.__esModule)
    return n2;
  var a = Object.defineProperty({}, "__esModule", {value: true});
  Object.keys(n2).forEach(function(k2) {
    var d2 = Object.getOwnPropertyDescriptor(n2, k2);
    Object.defineProperty(a, k2, d2.get ? d2 : {
      enumerable: true,
      get: function() {
        return n2[k2];
      }
    });
  });
  return a;
}
function commonjsRequire() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b = typeof Symbol === "function" && Symbol.for, c = b ? Symbol.for("react.element") : 60103, d = b ? Symbol.for("react.portal") : 60106, e = b ? Symbol.for("react.fragment") : 60107, f = b ? Symbol.for("react.strict_mode") : 60108, g = b ? Symbol.for("react.profiler") : 60114, h = b ? Symbol.for("react.provider") : 60109, k = b ? Symbol.for("react.context") : 60110, l = b ? Symbol.for("react.async_mode") : 60111, m = b ? Symbol.for("react.concurrent_mode") : 60111, n = b ? Symbol.for("react.forward_ref") : 60112, p = b ? Symbol.for("react.suspense") : 60113, q = b ? Symbol.for("react.suspense_list") : 60120, r = b ? Symbol.for("react.memo") : 60115, t = b ? Symbol.for("react.lazy") : 60116, v = b ? Symbol.for("react.block") : 60121, w = b ? Symbol.for("react.fundamental") : 60117, x = b ? Symbol.for("react.responder") : 60118, y = b ? Symbol.for("react.scope") : 60119;
function z(a) {
  if (typeof a === "object" && a !== null) {
    var u = a.$$typeof;
    switch (u) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a;
              default:
                return u;
            }
        }
      case d:
        return u;
    }
  }
}
function A(a) {
  return z(a) === m;
}
var AsyncMode = l;
var ConcurrentMode = m;
var ContextConsumer = k;
var ContextProvider = h;
var Element$1 = c;
var ForwardRef = n;
var Fragment$1 = e;
var Lazy = t;
var Memo = r;
var Portal = d;
var Profiler$1 = g;
var StrictMode$1 = f;
var Suspense$1 = p;
var isAsyncMode = function(a) {
  return A(a) || z(a) === l;
};
var isConcurrentMode = A;
var isContextConsumer = function(a) {
  return z(a) === k;
};
var isContextProvider = function(a) {
  return z(a) === h;
};
var isElement = function(a) {
  return typeof a === "object" && a !== null && a.$$typeof === c;
};
var isForwardRef = function(a) {
  return z(a) === n;
};
var isFragment = function(a) {
  return z(a) === e;
};
var isLazy = function(a) {
  return z(a) === t;
};
var isMemo = function(a) {
  return z(a) === r;
};
var isPortal = function(a) {
  return z(a) === d;
};
var isProfiler = function(a) {
  return z(a) === g;
};
var isStrictMode = function(a) {
  return z(a) === f;
};
var isSuspense = function(a) {
  return z(a) === p;
};
var isValidElementType = function(a) {
  return typeof a === "string" || typeof a === "function" || a === e || a === m || a === g || a === f || a === p || a === q || typeof a === "object" && a !== null && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};
var typeOf = z;
var reactIs_production_min = {
  AsyncMode,
  ConcurrentMode,
  ContextConsumer,
  ContextProvider,
  Element: Element$1,
  ForwardRef,
  Fragment: Fragment$1,
  Lazy,
  Memo,
  Portal,
  Profiler: Profiler$1,
  StrictMode: StrictMode$1,
  Suspense: Suspense$1,
  isAsyncMode,
  isConcurrentMode,
  isContextConsumer,
  isContextProvider,
  isElement,
  isForwardRef,
  isFragment,
  isLazy,
  isMemo,
  isPortal,
  isProfiler,
  isStrictMode,
  isSuspense,
  isValidElementType,
  typeOf
};
var reactIs_development = createCommonjsModule(function(module, exports) {
});
var reactIs = createCommonjsModule(function(module) {
  {
    module.exports = reactIs_production_min;
  }
});
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2["_" + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
      return test2[n2];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function(target, source) {
  var from;
  var to = toObject(target);
  var symbols;
  for (var s2 = 1; s2 < arguments.length; s2++) {
    from = Object(arguments[s2]);
    for (var key in from) {
      if (hasOwnProperty$1.call(from, key)) {
        to[key] = from[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);
      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }
  return to;
};
var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret;
var has = Function.call.bind(Object.prototype.hasOwnProperty);
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      return;
    }
    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
    err.name = "Invariant Violation";
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
var propTypes = createCommonjsModule(function(module) {
  {
    module.exports = factoryWithThrowingShims();
  }
});
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function isAbsolute(pathname) {
  return pathname.charAt(0) === "/";
}
function spliceOne(list, index2) {
  for (var i = index2, k2 = i + 1, n2 = list.length; k2 < n2; i += 1, k2 += 1) {
    list[i] = list[k2];
  }
  list.pop();
}
function resolvePathname(to, from) {
  if (from === void 0)
    from = "";
  var toParts = to && to.split("/") || [];
  var fromParts = from && from.split("/") || [];
  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;
  if (to && isAbsolute(to)) {
    fromParts = toParts;
  } else if (toParts.length) {
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }
  if (!fromParts.length)
    return "/";
  var hasTrailingSlash;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === "." || last === ".." || last === "";
  } else {
    hasTrailingSlash = false;
  }
  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];
    if (part === ".") {
      spliceOne(fromParts, i);
    } else if (part === "..") {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }
  if (!mustEndAbs)
    for (; up--; up)
      fromParts.unshift("..");
  if (mustEndAbs && fromParts[0] !== "" && (!fromParts[0] || !isAbsolute(fromParts[0])))
    fromParts.unshift("");
  var result = fromParts.join("/");
  if (hasTrailingSlash && result.substr(-1) !== "/")
    result += "/";
  return result;
}
function valueOf(obj2) {
  return obj2.valueOf ? obj2.valueOf() : Object.prototype.valueOf.call(obj2);
}
function valueEqual(a, b2) {
  if (a === b2)
    return true;
  if (a == null || b2 == null)
    return false;
  if (Array.isArray(a)) {
    return Array.isArray(b2) && a.length === b2.length && a.every(function(item, index2) {
      return valueEqual(item, b2[index2]);
    });
  }
  if (typeof a === "object" || typeof b2 === "object") {
    var aValue = valueOf(a);
    var bValue = valueOf(b2);
    if (aValue !== a || bValue !== b2)
      return valueEqual(aValue, bValue);
    return Object.keys(Object.assign({}, a, b2)).every(function(key) {
      return valueEqual(a[key], b2[key]);
    });
  }
  return false;
}
var prefix = "Invariant failed";
function invariant(condition, message) {
  if (condition) {
    return;
  }
  {
    throw new Error(prefix);
  }
}
function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}
function stripLeadingSlash(path) {
  return path.charAt(0) === "/" ? path.substr(1) : path;
}
function hasBasename(path, prefix2) {
  return path.toLowerCase().indexOf(prefix2.toLowerCase()) === 0 && "/?#".indexOf(path.charAt(prefix2.length)) !== -1;
}
function stripBasename(path, prefix2) {
  return hasBasename(path, prefix2) ? path.substr(prefix2.length) : path;
}
function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === "/" ? path.slice(0, -1) : path;
}
function parsePath(path) {
  var pathname = path || "/";
  var search2 = "";
  var hash = "";
  var hashIndex = pathname.indexOf("#");
  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }
  var searchIndex = pathname.indexOf("?");
  if (searchIndex !== -1) {
    search2 = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }
  return {
    pathname,
    search: search2 === "?" ? "" : search2,
    hash: hash === "#" ? "" : hash
  };
}
function createPath(location) {
  var pathname = location.pathname, search2 = location.search, hash = location.hash;
  var path = pathname || "/";
  if (search2 && search2 !== "?")
    path += search2.charAt(0) === "?" ? search2 : "?" + search2;
  if (hash && hash !== "#")
    path += hash.charAt(0) === "#" ? hash : "#" + hash;
  return path;
}
function createLocation(path, state, key, currentLocation) {
  var location;
  if (typeof path === "string") {
    location = parsePath(path);
    location.state = state;
  } else {
    location = _extends({}, path);
    if (location.pathname === void 0)
      location.pathname = "";
    if (location.search) {
      if (location.search.charAt(0) !== "?")
        location.search = "?" + location.search;
    } else {
      location.search = "";
    }
    if (location.hash) {
      if (location.hash.charAt(0) !== "#")
        location.hash = "#" + location.hash;
    } else {
      location.hash = "";
    }
    if (state !== void 0 && location.state === void 0)
      location.state = state;
  }
  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e2) {
    if (e2 instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. This is likely caused by an invalid percent-encoding.');
    } else {
      throw e2;
    }
  }
  if (key)
    location.key = key;
  if (currentLocation) {
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== "/") {
      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);
    }
  } else {
    if (!location.pathname) {
      location.pathname = "/";
    }
  }
  return location;
}
function locationsAreEqual(a, b2) {
  return a.pathname === b2.pathname && a.search === b2.search && a.hash === b2.hash && a.key === b2.key && valueEqual(a.state, b2.state);
}
function createTransitionManager() {
  var prompt = null;
  function setPrompt(nextPrompt) {
    prompt = nextPrompt;
    return function() {
      if (prompt === nextPrompt)
        prompt = null;
    };
  }
  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    if (prompt != null) {
      var result = typeof prompt === "function" ? prompt(location, action) : prompt;
      if (typeof result === "string") {
        if (typeof getUserConfirmation === "function") {
          getUserConfirmation(result, callback);
        } else {
          callback(true);
        }
      } else {
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }
  var listeners = [];
  function appendListener(fn) {
    var isActive = true;
    function listener() {
      if (isActive)
        fn.apply(void 0, arguments);
    }
    listeners.push(listener);
    return function() {
      isActive = false;
      listeners = listeners.filter(function(item) {
        return item !== listener;
      });
    };
  }
  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    listeners.forEach(function(listener) {
      return listener.apply(void 0, args);
    });
  }
  return {
    setPrompt,
    confirmTransitionTo,
    appendListener,
    notifyListeners
  };
}
var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
function getConfirmation(message, callback) {
  callback(window.confirm(message));
}
function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf("Firefox") === -1;
}
var HashChangeEvent$1 = "hashchange";
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === "!" ? path : "!/" + stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === "!" ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: stripLeadingSlash,
    decodePath: addLeadingSlash
  },
  slash: {
    encodePath: addLeadingSlash,
    decodePath: addLeadingSlash
  }
};
function stripHash(url) {
  var hashIndex = url.indexOf("#");
  return hashIndex === -1 ? url : url.slice(0, hashIndex);
}
function getHashPath() {
  var href = window.location.href;
  var hashIndex = href.indexOf("#");
  return hashIndex === -1 ? "" : href.substring(hashIndex + 1);
}
function pushHashPath(path) {
  window.location.hash = path;
}
function replaceHashPath(path) {
  window.location.replace(stripHash(window.location.href) + "#" + path);
}
function createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }
  !canUseDOM ? invariant(false) : void 0;
  var globalHistory = window.history;
  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();
  var _props = props, _props$getUserConfirm = _props.getUserConfirmation, getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm, _props$hashType = _props.hashType, hashType = _props$hashType === void 0 ? "slash" : _props$hashType;
  var basename2 = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : "";
  var _HashPathCoders$hashT = HashPathCoders[hashType], encodePath2 = _HashPathCoders$hashT.encodePath, decodePath2 = _HashPathCoders$hashT.decodePath;
  function getDOMLocation() {
    var path2 = decodePath2(getHashPath());
    if (basename2)
      path2 = stripBasename(path2, basename2);
    return createLocation(path2);
  }
  var transitionManager = createTransitionManager();
  function setState(nextState) {
    _extends(history, nextState);
    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }
  var forceNextPop = false;
  var ignorePath = null;
  function locationsAreEqual$$1(a, b2) {
    return a.pathname === b2.pathname && a.search === b2.search && a.hash === b2.hash;
  }
  function handleHashChange() {
    var path2 = getHashPath();
    var encodedPath2 = encodePath2(path2);
    if (path2 !== encodedPath2) {
      replaceHashPath(encodedPath2);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location))
        return;
      if (ignorePath === createPath(location))
        return;
      ignorePath = null;
      handlePop(location);
    }
  }
  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = "POP";
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok) {
        if (ok) {
          setState({
            action,
            location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }
  function revertPop(fromLocation) {
    var toLocation = history.location;
    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
    if (toIndex === -1)
      toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
    if (fromIndex === -1)
      fromIndex = 0;
    var delta = toIndex - fromIndex;
    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }
  var path = getHashPath();
  var encodedPath = encodePath2(path);
  if (path !== encodedPath)
    replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [createPath(initialLocation)];
  function createHref(location) {
    var baseTag = document.querySelector("base");
    var href = "";
    if (baseTag && baseTag.getAttribute("href")) {
      href = stripHash(window.location.href);
    }
    return href + "#" + encodePath2(basename2 + createPath(location));
  }
  function push(path2, state) {
    var action = "PUSH";
    var location = createLocation(path2, void 0, void 0, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok) {
      if (!ok)
        return;
      var path3 = createPath(location);
      var encodedPath2 = encodePath2(basename2 + path3);
      var hashChanged = getHashPath() !== encodedPath2;
      if (hashChanged) {
        ignorePath = path3;
        pushHashPath(encodedPath2);
        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex + 1);
        nextPaths.push(path3);
        allPaths = nextPaths;
        setState({
          action,
          location
        });
      } else {
        setState();
      }
    });
  }
  function replace(path2, state) {
    var action = "REPLACE";
    var location = createLocation(path2, void 0, void 0, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function(ok) {
      if (!ok)
        return;
      var path3 = createPath(location);
      var encodedPath2 = encodePath2(basename2 + path3);
      var hashChanged = getHashPath() !== encodedPath2;
      if (hashChanged) {
        ignorePath = path3;
        replaceHashPath(encodedPath2);
      }
      var prevIndex = allPaths.indexOf(createPath(history.location));
      if (prevIndex !== -1)
        allPaths[prevIndex] = path3;
      setState({
        action,
        location
      });
    });
  }
  function go(n2) {
    globalHistory.go(n2);
  }
  function goBack() {
    go(-1);
  }
  function goForward() {
    go(1);
  }
  var listenerCount = 0;
  function checkDOMListeners(delta) {
    listenerCount += delta;
    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(HashChangeEvent$1, handleHashChange);
    }
  }
  var isBlocked = false;
  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }
    var unblock = transitionManager.setPrompt(prompt);
    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }
    return function() {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }
      return unblock();
    };
  }
  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function() {
      checkDOMListeners(-1);
      unlisten();
    };
  }
  var history = {
    length: globalHistory.length,
    action: "POP",
    location: initialLocation,
    createHref,
    push,
    replace,
    go,
    goBack,
    goForward,
    block,
    listen
  };
  return history;
}
var MAX_SIGNED_31_BIT_INT = 1073741823;
var commonjsGlobal$1 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {};
function getUniqueId() {
  var key = "__global_unique_id__";
  return commonjsGlobal$1[key] = (commonjsGlobal$1[key] || 0) + 1;
}
function objectIs(x2, y2) {
  if (x2 === y2) {
    return x2 !== 0 || 1 / x2 === 1 / y2;
  } else {
    return x2 !== x2 && y2 !== y2;
  }
}
function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on2(handler) {
      handlers.push(handler);
    },
    off: function off2(handler) {
      handlers = handlers.filter(function(h2) {
        return h2 !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function(handler) {
        return handler(value, changedBits);
      });
    }
  };
}
function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}
function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;
  var contextProp = "__create-react-context-" + getUniqueId() + "__";
  var Provider = /* @__PURE__ */ function(_Component) {
    _inheritsLoose(Provider2, _Component);
    function Provider2() {
      var _this2;
      _this2 = _Component.apply(this, arguments) || this;
      _this2.emitter = createEventEmitter(_this2.props.value);
      return _this2;
    }
    var _proto = Provider2.prototype;
    _proto.getChildContext = function getChildContext() {
      var _ref;
      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };
    _proto.componentWillReceiveProps = function componentWillReceiveProps2(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits;
        if (objectIs(oldValue, newValue)) {
          changedBits = 0;
        } else {
          changedBits = typeof calculateChangedBits === "function" ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
          changedBits |= 0;
          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };
    _proto.render = function render2() {
      return this.props.children;
    };
    return Provider2;
  }(Component);
  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = propTypes.object.isRequired, _Provider$childContex);
  var Consumer4 = /* @__PURE__ */ function(_Component2) {
    _inheritsLoose(Consumer5, _Component2);
    function Consumer5() {
      var _this2;
      _this2 = _Component2.apply(this, arguments) || this;
      _this2.state = {
        value: _this2.getValue()
      };
      _this2.onUpdate = function(newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;
        if ((observedBits & changedBits) !== 0) {
          _this2.setState({
            value: _this2.getValue()
          });
        }
      };
      return _this2;
    }
    var _proto2 = Consumer5.prototype;
    _proto2.componentWillReceiveProps = function componentWillReceiveProps2(nextProps) {
      var observedBits = nextProps.observedBits;
      this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };
    _proto2.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }
      var observedBits = this.props.observedBits;
      this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };
    _proto2.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };
    _proto2.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };
    _proto2.render = function render2() {
      return onlyChild(this.props.children)(this.state.value);
    };
    return Consumer5;
  }(Component);
  Consumer4.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = propTypes.object, _Consumer$contextType);
  return {
    Provider,
    Consumer: Consumer4
  };
}
var index = React.createContext || createReactContext;
var isarray = Array.isArray || function(arr) {
  return Object.prototype.toString.call(arr) == "[object Array]";
};
var pathToRegexp_1 = pathToRegexp;
var parse_1 = parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;
var PATH_REGEXP = new RegExp([
  "(\\\\.)",
  "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"
].join("|"), "g");
function parse(str2, options) {
  var tokens = [];
  var key = 0;
  var index2 = 0;
  var path = "";
  var defaultDelimiter = options && options.delimiter || "/";
  var res;
  while ((res = PATH_REGEXP.exec(str2)) != null) {
    var m2 = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str2.slice(index2, offset);
    index2 = offset + m2.length;
    if (escaped) {
      path += escaped[1];
      continue;
    }
    var next = str2[index2];
    var prefix2 = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];
    if (path) {
      tokens.push(path);
      path = "";
    }
    var partial = prefix2 != null && next != null && next !== prefix2;
    var repeat = modifier === "+" || modifier === "*";
    var optional = modifier === "?" || modifier === "*";
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;
    tokens.push({
      name: name || key++,
      prefix: prefix2 || "",
      delimiter,
      optional,
      repeat,
      partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : asterisk ? ".*" : "[^" + escapeString(delimiter) + "]+?"
    });
  }
  if (index2 < str2.length) {
    path += str2.substr(index2);
  }
  if (path) {
    tokens.push(path);
  }
  return tokens;
}
function compile(str2, options) {
  return tokensToFunction(parse(str2, options), options);
}
function encodeURIComponentPretty(str2) {
  return encodeURI(str2).replace(/[\/?#]/g, function(c2) {
    return "%" + c2.charCodeAt(0).toString(16).toUpperCase();
  });
}
function encodeAsterisk(str2) {
  return encodeURI(str2).replace(/[?#]/g, function(c2) {
    return "%" + c2.charCodeAt(0).toString(16).toUpperCase();
  });
}
function tokensToFunction(tokens, options) {
  var matches2 = new Array(tokens.length);
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === "object") {
      matches2[i] = new RegExp("^(?:" + tokens[i].pattern + ")$", flags(options));
    }
  }
  return function(obj2, opts) {
    var path = "";
    var data = obj2 || {};
    var options2 = opts || {};
    var encode = options2.pretty ? encodeURIComponentPretty : encodeURIComponent;
    for (var i2 = 0; i2 < tokens.length; i2++) {
      var token = tokens[i2];
      if (typeof token === "string") {
        path += token;
        continue;
      }
      var value = data[token.name];
      var segment;
      if (value == null) {
        if (token.optional) {
          if (token.partial) {
            path += token.prefix;
          }
          continue;
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined');
        }
      }
      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + "`");
        }
        if (value.length === 0) {
          if (token.optional) {
            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty');
          }
        }
        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);
          if (!matches2[i2].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + "`");
          }
          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }
        continue;
      }
      segment = token.asterisk ? encodeAsterisk(value) : encode(value);
      if (!matches2[i2].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
      }
      path += token.prefix + segment;
    }
    return path;
  };
}
function escapeString(str2) {
  return str2.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
}
function escapeGroup(group) {
  return group.replace(/([=!:$\/()])/g, "\\$1");
}
function attachKeys(re, keys3) {
  re.keys = keys3;
  return re;
}
function flags(options) {
  return options && options.sensitive ? "" : "i";
}
function regexpToRegexp(path, keys3) {
  var groups = path.source.match(/\((?!\?)/g);
  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys3.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }
  return attachKeys(path, keys3);
}
function arrayToRegexp(path, keys3, options) {
  var parts = [];
  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys3, options).source);
  }
  var regexp = new RegExp("(?:" + parts.join("|") + ")", flags(options));
  return attachKeys(regexp, keys3);
}
function stringToRegexp(path, keys3, options) {
  return tokensToRegExp(parse(path, options), keys3, options);
}
function tokensToRegExp(tokens, keys3, options) {
  if (!isarray(keys3)) {
    options = keys3 || options;
    keys3 = [];
  }
  options = options || {};
  var strict = options.strict;
  var end = options.end !== false;
  var route = "";
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];
    if (typeof token === "string") {
      route += escapeString(token);
    } else {
      var prefix2 = escapeString(token.prefix);
      var capture = "(?:" + token.pattern + ")";
      keys3.push(token);
      if (token.repeat) {
        capture += "(?:" + prefix2 + capture + ")*";
      }
      if (token.optional) {
        if (!token.partial) {
          capture = "(?:" + prefix2 + "(" + capture + "))?";
        } else {
          capture = prefix2 + "(" + capture + ")?";
        }
      } else {
        capture = prefix2 + "(" + capture + ")";
      }
      route += capture;
    }
  }
  var delimiter = escapeString(options.delimiter || "/");
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + "(?:" + delimiter + "(?=$))?";
  }
  if (end) {
    route += "$";
  } else {
    route += strict && endsWithDelimiter ? "" : "(?=" + delimiter + "|$)";
  }
  return attachKeys(new RegExp("^" + route, flags(options)), keys3);
}
function pathToRegexp(path, keys3, options) {
  if (!isarray(keys3)) {
    options = keys3 || options;
    keys3 = [];
  }
  options = options || {};
  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys3);
  }
  if (isarray(path)) {
    return arrayToRegexp(path, keys3, options);
  }
  return stringToRegexp(path, keys3, options);
}
pathToRegexp_1.parse = parse_1;
pathToRegexp_1.compile = compile_1;
pathToRegexp_1.tokensToFunction = tokensToFunction_1;
pathToRegexp_1.tokensToRegExp = tokensToRegExp_1;
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  $$typeof: true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  $$typeof: true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
function getStatics(component) {
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  }
  return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
}
var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols$1 = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== "string") {
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);
      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }
    var keys3 = getOwnPropertyNames(sourceComponent);
    if (getOwnPropertySymbols$1) {
      keys3 = keys3.concat(getOwnPropertySymbols$1(sourceComponent));
    }
    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);
    for (var i = 0; i < keys3.length; ++i) {
      var key = keys3[i];
      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
        try {
          defineProperty(targetComponent, key, descriptor);
        } catch (e2) {
        }
      }
    }
  }
  return targetComponent;
}
var hoistNonReactStatics_cjs = hoistNonReactStatics;
var createNamedContext = function createNamedContext2(name) {
  var context2 = index();
  context2.displayName = name;
  return context2;
};
var historyContext = /* @__PURE__ */ createNamedContext("Router-History");
var createNamedContext$1 = function createNamedContext3(name) {
  var context2 = index();
  context2.displayName = name;
  return context2;
};
var context = /* @__PURE__ */ createNamedContext$1("Router");
var Router = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Router2, _React$Component);
  Router2.computeRootMatch = function computeRootMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };
  function Router2(props) {
    var _this2;
    _this2 = _React$Component.call(this, props) || this;
    _this2.state = {
      location: props.history.location
    };
    _this2._isMounted = false;
    _this2._pendingLocation = null;
    if (!props.staticContext) {
      _this2.unlisten = props.history.listen(function(location) {
        if (_this2._isMounted) {
          _this2.setState({
            location
          });
        } else {
          _this2._pendingLocation = location;
        }
      });
    }
    return _this2;
  }
  var _proto = Router2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this._isMounted = true;
    if (this._pendingLocation) {
      this.setState({
        location: this._pendingLocation
      });
    }
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.unlisten)
      this.unlisten();
  };
  _proto.render = function render2() {
    return React.createElement(context.Provider, {
      value: {
        history: this.props.history,
        location: this.state.location,
        match: Router2.computeRootMatch(this.state.location.pathname),
        staticContext: this.props.staticContext
      }
    }, React.createElement(historyContext.Provider, {
      children: this.props.children || null,
      value: this.props.history
    }));
  };
  return Router2;
}(React.Component);
var Lifecycle = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Lifecycle2, _React$Component);
  function Lifecycle2() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Lifecycle2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    if (this.props.onMount)
      this.props.onMount.call(this, this);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.onUpdate)
      this.props.onUpdate.call(this, this, prevProps);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.props.onUnmount)
      this.props.onUnmount.call(this, this);
  };
  _proto.render = function render2() {
    return null;
  };
  return Lifecycle2;
}(React.Component);
var cache = {};
var cacheLimit = 1e4;
var cacheCount = 0;
function compilePath(path) {
  if (cache[path])
    return cache[path];
  var generator = pathToRegexp_1.compile(path);
  if (cacheCount < cacheLimit) {
    cache[path] = generator;
    cacheCount++;
  }
  return generator;
}
function generatePath(path, params) {
  if (path === void 0) {
    path = "/";
  }
  if (params === void 0) {
    params = {};
  }
  return path === "/" ? path : compilePath(path)(params, {
    pretty: true
  });
}
function Redirect(_ref) {
  var computedMatch = _ref.computedMatch, to = _ref.to, _ref$push = _ref.push, push = _ref$push === void 0 ? false : _ref$push;
  return React.createElement(context.Consumer, null, function(context2) {
    !context2 ? invariant(false) : void 0;
    var history = context2.history, staticContext = context2.staticContext;
    var method = push ? history.push : history.replace;
    var location = createLocation(computedMatch ? typeof to === "string" ? generatePath(to, computedMatch.params) : _extends({}, to, {
      pathname: generatePath(to.pathname, computedMatch.params)
    }) : to);
    if (staticContext) {
      method(location);
      return null;
    }
    return React.createElement(Lifecycle, {
      onMount: function onMount() {
        method(location);
      },
      onUpdate: function onUpdate(self2, prevProps) {
        var prevLocation = createLocation(prevProps.to);
        if (!locationsAreEqual(prevLocation, _extends({}, location, {
          key: prevLocation.key
        }))) {
          method(location);
        }
      },
      to
    });
  });
}
var cache$1 = {};
var cacheLimit$1 = 1e4;
var cacheCount$1 = 0;
function compilePath$1(path, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
  if (pathCache[path])
    return pathCache[path];
  var keys3 = [];
  var regexp = pathToRegexp_1(path, keys3, options);
  var result = {
    regexp,
    keys: keys3
  };
  if (cacheCount$1 < cacheLimit$1) {
    pathCache[path] = result;
    cacheCount$1++;
  }
  return result;
}
function matchPath(pathname, options) {
  if (options === void 0) {
    options = {};
  }
  if (typeof options === "string" || Array.isArray(options)) {
    options = {
      path: options
    };
  }
  var _options = options, path = _options.path, _options$exact = _options.exact, exact = _options$exact === void 0 ? false : _options$exact, _options$strict = _options.strict, strict = _options$strict === void 0 ? false : _options$strict, _options$sensitive = _options.sensitive, sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
  var paths = [].concat(path);
  return paths.reduce(function(matched, path2) {
    if (!path2 && path2 !== "")
      return null;
    if (matched)
      return matched;
    var _compilePath = compilePath$1(path2, {
      end: exact,
      strict,
      sensitive
    }), regexp = _compilePath.regexp, keys3 = _compilePath.keys;
    var match = regexp.exec(pathname);
    if (!match)
      return null;
    var url = match[0], values = match.slice(1);
    var isExact = pathname === url;
    if (exact && !isExact)
      return null;
    return {
      path: path2,
      url: path2 === "/" && url === "" ? "/" : url,
      isExact,
      params: keys3.reduce(function(memo2, key, index2) {
        memo2[key.name] = values[index2];
        return memo2;
      }, {})
    };
  }, null);
}
var Route = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Route2, _React$Component);
  function Route2() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Route2.prototype;
  _proto.render = function render2() {
    var _this2 = this;
    return React.createElement(context.Consumer, null, function(context$1) {
      !context$1 ? invariant(false) : void 0;
      var location = _this2.props.location || context$1.location;
      var match = _this2.props.computedMatch ? _this2.props.computedMatch : _this2.props.path ? matchPath(location.pathname, _this2.props) : context$1.match;
      var props = _extends({}, context$1, {
        location,
        match
      });
      var _this$props = _this2.props, children = _this$props.children, component = _this$props.component, render3 = _this$props.render;
      if (Array.isArray(children) && children.length === 0) {
        children = null;
      }
      return React.createElement(context.Provider, {
        value: props
      }, props.match ? children ? typeof children === "function" ? children(props) : children : component ? React.createElement(component, props) : render3 ? render3(props) : null : typeof children === "function" ? children(props) : null);
    });
  };
  return Route2;
}(React.Component);
var Switch = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Switch2, _React$Component);
  function Switch2() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Switch2.prototype;
  _proto.render = function render2() {
    var _this2 = this;
    return React.createElement(context.Consumer, null, function(context2) {
      !context2 ? invariant(false) : void 0;
      var location = _this2.props.location || context2.location;
      var element, match;
      React.Children.forEach(_this2.props.children, function(child) {
        if (match == null && React.isValidElement(child)) {
          element = child;
          var path = child.props.path || child.props.from;
          match = path ? matchPath(location.pathname, _extends({}, child.props, {
            path
          })) : context2.match;
        }
      });
      return match ? React.cloneElement(element, {
        location,
        computedMatch: match
      }) : null;
    });
  };
  return Switch2;
}(React.Component);
var useContext$1 = React.useContext;
function useHistory() {
  return useContext$1(historyContext);
}
var HashRouter = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(HashRouter2, _React$Component);
  function HashRouter2() {
    var _this2;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this2.history = createHashHistory(_this2.props);
    return _this2;
  }
  var _proto = HashRouter2.prototype;
  _proto.render = function render2() {
    return React.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };
  return HashRouter2;
}(React.Component);
var resolveToLocation = function resolveToLocation2(to, currentLocation) {
  return typeof to === "function" ? to(currentLocation) : to;
};
var normalizeToLocation = function normalizeToLocation2(to, currentLocation) {
  return typeof to === "string" ? createLocation(to, null, null, currentLocation) : to;
};
var forwardRefShim = function forwardRefShim2(C) {
  return C;
};
var forwardRef$1 = React.forwardRef;
if (typeof forwardRef$1 === "undefined") {
  forwardRef$1 = forwardRefShim;
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
var LinkAnchor = forwardRef$1(function(_ref, forwardedRef) {
  var innerRef = _ref.innerRef, navigate = _ref.navigate, _onClick = _ref.onClick, rest = _objectWithoutPropertiesLoose(_ref, ["innerRef", "navigate", "onClick"]);
  var target = rest.target;
  var props = _extends({}, rest, {
    onClick: function onClick4(event) {
      try {
        if (_onClick)
          _onClick(event);
      } catch (ex) {
        event.preventDefault();
        throw ex;
      }
      if (!event.defaultPrevented && event.button === 0 && (!target || target === "_self") && !isModifiedEvent(event)) {
        event.preventDefault();
        navigate();
      }
    }
  });
  if (forwardRefShim !== forwardRef$1) {
    props.ref = forwardedRef || innerRef;
  } else {
    props.ref = innerRef;
  }
  return React.createElement("a", props);
});
var Link = forwardRef$1(function(_ref2, forwardedRef) {
  var _ref2$component = _ref2.component, component = _ref2$component === void 0 ? LinkAnchor : _ref2$component, replace = _ref2.replace, to = _ref2.to, innerRef = _ref2.innerRef, rest = _objectWithoutPropertiesLoose(_ref2, ["component", "replace", "to", "innerRef"]);
  return React.createElement(context.Consumer, null, function(context2) {
    !context2 ? invariant(false) : void 0;
    var history = context2.history;
    var location = normalizeToLocation(resolveToLocation(to, context2.location), context2.location);
    var href = location ? history.createHref(location) : "";
    var props = _extends({}, rest, {
      href,
      navigate: function navigate() {
        var location2 = resolveToLocation(to, context2.location);
        var method = replace ? history.replace : history.push;
        method(location2);
      }
    });
    if (forwardRefShim !== forwardRef$1) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }
    return React.createElement(component, props);
  });
});
var forwardRefShim$1 = function forwardRefShim3(C) {
  return C;
};
var forwardRef$1$1 = React.forwardRef;
if (typeof forwardRef$1$1 === "undefined") {
  forwardRef$1$1 = forwardRefShim$1;
}
function joinClassnames() {
  for (var _len = arguments.length, classnames2 = new Array(_len), _key = 0; _key < _len; _key++) {
    classnames2[_key] = arguments[_key];
  }
  return classnames2.filter(function(i) {
    return i;
  }).join(" ");
}
var NavLink = forwardRef$1$1(function(_ref, forwardedRef) {
  var _ref$ariaCurrent = _ref["aria-current"], ariaCurrent = _ref$ariaCurrent === void 0 ? "page" : _ref$ariaCurrent, _ref$activeClassName = _ref.activeClassName, activeClassName = _ref$activeClassName === void 0 ? "active" : _ref$activeClassName, activeStyle = _ref.activeStyle, classNameProp = _ref.className, exact = _ref.exact, isActiveProp = _ref.isActive, locationProp = _ref.location, sensitive = _ref.sensitive, strict = _ref.strict, styleProp = _ref.style, to = _ref.to, innerRef = _ref.innerRef, rest = _objectWithoutPropertiesLoose(_ref, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "sensitive", "strict", "style", "to", "innerRef"]);
  return React.createElement(context.Consumer, null, function(context2) {
    !context2 ? invariant(false) : void 0;
    var currentLocation = locationProp || context2.location;
    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);
    var path = toLocation.pathname;
    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
    var match = escapedPath ? matchPath(currentLocation.pathname, {
      path: escapedPath,
      exact,
      sensitive,
      strict
    }) : null;
    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);
    var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;
    var style = isActive ? _extends({}, styleProp, {}, activeStyle) : styleProp;
    var props = _extends({
      "aria-current": isActive && ariaCurrent || null,
      className,
      style,
      to: toLocation
    }, rest);
    if (forwardRefShim$1 !== forwardRef$1$1) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }
    return React.createElement(Link, props);
  });
});
const dataCacheCtx = createContext({});
const setDataCacheCtx = createContext(() => {
  throw new Error(`setDataCacheCtx not found`);
});
function useAppState(pages2, latestRoutePath) {
  const dataCache = useContext(dataCacheCtx);
  const setDataCache = useContext(setDataCacheCtx);
  const [loadState, _setLoadState] = useState(() => {
    return {
      type: "loading",
      routePath: latestRoutePath
    };
  });
  const setLoadState = (newLoadState) => {
    if (newLoadState.type === loadState.type && newLoadState.routePath === loadState.routePath)
      ;
    else {
      _setLoadState(newLoadState);
    }
  };
  const {routePath} = loadState;
  if (!pages2[latestRoutePath]) {
    if (pages2["/404"] && !dataCache["/404"]) {
      setLoadState({
        type: "loading",
        routePath: latestRoutePath
      });
    } else {
      setLoadState({
        type: "404",
        routePath: latestRoutePath
      });
    }
  } else if (routePath !== latestRoutePath) {
    setLoadState({
      type: "loading",
      routePath: latestRoutePath
    });
  } else if (dataCache[routePath]) {
    setLoadState({
      type: "loaded",
      routePath
    });
  }
  useEffect(() => {
    if (loadState.type === "loading") {
      let loadPath = routePath;
      if (!pages2[routePath]) {
        if (pages2["/404"]) {
          loadPath = "/404";
        }
      }
      const {data: dataImporter} = pages2[loadPath];
      dataImporter().then(({default: pageLoaded}) => {
        setDataCache((prev) => ({
          ...prev,
          [loadPath]: pageLoaded
        }));
      }).catch((error) => {
        setLoadState({
          type: "load-error",
          routePath,
          error
        });
        throw error;
      });
    }
  }, [routePath]);
  return loadState;
}
const PageLoader = ({pages: pages2, routePath: routePathFromProps, Theme: Theme2}) => {
  const dataCache = useContext(dataCacheCtx);
  const loadState = useAppState(pages2, routePathFromProps);
  const pagesStaticData = useMemo(() => getPublicPages(pages2), [pages2]);
  return React.createElement(Theme2, {loadState, loadedData: dataCache, staticData: pagesStaticData});
};
function getPublicPages(pages2) {
  return Object.fromEntries(Object.entries(pages2).map(([path, {staticData}]) => [
    path,
    staticData
  ]));
}
const pages = {};
pages["/affix"] = {};
pages["/affix"].data = () => import("./648549be.js");
pages["/affix"].staticData = {"_absolute-position": {title: "启用绝对布局", description: "可以通过 `container` 属性设置 Affix 组件需要监听其滚动事件的元素，该属性接收一个函数作为参数，默认为 `() => window`；", sourceType: "js"}, _basic: {title: "基本", description: "默认情况下，Affix 的默认目标容器元素是整个 `window`，并且 `offsetTop = 0`，", sourceType: "js"}, "_custom-container": {title: "自定义目标容器", description: "可以通过 `container` 属性设置 Affix 组件需要监听其滚动事件的元素，该属性接收一个函数作为参数，默认为 `() => window`。", sourceType: "js"}, "_on-affix": {title: "onAffix", description: "可以通过传入 `onAffix` 的事件回调函数来监听元素是否发生了固钉状态。该函数会在状态变化时返回固钉状态。", sourceType: "js"}, "_custom-offset": {title: "自定义偏移量", description: "可以通过 `offsetTop` 或 `offsetBottom` 自定义偏移量。", sourceType: "js"}, title: "affix"};
pages["/animate"] = {};
pages["/animate"].data = () => import("./ebdb3831.js");
pages["/animate"].staticData = {_basic: {title: "基本", description: "展示单个子元素的进场离场动画。", sourceType: "js"}, _expand: {title: "展开收起动画", description: "展示单个子元素的展开收起动画。", sourceType: "js"}, _multiple: {title: "多个子元素动画", description: "展示多个子元素的进场离场动画。", sourceType: "js"}, title: "animate"};
pages["/balloon"] = {};
pages["/balloon"].data = () => import("./c6082370.js");
pages["/balloon"].staticData = {_alignment: {title: "边缘对齐设置", description: "位置有十二个方向。", sourceType: "js"}, _accessibility: {title: "无障碍", description: "弹层id, 传入值才会支持无障碍。", sourceType: "js"}, _basic: {title: "基本", description: "最简单的用法。", sourceType: "js"}, _control: {title: "从浮层内关闭, 事件回调", description: "使用 `visible` ,属性控制浮层显示, 使 balloon 变为受限组件。", sourceType: "js"}, _nested: {title: "嵌套浮层问题", description: "浮层中如果又有浮层，比如在`Balloon`中有`DatePicker/Select`的浮层, `DatePicker`选择时，`Balloon`浮层也会关闭。可以用 `followTrigger`解决。", sourceType: "js"}, _triggerType: {title: "三种触发方式", description: "鼠标移入、聚集、点击。", sourceType: "js"}, _tooltip: {title: "tooltip", description: "简化的Balloon, 只能设置align, trigger和children, 触发条件是hover.", sourceType: "js"}, _onCloseClick: {title: "close按钮事件，手动控制visible", description: "使用 `visible`,属性控制浮层显示, 使balloon变为受限组件。", sourceType: "js"}, title: "balloon"};
pages["/badge"] = {};
pages["/badge"].data = () => import("./ef5b22eb.js");
pages["/badge"].staticData = {_basic: {title: "基本", description: "简单的徽章展示。", sourceType: "js"}, _change: {title: "动态", description: "展示动态变化的效果。", sourceType: "js"}, _content: {title: "自定义徽标内容", description: "通过 `content` 属性可以自定义徽标的内容，自定义内容不包含任何色彩样式，完全由使用者自己定义。", sourceType: "js"}, "_no-wrapper": {title: "独立使用", description: "不包裹任何元素即独立使用，可自定样式展示。", sourceType: "js"}, _plus: {title: "大数字", description: "超过overflow的数值，会显示`\\${overflow}+`，overflow默认值为`99`。", sourceType: "js"}, _dot: {title: "讨嫌的小红点", description: "没有具体的数字。", sourceType: "js"}, title: "badge"};
pages["/breadcrumb"] = {};
pages["/breadcrumb"].data = () => import("./9e01edf5.js");
pages["/breadcrumb"].staticData = {_basic: {title: "基本用法", description: "使用 `Breadcrumb.Item` 来设置面包屑子节点，如果设置其 `link` 属性就是 `<a />` 节点，否则为 `<span />` 节点。", sourceType: "js"}, _separator: {title: "设置分隔符", description: "也可以设置不同的分隔符。", sourceType: "js"}, _more: {title: "显示省略", description: "当超过设置的最大个数的时候，显示省略号。", sourceType: "js"}, title: "breadcrumb"};
pages["/box"] = {};
pages["/box"].data = () => import("./c9f3dd1e.js");
pages["/box"].staticData = {"_align&justify": {title: "垂直水平对齐", description: "`justify` `align` 等价于`justify-contents` `align-items`，用来设置 `Box` 的主轴方向、垂直主轴方向的对齐方式，即：", sourceType: "js"}, _basic: {title: "基本", description: "简单的弹性布局展示，可以通过 `spacing` 控制子元素的间距", sourceType: "js"}, _wrap: {title: "折行", description: "默认不折行，可以通过设置 `wrap` 控制折行。 受浏览器限制，本功能支持到IE11+", sourceType: "js"}, _direction: {title: "排布方向", description: "默认子元素的排布方向为 `column` ， 可以通过 `direction` 参数修改为 `row`", sourceType: "js"}, "_padding&margin": {title: "内外边距", description: "可以通过 `padding` `margin` 设置 `Box` 的内、外边距， `[10, 5]` 表示上下方向为10，左右方向为5", sourceType: "js"}, title: "box"};
pages["/avatar"] = {};
pages["/avatar"].data = () => import("./820f7737.js");
pages["/avatar"].staticData = {_type: {title: "多种类型", description: "支持三种类型：图片、Icon 以及字符，其中 Icon 和字符型可以自定义图标颜色及背景色。", sourceType: "js"}, "_with-badge": {title: "带徽标", description: "通常用于消息提示。", sourceType: "js"}, _basic: {title: "基本", description: "简单的头像展示，有三种尺寸，两种形状可选。", sourceType: "js"}, title: "avatar"};
pages["/button"] = {};
pages["/button"].data = () => import("./f8b2dbd8.js");
pages["/button"].staticData = {_basic: {title: "按钮类型", description: "按钮有三种视觉层次：主按钮、次按钮、普通按钮。不同的类型可以用来区别按钮的重要程度。", sourceType: "js"}, _accessibility: {title: "无障碍", description: "在使用不包含文本的icon Button组件时，我们需要添加`aria-label`对其进行描述，键盘操作请参考`ARIA and KeyBoard`。", sourceType: "js"}, _ghost: {title: "幽灵按钮", description: "幽灵按钮通常用在有色背景下，可以使用 `ghost` 属性开启，此时 Button 为透明背景。对于浅色背景和深色背景，通过取值 `light`, `dark` 可以配置使用幽灵按钮的场景。", sourceType: "js"}, _disabled: {title: "不可用状态", description: "添加 `disabled` 属性即可让按钮处于不可用状态，同时按钮样式也会改变。", sourceType: "js"}, _component: {title: "自定义标签类型", description: "默认情况下 Button 组件使用 `<button>` 标签来渲染按钮，通过 `component` 属性可以自定义 Button 的标签类型。", sourceType: "js"}, _group: {title: "按钮组", description: "`Button.Group` 子组件用于将多个按钮组合在一个容器中。", sourceType: "js"}, _icon: {title: "图标按钮", description: "Button 可以嵌入 Icon，默认情况下 Icon 尺寸自动跟随 Button 的尺寸。如果用户想要控制 Icon 的大小，可以通过 `iconSize` 属性进行设置。", sourceType: "js"}, "_custom-icons": {title: "自定义图标", description: "通过设置 `icons` 属性中的 `loading` 即可自定义加载的 `icon`。", sourceType: "js"}, _size: {title: "按钮尺寸", description: "可以通过设置 `size` 属性控制按钮的尺寸，可选值为 `large` `medium` `small`，其中默认值为 `medium`。", sourceType: "js"}, _loading: {title: "加载中", description: "通过设置 `loading` 属性即可以让按钮处于加载状态。", sourceType: "js"}, title: "button"};
pages["/calendar"] = {};
pages["/calendar"].data = () => import("./9e01f39a.js");
pages["/calendar"].staticData = {_card: {title: "日历卡片", description: "可以将 `card` 形态的日历组件嵌套在宽高受限的容器中。", sourceType: "js"}, _basic: {title: "全屏日历", description: "最简单的日历用法，用户可以切换年/月。", sourceType: "js"}, "_custom-cell": {title: "定制日历内容", description: "通过 `dateCellRender` 和  `monthCellRender` 用户可以在日历中添加自定义内容。", sourceType: "js"}, "_default-visible-month": {title: "日历默认展示月份", description: "日历组件默认使用当前月作为展示的月份，用户可以可以通过 `defaultVisibleMonth` 属性进行定制。并可以通过 `onVisibleMonthChange` 属性监听面板可视月份的变化。", sourceType: "js"}, _lunar: {title: "农历", description: "农历", sourceType: "js"}, _disabled: {title: "禁用日期", description: "可以通过 `disabledDate` 属性禁止用户选择某些日期。", sourceType: "js"}, _locale: {title: "多语言", description: "日期时间的多语言来源于 moment ，可以通过 `moment.locale('zh-cn')` 来设置显示中文。", sourceType: "js"}, _panel: {title: "日历面板", description: "日历面板通用用于嵌套在弹层容器中。", sourceType: "js"}, title: "calendar"};
pages["/card"] = {};
pages["/card"].data = () => import("./5d400c5f.js");
pages["/card"].staticData = {_basic: {title: "基本", description: "最简单的用法。", sourceType: "js"}, "_collapsable-head": {title: "收展框（向下推出）", sourceType: "js"}, _free: {title: "自定义卡片", description: "与子组件的组合来自定义卡片样式", sourceType: "js"}, _divider: {title: "分割线", description: "卡片分割线", sourceType: "js"}, "_collapsable-tail": {title: "收展框（向下拉出）", sourceType: "js"}, "_header-actions": {title: "Header操作", description: "Card.DropDownActions的用法。", sourceType: "js"}, _media: {title: "多媒体内容", description: "下面是一个使用图像来增强内容的卡片示例。", sourceType: "js"}, title: "card"};
pages["/cascader"] = {};
pages["/cascader"].data = () => import("./d5cc3180.js");
pages["/cascader"].staticData = {_dynamic: {title: "异步加载数据", description: "展示动态获取数据的用法。", sourceType: "js"}, _basic: {title: "基本使用", description: "展示基本的单选用法。", sourceType: "js"}, "_custom-style": {title: "自定义样式", description: "可以通过`listStyle`，`listClassName`来定制组件宽高。", sourceType: "js"}, "_expand-trigger": {title: "展开触发行为", description: "展示可通过`expandTriggerType`来设置不同的展开触发行为，支持`click`和`hover`，默认值为`click`。", sourceType: "js"}, "_multiple-control": {title: "设置父子节点选中是否关联", description: "展示受控多选以及是否开启严格受控父子节点选中不再关联的用法。", sourceType: "js"}, _multiple: {title: "多选", description: "展示基本的多选用法。", sourceType: "js"}, _source: {title: "异步加载数据", description: "展示动态获取数据的用法。", sourceType: "js"}, "_single-control": {title: "设置是否只能选择叶子项", description: "展示受控单选以及是否只能选择叶子项的用法。", sourceType: "js"}, title: "cascader"};
pages["/cascader-select"] = {};
pages["/cascader-select"].data = () => import("./b26384d8.js");
pages["/cascader-select"].staticData = {_basic: {title: "基本使用", description: "展示基本的单选用法。", sourceType: "js"}, _accessibility: {title: "无障碍", description: "当聚焦在组件上时，通过`aria-labelledby`对组件进行描述。关于键盘操作请参考`ARIA and KeyBoard`。", sourceType: "js"}, "_custom-style": {title: "自定义样式", description: "可以通过 displayRender 来定制单选时展示的结果，可以通过 listStyle，listClassName 来定制组件宽高。", sourceType: "js"}, _custom: {title: "渲染 DataSource 中不存在的 value", description: "```jsx", sourceType: "js"}, _dynamic: {title: "异步加载数据", description: "展示动态获取数据的用法。", sourceType: "js"}, "_expand-trigger": {title: "展开触发行为", description: "展示可通过 expandTriggerType 来设置不同的展开触发行为，支持 click 和 hover，默认值为 click。", sourceType: "js"}, "_multiple-control": {title: "设置父子节点选中是否关联", description: "展示受控多选以及是否开启严格受控父子节点选中不再关联的用法。", sourceType: "js"}, "_single-control": {title: "设置是否只能选择叶子项", description: "展示受控单选以及是否选择即改变。", sourceType: "js"}, _multiple: {title: "多选", description: "展示基本的多选用法。", sourceType: "js"}, _search: {title: "搜索", description: "通过设置 showSearch 为 true，可以开启组件的搜索功能。", sourceType: "js"}, title: "cascader-select"};
pages["/checkbox"] = {};
pages["/checkbox"].data = () => import("./af22de23.js");
pages["/checkbox"].staticData = {_basic: {title: "基本", description: "使用 `Checkbox` 渲染的基本组件。", sourceType: "js"}, _indeterminate: {title: "中间状态组件", description: "通过使用 `indeterminate` 来渲染[中间状态](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox)的组件。", sourceType: "js"}, _control: {title: "受限组件", description: "使用 `CheckboxGroup` 渲染的组，通过设置 `value` 属性可以让组件变成[受限组件](https://facebook.github.io/react/docs/forms.html#controlled-components)。", sourceType: "js"}, _accessibility: {title: "无障碍", description: "通过`aria-label`对`Checkbox`组件进行描述。关于键盘操作请参考`ARIA and KeyBoard`。", sourceType: "js"}, _group: {title: "分组", description: "使用 `<Checkbox.Group>` 渲染 `<Checkbox>` 分组。", sourceType: "js"}, _uncontrol: {title: "非受限组件", description: "使用 `CheckboxGroup` 渲染的组，通过设置 `defaultValue` 属性可以让组件变成[非受限组件](https://facebook.github.io/react/docs/forms.html#uncontrolled-components)。", sourceType: "js"}, _nest: {title: "Checkbox嵌套使用", description: "使用 `CheckboxGroup`，通过直接嵌套 `Checkbox` 组件来渲染的组。", sourceType: "js"}, title: "checkbox"};
pages["/collapse"] = {};
pages["/collapse"].data = () => import("./0d66d87a.js");
pages["/collapse"].staticData = {_accessibility: {title: "无障碍", description: "组件内置了部分支持无障碍, 但是额外需要开发者手动事情才能完整支持无障碍: 给Collapse传入一个id, 组件会根据Collapse的id自动给每一个Panel生成Id。如果你想指定Panel的Id也可以, 给某个Panel传入Id属性,就会覆盖根据CollapseId生成的Id。", sourceType: "js"}, _basic: {title: "基本", description: "", sourceType: "js"}, _accordion: {title: "手风琴", description: "手风琴单例模式，每次只打开一个Panel。", sourceType: "js"}, _disabled: {title: "禁用", description: "", sourceType: "js"}, _datasource: {title: "数据", description: "", sourceType: "js"}, _nested: {title: "基本", description: "", sourceType: "js"}, _event: {title: "事件", description: "1. 所有的Panel不传入Key,自动分配key为index", sourceType: "js"}, title: "collapse"};
pages["/config-provider"] = {};
pages["/config-provider"].data = () => import("./de8d2387.js");
pages["/config-provider"].staticData = {_basic: {title: "基本", description: "最简单的用法，展示 ConfigProvider 是如何工作的。", sourceType: "js"}, _consumer: {title: "使用 Consumer 组件读取上下文中的数据", description: "使用 `<Consumer>` 可以方便地读取 `<ConfigProvider>` 中上下文的数据", sourceType: "js"}, _components: {title: "支持国际化的组件", description: "展示目前 Next 组件中支持国际化的组件。", sourceType: "js"}, "_error-boundary": {title: "ErrorBoundary 捕获错误", description: "使用 `<ErrorBoundary>` 可以避免由于局部区域的错误，所引起的页面白屏。", sourceType: "js"}, _locale: {title: "国际化", description: "展示如何配合 ConfigProvider 实现具有国际化能力的组件。", sourceType: "js"}, _rtl: {title: "组件的RTL", description: "组件RTL样式展示(目前部分支持)", sourceType: "js"}, title: "config-provider"};
pages["/date-picker"] = {};
pages["/date-picker"].data = () => import("./b68bd5e8.js");
pages["/date-picker"].staticData = {_basic: {title: "基本用法", description: "最基本的用法。可以通过 `onChange` 监听选中值的变化。", sourceType: "js"}, _accessibility: {title: "无障碍", description: "支持手动输入或键盘操作，请参考`ARIA and KeyBoard`。", sourceType: "js"}, "_custom-range-picker": {title: "自定义日期范围选择", description: "如果默认的 RangePicker 在交互上无法满足您的使用需求，还可以基于 DatePicker 封装实现类似的功能。", sourceType: "js"}, "_disabled-date": {title: "禁止选择某些日期", description: "可以通过 `disabledDate` 属性来禁止用户选择或输入某些特定日期。", sourceType: "js"}, "_default-visible-month": {title: "面板的默认展现日期", description: "可以通过 `defaultVisibleMonth` 或 `defaultVisibleYear` 属性可以修改面板的默认展现日期。", sourceType: "js"}, _disabled: {title: "禁用日期选择", description: "当开启 `disabled` 属性时，选择框处于完全禁用状态。", sourceType: "js"}, _default: {title: "提供默认值", description: "可以通过 `defaultValue` 属性为日期选择器提供初值，所提供的初值必须为 moment 对象。", sourceType: "js"}, _footer: {title: "自定义面板页脚", description: "可以通过 `footerRender` 自定义对面板页脚的定制。", sourceType: "js"}, _field: {title: "与 Field 结合", description: "与 Field 结合使用，简单示范自定义返回值", sourceType: "js"}, _popup: {title: "自定义日期选择器弹层", description: "组件对外透出了 `visible`, `defaultVisible`, `onVisibleChange`, `popupTriggerType`, `popupAlign`, `popupContainer`, `popupStyle`, `popupClassName` 等属性用于直接定制弹层。此外，如果这些属性仍然无法满足需求，可以通过 `popupProps` 进行透传。", sourceType: "js"}, _format: {title: "日期格式", description: "通过 `format` 属性可以约束日期选择器的日期格式，该格式同时会限定用户的输入格式。", sourceType: "js"}, _size: {title: "不同尺寸", description: "通过 `size` 属性可以改变 Input 组件的尺寸，默认为 `medium`。", sourceType: "js"}, "_show-time": {title: "日期时间选择", description: "如果需要同时选择时间，可以通过 `showTime` 属性开启，`showTime` 支持传入 TimePickerPanel 的属性，例如 `format`, `defaultValue` 等。", sourceType: "js"}, title: "date-picker"};
pages["/dialog"] = {};
pages["/dialog"].data = () => import("./d52d31f9.js");
pages["/dialog"].staticData = {"_customize-footer": {title: "自定义底部", description: "默认的 footer 为确定取消两个按钮，你可以自定义 footer 的内容。", sourceType: "js"}, "_fixed-height": {title: "定制底部按钮", description: "使用 'height' 道具设置 Dialog 高度风格。还将页尾底部的位置。", sourceType: "js"}, _accessibility: {title: "无障碍", description: "通过`okProps`与`cancelProps`设置`aria-label`属性，屏幕阅读器读取确定和取消按钮。关于键盘操作请参考`ARIA and KeyBoard`。", sourceType: "js"}, _basic: {title: "基本", description: "第一个对话框", sourceType: "js"}, _promise: {title: "延迟关闭", description: "在使用 Dialog.alert，Dialog.confirm 以及 Dialog.show 时，如果 onOk 返回 Promise，对话框会在 Promise resolve 时关闭，除非调用 `resolve(false)`。", sourceType: "js"}, _footer: {title: "定制底部按钮", description: "通过 footerActions 来调整确定按钮和取消按钮是否出现以及相互间的位置，通过 footerAlign 来调整底部按钮的对齐方式。", sourceType: "js"}, "_large-content": {title: "内容较多的对话框", description: "当对话框高度超过浏览器视口高度时，默认会让对话框 Body 区域出现滚动条，以保证底部按钮可以直接出现在视口内，方便操作，如果你想不想出现滚动条，而是展示对话框内所有内容，请设置 isFullScreen 为 true。", sourceType: "js"}, "_should-update-position": {title: "更新位置", description: "通过设置 shouldUpdatePosition 为 true 来及时更新对话框的位置，一般用于对话框内容发生变化但是仍然要保证原来对齐方式的情况", sourceType: "js"}, _withContext: {title: "withContext", description: "通过 `Dialog.withContext(({ contextDialog }) => {} )`方法，封装 使用到函数式调用弹窗 的组件（例如业务组件或者当前App等），可以将 被封装组件 代码所在上下文的context注入到contextDialog中。", sourceType: "js"}, _quick: {title: "快捷调用", description: "Dialog 提供 alert 和 confirm 的快掉调用方式，以及更底层的 show 方式。", sourceType: "js"}, "_footer-button-margin": {title: "footer按钮间距", sourceType: "js"}, title: "dialog"};
pages["/drawer"] = {};
pages["/drawer"].data = () => import("./23a2d5d8.js");
pages["/drawer"].staticData = {_basic: {title: "基本", description: "第一个抽屉", sourceType: "js"}, _double: {title: "双层抽屉", description: "双层抽屉，抽屉内打开新的抽屉", sourceType: "js"}, _select: {title: "抽屉式选择", description: "将 Select 的弹出模式换成 Drawer", sourceType: "js"}, _placement: {title: "自定义弹出方向", description: "自定义弹出方向", sourceType: "js"}, title: "drawer"};
pages["/divider"] = {};
pages["/divider"].data = () => import("./e8d773f2.js");
pages["/divider"].staticData = {_orientation: {title: "带文案的分割线", description: "通过 `orientation` 来设置分割线上文案的位置", sourceType: "js"}, _basic: {title: "基本", description: "简单的分隔符展示。", sourceType: "js"}, title: "divider"};
pages["/dropdown"] = {};
pages["/dropdown"].data = () => import("./6d605f55.js");
pages["/dropdown"].staticData = {_basic: {title: "基本", description: "最简单的用法。", sourceType: "js"}, "_trigger-type": {title: "触发的事件类型", description: "使用 triggerType 设置触发的事件类型。", sourceType: "js"}, _controlled: {title: "从弹层外关闭", description: "使用 visible 属性控制弹层显示或者隐藏，需要使用 safeNode 将其控制的元素告诉 dropdown 组件。", sourceType: "js"}, title: "dropdown"};
pages["/field"] = {};
pages["/field"].data = () => import("./af285a36.js");
pages["/field"].staticData = {_autounmout: {title: "自动卸载", description: "autoUnmount 默认为 true，当组件被 unmount 的时候会自动删除数据. autoUnmount 设置为 false 后，会一直保存数据.", sourceType: "js"}, _custom: {title: "自定义组件", description: "自己的组件如何接入Field。", sourceType: "js"}, _hooks: {title: "Hooks", description: "在 functional component 里可使用 `Field.useField` 支持 hooks. `依赖: react@^16.8`", sourceType: "js"}, _dynamic: {title: "动态表格", description: "通过 `deleteArrayValue/addArrayValue` 可以往数组格式的数据里面 删除/添加 数据, 并且自动订正其他 name 的 偏移问题", sourceType: "js"}, _onchange: {title: "关联控制", description: "组件之间的关联控制. `onChange` 统一管理。", sourceType: "js"}, _basic: {title: "基本", description: "`getValue` `setValue` `reset` 的使用", sourceType: "js"}, _normalize: {title: "自定义返回值", description: "当组件返回的数据和最终期望提交的格式不一致的时候，可以使用 `getValueFormatter` 和 `setValueFormatter` 两个函数做转换。", sourceType: "js"}, _topath: {title: "结构化解析", description: "把 `init('obj.b')` 的数据转换成 `obj={obj:{b:'value'}}`；", sourceType: "js"}, _redux: {title: "redux 中使用", description: "在 redux 中使用, 在 `componentWillReceiveProps` 更新", sourceType: "js"}, _validator: {title: "校验", description: "校验的错误信息需要用`getError`获取", sourceType: "js"}, _seterror: {title: "自定义错误", description: "自己控制组件的errors", sourceType: "js"}, _mix: {title: "组合使用", description: "多组件混合使用", sourceType: "js"}, _validatorPromise: {title: "校验 promise", description: "使用 Promise 的方式作为校验返回", sourceType: "js"}, _valuename: {title: "自定义受控字段", description: "valueName 的默认值为 value，如果为其他需要用 valueName 指定", sourceType: "js"}, title: "field"};
pages["/form"] = {};
pages["/form"].data = () => import("./fcd90d11.js");
pages["/form"].staticData = {_accessibility: {title: "无障碍", description: "对于必填项，在组件中要设置`aria-required`属性，并通过视觉设计上的高亮提示用户。", sourceType: "js"}, _base: {title: "基本", description: "拉伸浏览器的时候label宽度不变。", sourceType: "js"}, _field: {title: "复杂功能(Field)", description: "配合 `Field` 可以实现较复杂功能", sourceType: "js"}, _inline: {title: "水平", description: "", sourceType: "js"}, _custom: {title: "自定义布局", description: "标签位置：上、左", sourceType: "js"}, _mix: {title: "表单组合", description: "展示和表单相关的其他组件。", sourceType: "js"}, _inset: {title: "标签内嵌", description: '通过设置`labelAlign="inset"` (只适用于Input、Select组件，其他组件不适用)', sourceType: "js"}, _preview: {title: "预览态", description: "可以通过Form切换表单元素的预览态，切换前后布局结构相同", sourceType: "js"}, _mobile: {title: "移动端", description: "device=phone 下会强制设置 labelAlign=top", sourceType: "js"}, _redux: {title: "配合redux使用", description: "在`redux`中结合 `componentWillReceiveProps` `setValues` 使用， 配合 Field 使用", sourceType: "js"}, _register: {title: "注册", description: "验证码获取", sourceType: "js"}, _onsubmit: {title: "回车提交", description: '需要Form里面有 htmlType="submit" 的元素', sourceType: "js"}, "_redux-seterror": {title: "手动设置错误", description: "在`redux`中结合 `componentWillReceiveProps` `setErrors` 使用, 配合 Field 使用更加方便", sourceType: "js"}, "_responsive-grid": {title: "自适应布局", description: "可通过设置 `device` `responsive` 实现响应式, 1.19.0+ 添加，仅支持ie10+", sourceType: "js"}, _nest: {title: "嵌套", description: "FormItem 嵌套", sourceType: "js"}, "_validate-custom-error": {title: "校验(自定义错误)", description: "基本的表单校验例子。", sourceType: "js"}, "_validate-basic": {title: "校验", description: "基本的表单校验例子。", sourceType: "js"}, _responsive: {title: "响应式", description: "可以通过配置 `labelCol` `wrapperCol` 的 `Grid.Col` 响应式属性实现响应式", sourceType: "js"}, _top: {title: "标签在上", description: "`size` 会强制设置 `FormItem` 下的所有组件的size", sourceType: "js"}, _size: {title: "尺寸", description: "`size` 会强制设置 `FormItem` 下的所有组件的size", sourceType: "js"}, "_validate-static": {title: "校验提示", description: "为 `<FormItem>` 定义 `state` 属性控制三种校验状态。", sourceType: "js"}, "_validate-label-as-name": {title: "label作为校验提示", description: "使用 label 作为校验提示", sourceType: "js"}, title: "form"};
pages["/grid"] = {};
pages["/grid"].data = () => import("./28b6751b.js");
pages["/grid"].staticData = {_basic: {title: "基础布局", description: "通过 `Col` 的 `span` 属性指定该列宽度占整行宽度24分之几或5分之几。", sourceType: "js"}, _align: {title: "多列垂直方向对齐方式", description: "（不支持 IE9 浏览器）基于 Flex 的 align-items 和 align-self 属性实现，在 `Row` 上设置 `align` 属性，即可控制 `Row` 下面所有 `Col` 的垂直方向对齐方式：top（顶部对齐，默认），center（居中对齐），bottom（底部对齐），baseline（第一行文字的基线对齐），stretch（如果未设置高度或设为 auto，将占满整个容器的高度）；在 `Col` 上设置 `align` 属性，可允许它与其它列不一样的对齐方式，覆盖 `Row` 的 `align` 属性。", sourceType: "js"}, _breakpoint: {title: "响应式布局", description: "类似 Bootstrap 的响应式设计，预设6个响应尺寸：xxs(320px), xs(480px), s(720px), m(990px), l(1200px), xl(1500px)。", sourceType: "js"}, _gutter: {title: "列间距", description: "列与列间距默认为0，可以通过设置 `Row` 的 `gutter` 属性来改变列间距。", sourceType: "js"}, "_custom-elem-type": {title: "自定义元素渲染类型", description: "使用 `component` 来指定需要渲染的元素类型，默认为 `div`", sourceType: "js"}, _hidden: {title: "显示与隐藏", description: "提供了强大的响应式的显示与隐藏功能，支持在不同断点下的显示与隐藏。", sourceType: "js"}, _fixed: {title: "固定宽度列", description: "通过 `Col` 的 `fixedSpan` 属性来指定某列为固定宽度列，其宽度的计算方式为 20 * fixedSpan。", sourceType: "js"}, _justify: {title: "多列水平方向对齐方式", description: "（不支持 IE9 浏览器）基于 Flex 的 justify-content 属性实现，在 `Row` 上设置 `justify` 属性，即可行内多列水平方向对齐方式：start（左对齐，默认），center（居中对齐），end（右对齐），space-between（两端对齐，项目之间的间隔都相），space-around（两侧的间隔相等，列之间的间隔比列与左右两端的间隔大一倍）。", sourceType: "js"}, _wrap: {title: "溢出后是否换行", description: "（不支持 IE9 浏览器）默认列在行中宽度溢出后不会换行，如果想自动换行，请为 `Row` 设置 `wrap` 为 true。", sourceType: "js"}, "_offset-fixed": {title: "固定宽度偏移", description: "（不支持 IE9 浏览器）列可以向右偏移一定距离，该距离的计算方式和固定宽度列的宽度相同。", sourceType: "js"}, _nest: {title: "嵌套布局", description: "`Col` 下也可嵌套 `Row`，以完成更细致的布局。", sourceType: "js"}, _type: {title: "设置行的宽度", description: "默认 `Row` 的宽度被设置为100%，可以通过设置 `fixed` 属性为 true，来让 `Row` 的宽度不立刻随着是视口大小变动而变动，而是在某个断点下维持固定的宽度，也可以通过设置 `fixedWidth` 属性为某一断点值，从而固定 `Row` 的宽度，不再随着视口大小变动而变动。", sourceType: "js"}, _offset: {title: "偏移", description: "（不支持 IE9 浏览器）列可以向右偏移一定距离，该距离的计算方式和列所占宽度计算方式相同。", sourceType: "js"}, title: "grid"};
pages["/icon"] = {};
pages["/icon"].data = () => import("./a119e0a4.js");
pages["/icon"].staticData = {_accessibility: {title: "无障碍", description: '若为装饰性icon，请设置通过设置 `aria-hidden` 忽略；若为按钮类型icon，请务必设置 `role="button"` 和 `aria-label`。', sourceType: "js"}, _basic: {title: "基本", description: "展示图标基本使用方法。", sourceType: "js"}, _type: {title: "图标列表", description: "点击图标复制代码。", sourceType: "js"}, _size: {title: "尺寸", description: "ICON的尺寸包括：`xxs`，`xs`，`small`，`medium`，`large`，`xl`，`xxl`，`xxxl`, `inherit`。", sourceType: "js"}, _iconfont: {title: "使用其他源的图标", description: "直接使用 iconfont 源扩展icon，且不使用定制主题包的方式，支持svg图标", sourceType: "js"}, _style: {title: "自定义样式", description: "图标字体本质上还是文字，可以使用 style 和 className 设置图标的大小和颜色。", sourceType: "js"}, title: "icon"};
pages["/input"] = {};
pages["/input"].data = () => import("./d18faab7.js");
pages["/input"].staticData = {_addon: {title: "前后扩展", description: "", sourceType: "js"}, _accessibility: {title: "无障碍", description: "通过`aria-label`对`Input`组件进行描述。关于键盘操作请参考`ARIA and KeyBoard`。", sourceType: "js"}, _autoheight: {title: "自动高度", description: "设置 `Input` 为 多行文本域；", sourceType: "js"}, _basic: {title: "简单", description: "", sourceType: "js"}, _group: {title: "输入框组合", description: "Group 具有两边长度固定中间组件任意伸缩的能力。在Input中可以用addonBefore/addonAfter快速使用", sourceType: "js"}, _disabled: {title: "禁用状态", description: "为 `Input` 设置 `disabled` 状态；", sourceType: "js"}, _clear: {title: "清除按钮", description: "通过设置 hasClear 添加清除按钮.", sourceType: "js"}, _maxlen: {title: "最大长度", description: "最大长度 hasLimitHint 会展现限制数字; cutString 可控制是否要切割字符串, 用于只展示最大长度", sourceType: "js"}, _passwd: {title: "密码输入框", description: "设置 `Input` 为 密码类型；", sourceType: "js"}, _style: {title: "自定义样式", description: "通过style设置宽度", sourceType: "js"}, _state: {title: "错误状态", description: "为 `Input` 设置 `error` 状态；", sourceType: "js"}, _inner: {title: "水印和前后缀", description: "可以添加水印， 为input前后端增加额外内容", sourceType: "js"}, _trim: {title: "去除空格", description: "onChange返回会自动去除头尾空字符", sourceType: "js"}, title: "input"};
pages["/list"] = {};
pages["/list"].data = () => import("./73086083.js");
pages["/list"].staticData = {"_custom-loading": {title: "自定义 loading 样式", description: "自定义 `loading` 样式。", sourceType: "js"}, _basic: {title: "基本", description: "简单的列表展示。", sourceType: "js"}, _complex: {title: "大列表", description: "页面级列表展示", sourceType: "js"}, _empty: {title: "空状态", description: "无数据时候的列表展示。", sourceType: "js"}, _loading: {title: "带 loading 列表", description: "带 `loading` 的列表展示。", sourceType: "js"}, title: "list"};
pages["/loading"] = {};
pages["/loading"].data = () => import("./646d225f.js");
pages["/loading"].staticData = {_basic: {title: "基本用法", description: "最简单的用法。", sourceType: "js"}, _fullscreen: {title: "全屏", description: "全屏展示", sourceType: "js"}, _indicator: {title: "自定义Loading动画", description: "你可以自定义动画，把自己的动画元素传进去, 需要自己写动画样式", sourceType: "js"}, _size: {title: "Loading动画尺寸", description: "设置Loading动画的尺寸,只对原生的indicator管用", sourceType: "js"}, _skeleton: {title: "骨架屏", sourceType: "js"}, _state: {title: "关闭加载", description: "可切换加载状态。", sourceType: "js"}, _tipAlign: {title: "自定义提示语位置", description: "你可以选择提示语的位置,目前支持两个值 right/bottom(默认值)", sourceType: "js"}, title: "loading"};
pages["/menu"] = {};
pages["/menu"].data = () => import("./3078b27c.js");
pages["/menu"].staticData = {_accordian: {title: "内连菜单展开模式", description: "通过设置 openMode 为 'single'，可以让菜单同时只能展开一个内连子菜单，默认为可以同时展开多个。", sourceType: "js"}, _basic: {title: "基本", description: "展示最基本的用法。", sourceType: "js"}, _context: {title: "创建上下文菜单", description: "展示如何创建自定义的上下文菜单。", sourceType: "js"}, "_csutom-select": {title: "自定义菜单项选择", description: "展示自定义组合菜单项可选的用法。", sourceType: "js"}, "_popup-align": {title: "弹出菜单对齐方式", description: "可以通过设置 popupAlign 为 'outside'，使弹出菜单和父级菜单对齐。", sourceType: "js"}, _hoz: {title: "横向菜单条", description: "展示横向导航菜单条的用法。", sourceType: "js"}, _popup: {title: "弹出菜单", description: "展示弹出菜单的用法。", sourceType: "js"}, "_custom-popup": {title: "自定义弹出内容", description: "自定义菜单弹出内容。", sourceType: "js"}, _hover: {title: "hover 打开子菜单", description: "可以设置 triggerType 为 'hover'，来 hover 打开子菜单，默认点击打开子菜单。", sourceType: "js"}, "_render-more": {title: "自定义渲染更多", description: "展示渲染更多 `renderMore` 用法", sourceType: "js"}, _select: {title: "菜单项选择", description: "展示菜单项选择用法。", sourceType: "js"}, title: "menu"};
pages["/menu-button"] = {};
pages["/menu-button"].data = () => import("./74d5fd23.js");
pages["/menu-button"].staticData = {_basic: {title: "基本", description: "最简单的用法。支持 Button 的 shape, type, size, component, ghost 等属性透传。", sourceType: "js"}, _select: {title: "菜单选择模式", description: "通过 selectMode 控制菜单的选择模式。", sourceType: "js"}, _menu: {title: "菜单组", description: "支持菜单组和菜单分割线，使用方法同 `Menu.Group`, `Menu.Item`, `Menu.Divider`。", sourceType: "js"}, _size: {title: "尺寸", description: "可以通过 size 属性改变按钮大小。", sourceType: "js"}, title: "menu-button"};
pages["/message"] = {};
pages["/message"].data = () => import("./bdc79b47.js");
pages["/message"].staticData = {_accessibility: {title: "无障碍", description: "通过Enter键点击`button`时，自动聚焦到`Message`上读取信息。请参考`ARIA and KeyBoard`。", sourceType: "js"}, "_inline-close": {title: "可关闭组件", description: "通过增加`closeable`属性可以控制提示框是否可关闭。", sourceType: "js"}, _control: {title: "受控显示隐藏", description: "", sourceType: "js"}, "_toast-quick": {title: "弹窗便捷方法", description: "可以通过`Message.success`等静态方法来方便的显示指定类型的信息弹窗。", sourceType: "js"}, _shape: {title: "信息外观", description: "通过设置`shape`调整信息外观", sourceType: "js"}, _type: {title: "信息类型", description: "通过设置`type`调整信息类型", sourceType: "js"}, _toast: {title: "弹窗用法", description: "可以通过`Message.show`和`Message.hide`方法来方便的显示或隐藏反馈弹窗。", sourceType: "js"}, _withContext: {title: "withContext", description: "通过 `Message.withContext(({ contextMessage }) => {} )`方法，封装 使用到函数式调用弹窗 的组件（例如业务组件或者当前App等），可以将 被封装组件 代码所在上下文的context注入到`contextMessage`中。", sourceType: "js"}, _size: {title: "信息尺寸", description: "通过`size`设置尺寸", sourceType: "js"}, title: "message"};
pages["/modal"] = {};
pages["/modal"].data = () => import("./307851f0.js");
pages["/modal"].staticData = {_basic: {sourceType: "js"}, "_side-drawer": {sourceType: "js"}, "_title-editable": {sourceType: "js"}, title: "modal"};
pages["/nav"] = {};
pages["/nav"].data = () => import("./4d248179.js");
pages["/nav"].staticData = {_basic: {title: "基本", description: "最简单的使用方式。", sourceType: "js"}, _fixed: {title: "fixed模式", description: "固定导航下的使用方式", sourceType: "js"}, _group: {title: "分组", description: "建议只在垂直布局中使用。", sourceType: "js"}, "_icon-only": {title: "只显示图标", description: "Nav 可设置 iconOnly 属性，只显示图标，以减少占用空间。", sourceType: "js"}, _custom: {title: "定制", description: "Nav 提供了丰富的配置，可以进行个性化定制。", sourceType: "js"}, "_popup-align": {title: "对齐方式", description: '当 Nav 的 mode="popup" 时，popAlign 可控制弹出子导航的对齐方式。', sourceType: "js"}, "_open-mode": {title: "展开模式", description: '当 Nav 的 mode="inline" 时，openMode 可控制同级内联子导航的展开数量。', sourceType: "js"}, title: "nav"};
pages["/notification"] = {};
pages["/notification"].data = () => import("./553246a8.js");
pages["/notification"].staticData = {_duration: {title: "自动关闭延时", description: "自定义关闭的延迟，默认 `4.5s`, 为 `0` 时则一直存在", sourceType: "js"}, _basic: {title: "基本", description: "最简单的用法, 4.5s 后关闭", sourceType: "js"}, _level: {title: "不同类型的通知框", description: "`success`, `warning`, `error`, `notice`, `help` 类型的通知框", sourceType: "js"}, _icon: {title: "自定义图标", description: "可以设置使用的图标", sourceType: "js"}, _update: {title: "更新通知内容", description: "可以通过唯一的 key 来更新内容。", sourceType: "js"}, _position: {title: "位置", description: "可以设置通知从右上角、右下角、左下角、左上角弹出。", sourceType: "js"}, _style: {title: "自定义样式", description: "使用 style 和 className 来定义样式。", sourceType: "js"}, title: "notification"};
pages["/number-picker"] = {};
pages["/number-picker"].data = () => import("./34ee9554.js");
pages["/number-picker"].staticData = {_accessibility: {title: "无障碍", description: "组件内置了部分支持无障碍, 但是额外需要开发者手动设置才能完整支持无障碍: 设置upBtnprops以及downBtnprops，使得\b读屏软件可以正确表达按键的具体功能。设置`aria-live`目的是`NumberPicker`组件值发生改变时，读屏软件会进行读取。", sourceType: "js"}, _editable: {title: "不可直接输入", description: "用户不可直接输入编辑数据", sourceType: "js"}, _format: {title: "格式化", description: "", sourceType: "js"}, _basic: {title: "基本用法", description: "onChange 第二个参数 e.type 可以获取事件类型。", sourceType: "js"}, _limit: {title: "最大最小值", description: "min max 来限制value的最大最小值。", sourceType: "js"}, _precision: {title: "精度", description: "通过 precision 控制小数点位数", sourceType: "js"}, _mobile: {title: "移动端", description: "device=phone 下会强制设置 type=normal", sourceType: "js"}, _size: {title: "大小", description: "", sourceType: "js"}, _step: {title: "步长", description: "通过step控制每次加减步长", sourceType: "js"}, _trigger: {title: "按钮控制", description: "控制按钮一致显示、隐藏", sourceType: "js"}, _disabled: {title: "不可用", description: "不可用的 number picker。", sourceType: "js"}, title: "number-picker"};
pages["/overlay"] = {};
pages["/overlay"].data = () => import("./690e7910.js");
pages["/overlay"].staticData = {_align: {title: "对齐", description: "可以自定义对齐方式", sourceType: "js"}, _popup: {title: "触发的弹层", description: "使用 Popup 弹出一个弹层。", sourceType: "js"}, _backdrop: {title: "遮罩", description: "带有遮罩的弹层。", sourceType: "js"}, _controlled: {title: "触发的弹层受控显示隐藏", description: "展示了 Popup 受控显示隐藏的用法。", sourceType: "js"}, _scroll: {title: "弹层跟随滚动", description: "弹层默认参照 document.body 绝对定位，如果弹层显示隐藏的触发元素所在容器（一般为父节点）有滚动条，那么当容器滚动时，会发生触发元素与弹层相分离的情况，解决的办法是将弹层渲染到触发元素所在的容器中。（触发元素所在的容器，必须设置 position 样式，以完成弹层的绝对定位。）", sourceType: "js"}, _overlay: {title: "基本", description: "弹出一个弹层。", sourceType: "js"}, _nested: {title: "弹层嵌套", description: "有弹层嵌套需求时，请使用 container 属性将第二个弹层渲染到第一个弹层内部。", sourceType: "js"}, title: "overlay"};
pages["/pagination"] = {};
pages["/pagination"].data = () => import("./e40bbca0.js");
pages["/pagination"].staticData = {_control: {title: "受控分页", description: "受控分页，是指分页组件的状态由父组件维护，组件自身只负责渲染其父组件传递的值，父组件通过 `current` 属性传递当前的值。", sourceType: "js"}, "_page-size": {title: "每页显示", description: "可以通过设置 `pageSize` 属性来指定每页显示的数量。<br>", sourceType: "js"}, "_show-total": {title: "显示总数", description: "分页组件默认不显示总数，你可以通过 totalRender 自定义总数的显示结果。", sourceType: "js"}, _link: {title: "分页按钮链接", description: "可以通过指定 `link` 属性来设置页码按钮的跳转链接，方便 SEO，link 属性的值为一个包含 `{page}` 的模板字符串，Pagination 组件会将该占位符替换为具体的页码数字。", sourceType: "js"}, "_dropdown-direction": {title: "每页显示", description: "使用`popupProps` prop中的`align`属性设置下拉位置。", sourceType: "js"}, _size: {title: "分页尺寸", description: "可以通过指定 `size` 属性来设置分页的尺寸。", sourceType: "js"}, _type: {title: "分页类型", description: "可以通过指定 `type` 属性来设置分页的类型。", sourceType: "js"}, _uncontrol: {title: "非受控分页", description: "非受控分页，是指分页组件的状态由自己维护，组件值的改变可以通过 `onChange` 事件通知父组件，默认值由 `defaultCurrent` 初始化。", sourceType: "js"}, _shape: {title: "前进后退按钮只显示箭头", description: "可以通过指定 `shape` 属性来设置前进后退按钮箭头的显示方式。", sourceType: "js"}, title: "pagination"};
pages["/paragraph"] = {};
pages["/paragraph"].data = () => import("./93d32255.js");
pages["/paragraph"].staticData = {_basic: {title: "基本", description: "最简单的用法。", sourceType: "js"}, _type: {title: "长短文本", description: "用于短文本和长文本的区分，短文本的行间距会更小(一般为三行以内)", sourceType: "js"}, title: "paragraph"};
pages["/progress"] = {};
pages["/progress"].data = () => import("./29219837.js");
pages["/progress"].staticData = {_basic: {title: "基本进度条", description: "普通模式的进度条，通过 `percent` 属性指定进度，通过 `textRender` 控制右侧文本信息的展示，", sourceType: "js"}, _circle: {title: "圆形进度条", description: "通过 `shape` 属性可以改变进度指示器的外观，当取值为 `circle` 时为圆形进度条。", sourceType: "js"}, _color: {title: "颜色", description: "通过 `color` 属性可以改变进度条的颜色。Progress 有三个API可以改变进度条的颜色,其优先级为 color > progressive >  state。", sourceType: "js"}, _controlled: {title: "动态展示", description: "此时为增强模式的进度条，会根据当前进度展示不同的样式。注: css animation完成需要时间, 数据调整过于频繁会导致显示延迟。", sourceType: "js"}, _state: {title: "进度条不同状态", description: "用户可以通过 `state` 属性自定义当前进度的展现状态，可取值为 `normal`, `success`, `error` 分别表示普通、成功、失败这三种状态。", sourceType: "js"}, _progressive: {title: "Progressive", description: "当开启 `progressive` 模式时，Progress 组件会根据自身的进度自动设置展现的颜色值。", sourceType: "js"}, _percentrender: {title: "自定义百分比信息", description: "`textRender` 控制百分比信息的展示,通过自定义`textRender`个性化百分比渲染. 下面给一个 百分比进度取2位,当达到100%是显示Icon的progressbar.", sourceType: "js"}, _size: {title: "尺寸", description: "可以通过 `size` 属性制定进度条的大小。", sourceType: "js"}, title: "progress"};
pages["/radio"] = {};
pages["/radio"].data = () => import("./4f71842b.js");
pages["/radio"].staticData = {_basic: {title: "基本", description: "使用 `Radio` 渲染的基本组件。", sourceType: "js"}, _control: {title: "受限组件", description: "使用 `RadioGroup` 渲染的组，通过设置 `value` 属性可以让组件变成[受限组件](https://facebook.github.io/react/docs/forms.html#controlled-components)。", sourceType: "js"}, _button: {title: "按钮样式组件", description: '使用 `RadioGroup` 渲染的组，通过设置 `shape="button"` 可以让组件以按钮形式展示，同时可以通过 `size` 来控制组件大小。', sourceType: "js"}, _uncontrol: {title: "非受限组件", description: "使用 `RadioGroup` 渲染的组，通过设置 `defaultValue` 属性可以让组件变成[非受限组件](https://facebook.github.io/react/docs/forms.html#uncontrolled-components)。", sourceType: "js"}, _accessibility: {title: "无障碍", description: "请参考`ARIA and KeyBoard`。", sourceType: "js"}, _group: {title: "分组", description: "使用 `<Radio.Group>` 渲染 `<Radio>` 分组。", sourceType: "js"}, _nest: {title: "嵌套组件", description: "使用 `RadioGroup`，通过直接嵌套 `Radio` 组件来渲染的组。", sourceType: "js"}, _useWithGrid: {title: "使用Grid 布局", description: "使用 `Grid` 布局 `RadioGroup` 中的选项。", sourceType: "js"}, title: "radio"};
pages["/range"] = {};
pages["/range"].data = () => import("./99ac3be4.js");
pages["/range"].staticData = {_accessibility: {title: "无障碍", description: "通过Tab键或其他方式使滑块被聚焦之后，可以通过按下键盘的左右箭头来改变滑块的位置，目前只有单滑块支持无障碍。", sourceType: "js"}, _basic: {title: "基本", description: "基本滑块，当 `slider` 为 `double` 时，渲染为双滑块。当 `disabled` 为 `true` 时，滑块处于不可用状态。", sourceType: "js"}, _change: {title: "事件", description: "onChange,onProcess事件", sourceType: "js"}, _control: {title: "范围与 step", description: "与number-picker结合,外部控制,与Icon结合设置边界Icon", sourceType: "js"}, _fixedWidth: {title: "固定宽度滑动", description: "默认双滑块(`slider` 为 `double`)，且指定 `defaultValue`为区间值下可用。范围不可被改变，拖动所选区域改变始末滑块位置。", sourceType: "js"}, _marks: {title: "刻度及标识", description: "通过 `marks` 属性设置刻度及标识。", sourceType: "js"}, _reverse: {title: "选择态反转", description: "设置reverse为true, 选中态会反转。", sourceType: "js"}, _range: {title: "min,max,step", description: "可以通过 `min` 与 `max` 设置范围边界。通过 `step`(被 max - min 整除) 设置移动的最小步频。min默认为0,max默认为100.", sourceType: "js"}, _tipRender: {title: "tipRender", description: "tipRender 示例", sourceType: "js"}, title: "range"};
pages["/rating"] = {};
pages["/rating"].data = () => import("./a1a0c7a7.js");
pages["/rating"].staticData = {_accessibility: {title: "无障碍", description: "组件内置了部分支持无障碍, 但是额外需要开发者手动事情才能完整支持无障碍：给 Rating 传入一个id，就可以支持语音提示当前选择的评分。注意：如果一个页面上有多个 Rating，id 属性一定不能相同。", sourceType: "js"}, _grade: {title: "等级提示", description: "添加 `showGrade` 属性，使评分组件具有等级提示信息。", sourceType: "js"}, _basic: {title: "基本", description: "最简单的用法。", sourceType: "js"}, _disabled: {title: "只读模式", description: "设置 `disabled` 属性后，评分组件仅展示模式，不可选择。", sourceType: "js"}, _half: {title: "半星评分", description: "默认情况下评分组件只支持整数评分，通过开启 `allowHalf` 属性可以支持半星评分。", sourceType: "js"}, _size: {title: "尺寸", description: "通过 `size` 属性可以控制评分组件的大小，支持三种尺寸 `small`, `medium`, `large`。", sourceType: "js"}, title: "rating"};
pages["/search"] = {};
pages["/search"].data = () => import("./523d659e.js");
pages["/search"].staticData = {_filter: {title: "下拉框", description: "带下拉框的用法。可以设置onFilterChange事件", sourceType: "js"}, _base: {title: "基础用法", description: "", sourceType: "js"}, _combobox: {title: "联想", description: "", sourceType: "js"}, _accessibility: {title: "无障碍", description: "按下Enter键调用`onSearch`事件去处理,请参考`ARIA and KeyBoard`。", sourceType: "js"}, _type: {title: "类别", description: "简单用法", sourceType: "js"}, _size: {title: "大小", description: "通过size进行大小设置，支持large、medium", sourceType: "js"}, _custom: {title: "自定义弹层", description: "自定义下拉框内容。", sourceType: "js"}, title: "search"};
pages["/responsive-grid"] = {};
pages["/responsive-grid"].data = () => import("./85b22c6d.js");
pages["/responsive-grid"].staticData = {_basic: {title: "基本", description: "简单的栅格布局展示，Fusion Next推荐以PC为主要开发场景，自适配平板、手机端。默认使用12栅格布局，", sourceType: "js"}, title: "responsive-grid"};
pages["/select"] = {};
pages["/select"].data = () => import("./86af96ee.js");
pages["/select"].staticData = {_accessibility: {title: "无障碍", description: "", sourceType: "js"}, "_combobox-basic": {title: "自动完成大小", description: "`AutoComplete` 大小、disabled、清除", sourceType: "js"}, "_combobox-fillprops": {title: "自动完成填充字段", description: "`AutoComplete` 是一个带填充功能的 Input， 通过 fillProps 选择填充 {label,value} 的哪个字段到 Input", sourceType: "js"}, _basic: {title: "基本使用", description: "简单", sourceType: "js"}, "_combobox-remote": {title: "动态数据", description: "使用动态数据填充 AutoComplete, 设置 `filterLocal` 为 false", sourceType: "js"}, "_combobox-rich-text": {title: "图文展示", description: "展示较为复杂的内容展示", sourceType: "js"}, "_customize-menu": {title: "自定义渲染", description: "通过 `itemRender` 和 `valueRender` (仅 Select) 自定义渲染的节点内容。", sourceType: "js"}, "_customize-overlay": {title: "弹层定制", description: "通过 popupContent 定制 Select 弹层， Select 使用 popupContent 中渲染出的 item 的 value 作为菜单项的key，如果没有提供或者自定义渲染 key 请使用 valueRender", sourceType: "js"}, _combobox: {title: "自动完成", description: "`AutoComplete` 继承了 `Input` 的能力，并在其基础上增加了 autoComplete 的功能。", sourceType: "js"}, "_max-count": {title: "最大数量", description: "多选模式", sourceType: "js"}, _multiple: {title: "多选", description: "多选模式, 通过 `showSearch` 可以开启搜索, 但搜索值不可用作选项", sourceType: "js"}, "_select-basic": {title: "选择器", description: "演示了 Select 的多种形态.", sourceType: "js"}, "_select-custom-menu": {title: "定制弹窗布局", description: "通过 `MenuProps` 自定义 `Select` 弹窗的头部和底部（注意 `MenuProps.header` 不能与 `hasSelectAll` 同时出现, `MenuProps.header` 优先级更高）", sourceType: "js"}, "_select-cascader": {title: "级联选择", description: "使用 Select 构建级联选择框", sourceType: "js"}, "_select-label": {title: "前后缀", description: "Select 增加前后缀", sourceType: "js"}, _tag: {title: "标签", description: "标签模式，输入的内容可以作为选项", sourceType: "js"}, "_select-custom-value": {title: "自定义 value", description: "Select 的 value 可以是任意非空类型的值，但是要保证 toString() 后是唯一的。", sourceType: "js"}, "_select-search": {title: "搜索框", description: "使用 `showSearch` 显示搜索框，如果需要动态更新 dataSource，需要关闭 filterLocal", sourceType: "js"}, "_select-options-group": {title: "分组", description: "使用 OptionGroup 针对选项进行分组，也可以使用原生的 html 标签 optgroup", sourceType: "js"}, "_select-scroll-load": {title: "滚动到底部加载", description: "通过监控 menu的 onScroll 滚动到底部的时候自动加载 dataSource", sourceType: "js"}, "_use-detail-value": {title: "对象数据", description: "`useDetailValue` 把 `value` 从字符串变成对象", sourceType: "js"}, "_virtual-select": {title: "无限滚动", description: "select 配合无限滚动", sourceType: "js"}, title: "select"};
pages["/shell"] = {};
pages["/shell"].data = () => import("./e0ef2614.js");
pages["/shell"].staticData = {"_header-global-local": {title: "头-双侧边栏", description: "头部加双侧边栏", sourceType: "js"}, _complicated: {title: "复合类型", description: "全集", sourceType: "js"}, _basic: {title: "基本", description: "基本的Shell", sourceType: "js"}, "_header-global": {title: "头-侧边栏", description: "头部加侧边栏，最通用的布局", sourceType: "js"}, title: "shell"};
pages["/split-button"] = {};
pages["/split-button"].data = () => import("./367f415f.js");
pages["/split-button"].staticData = {_basic: {title: "基本", description: "最简单的用法。支持 Button 的 type, size, component, ghost 等属性透传。", sourceType: "js"}, _accessibility: {title: "无障碍", description: "为了使得屏幕阅读器能传达右侧按钮的含义，我们可以通过`triggerProps`传递对右侧按钮的`aria-label`描述，键盘操作请参考`ARIA and KeyBoard`。", sourceType: "js"}, _menu: {title: "复杂菜单", description: "支持菜单组和菜单分割线，使用方法同 `Menu.Group`, `Menu.Item`, `Menu.Divider`。", sourceType: "js"}, _size: {title: "尺寸", description: "SplitButton 实际是上一个按钮组，通过 `size` 属性可以改变按钮组的大小。", sourceType: "js"}, _composite: {title: "复合使用", description: "复合使用菜单，监听菜单行为。", sourceType: "js"}, title: "split-button"};
pages["/slider"] = {};
pages["/slider"].data = () => import("./17d0da06.js");
pages["/slider"].staticData = {"_arrow-position": {title: "导航箭头位置", description: "轮播组件的导航按钮在默认情况下为内置模式。在多图同时导航的情况下，如果想要使用外置按钮，", sourceType: "js"}, _basic: {title: "基本", description: "轮播组件共有两种类型：单图轮播和多图同时轮播。", sourceType: "js"}, "_custom-arrow": {title: "自定义导航箭头", description: "开发者可以通过 `prevArrow` 和 `nextArrow` 两个属性传入自定义的导航箭头组件。", sourceType: "js"}, _autoplay: {title: "自动播放", description: "可以通过 `autoplay` 和 `autoplaySpeed` 属性来设置组件是否自动轮播 和 自动轮播的速度。", sourceType: "js"}, "_button-size": {title: "导航按钮尺寸", description: "可以通过`arrowSize`属性来更改导航组件的按钮尺寸，默认值为`normal`，", sourceType: "js"}, "_dots-direction": {title: "导航锚点方向", description: "通过 `dotsDirection` 可以改变导航锚点的位置，默认为 `hoz` 即水平方向。", sourceType: "js"}, "_custom-slide": {title: "使用自定义组件", description: "你可以为传递自定义组件到 Slider 组件中。前提是该组件一定要开放透传 props 到下层组件或元素，Slider 底层需要执行元素的 clone 操作。", sourceType: "js"}, "_dots-render": {title: "自定义导航锚点", description: "通过 `dotsRender` 可以自定义修改dost，通过 `dotsClass` 可覆盖dots的样式。", sourceType: "js"}, "_center-mode": {title: "居中模式", description: "居中模式可以突出显示最核心区域的内容，您可以通过设置 `centerMode` 属性址为 `true` 开启该功能。", sourceType: "js"}, "_dots-triggerType": {title: "导航锚点触发方式", description: "通过 `triggerType` 可以定义dots触发方式，共有两种触发方式：['click', 'hover'];", sourceType: "js"}, _multiple: {title: "多图轮播", description: "在单图轮播的基础上，通过指定`slidesToShow`属性值，可以同时进行多图轮播。", sourceType: "js"}, _infinite: {title: "禁止循环", description: "默认情况下，轮播组件的表现为无穷循环模式。如果你不想无穷循环，", sourceType: "js"}, _fade: {title: "Fade", description: "切换跑马灯时使用渐变效果。", sourceType: "js"}, "_pause-on-hover": {title: "悬浮时暂停", description: "可以通过设置 `pauseOnHover` 属性为 `true` 使得 Slide 在鼠标悬浮时自动停止轮播。", sourceType: "js"}, "_slider-wrapper": {title: "外部控制", description: "用户可以包装 Slider 组件，以便进行外部控制。例如通过包装组件实现外部对 Slider 组件 `autoplay` 和 `autoplaySpeed` 值的控制。", sourceType: "js"}, "_slick-goto": {title: "ActiveIndex", description: "通过 `index` 属性可以快速的定位到指定次序的 slider 。", sourceType: "js"}, "_slide-change-hook": {title: "onChange 钩子", description: "你可以利用 `onChange` 钩子函数处理一些额外的逻辑。", sourceType: "js"}, "_slide-direction": {title: "垂直滑动", description: "轮播组件可以通过 `slideDirection` 属性设置两种轮播方向。当值为 `ver` 时轮播方向为垂直方向，", sourceType: "js"}, "_slider-with-dialog": {title: "弹出来的跑马灯", description: "如果你要将 Slider 放到 Dialog 中，此时你需要关闭 Dialog 的动画，避免 Slider 在计算内部元素宽度时造成出错。", sourceType: "js"}, "_variable-width": {title: "不同的图片宽度", description: "Slider 在默认情况下会认为所有的子元素是等宽的。", sourceType: "js"}, title: "slider"};
pages["/step"] = {};
pages["/step"].data = () => import("./7dffbb56.js");
pages["/step"].staticData = {"_custom-step-item": {title: "Step.Item 自定义渲染", description: "`Step.Item` 默认有三种状态，分别是 `wait`, `process`, `finish`。", sourceType: "js"}, _basic: {title: "基本", description: "在最简单的情况下，Step 有三种类型，可以通过 `shape` 属性进行切换。", sourceType: "js"}, _controlled: {title: "受控模式", description: "默认情况下，Step 定义为展示型组件，上层组件可以通过修改传入的 current 属性值来修改当前的步骤，同时可以设置每个节点的 click 事件，来自定义回调。", sourceType: "js"}, _direction: {title: "垂直模式", description: "对于点型和圆圈型的 Step 组件而言，可以通过设置 `direction` 属性设置其展示方向为垂直。", sourceType: "js"}, _percent: {title: "图标和百分比", description: "可以在点型和圆形步骤条中使用图标，圆形步骤条还支持使用百分比。", sourceType: "js"}, "_read-only": {title: "只读模式", description: "只读模式，不可触发回调。", sourceType: "js"}, _disable: {title: "禁用步骤项", description: "可以通过在 `Step.Item` 上设置 `disabled` 属性来禁用某个步骤。", sourceType: "js"}, title: "step"};
pages["/switch"] = {};
pages["/switch"].data = () => import("./2bbd0b11.js");
pages["/switch"].staticData = {_accessibility: {title: "无障碍", description: "组件内部已支持无障碍，设置`aria-label`对组件进行描述。", sourceType: "js"}, _control: {title: "受控开关", description: "受控开关, 是指组件的值由上层组件决定, 如果开关定义了 `value` 属性, 就表示此开关是受控开关.", sourceType: "js"}, _disabled: {title: "不可用", description: "Switch 失效状态。", sourceType: "js"}, _basic: {title: "简单", description: "最简单的用法,size可设置大小。", sourceType: "js"}, title: "switch"};
pages["/tab"] = {};
pages["/tab"].data = () => import("./0da2c8ca.js");
pages["/tab"].staticData = {_basic: {title: "简单用法", description: "使用 Tab 最简单的例子。", sourceType: "js"}, "_disable-keyboard": {title: "禁止键盘事件", description: "通过 `disabledKeyboard=true` 禁止 Tab 聚焦时的键盘 `↑`,`↓`,`←` ,`→` 切换", sourceType: "js"}, _closable: {title: "可关闭选项卡", description: "可关闭选项卡，可以通过在 `Tab.Item` 上设置 `closeable` 属性设置该选项卡是否可关闭。", sourceType: "js"}, "_custom-style": {title: "自定义样式", description: "在 Tab 已有样式的基础上，可以通过 `contentStyle`, `contentClassName` 等属性自由的进行样式自定义。", sourceType: "js"}, "_custom-tab": {title: "自定义选项卡", description: "Tab 支持使用 `tabRender` 属性返回自定义组件作为选项卡内容，注意该属性接收函数作为属性值。", sourceType: "js"}, _disabled: {title: "禁用", description: "可以通过 `disabled` 属性禁用某一个选型卡。", sourceType: "js"}, "_editable-tab": {title: "可编辑的 Tab", description: "Tab 允许开发者在上层进行自由的行为控制，例如用户可以基于 Tab 开发一个标题部分双击可编辑的 Tab ，", sourceType: "js"}, _nested: {title: "选项卡嵌套", description: "可以将不同类型的选项卡进行嵌套", sourceType: "js"}, _extra: {title: "附加额外内容", description: "通过 `extra` 属性添加附加内容，请确保只在有限选项卡的情况下才使用附加内容, 该功能在选项卡溢出时会和溢出导航的按钮冲突。", sourceType: "js"}, "_excess-mode": {title: "超出时滑动", description: "当 Tab 标签非常多时，组件会自动增加滑动支持。可以用过 `excessMode` 属性切换滑动模式，该属性仅在`tabPosition`为`top`或者`bottom`时生效。", sourceType: "js"}, "_lazy-load": {title: "按需加载和自动卸载", description: "默认情况 Tab 不会提前渲染好所有的内容，而是根据 Tab 的激活情况依次进行渲染。某些时候，如果你想一次渲染好所有内容，可以设置 `lazyLoad={false}` 进行关闭。此外，某些时候，如果你想每次切换选项卡时自动卸载未激活的 Tab，可以设置 `unmountInactiveTabs` 开启。", sourceType: "js"}, _shape: {title: "形态", description: "根据使用场景及触发控件的类型，可以通过 `shape` 属性配置选项卡的类型，主要包括：", sourceType: "js"}, _position: {title: "位置", description: "包裹型选项卡支持通过 `tabPosition` 属性设置选项卡的位置，支持 `top | right | bottom | left` 四个方向。", sourceType: "js"}, _size: {title: "尺寸", description: "组件尺寸，可以通过`size`属性设置，提供`medium`(默认)和`small`两种尺寸，", sourceType: "js"}, "_trigger-type": {title: "触发类型", description: "Tab 支持 `click` 切换和 `hover` 切换两种触发类型，默认为 `click` 触发，您可以使用 `triggerType` 属性修改默认的触发类型。", sourceType: "js"}, "_tab-in-grid": {title: "在 Grid 中使用 Tab", description: "当 Tab 位于 Grid 组件的布局中时，由于 Grid 默认使用 `flex` 布局方式，当选项卡数量过多时，会导致内层元素撑起整个 `flex` 容器，此时需要给容器添加自定义样式 `overflow: hidden`。", sourceType: "js"}, title: "tab"};
pages["/table"] = {};
pages["/table"].data = () => import("./bcb540fc.js");
pages["/table"].staticData = {"_basic-columns": {title: "通过columns设置列", description: "通过 `columns` 参数设置列", sourceType: "js"}, _accessibility: {title: "无障碍", description: "通过键盘方向键浏览表格。", sourceType: "js"}, _advanced: {title: "扩展", description: "通过Table暴露的子组件进行扩展", sourceType: "js"}, _basic: {title: "简单", description: "简单的表格渲染", sourceType: "js"}, "_clear-selection": {title: "选择可控", description: "演示全选和单选受控的功能", sourceType: "js"}, "_colspan-lock-columns": {title: "行列合并与锁列", description: "锁列会可能会影响行列合并的 `colIndex`，`lock='left'`的列会被提升到第0列，多个左锁列按照出现的先后顺序，从0到1标记列索引；", sourceType: "js"}, _colspan: {title: "行列合并", description: "通过 cellProps 进行列合并。", sourceType: "js"}, _column: {title: "定制列", description: "定制显示的表格列数", sourceType: "js"}, "_custom-loading": {title: "自定义 Loading 组件", description: "", sourceType: "js"}, _crud: {title: "增删改查", description: "演示对表格的增删改查", sourceType: "js"}, _crossline: {title: "十字参考轴", description: "适用于表头比较复杂，需要做表头分类的场景。", sourceType: "js"}, _editable: {title: "可编辑的表格", description: "单元格可编辑的表格", sourceType: "js"}, _dragable: {title: "拖拽排序", description: "可拖拽的表格。拖拽功能的实现依赖react-dnd@7.x 及react-dnd-html5-backend@7.x， 它要求react react-dom 版本高于16.3.x。在线Demo可以参考 https://codesandbox.io/s/draggable-table-drt4m", sourceType: "js"}, "_expanded-complex": {title: "可展开-复杂", description: "可以通过 `expandedRowRender` 额外渲染行，但是会包含复杂的组件, 可通过 `expandedIndexSimulate` 设置 index 类型", sourceType: "js"}, "_expanded-lock": {title: "可展开-锁列", description: "`Table.StickyLock` 模式下(IE不支持，会fallback到旧有逻辑)，展开行的可视区域宽度与 `Table` 占屏幕宽度保持一致, 本模式下 `expandedRowIndent` 为 `[0, 0]`，不可修改。", sourceType: "js"}, _expanded: {title: "可展开", description: "可以通过 `expandedRowRender` 额外渲染行", sourceType: "js"}, "_filter&sort": {title: "排序与过滤", description: "示例演示了排序和过滤的特性", sourceType: "js"}, "_get-row-props": {title: "自定义Row/Cell", description: "可以重写部分原生属性，比如className style onDoubleClick等。", sourceType: "js"}, _list: {title: "分组列表", description: "分组列表展现", sourceType: "js"}, "_fixed-header": {title: "固定表头", description: "表格可以固定表头,支持sticky方式", sourceType: "js"}, "_lock-column": {title: "锁列", description: "演示表格锁列的功能。锁列不生效？点击 https://fusion.design/help.html#/faq 查看常见原因及有效解决方案", sourceType: "js"}, _mix: {title: "混合模式", description: "演示了tree模式和rowSelection模式混合", sourceType: "js"}, _pagination: {title: "分页", description: "与分页结合", sourceType: "js"}, "_multiple-header": {title: "多表头", description: "多个表头", sourceType: "js"}, "_row-selection-config": {title: "选择框属性", description: "通过 rowSelection.getProps 来控制选择框属性", sourceType: "js"}, _selection: {title: "可选择", description: "表格可选择功能", sourceType: "js"}, _resize: {title: "重设列的尺寸", description: "通过onResizeChange来让列宽可以调整", sourceType: "js"}, _style: {title: "样式", description: "自定义表格边框", sourceType: "js"}, _virtual: {title: "虚拟滚动", description: "使用 `useVirtual` 开启虚拟滚动，`scrollToRow` 滚动到指定列", sourceType: "js"}, title: "table"};
pages["/tag"] = {};
pages["/tag"].data = () => import("./8cc5fb99.js");
pages["/tag"].staticData = {_accessibility: {title: "无障碍", description: "组件已支持无障碍。关于键盘操作请参考`ARIA and KeyBoard`。", sourceType: "js"}, _basic: {title: "基本用法", description: "通过设置 `type` 属性来控制标签的展示类型，可选值包括：`normal`, `primary`", sourceType: "js"}, _closable: {title: "可关闭标签", description: "`Tag.Closeable` 可以用于一些轻量的需要选中状态的场景。", sourceType: "js"}, "_colorful-tag": {title: "彩色标签", description: "在非 `closeable` 和 `selectable` 类型下，可以通过增加 `color` 属性来为 tag 设置自定义颜色。", sourceType: "js"}, _selectable: {title: "可选中标签", description: "`Tag.Selectable` 可以用于一些轻量的需要选中状态的场景，可作为 checkbox 使用。", sourceType: "js"}, title: "tag"};
pages["/time-picker"] = {};
pages["/time-picker"].data = () => import("./ea8ca619.js");
pages["/time-picker"].staticData = {_basic: {title: "基本", description: "最简单的用法。", sourceType: "js"}, "_render-menu": {title: "自定义渲染时间选择菜单", description: "可以通过 `renderTimeMenuItems` 来自定义渲染下拉菜单每一项。", sourceType: "js"}, "_default-value": {title: "默认值", description: "可以通过 `defaultValue` 传入默认时间值，并且可以通过选择改变该值。`onChange` 回调参数的值的类型取决于 `defaultValue` 的类型。", sourceType: "js"}, _format: {title: "时间格式", description: "可以通过 `format` 属性格式化时间值，此外该属性还会影响到时间列的展示。", sourceType: "js"}, _size: {title: "尺寸", description: "TimePicker 使用和 Input 组件相同的输入框尺寸，可以通过 `size` 属性进行设置。", sourceType: "js"}, _field: {title: "结合 Field 使用", description: "配合 Field 使用", sourceType: "js"}, _disabled: {title: "禁用时分秒", description: "禁用全部和禁用部分选择项", sourceType: "js"}, _value: {title: "受控", description: "通过 `value` 和 `onChange` 实现受控，仅支持通过选择实现受控。", sourceType: "js"}, _step: {title: "步长", description: "可以通过 `hourStep`, `minuteStep`, `secondStep` 分别设置时分秒的选项间隔。", sourceType: "js"}, title: "time-picker"};
pages["/timeline"] = {};
pages["/timeline"].data = () => import("./2f7e0032.js");
pages["/timeline"].staticData = {_basic: {title: "基本", description: "最简单的用法。", sourceType: "js"}, _content: {title: "内容", description: "带内容的用法，分别添加title，content，icon的效果。", sourceType: "js"}, _fold: {title: "折叠", description: "自定义折叠区域。", sourceType: "js"}, _custom: {title: "自定义时间轴节点", description: "自定义时间轴节点。", sourceType: "js"}, _state: {title: "状态", description: "设置每个节点不同的状态。", sourceType: "js"}, _timeLeft: {title: "时间在左", description: "设置时间轴左边的内容。", sourceType: "js"}, title: "timeline"};
pages["/transfer"] = {};
pages["/transfer"].data = () => import("./6edea988.js");
pages["/transfer"].staticData = {_accessibility: {title: "无障碍", description: "通过设置`locale`去修改对无障碍支持，默认已经设置，请参考`ARIA and KeyBoard`。", sourceType: "js"}, _basic: {title: "基本", description: "最简单的用法。", sourceType: "js"}, _control: {title: "受控", description: "展示受控的用法。", sourceType: "js"}, "_custom-panel": {title: "自定义面板", description: "展示自定义面板的用法。", sourceType: "js"}, _custom: {title: "自定义", description: "展示自定义样式的用法。", sourceType: "js"}, _simple: {title: "简单模式", description: "通过设置 mode 为 'simple'，可以开启简单模式，点击选项即移动。", sourceType: "js"}, _search: {title: "搜索", description: "展示搜索的用法。", sourceType: "js"}, "_virtual-list": {title: "虚拟滚动", description: "通过设置 useVirtual 为 true，开启列表虚拟滚动", sourceType: "js"}, "_table-transfer": {title: "表格穿梭框", description: "使用 Table 组件作为自定义渲染列表。", sourceType: "js"}, _sortable: {title: "拖拽排序", description: "设置 \bsortable 属性为 true 后，可拖拽排序左右面板。", sourceType: "js"}, title: "transfer"};
pages["/tree"] = {};
pages["/tree"].data = () => import("./4adcf62e.js");
pages["/tree"].staticData = {"_control-select": {title: "单选与多选", description: "展示单选与多选的用法。", sourceType: "js"}, _data: {title: "使用数据直接生成", description: "使用 dataSource 生成树结构，除设置 key, label, children 属性外，还可传入 TreeNode 的其他属性，包括 selectable，disabled，checkable, checkboxDisabled, isLeaf 等。", sourceType: "js"}, _basic: {title: "基本", description: "最简单的用法，展示可展开，可选中，可勾选，可编辑，可右键，禁用，禁用勾选，默认展开，默认选中，默认勾选等功能。", sourceType: "js"}, "_control-check": {title: "父子节点选中是否关联", description: "展示父子节点选中是否关联的用法。", sourceType: "js"}, _draggable: {title: "拖动", description: "将节点拖拽到其他节点内部或前后。", sourceType: "js"}, _dynamic: {title: "异步加载数据", description: "点击展开节点，动态加载数据。", sourceType: "js"}, _line: {title: "带线样式", description: "展示Tree组件带线的样式外观。", sourceType: "js"}, "_node-block": {title: "树节点占满一行", description: "可以通过设置 isNodeBlock 为 true，来让树节点占满一行，isNodeBlock 也可传入一个对象，支持设置 defaultPaddingLeft（默认的左内边距）和 indent （缩进距离），另外注意 showLine \b在开启 isNodeBlock 时失效。", sourceType: "js"}, "_render-child-nodes": {title: "平铺叶子节点", description: "当最后一级都是叶子节点时，平铺展示", sourceType: "js"}, "_search-tree": {title: "可搜索的树", description: "展示可搜索的树。", sourceType: "js"}, "_virtual-tree": {title: "虚拟滚动", description: "当树的节点数比较多的时候，设置虚拟滚动提高性能，注意设置高度，且允许滚动。", sourceType: "js"}, title: "tree"};
pages["/tree-select"] = {};
pages["/tree-select"].data = () => import("./1d5ae0a0.js");
pages["/tree-select"].staticData = {_control: {title: "受控", description: "展示树选择受控的用法。", sourceType: "js"}, _accessibility: {title: "无障碍", description: "通过`aria-labelledby`对组件进行描述。关于键盘操作请参考`ARIA and KeyBoard`。", sourceType: "js"}, _check: {title: "复选框多选", description: "展示复选框多选的功能。", sourceType: "js"}, _data: {title: "使用数据直接生成", description: "使用 `dataSource` 生成树结构，除设置 label, value, key, children 属性外，还可传入 TreeNode 的其他属性，包括 selectable, disabled, checkboxDisabled, isLeaf，推荐使用 `dataSource` 而不是手动生成 `TreeNode` 的方式生成树，这样使用更简单，性能更好。", sourceType: "js"}, _basic: {title: "基本", description: "最简单的单选用法。", sourceType: "js"}, "_pro-search": {title: "搜索高级", description: "展示树选择的高级搜索用法。", sourceType: "js"}, _search: {title: "搜索用法", description: "展示树选择的搜索用法。", sourceType: "js"}, title: "tree-select"};
pages["/typography"] = {};
pages["/typography"].data = () => import("./a5717bed.js");
pages["/typography"].staticData = {_paragraph: {title: "段落", description: "一段文字", sourceType: "js"}, _basic: {title: "基本", description: "最简单的用法。", sourceType: "js"}, _text: {title: "文本", description: "内置不同样式的文本。", sourceType: "js"}, _title: {title: "标题", description: "展示不同级别的标题。", sourceType: "js"}, title: "typography"};
pages["/upload"] = {};
pages["/upload"].data = () => import("./48715e7d.js");
pages["/upload"].staticData = {_base: {title: "文件上传", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _card: {title: "卡片", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _crop: {title: "裁剪上传", description: "通过转换 dataURL to Blob to File, 构造文件对象", sourceType: "js"}, _beforeupload: {title: "上传前预处理", description: "使用beforeUpload去控制上传行为", sourceType: "js"}, _data: {title: "自定义上传参数", description: "通过 data 控制自定义参数", sourceType: "js"}, _extra: {title: "额外内容", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _accessibility: {title: "无障碍", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _dragger: {title: "拖拽上传", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _image: {title: "图片列表", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _limit: {title: "个数限制", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _maxsize: {title: "大小限制", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _oss: {title: "oss 上传", description: "需要先从后端获取 host/OSSAccessKeyId/policy/signature/key 参数，修改action和data，再利用upload能力上层", sourceType: "js"}, _paste: {title: "粘贴上传", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _submit: {title: "提交上传", description: "通过按钮点击提交上传", sourceType: "js"}, _validation: {title: "文件校验", description: "afterSelect仅在 autoUpload=false 的时候生效", sourceType: "js"}, "_with-form": {title: "内容回填", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, _text: {title: "文字列表", description: "提醒: `https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload`接口:", sourceType: "js"}, title: "upload"};
pages["/virtual-list"] = {};
pages["/virtual-list"].data = () => import("./bfd05101.js");
pages["/virtual-list"].staticData = {_basic: {title: "简单用法", description: "使用 VirtualList 最简单的例子。", sourceType: "js"}, "_initial-index": {title: "设置初始位置", description: "使用 jumpIndex 设置初始位置", sourceType: "js"}, "_item-size-getter": {title: "不等高的item", description: "使用 jumpIndex 设置初始位置, 并设置 itemSizeGetter", sourceType: "js"}, title: "virtual-list"};
pages["/404"] = {};
pages["/404"].data = () => import("./09a26de7.js");
pages["/404"].staticData = {main: {sourceType: "js"}};
pages["/"] = {};
pages["/"].data = () => import("./3924d0a4.js");
pages["/"].staticData = {main: {title: "开发环境说明", sourceType: "md"}};
;
function _defineProperty(obj2, key, value) {
  if (key in obj2) {
    Object.defineProperty(obj2, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj2[key] = value;
  }
  return obj2;
}
function ownKeys(object, enumerableOnly) {
  var keys3 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys3.push.apply(keys3, symbols);
  }
  return keys3;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$1(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var isFunction = function isFunction2(obj2) {
  return typeof obj2 === "function";
};
var MDXContext = /* @__PURE__ */ React.createContext({});
var useMDXComponents = function useMDXComponents2(components2) {
  var contextComponents = React.useContext(MDXContext);
  var allComponents = contextComponents;
  if (components2) {
    allComponents = isFunction(components2) ? components2(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components2);
  }
  return allComponents;
};
var MDXProvider = function MDXProvider2(props) {
  var allComponents = useMDXComponents(props.components);
  return /* @__PURE__ */ React.createElement(MDXContext.Provider, {
    value: allComponents
  }, props.children);
};
var TYPE_PROP_NAME = "mdxType";
var DEFAULTS = {
  inlineCode: "code",
  wrapper: function wrapper(_ref) {
    var children = _ref.children;
    return /* @__PURE__ */ React.createElement(React.Fragment, {}, children);
  }
};
var MDXCreateElement = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  var propComponents = props.components, mdxType = props.mdxType, originalType = props.originalType, parentName = props.parentName, etc = _objectWithoutProperties(props, ["components", "mdxType", "originalType", "parentName"]);
  var components2 = useMDXComponents(propComponents);
  var type = mdxType;
  var Component2 = components2["".concat(parentName, ".").concat(type)] || components2[type] || DEFAULTS[type] || originalType;
  if (propComponents) {
    return /* @__PURE__ */ React.createElement(Component2, _objectSpread2(_objectSpread2({
      ref
    }, etc), {}, {
      components: propComponents
    }));
  }
  return /* @__PURE__ */ React.createElement(Component2, _objectSpread2({
    ref
  }, etc));
});
MDXCreateElement.displayName = "MDXCreateElement";
function createElement$1(type, props) {
  var args = arguments;
  var mdxType = props && props.mdxType;
  if (typeof type === "string" || mdxType) {
    var argsLength = args.length;
    var createElementArgArray = new Array(argsLength);
    createElementArgArray[0] = MDXCreateElement;
    var newProps = {};
    for (var key in props) {
      if (hasOwnProperty.call(props, key)) {
        newProps[key] = props[key];
      }
    }
    newProps.originalType = type;
    newProps[TYPE_PROP_NAME] = typeof type === "string" ? type : mdxType;
    createElementArgArray[1] = newProps;
    for (var i = 2; i < argsLength; i++) {
      createElementArgArray[i] = args[i];
    }
    return React.createElement.apply(null, createElementArgArray);
  }
  return React.createElement.apply(null, args);
}
function getDefaultExportFromCjs$1(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function createCommonjsModule$1(fn, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function(path, base) {
      return commonjsRequire$1(path, base === void 0 || base === null ? module.path : base);
    }
  }, fn(module, module.exports), module.exports;
}
function commonjsRequire$1() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var _global = createCommonjsModule$1(function(module) {
  var global2 = module.exports = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
  if (typeof __g == "number")
    __g = global2;
});
var _core = createCommonjsModule$1(function(module) {
  var core = module.exports = {
    version: "2.6.11"
  };
  if (typeof __e == "number")
    __e = core;
});
var _aFunction = function(it) {
  if (typeof it != "function")
    throw TypeError(it + " is not a function!");
  return it;
};
var _ctx = function(fn, that, length) {
  _aFunction(fn);
  if (that === void 0)
    return fn;
  switch (length) {
    case 1:
      return function(a) {
        return fn.call(that, a);
      };
    case 2:
      return function(a, b2) {
        return fn.call(that, a, b2);
      };
    case 3:
      return function(a, b2, c2) {
        return fn.call(that, a, b2, c2);
      };
  }
  return function() {
    return fn.apply(that, arguments);
  };
};
var _isObject = function(it) {
  return typeof it === "object" ? it !== null : typeof it === "function";
};
var _anObject = function(it) {
  if (!_isObject(it))
    throw TypeError(it + " is not an object!");
  return it;
};
var _fails = function(exec) {
  try {
    return !!exec();
  } catch (e2) {
    return true;
  }
};
var _descriptors = !_fails(function() {
  return Object.defineProperty({}, "a", {
    get: function() {
      return 7;
    }
  }).a != 7;
});
var document$1 = _global.document;
var is = _isObject(document$1) && _isObject(document$1.createElement);
var _domCreate = function(it) {
  return is ? document$1.createElement(it) : {};
};
var _ie8DomDefine = !_descriptors && !_fails(function() {
  return Object.defineProperty(_domCreate("div"), "a", {
    get: function() {
      return 7;
    }
  }).a != 7;
});
var _toPrimitive = function(it, S) {
  if (!_isObject(it))
    return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == "function" && !_isObject(val = fn.call(it)))
    return val;
  if (typeof (fn = it.valueOf) == "function" && !_isObject(val = fn.call(it)))
    return val;
  if (!S && typeof (fn = it.toString) == "function" && !_isObject(val = fn.call(it)))
    return val;
  throw TypeError("Can't convert object to primitive value");
};
var dP = Object.defineProperty;
var f$1 = _descriptors ? Object.defineProperty : function defineProperty2(O, P, Attributes) {
  _anObject(O);
  P = _toPrimitive(P, true);
  _anObject(Attributes);
  if (_ie8DomDefine)
    try {
      return dP(O, P, Attributes);
    } catch (e2) {
    }
  if ("get" in Attributes || "set" in Attributes)
    throw TypeError("Accessors not supported!");
  if ("value" in Attributes)
    O[P] = Attributes.value;
  return O;
};
var _objectDp = {
  f: f$1
};
var _propertyDesc = function(bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value
  };
};
var _hide = _descriptors ? function(object, key, value) {
  return _objectDp.f(object, key, _propertyDesc(1, value));
} : function(object, key, value) {
  object[key] = value;
  return object;
};
var hasOwnProperty$2 = {}.hasOwnProperty;
var _has = function(it, key) {
  return hasOwnProperty$2.call(it, key);
};
var PROTOTYPE = "prototype";
var $export = function(type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL)
    source = name;
  for (key in source) {
    own = !IS_FORCED && target && target[key] !== void 0;
    if (own && _has(exports, key))
      continue;
    out = own ? target[key] : source[key];
    exports[key] = IS_GLOBAL && typeof target[key] != "function" ? source[key] : IS_BIND && own ? _ctx(out, _global) : IS_WRAP && target[key] == out ? function(C) {
      var F = function(a, b2, c2) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0:
              return new C();
            case 1:
              return new C(a);
            case 2:
              return new C(a, b2);
          }
          return new C(a, b2, c2);
        }
        return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    }(out) : IS_PROTO && typeof out == "function" ? _ctx(Function.call, out) : out;
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      if (type & $export.R && expProto && !expProto[key])
        _hide(expProto, key, out);
    }
  }
};
$export.F = 1;
$export.G = 2;
$export.S = 4;
$export.P = 8;
$export.B = 16;
$export.W = 32;
$export.U = 64;
$export.R = 128;
var _export = $export;
var toString = {}.toString;
var _cof = function(it) {
  return toString.call(it).slice(8, -1);
};
var _iobject = Object("z").propertyIsEnumerable(0) ? Object : function(it) {
  return _cof(it) == "String" ? it.split("") : Object(it);
};
var _defined = function(it) {
  if (it == void 0)
    throw TypeError("Can't call method on  " + it);
  return it;
};
var _toIobject = function(it) {
  return _iobject(_defined(it));
};
var ceil = Math.ceil;
var floor = Math.floor;
var _toInteger = function(it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};
var min = Math.min;
var _toLength = function(it) {
  return it > 0 ? min(_toInteger(it), 9007199254740991) : 0;
};
var max = Math.max;
var min$1 = Math.min;
var _toAbsoluteIndex = function(index2, length) {
  index2 = _toInteger(index2);
  return index2 < 0 ? max(index2 + length, 0) : min$1(index2, length);
};
var _arrayIncludes = function(IS_INCLUDES) {
  return function($this, el, fromIndex) {
    var O = _toIobject($this);
    var length = _toLength(O.length);
    var index2 = _toAbsoluteIndex(fromIndex, length);
    var value;
    if (IS_INCLUDES && el != el)
      while (length > index2) {
        value = O[index2++];
        if (value != value)
          return true;
      }
    else
      for (; length > index2; index2++)
        if (IS_INCLUDES || index2 in O) {
          if (O[index2] === el)
            return IS_INCLUDES || index2 || 0;
        }
    return !IS_INCLUDES && -1;
  };
};
var _library = true;
var _shared = createCommonjsModule$1(function(module) {
  var SHARED = "__core-js_shared__";
  var store = _global[SHARED] || (_global[SHARED] = {});
  (module.exports = function(key, value) {
    return store[key] || (store[key] = value !== void 0 ? value : {});
  })("versions", []).push({
    version: _core.version,
    mode: "pure",
    copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
  });
});
var id = 0;
var px = Math.random();
var _uid = function(key) {
  return "Symbol(".concat(key === void 0 ? "" : key, ")_", (++id + px).toString(36));
};
var shared = _shared("keys");
var _sharedKey = function(key) {
  return shared[key] || (shared[key] = _uid(key));
};
var arrayIndexOf = _arrayIncludes(false);
var IE_PROTO = _sharedKey("IE_PROTO");
var _objectKeysInternal = function(object, names) {
  var O = _toIobject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O)
    if (key != IE_PROTO)
      _has(O, key) && result.push(key);
  while (names.length > i)
    if (_has(O, key = names[i++])) {
      ~arrayIndexOf(result, key) || result.push(key);
    }
  return result;
};
var _enumBugKeys = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
var _objectKeys = Object.keys || function keys(O) {
  return _objectKeysInternal(O, _enumBugKeys);
};
var f$1$1 = Object.getOwnPropertySymbols;
var _objectGops = {
  f: f$1$1
};
var f$2 = {}.propertyIsEnumerable;
var _objectPie = {
  f: f$2
};
var _toObject = function(it) {
  return Object(_defined(it));
};
var $assign = Object.assign;
var _objectAssign = !$assign || _fails(function() {
  var A2 = {};
  var B = {};
  var S = Symbol();
  var K = "abcdefghijklmnopqrst";
  A2[S] = 7;
  K.split("").forEach(function(k2) {
    B[k2] = k2;
  });
  return $assign({}, A2)[S] != 7 || Object.keys($assign({}, B)).join("") != K;
}) ? function assign(target, source) {
  var T = _toObject(target);
  var aLen = arguments.length;
  var index2 = 1;
  var getSymbols = _objectGops.f;
  var isEnum2 = _objectPie.f;
  while (aLen > index2) {
    var S = _iobject(arguments[index2++]);
    var keys3 = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);
    var length = keys3.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys3[j++];
      if (!_descriptors || isEnum2.call(S, key))
        T[key] = S[key];
    }
  }
  return T;
} : $assign;
_export(_export.S + _export.F, "Object", {
  assign: _objectAssign
});
var assign2 = _core.Object.assign;
var assign$1 = createCommonjsModule$1(function(module) {
  module.exports = {
    default: assign2,
    __esModule: true
  };
});
var _extends$1 = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  var _assign2 = _interopRequireDefault(assign$1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  exports.default = _assign2.default || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
});
var _extends$1$1 = /* @__PURE__ */ getDefaultExportFromCjs$1(_extends$1);
var classCallCheck = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.default = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
});
var _classCallCheck = /* @__PURE__ */ getDefaultExportFromCjs$1(classCallCheck);
var _stringAt = function(TO_STRING) {
  return function(that, pos) {
    var s2 = String(_defined(that));
    var i = _toInteger(pos);
    var l2 = s2.length;
    var a, b2;
    if (i < 0 || i >= l2)
      return TO_STRING ? "" : void 0;
    a = s2.charCodeAt(i);
    return a < 55296 || a > 56319 || i + 1 === l2 || (b2 = s2.charCodeAt(i + 1)) < 56320 || b2 > 57343 ? TO_STRING ? s2.charAt(i) : a : TO_STRING ? s2.slice(i, i + 2) : (a - 55296 << 10) + (b2 - 56320) + 65536;
  };
};
var _redefine = _hide;
var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  _anObject(O);
  var keys3 = _objectKeys(Properties);
  var length = keys3.length;
  var i = 0;
  var P;
  while (length > i)
    _objectDp.f(O, P = keys3[i++], Properties[P]);
  return O;
};
var document$2 = _global.document;
var _html = document$2 && document$2.documentElement;
var IE_PROTO$1 = _sharedKey("IE_PROTO");
var Empty = function() {
};
var PROTOTYPE$1 = "prototype";
var createDict = function() {
  var iframe = _domCreate("iframe");
  var i = _enumBugKeys.length;
  var lt = "<";
  var gt = ">";
  var iframeDocument;
  iframe.style.display = "none";
  _html.appendChild(iframe);
  iframe.src = "javascript:";
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + "script" + gt + "document.F=Object" + lt + "/script" + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--)
    delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
  return createDict();
};
var _objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE$1] = _anObject(O);
    result = new Empty();
    Empty[PROTOTYPE$1] = null;
    result[IE_PROTO$1] = O;
  } else
    result = createDict();
  return Properties === void 0 ? result : _objectDps(result, Properties);
};
var _wks = createCommonjsModule$1(function(module) {
  var store = _shared("wks");
  var Symbol2 = _global.Symbol;
  var USE_SYMBOL = typeof Symbol2 == "function";
  var $exports = module.exports = function(name) {
    return store[name] || (store[name] = USE_SYMBOL && Symbol2[name] || (USE_SYMBOL ? Symbol2 : _uid)("Symbol." + name));
  };
  $exports.store = store;
});
var def = _objectDp.f;
var TAG = _wks("toStringTag");
var _setToStringTag = function(it, tag, stat) {
  if (it && !_has(it = stat ? it : it.prototype, TAG))
    def(it, TAG, {
      configurable: true,
      value: tag
    });
};
var IteratorPrototype = {};
_hide(IteratorPrototype, _wks("iterator"), function() {
  return this;
});
var _iterCreate = function(Constructor, NAME, next) {
  Constructor.prototype = _objectCreate(IteratorPrototype, {
    next: _propertyDesc(1, next)
  });
  _setToStringTag(Constructor, NAME + " Iterator");
};
var IE_PROTO$2 = _sharedKey("IE_PROTO");
var ObjectProto = Object.prototype;
var _objectGpo = Object.getPrototypeOf || function(O) {
  O = _toObject(O);
  if (_has(O, IE_PROTO$2))
    return O[IE_PROTO$2];
  if (typeof O.constructor == "function" && O instanceof O.constructor) {
    return O.constructor.prototype;
  }
  return O instanceof Object ? ObjectProto : null;
};
var ITERATOR = _wks("iterator");
var BUGGY = !([].keys && "next" in [].keys());
var FF_ITERATOR = "@@iterator";
var KEYS = "keys";
var VALUES = "values";
var _iterDefine = function(Base2, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  _iterCreate(Constructor, NAME, next);
  var getMethod = function(kind) {
    if (!BUGGY && kind in proto)
      return proto[kind];
    switch (kind) {
      case KEYS:
        return function keys3() {
          return new Constructor(this, kind);
        };
      case VALUES:
        return function values() {
          return new Constructor(this, kind);
        };
    }
    return function entries() {
      return new Constructor(this, kind);
    };
  };
  var TAG2 = NAME + " Iterator";
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base2.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod("entries") : void 0;
  var $anyNative = NAME == "Array" ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype2;
  if ($anyNative) {
    IteratorPrototype2 = _objectGpo($anyNative.call(new Base2()));
    if (IteratorPrototype2 !== Object.prototype && IteratorPrototype2.next) {
      _setToStringTag(IteratorPrototype2, TAG2, true);
    }
  }
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() {
      return $native.call(this);
    };
  }
  if (FORCED && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    _hide(proto, ITERATOR, $default);
  }
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED)
      for (key in methods) {
        if (!(key in proto))
          _redefine(proto, key, methods[key]);
      }
    else
      _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};
var $at = _stringAt(true);
_iterDefine(String, "String", function(iterated) {
  this._t = String(iterated);
  this._i = 0;
}, function() {
  var O = this._t;
  var index2 = this._i;
  var point;
  if (index2 >= O.length)
    return {
      value: void 0,
      done: true
    };
  point = $at(O, index2);
  this._i += point.length;
  return {
    value: point,
    done: false
  };
});
var _iterStep = function(done, value) {
  return {
    value,
    done: !!done
  };
};
var es6_array_iterator = _iterDefine(Array, "Array", function(iterated, kind) {
  this._t = _toIobject(iterated);
  this._i = 0;
  this._k = kind;
}, function() {
  var O = this._t;
  var kind = this._k;
  var index2 = this._i++;
  if (!O || index2 >= O.length) {
    this._t = void 0;
    return _iterStep(1);
  }
  if (kind == "keys")
    return _iterStep(0, index2);
  if (kind == "values")
    return _iterStep(0, O[index2]);
  return _iterStep(0, [index2, O[index2]]);
}, "values");
var TO_STRING_TAG = _wks("toStringTag");
var DOMIterables = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(",");
for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = _global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG])
    _hide(proto, TO_STRING_TAG, NAME);
}
var f$3 = _wks;
var _wksExt = {
  f: f$3
};
var iterator = _wksExt.f("iterator");
var iterator$1 = createCommonjsModule$1(function(module) {
  module.exports = {
    default: iterator,
    __esModule: true
  };
});
var _meta = createCommonjsModule$1(function(module) {
  var META2 = _uid("meta");
  var setDesc = _objectDp.f;
  var id2 = 0;
  var isExtensible = Object.isExtensible || function() {
    return true;
  };
  var FREEZE = !_fails(function() {
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function(it) {
    setDesc(it, META2, {
      value: {
        i: "O" + ++id2,
        w: {}
      }
    });
  };
  var fastKey = function(it, create8) {
    if (!_isObject(it))
      return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
    if (!_has(it, META2)) {
      if (!isExtensible(it))
        return "F";
      if (!create8)
        return "E";
      setMeta(it);
    }
    return it[META2].i;
  };
  var getWeak = function(it, create8) {
    if (!_has(it, META2)) {
      if (!isExtensible(it))
        return true;
      if (!create8)
        return false;
      setMeta(it);
    }
    return it[META2].w;
  };
  var onFreeze = function(it) {
    if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META2))
      setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY: META2,
    NEED: false,
    fastKey,
    getWeak,
    onFreeze
  };
});
var defineProperty$1 = _objectDp.f;
var _wksDefine = function(name) {
  var $Symbol2 = _core.Symbol || (_core.Symbol = {});
  if (name.charAt(0) != "_" && !(name in $Symbol2))
    defineProperty$1($Symbol2, name, {
      value: _wksExt.f(name)
    });
};
var _enumKeys = function(it) {
  var result = _objectKeys(it);
  var getSymbols = _objectGops.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum2 = _objectPie.f;
    var i = 0;
    var key;
    while (symbols.length > i)
      if (isEnum2.call(it, key = symbols[i++]))
        result.push(key);
  }
  return result;
};
var _isArray = Array.isArray || function isArray(arg) {
  return _cof(arg) == "Array";
};
var hiddenKeys = _enumBugKeys.concat("length", "prototype");
var f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames2(O) {
  return _objectKeysInternal(O, hiddenKeys);
};
var _objectGopn = {
  f: f$4
};
var gOPN = _objectGopn.f;
var toString$1 = {}.toString;
var windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
var getWindowNames = function(it) {
  try {
    return gOPN(it);
  } catch (e2) {
    return windowNames.slice();
  }
};
var f$5 = function getOwnPropertyNames3(it) {
  return windowNames && toString$1.call(it) == "[object Window]" ? getWindowNames(it) : gOPN(_toIobject(it));
};
var _objectGopnExt = {
  f: f$5
};
var gOPD = Object.getOwnPropertyDescriptor;
var f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor2(O, P) {
  O = _toIobject(O);
  P = _toPrimitive(P, true);
  if (_ie8DomDefine)
    try {
      return gOPD(O, P);
    } catch (e2) {
    }
  if (_has(O, P))
    return _propertyDesc(!_objectPie.f.call(O, P), O[P]);
};
var _objectGopd = {
  f: f$6
};
var META = _meta.KEY;
var gOPD$1 = _objectGopd.f;
var dP$1 = _objectDp.f;
var gOPN$1 = _objectGopnExt.f;
var $Symbol = _global.Symbol;
var $JSON = _global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE$2 = "prototype";
var HIDDEN = _wks("_hidden");
var TO_PRIMITIVE = _wks("toPrimitive");
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = _shared("symbol-registry");
var AllSymbols = _shared("symbols");
var OPSymbols = _shared("op-symbols");
var ObjectProto$1 = Object[PROTOTYPE$2];
var USE_NATIVE = typeof $Symbol == "function" && !!_objectGops.f;
var QObject = _global.QObject;
var setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;
var setSymbolDesc = _descriptors && _fails(function() {
  return _objectCreate(dP$1({}, "a", {
    get: function() {
      return dP$1(this, "a", {
        value: 7
      }).a;
    }
  })).a != 7;
}) ? function(it, key, D) {
  var protoDesc = gOPD$1(ObjectProto$1, key);
  if (protoDesc)
    delete ObjectProto$1[key];
  dP$1(it, key, D);
  if (protoDesc && it !== ObjectProto$1)
    dP$1(ObjectProto$1, key, protoDesc);
} : dP$1;
var wrap = function(tag) {
  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);
  sym._k = tag;
  return sym;
};
var isSymbol = USE_NATIVE && typeof $Symbol.iterator == "symbol" ? function(it) {
  return typeof it == "symbol";
} : function(it) {
  return it instanceof $Symbol;
};
var $defineProperty = function defineProperty3(it, key, D) {
  if (it === ObjectProto$1)
    $defineProperty(OPSymbols, key, D);
  _anObject(it);
  key = _toPrimitive(key, true);
  _anObject(D);
  if (_has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!_has(it, HIDDEN))
        dP$1(it, HIDDEN, _propertyDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (_has(it, HIDDEN) && it[HIDDEN][key])
        it[HIDDEN][key] = false;
      D = _objectCreate(D, {
        enumerable: _propertyDesc(0, false)
      });
    }
    return setSymbolDesc(it, key, D);
  }
  return dP$1(it, key, D);
};
var $defineProperties = function defineProperties2(it, P) {
  _anObject(it);
  var keys3 = _enumKeys(P = _toIobject(P));
  var i = 0;
  var l2 = keys3.length;
  var key;
  while (l2 > i)
    $defineProperty(it, key = keys3[i++], P[key]);
  return it;
};
var $create = function create2(it, P) {
  return P === void 0 ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = _toPrimitive(key, true));
  if (this === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key))
    return false;
  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor3(it, key) {
  it = _toIobject(it);
  key = _toPrimitive(key, true);
  if (it === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key))
    return;
  var D = gOPD$1(it, key);
  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key]))
    D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames4(it) {
  var names = gOPN$1(_toIobject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)
      result.push(key);
  }
  return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols2(it) {
  var IS_OP = it === ObjectProto$1;
  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto$1, key) : true))
      result.push(AllSymbols[key]);
  }
  return result;
};
if (!USE_NATIVE) {
  $Symbol = function Symbol2() {
    if (this instanceof $Symbol)
      throw TypeError("Symbol is not a constructor!");
    var tag = _uid(arguments.length > 0 ? arguments[0] : void 0);
    var $set = function(value) {
      if (this === ObjectProto$1)
        $set.call(OPSymbols, value);
      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag))
        this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, _propertyDesc(1, value));
    };
    if (_descriptors && setter)
      setSymbolDesc(ObjectProto$1, tag, {
        configurable: true,
        set: $set
      });
    return wrap(tag);
  };
  _redefine($Symbol[PROTOTYPE$2], "toString", function toString2() {
    return this._k;
  });
  _objectGopd.f = $getOwnPropertyDescriptor;
  _objectDp.f = $defineProperty;
  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;
  _objectPie.f = $propertyIsEnumerable;
  _objectGops.f = $getOwnPropertySymbols;
  if (_descriptors && !_library) {
    _redefine(ObjectProto$1, "propertyIsEnumerable", $propertyIsEnumerable);
  }
  _wksExt.f = function(name) {
    return wrap(_wks(name));
  };
}
_export(_export.G + _export.W + _export.F * !USE_NATIVE, {
  Symbol: $Symbol
});
for (var es6Symbols = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), j = 0; es6Symbols.length > j; )
  _wks(es6Symbols[j++]);
for (var wellKnownSymbols = _objectKeys(_wks.store), k$1 = 0; wellKnownSymbols.length > k$1; )
  _wksDefine(wellKnownSymbols[k$1++]);
_export(_export.S + _export.F * !USE_NATIVE, "Symbol", {
  for: function(key) {
    return _has(SymbolRegistry, key += "") ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
  },
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym))
      throw TypeError(sym + " is not a symbol!");
    for (var key in SymbolRegistry)
      if (SymbolRegistry[key] === sym)
        return key;
  },
  useSetter: function() {
    setter = true;
  },
  useSimple: function() {
    setter = false;
  }
});
_export(_export.S + _export.F * !USE_NATIVE, "Object", {
  create: $create,
  defineProperty: $defineProperty,
  defineProperties: $defineProperties,
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  getOwnPropertyNames: $getOwnPropertyNames,
  getOwnPropertySymbols: $getOwnPropertySymbols
});
var FAILS_ON_PRIMITIVES = _fails(function() {
  _objectGops.f(1);
});
_export(_export.S + _export.F * FAILS_ON_PRIMITIVES, "Object", {
  getOwnPropertySymbols: function getOwnPropertySymbols3(it) {
    return _objectGops.f(_toObject(it));
  }
});
$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function() {
  var S = $Symbol();
  return _stringify([S]) != "[null]" || _stringify({
    a: S
  }) != "{}" || _stringify(Object(S)) != "{}";
})), "JSON", {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i)
      args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!_isObject(replacer) && it === void 0 || isSymbol(it))
      return;
    if (!_isArray(replacer))
      replacer = function(key, value) {
        if (typeof $replacer == "function")
          value = $replacer.call(this, key, value);
        if (!isSymbol(value))
          return value;
      };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});
$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);
_setToStringTag($Symbol, "Symbol");
_setToStringTag(Math, "Math", true);
_setToStringTag(_global.JSON, "JSON", true);
_wksDefine("asyncIterator");
_wksDefine("observable");
var symbol = _core.Symbol;
var symbol$1 = createCommonjsModule$1(function(module) {
  module.exports = {
    default: symbol,
    __esModule: true
  };
});
var _typeof_1 = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  var _iterator2 = _interopRequireDefault(iterator$1);
  var _symbol2 = _interopRequireDefault(symbol$1);
  var _typeof2 = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof _symbol2.default === "function" && obj2.constructor === _symbol2.default && obj2 !== _symbol2.default.prototype ? "symbol" : typeof obj2;
  };
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  exports.default = typeof _symbol2.default === "function" && _typeof2(_iterator2.default) === "symbol" ? function(obj2) {
    return typeof obj2 === "undefined" ? "undefined" : _typeof2(obj2);
  } : function(obj2) {
    return obj2 && typeof _symbol2.default === "function" && obj2.constructor === _symbol2.default && obj2 !== _symbol2.default.prototype ? "symbol" : typeof obj2 === "undefined" ? "undefined" : _typeof2(obj2);
  };
});
var _typeof = /* @__PURE__ */ getDefaultExportFromCjs$1(_typeof_1);
var possibleConstructorReturn = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  var _typeof3 = _interopRequireDefault(_typeof_1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  exports.default = function(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self2;
  };
});
var _possibleConstructorReturn = /* @__PURE__ */ getDefaultExportFromCjs$1(possibleConstructorReturn);
var check = function(O, proto) {
  _anObject(O);
  if (!_isObject(proto) && proto !== null)
    throw TypeError(proto + ": can't set as prototype!");
};
var _setProto = {
  set: Object.setPrototypeOf || ("__proto__" in {} ? function(test, buggy, set) {
    try {
      set = _ctx(Function.call, _objectGopd.f(Object.prototype, "__proto__").set, 2);
      set(test, []);
      buggy = !(test instanceof Array);
    } catch (e2) {
      buggy = true;
    }
    return function setPrototypeOf2(O, proto) {
      check(O, proto);
      if (buggy)
        O.__proto__ = proto;
      else
        set(O, proto);
      return O;
    };
  }({}, false) : void 0),
  check
};
_export(_export.S, "Object", {
  setPrototypeOf: _setProto.set
});
var setPrototypeOf = _core.Object.setPrototypeOf;
var setPrototypeOf$1 = createCommonjsModule$1(function(module) {
  module.exports = {
    default: setPrototypeOf,
    __esModule: true
  };
});
_export(_export.S, "Object", {
  create: _objectCreate
});
var $Object = _core.Object;
var create3 = function create4(P, D) {
  return $Object.create(P, D);
};
var create$1 = createCommonjsModule$1(function(module) {
  module.exports = {
    default: create3,
    __esModule: true
  };
});
var inherits = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  var _setPrototypeOf2 = _interopRequireDefault(setPrototypeOf$1);
  var _create2 = _interopRequireDefault(create$1);
  var _typeof3 = _interopRequireDefault(_typeof_1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  exports.default = function(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
    }
    subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass)
      _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
  };
});
var _inherits = /* @__PURE__ */ getDefaultExportFromCjs$1(inherits);
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1 = typeof Symbol === "function" && Symbol.for, c$1 = b$1 ? Symbol.for("react.element") : 60103, d$1 = b$1 ? Symbol.for("react.portal") : 60106, e$1 = b$1 ? Symbol.for("react.fragment") : 60107, f$7 = b$1 ? Symbol.for("react.strict_mode") : 60108, g$1 = b$1 ? Symbol.for("react.profiler") : 60114, h$1 = b$1 ? Symbol.for("react.provider") : 60109, k$1$1 = b$1 ? Symbol.for("react.context") : 60110, l$1 = b$1 ? Symbol.for("react.async_mode") : 60111, m$1 = b$1 ? Symbol.for("react.concurrent_mode") : 60111, n$1 = b$1 ? Symbol.for("react.forward_ref") : 60112, p$1 = b$1 ? Symbol.for("react.suspense") : 60113, q$1 = b$1 ? Symbol.for("react.suspense_list") : 60120, r$1 = b$1 ? Symbol.for("react.memo") : 60115, t$1 = b$1 ? Symbol.for("react.lazy") : 60116, v$1 = b$1 ? Symbol.for("react.block") : 60121, w$1 = b$1 ? Symbol.for("react.fundamental") : 60117, x$1 = b$1 ? Symbol.for("react.responder") : 60118, y$1 = b$1 ? Symbol.for("react.scope") : 60119;
function z$1(a) {
  if (typeof a === "object" && a !== null) {
    var u = a.$$typeof;
    switch (u) {
      case c$1:
        switch (a = a.type, a) {
          case l$1:
          case m$1:
          case e$1:
          case g$1:
          case f$7:
          case p$1:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k$1$1:
              case n$1:
              case t$1:
              case r$1:
              case h$1:
                return a;
              default:
                return u;
            }
        }
      case d$1:
        return u;
    }
  }
}
function A$1(a) {
  return z$1(a) === m$1;
}
var AsyncMode$1 = l$1;
var ConcurrentMode$1 = m$1;
var ContextConsumer$1 = k$1$1;
var ContextProvider$1 = h$1;
var Element$1$1 = c$1;
var ForwardRef$1 = n$1;
var Fragment$2 = e$1;
var Lazy$1 = t$1;
var Memo$1 = r$1;
var Portal$1 = d$1;
var Profiler$2 = g$1;
var StrictMode$2 = f$7;
var Suspense$2 = p$1;
var isAsyncMode$1 = function(a) {
  return A$1(a) || z$1(a) === l$1;
};
var isConcurrentMode$1 = A$1;
var isContextConsumer$1 = function(a) {
  return z$1(a) === k$1$1;
};
var isContextProvider$1 = function(a) {
  return z$1(a) === h$1;
};
var isElement$1 = function(a) {
  return typeof a === "object" && a !== null && a.$$typeof === c$1;
};
var isForwardRef$1 = function(a) {
  return z$1(a) === n$1;
};
var isFragment$1 = function(a) {
  return z$1(a) === e$1;
};
var isLazy$1 = function(a) {
  return z$1(a) === t$1;
};
var isMemo$1 = function(a) {
  return z$1(a) === r$1;
};
var isPortal$1 = function(a) {
  return z$1(a) === d$1;
};
var isProfiler$1 = function(a) {
  return z$1(a) === g$1;
};
var isStrictMode$1 = function(a) {
  return z$1(a) === f$7;
};
var isSuspense$1 = function(a) {
  return z$1(a) === p$1;
};
var isValidElementType$1 = function(a) {
  return typeof a === "string" || typeof a === "function" || a === e$1 || a === m$1 || a === g$1 || a === f$7 || a === p$1 || a === q$1 || typeof a === "object" && a !== null && (a.$$typeof === t$1 || a.$$typeof === r$1 || a.$$typeof === h$1 || a.$$typeof === k$1$1 || a.$$typeof === n$1 || a.$$typeof === w$1 || a.$$typeof === x$1 || a.$$typeof === y$1 || a.$$typeof === v$1);
};
var typeOf$1 = z$1;
var reactIs_production_min$1 = {
  AsyncMode: AsyncMode$1,
  ConcurrentMode: ConcurrentMode$1,
  ContextConsumer: ContextConsumer$1,
  ContextProvider: ContextProvider$1,
  Element: Element$1$1,
  ForwardRef: ForwardRef$1,
  Fragment: Fragment$2,
  Lazy: Lazy$1,
  Memo: Memo$1,
  Portal: Portal$1,
  Profiler: Profiler$2,
  StrictMode: StrictMode$2,
  Suspense: Suspense$2,
  isAsyncMode: isAsyncMode$1,
  isConcurrentMode: isConcurrentMode$1,
  isContextConsumer: isContextConsumer$1,
  isContextProvider: isContextProvider$1,
  isElement: isElement$1,
  isForwardRef: isForwardRef$1,
  isFragment: isFragment$1,
  isLazy: isLazy$1,
  isMemo: isMemo$1,
  isPortal: isPortal$1,
  isProfiler: isProfiler$1,
  isStrictMode: isStrictMode$1,
  isSuspense: isSuspense$1,
  isValidElementType: isValidElementType$1,
  typeOf: typeOf$1
};
var reactIs_development$1 = createCommonjsModule$1(function(module, exports) {
});
var reactIs$1 = createCommonjsModule$1(function(module) {
  {
    module.exports = reactIs_production_min$1;
  }
});
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols$2 = Object.getOwnPropertySymbols;
var hasOwnProperty$1$1 = Object.prototype.hasOwnProperty;
var propIsEnumerable$1 = Object.prototype.propertyIsEnumerable;
function toObject$1(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative$1() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2["_" + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
      return test2[n2];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign$1 = shouldUseNative$1() ? Object.assign : function(target, source) {
  var from;
  var to = toObject$1(target);
  var symbols;
  for (var s2 = 1; s2 < arguments.length; s2++) {
    from = Object(arguments[s2]);
    for (var key in from) {
      if (hasOwnProperty$1$1.call(from, key)) {
        to[key] = from[key];
      }
    }
    if (getOwnPropertySymbols$2) {
      symbols = getOwnPropertySymbols$2(from);
      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable$1.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }
  return to;
};
var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1$1 = ReactPropTypesSecret$1;
var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);
function emptyFunction$1() {
}
function emptyFunctionWithReset$1() {
}
emptyFunctionWithReset$1.resetWarningCache = emptyFunction$1;
var factoryWithThrowingShims$1 = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1$1) {
      return;
    }
    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
    err.name = "Invariant Violation";
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset$1,
    resetWarningCache: emptyFunction$1
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
var propTypes$1 = createCommonjsModule$1(function(module) {
  {
    module.exports = factoryWithThrowingShims$1();
  }
});
function componentWillMount() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;
function polyfill(Component2) {
  var prototype = Component2.prototype;
  if (!prototype || !prototype.isReactComponent) {
    throw new Error("Can only polyfill class components");
  }
  if (typeof Component2.getDerivedStateFromProps !== "function" && typeof prototype.getSnapshotBeforeUpdate !== "function") {
    return Component2;
  }
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === "function") {
    foundWillMountName = "componentWillMount";
  } else if (typeof prototype.UNSAFE_componentWillMount === "function") {
    foundWillMountName = "UNSAFE_componentWillMount";
  }
  if (typeof prototype.componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "componentWillReceiveProps";
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
  }
  if (typeof prototype.componentWillUpdate === "function") {
    foundWillUpdateName = "componentWillUpdate";
  } else if (typeof prototype.UNSAFE_componentWillUpdate === "function") {
    foundWillUpdateName = "UNSAFE_componentWillUpdate";
  }
  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
    var componentName = Component2.displayName || Component2.name;
    var newApiName = typeof Component2.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
    throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" + componentName + " uses " + newApiName + " but also contains the following legacy lifecycles:" + (foundWillMountName !== null ? "\n  " + foundWillMountName : "") + (foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "") + (foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "") + "\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks");
  }
  if (typeof Component2.getDerivedStateFromProps === "function") {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }
  if (typeof prototype.getSnapshotBeforeUpdate === "function") {
    if (typeof prototype.componentDidUpdate !== "function") {
      throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
    }
    prototype.componentWillUpdate = componentWillUpdate;
    var componentDidUpdate = prototype.componentDidUpdate;
    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }
  return Component2;
}
var reactLifecyclesCompat_es = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  polyfill
});
var zhCN = {
  momentLocale: "zh-cn",
  Timeline: {
    expand: "展开",
    fold: "收起"
  },
  Balloon: {
    close: "关闭"
  },
  Card: {
    expand: "展开",
    fold: "收起"
  },
  Calendar: {
    today: "今天",
    now: "此刻",
    ok: "确定",
    clear: "清除",
    month: "月",
    year: "年",
    prevYear: "上一年",
    nextYear: "下一年",
    prevMonth: "上个月",
    nextMonth: "下个月",
    prevDecade: "上十年",
    nextDecade: "后十年",
    yearSelectAriaLabel: "选择年份",
    monthSelectAriaLabel: "选择月份"
  },
  DatePicker: {
    placeholder: "请选择日期",
    datetimePlaceholder: "请选择日期和时间",
    monthPlaceholder: "请选择月",
    yearPlaceholder: "请选择年",
    weekPlaceholder: "请选择周",
    now: "此刻",
    selectTime: "选择时间",
    selectDate: "选择日期",
    ok: "确定",
    clear: "清除",
    startPlaceholder: "起始日期",
    endPlaceholder: "结束日期",
    hour: "时",
    minute: "分",
    second: "秒"
  },
  Dialog: {
    close: "关闭",
    ok: "确认",
    cancel: "取消"
  },
  Drawer: {
    close: "关闭"
  },
  Message: {
    closeAriaLabel: "关闭"
  },
  Pagination: {
    prev: "上一页",
    next: "下一页",
    goTo: "到第",
    page: "页",
    go: "确定",
    total: "第{current}页，共{total}页",
    labelPrev: "上一页，当前第{current}页",
    labelNext: "下一页，当前第{current}页",
    inputAriaLabel: "请输入跳转到第几页",
    selectAriaLabel: "请选择每页显示几条",
    pageSize: "每页显示："
  },
  Input: {
    clear: "清除"
  },
  Select: {
    selectPlaceholder: "请选择",
    autoCompletePlaceholder: "请输入",
    notFoundContent: "无选项",
    maxTagPlaceholder: "已选择 {selected}/{total} 项",
    selectAll: "全选"
  },
  Table: {
    empty: "没有数据",
    ok: "确认",
    reset: "重置",
    asc: "升序",
    desc: "降序",
    expanded: "已展开",
    folded: "已折叠",
    filter: "筛选",
    selectAll: "全选"
  },
  TimePicker: {
    placeholder: "请选择时间",
    clear: "清除",
    hour: "时",
    minute: "分",
    second: "秒"
  },
  Transfer: {
    items: "项",
    item: "项",
    moveAll: "移动全部",
    searchPlaceholder: "请输入",
    moveToLeft: "撤销选中元素",
    moveToRight: "提交选中元素"
  },
  Upload: {
    card: {
      cancel: "取消",
      addPhoto: "上传图片",
      download: "下载",
      delete: "删除"
    },
    drag: {
      text: "点击或者拖动文件到虚线框内上传",
      hint: "支持 docx, xls, PDF, rar, zip, PNG, JPG 等类型的文件"
    },
    upload: {
      delete: "删除"
    }
  },
  Search: {
    buttonText: "搜索"
  },
  Tag: {
    delete: "删除"
  },
  Rating: {
    description: "评分选项"
  },
  Switch: {
    on: "已打开",
    off: "已关闭"
  },
  Tab: {
    closeAriaLabel: "关闭"
  }
};
var ieVersion = typeof document !== "undefined" ? document.documentMode : void 0;
var isProduction = function isProduction2() {
  var PRODUCTION_ENV = "production";
  var result = false;
  try {
    if (PRODUCTION_ENV === "production") {
      result = true;
    }
  } catch (err) {
  }
  return result;
};
var env = {
  ieVersion,
  isProduction
};
var _env = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ieVersion,
  isProduction,
  default: env
});
function deprecated(props, instead, component) {
  if (!isProduction() && typeof console !== "undefined" && console.error) {
    return console.error("Warning: [ " + props + " ] is deprecated at [ " + component + " ], " + ("use [ " + instead + " ] instead of it."));
  }
}
function warning(msg) {
  if (!isProduction() && typeof console !== "undefined" && console.error) {
    return console.error("Warning: " + msg);
  }
}
var _log = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  deprecated,
  warning
});
function typeOf$1$1(obj2) {
  return Object.prototype.toString.call(obj2).replace(/\[object\s|]/g, "");
}
function isArrayLike(obj2) {
  var length = !!obj2 && "length" in obj2 && obj2.length;
  var type = typeOf$1$1(obj2);
  return type === "Array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj2;
}
function isPromise(obj2) {
  return !!obj2 && ((typeof obj2 === "undefined" ? "undefined" : _typeof(obj2)) === "object" || typeof obj2 === "function") && typeof obj2.then === "function";
}
function isPlainObject(obj2) {
  if (typeOf$1$1(obj2) !== "Object") {
    return false;
  }
  var ctor = obj2.constructor;
  if (typeof ctor !== "function") {
    return false;
  }
  var prot = ctor.prototype;
  if (typeOf$1$1(prot) !== "Object") {
    return false;
  }
  if (!prot.hasOwnProperty("isPrototypeOf")) {
    return false;
  }
  return true;
}
function shallowEqual(objA, objB, compare) {
  if (objA === objB) {
    return true;
  }
  if (!objA || !objB || (typeof objA === "undefined" ? "undefined" : _typeof(objA)) + (typeof objB === "undefined" ? "undefined" : _typeof(objB)) !== "objectobject") {
    return false;
  }
  var keyA = Object.keys(objA);
  var keyB = Object.keys(objB);
  var len = keyA.length;
  if (len !== keyB.length) {
    return false;
  }
  var hasCallback = typeof compare === "function";
  for (var i = 0; i < len; i++) {
    var key = keyA[i];
    if (!Object.prototype.hasOwnProperty.call(objB, key)) {
      return false;
    }
    var valA = objA[key];
    var valB = objB[key];
    var ret = hasCallback ? compare(valA, valB, key) : void 0;
    if (ret === false || ret === void 0 && valA !== valB) {
      return false;
    }
  }
  return true;
}
function each(obj2, callback, direction) {
  var reversed = direction === -1;
  var length = obj2.length;
  var value = void 0, i = reversed ? length - 1 : 0;
  if (isArrayLike(obj2)) {
    for (; i < length && i >= 0; reversed ? i-- : i++) {
      value = callback.call(obj2[i], obj2[i], i);
      if (value === false) {
        break;
      }
    }
  } else {
    for (i in obj2) {
      if (obj2.hasOwnProperty(i)) {
        value = callback.call(obj2[i], obj2[i], i);
        if (value === false) {
          break;
        }
      }
    }
  }
  return obj2;
}
var _isInObj = function _isInObj2(key, obj2, isArray3) {
  return isArray3 ? obj2.indexOf(key) > -1 : key in obj2;
};
function pickOthers(holdProps, props) {
  var others = {};
  var isArray3 = typeOf$1$1(holdProps) === "Array";
  for (var key in props) {
    if (!_isInObj(key, holdProps, isArray3)) {
      others[key] = props[key];
    }
  }
  return others;
}
function pickAttrsWith(holdProps, prefix2) {
  var others = {};
  for (var key in holdProps) {
    if (key.match(prefix2)) {
      others[key] = holdProps[key];
    }
  }
  return others;
}
function isNil(value) {
  return value == null;
}
function deepMerge(target) {
  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }
  if (!sources.length)
    return target;
  var source = sources.shift();
  if (!isPlainObject(target)) {
    target = {};
  }
  if (isPlainObject(target) && isPlainObject(source)) {
    for (var key in source) {
      if (isPlainObject(source[key]) && !/* @__PURE__ */ React.isValidElement(source[key])) {
        var _extends2;
        if (!target[key])
          _extends$1$1(target, (_extends2 = {}, _extends2[key] = {}, _extends2));
        if (!isPlainObject(target[key])) {
          target[key] = source[key];
        }
        deepMerge(target[key], source[key]);
      } else {
        var _extends3;
        _extends$1$1(target, (_extends3 = {}, _extends3[key] = source[key], _extends3));
      }
    }
  }
  return deepMerge.apply(void 0, [target].concat(sources));
}
function isFunctionComponent(component) {
  return typeOf$1$1(component) === "Function" && component.prototype && component.prototype.isReactComponent === void 0;
}
function isClassComponent(component) {
  return typeOf$1$1(component) === "Function" && component.prototype && component.prototype.isReactComponent !== void 0;
}
function isReactFragment(component) {
  if (isNil(component)) {
    return false;
  }
  if (component.type) {
    return component.type === React.Fragment;
  }
  return component === React.Fragment;
}
var _object = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  typeOf: typeOf$1$1,
  isArrayLike,
  isPromise,
  isPlainObject,
  shallowEqual,
  each,
  pickOthers,
  pickAttrsWith,
  isNil,
  deepMerge,
  isFunctionComponent,
  isClassComponent,
  isReactFragment
});
function camelcase(str2) {
  if (!/-/.test(str2)) {
    return str2 || "";
  }
  return str2.toLowerCase().replace(/-([a-z])/g, function($0, $1) {
    return $1.toUpperCase();
  });
}
function hyphenate(str2) {
  var strType = typeOf$1$1(str2);
  if (strType !== "String") {
    warning("[ hyphenate(str: string): string ] " + ("Expected arguments[0] to be a string but get a " + strType + ".") + "It will return an empty string without any processing.");
    return "";
  }
  return str2.replace(/([A-Z])/g, function($0) {
    return "-" + $0.toLowerCase();
  });
}
function template(tpl) {
  var object = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var tplType = typeOf$1$1(tpl);
  if (tplType !== "String") {
    warning("[ template(tpl: string, object: object): string ] " + ("Expected arguments[0] to be a string but get a " + tplType + ".") + "It will return an empty string without any processing.");
    return "";
  }
  return tpl.replace(/\{[a-z]*\}/g, function(str2) {
    var key = str2.substring(1, str2.length - 1);
    return object[key] || "";
  });
}
var _string = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  camelcase,
  hyphenate,
  template
});
var hasDOM = typeof window !== "undefined" && !!window.document && !!document.createElement;
function hasClass(node, className) {
  if (!hasDOM || !node) {
    return false;
  }
  if (node.classList) {
    return node.classList.contains(className);
  } else {
    return node.className.indexOf(className) > -1;
  }
}
function addClass(node, className, _force) {
  if (!hasDOM || !node) {
    return;
  }
  if (node.classList) {
    node.classList.add(className);
  } else if (_force === true || !hasClass(node, className)) {
    node.className += " " + className;
  }
}
function removeClass(node, className, _force) {
  if (!hasDOM || !node) {
    return;
  }
  if (node.classList) {
    node.classList.remove(className);
  } else if (_force === true || hasClass(node, className)) {
    node.className = node.className.replace(className, "").replace(/\s+/g, " ").trim();
  }
}
function toggleClass(node, className) {
  if (!hasDOM || !node) {
    return false;
  }
  if (node.classList) {
    return node.classList.toggle(className);
  } else {
    var flag = hasClass(node, className);
    flag ? removeClass(node, className, true) : addClass(node, className, true);
    return !flag;
  }
}
var matches = function() {
  var matchesFn = null;
  if (hasDOM) {
    var _body = document.body || document.head;
    matchesFn = _body.matches ? "matches" : _body.webkitMatchesSelector ? "webkitMatchesSelector" : _body.msMatchesSelector ? "msMatchesSelector" : _body.mozMatchesSelector ? "mozMatchesSelector" : null;
  }
  return function(node, selector) {
    if (!hasDOM || !node) {
      return false;
    }
    return matchesFn ? node[matchesFn](selector) : false;
  };
}();
function _getComputedStyle(node) {
  return node && node.nodeType === 1 ? window.getComputedStyle(node, null) : {};
}
var PIXEL_PATTERN = /margin|padding|width|height|max|min|offset|size|top/i;
var removePixel = {
  left: 1,
  top: 1,
  right: 1,
  bottom: 1
};
function _getStyleValue(node, type, value) {
  type = type.toLowerCase();
  if (value === "auto") {
    if (type === "height") {
      return node.offsetHeight || 0;
    }
    if (type === "width") {
      return node.offsetWidth || 0;
    }
  }
  if (!(type in removePixel)) {
    removePixel[type] = PIXEL_PATTERN.test(type);
  }
  return removePixel[type] ? parseFloat(value) || 0 : value;
}
var floatMap = {
  cssFloat: 1,
  styleFloat: 1,
  float: 1
};
function getStyle(node, name) {
  if (!hasDOM || !node) {
    return null;
  }
  var style = _getComputedStyle(node);
  if (arguments.length === 1) {
    return style;
  }
  name = floatMap[name] ? "cssFloat" in node.style ? "cssFloat" : "styleFloat" : name;
  return _getStyleValue(node, name, style.getPropertyValue(hyphenate(name)) || node.style[camelcase(name)]);
}
function setStyle(node, name, value) {
  if (!hasDOM || !node) {
    return false;
  }
  if ((typeof name === "undefined" ? "undefined" : _typeof(name)) === "object" && arguments.length === 2) {
    each(name, function(val, key) {
      return setStyle(node, key, val);
    });
  } else {
    name = floatMap[name] ? "cssFloat" in node.style ? "cssFloat" : "styleFloat" : name;
    if (typeof value === "number" && PIXEL_PATTERN.test(name)) {
      value = value + "px";
    }
    node.style[camelcase(name)] = value;
  }
}
function scrollbar() {
  var scrollDiv = document.createElement("div");
  setStyle(scrollDiv, {
    position: "absolute",
    width: "100px",
    height: "100px",
    overflow: "scroll",
    top: "-9999px"
  });
  document.body && document.body.appendChild(scrollDiv);
  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  var scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;
  document.body.removeChild(scrollDiv);
  return {
    width: scrollbarWidth,
    height: scrollbarHeight
  };
}
function getOffset(node) {
  var rect = node.getBoundingClientRect();
  var win = node.ownerDocument.defaultView;
  return {
    top: rect.top + win.pageYOffset,
    left: rect.left + win.pageXOffset
  };
}
function getPixels(len) {
  var win = document.defaultView;
  if (typeof +len === "number" && !isNaN(+len)) {
    return +len;
  }
  if (typeof len === "string") {
    var PX_REG = /(\d+)px/;
    var VH_REG = /(\d+)vh/;
    if (Array.isArray(len.match(PX_REG))) {
      return +len.match(PX_REG)[1] || 0;
    }
    if (Array.isArray(len.match(VH_REG))) {
      var _1vh = win.innerHeight / 100;
      return +(len.match(VH_REG)[1] * _1vh) || 0;
    }
  }
  return 0;
}
function getClosest(dom2, selector) {
  if (!hasDOM || !dom2) {
    return null;
  }
  if (!Element.prototype.closest) {
    if (!document.documentElement.contains(dom2))
      return null;
    do {
      if (getMatches(dom2, selector))
        return dom2;
      dom2 = dom2.parentElement;
    } while (dom2 !== null);
  } else {
    return dom2.closest(selector);
  }
  return null;
}
function getMatches(dom2, selector) {
  if (!hasDOM || !dom2) {
    return null;
  }
  if (Element.prototype.matches) {
    return dom2.matches(selector);
  } else if (Element.prototype.msMatchesSelector) {
    return dom2.msMatchesSelector(selector);
  } else if (Element.prototype.webkitMatchesSelector) {
    return dom2.webkitMatchesSelector(selector);
  }
  return null;
}
var _dom = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  hasDOM,
  hasClass,
  addClass,
  removeClass,
  toggleClass,
  matches,
  getStyle,
  setStyle,
  scrollbar,
  getOffset,
  getPixels,
  getClosest,
  getMatches
});
function _off(node, eventName, callback, useCapture) {
  if (node.removeEventListener) {
    node.removeEventListener(eventName, callback, useCapture || false);
  }
}
function on(node, eventName, callback, useCapture) {
  if (node.addEventListener) {
    node.addEventListener(eventName, callback, useCapture || false);
  }
  return {
    off: function off2() {
      return _off(node, eventName, callback, useCapture);
    }
  };
}
function once(node, eventName, callback, useCapture) {
  return on(node, eventName, function __fn() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    callback.apply(this, args);
    _off(node, eventName, __fn, useCapture);
  }, useCapture);
}
var _events = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  off: _off,
  on,
  once
});
var noop = function noop2() {
};
var prevent = function prevent2() {
  return false;
};
function makeChain() {
  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  if (fns.length === 1) {
    return fns[0];
  }
  return function chainedFunction() {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    for (var i = 0, j = fns.length; i < j; i++) {
      if (fns[i] && fns[i].apply) {
        fns[i].apply(this, args);
      }
    }
  };
}
function bindCtx(ctx, fns, ns) {
  if (typeof fns === "string") {
    fns = [fns];
  }
  ns = ns || ctx;
  fns.forEach(function(fnName) {
    ns[fnName] = ns[fnName].bind(ctx);
  });
}
function promiseCall(ret, success) {
  var failure = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : noop;
  if (isPromise(ret)) {
    return ret.then(function(result) {
      success(result);
      return result;
    }).catch(function(e2) {
      failure(e2);
    });
  }
  return ret !== false ? success(ret) : failure(ret);
}
var _func = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  noop,
  prevent,
  makeChain,
  bindCtx,
  promiseCall
});
var animationEndEventNames = {
  WebkitAnimation: "webkitAnimationEnd",
  OAnimation: "oAnimationEnd",
  animation: "animationend"
};
var transitionEventNames = {
  WebkitTransition: "webkitTransitionEnd",
  OTransition: "oTransitionEnd",
  transition: "transitionend"
};
function _supportEnd(names) {
  if (!hasDOM) {
    return false;
  }
  var el = document.createElement("div");
  var ret = false;
  each(names, function(val, key) {
    if (el.style[key] !== void 0) {
      ret = {
        end: val
      };
      return false;
    }
  });
  return ret;
}
function _supportCSS(names) {
  if (!hasDOM) {
    return false;
  }
  var el = document.createElement("div");
  var ret = false;
  each(names, function(val, key) {
    each(val, function(item) {
      try {
        el.style[key] = item;
        ret = ret || el.style[key] === item;
      } catch (e2) {
      }
      return !ret;
    });
    return !ret;
  });
  return ret;
}
var animation = _supportEnd(animationEndEventNames);
var transition = _supportEnd(transitionEventNames);
var flex = _supportCSS({
  display: ["flex", "-webkit-flex", "-moz-flex", "-ms-flexbox"]
});
var _support = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  animation,
  transition,
  flex
});
var _KEYCODE = {
  BACKSPACE: 8,
  TAB: 9,
  ENTER: 13,
  SHIFT: 16,
  CTRL: 17,
  ALT: 18,
  ESC: 27,
  SPACE: 32,
  END: 35,
  HOME: 36,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40,
  PAGE_UP: 33,
  PAGE_DOWN: 34,
  ESCAPE: 27,
  LEFT_ARROW: 37,
  UP_ARROW: 38,
  RIGHT_ARROW: 39,
  DOWN_ARROW: 40,
  CONTROL: 17,
  OPTION: 18,
  CMD: 91,
  COMMAND: 91,
  DELETE: 8
};
function _isVisible(node) {
  while (node) {
    if (node === document.body || node === document.documentElement) {
      break;
    }
    if (node.style.display === "none" || node.style.visibility === "hidden") {
      return false;
    }
    node = node.parentNode;
  }
  return true;
}
function _isFocusable(node) {
  var nodeName = node.nodeName.toLowerCase();
  var tabIndex = parseInt(node.getAttribute("tabindex"), 10);
  var hasTabIndex = !isNaN(tabIndex) && tabIndex > -1;
  if (_isVisible(node)) {
    if (nodeName === "input") {
      return !node.disabled && node.type !== "hidden";
    } else if (["select", "textarea", "button"].indexOf(nodeName) > -1) {
      return !node.disabled;
    } else if (nodeName === "a") {
      return node.getAttribute("href") || hasTabIndex;
    } else {
      return hasTabIndex;
    }
  }
  return false;
}
function getFocusNodeList(node) {
  var res = [];
  var nodeList = node.querySelectorAll("*");
  each(nodeList, function(item) {
    if (_isFocusable(item)) {
      var method = item.getAttribute("data-auto-focus") ? "unshift" : "push";
      res[method](item);
    }
  });
  if (_isFocusable(node)) {
    res.unshift(node);
  }
  return res;
}
var lastFocusElement = null;
function saveLastFocusNode() {
  lastFocusElement = document.activeElement;
}
function clearLastFocusNode() {
  lastFocusElement = null;
}
function backLastFocusNode() {
  if (lastFocusElement) {
    try {
      lastFocusElement.focus();
    } catch (e2) {
    }
  }
}
function limitTabRange(node, e2) {
  if (e2.keyCode === _KEYCODE.TAB) {
    var tabNodeList = getFocusNodeList(node);
    var maxIndex = tabNodeList.length - 1;
    var index2 = tabNodeList.indexOf(document.activeElement);
    if (index2 > -1) {
      var targetIndex = index2 + (e2.shiftKey ? -1 : 1);
      targetIndex < 0 && (targetIndex = maxIndex);
      targetIndex > maxIndex && (targetIndex = 0);
      tabNodeList[targetIndex].focus();
      e2.preventDefault();
    }
  }
}
var _focus = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  getFocusNodeList,
  saveLastFocusNode,
  clearLastFocusNode,
  backLastFocusNode,
  limitTabRange
});
var timestamp = Date.now();
function _guid(prefix2) {
  prefix2 = prefix2 || "";
  return prefix2 + (timestamp++).toString(36);
}
function randomId(prefix2) {
  var max2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1e6;
  var rand = Math.ceil(Math.random() * max2);
  return prefix2 ? escapeForId(prefix2) + "-" + rand : rand.toString(10);
}
function escapeForId(text) {
  if (!text) {
    return "";
  }
  if ((typeof text === "undefined" ? "undefined" : _typeof(text)) === "object") {
    text = JSON.stringify(text);
  } else if (typeof text !== "string") {
    text = String(text);
  }
  return text.replace(/['"]/gm, "").replace(/[\s'"]/gm, "-");
}
var _htmlId = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  randomId,
  escapeForId
});
var dom = _dom;
var env$1 = _env;
var events = _events;
var func = _func;
var log = _log;
var obj = _object;
var str = _string;
var support = _support;
var focus = _focus;
var guid = _guid;
var KEYCODE = _KEYCODE;
var htmlId = _htmlId;
var parseBoundary = function parseBoundary2(input) {
  var obj2 = void 0;
  if (input === void 0 || input === null) {
    return {};
  } else if (typeof input === "boolean") {
    obj2 = {
      open: input
    };
  } else {
    obj2 = _extends$1$1({
      open: true
    }, input);
  }
  return obj2;
};
function getContextProps(props, context2, displayName) {
  var prefix2 = props.prefix, locale = props.locale, pure = props.pure, rtl = props.rtl, device = props.device, popupContainer = props.popupContainer, errorBoundary = props.errorBoundary;
  var nextPrefix = context2.nextPrefix, nextLocale = context2.nextLocale, nextPure = context2.nextPure, nextWarning = context2.nextWarning, nextRtl = context2.nextRtl, nextDevice = context2.nextDevice, nextPopupContainer = context2.nextPopupContainer, nextErrorBoundary = context2.nextErrorBoundary;
  var newPrefix = prefix2 || nextPrefix;
  var localeFromContext = void 0;
  if (nextLocale) {
    localeFromContext = nextLocale[displayName];
    if (localeFromContext) {
      localeFromContext.momentLocale = nextLocale.momentLocale;
    }
  }
  var newLocale = void 0;
  if (locale) {
    newLocale = obj.deepMerge({}, zhCN[displayName], localeFromContext, locale);
  } else if (localeFromContext) {
    newLocale = obj.deepMerge({}, zhCN[displayName], localeFromContext);
  }
  var newPure = typeof pure === "boolean" ? pure : nextPure;
  var newRtl = typeof rtl === "boolean" ? rtl : nextRtl;
  var newErrorBoundary = _extends$1$1({}, parseBoundary(nextErrorBoundary), parseBoundary(errorBoundary));
  if (!("open" in newErrorBoundary)) {
    newErrorBoundary.open = false;
  }
  return {
    prefix: newPrefix,
    locale: newLocale,
    pure: newPure,
    rtl: newRtl,
    warning: nextWarning,
    device: device || nextDevice || void 0,
    popupContainer: popupContainer || nextPopupContainer,
    errorBoundary: newErrorBoundary
  };
}
var objectWithoutProperties = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.default = function(obj2, keys3) {
    var target = {};
    for (var i in obj2) {
      if (keys3.indexOf(i) >= 0)
        continue;
      if (!Object.prototype.hasOwnProperty.call(obj2, i))
        continue;
      target[i] = obj2[i];
    }
    return target;
  };
});
var _objectWithoutProperties$1 = /* @__PURE__ */ getDefaultExportFromCjs$1(objectWithoutProperties);
var REACT_STATICS$1 = {
  childContextTypes: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS$1 = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var defineProperty$1$1 = Object.defineProperty;
var getOwnPropertyNames$1 = Object.getOwnPropertyNames;
var getOwnPropertySymbols$1$1 = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
var getPrototypeOf$1 = Object.getPrototypeOf;
var objectPrototype$1 = getPrototypeOf$1 && getPrototypeOf$1(Object);
function hoistNonReactStatics$1(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== "string") {
    if (objectPrototype$1) {
      var inheritedComponent = getPrototypeOf$1(sourceComponent);
      if (inheritedComponent && inheritedComponent !== objectPrototype$1) {
        hoistNonReactStatics$1(targetComponent, inheritedComponent, blacklist);
      }
    }
    var keys3 = getOwnPropertyNames$1(sourceComponent);
    if (getOwnPropertySymbols$1$1) {
      keys3 = keys3.concat(getOwnPropertySymbols$1$1(sourceComponent));
    }
    for (var i = 0; i < keys3.length; ++i) {
      var key = keys3[i];
      if (!REACT_STATICS$1[key] && !KNOWN_STATICS$1[key] && (!blacklist || !blacklist[key])) {
        var descriptor = getOwnPropertyDescriptor$1(sourceComponent, key);
        try {
          defineProperty$1$1(targetComponent, key, descriptor);
        } catch (e2) {
        }
      }
    }
    return targetComponent;
  }
  return targetComponent;
}
var hoistNonReactStatics_cjs$1 = hoistNonReactStatics$1;
var _class, _temp;
DefaultUI.propTypes = {
  error: propTypes$1.object,
  errorInfo: propTypes$1.object
};
function DefaultUI() {
  return "";
}
var ErrorBoundary = (_temp = _class = function(_React$Component) {
  _inherits(ErrorBoundary2, _React$Component);
  function ErrorBoundary2(props) {
    _classCallCheck(this, ErrorBoundary2);
    var _this2 = _possibleConstructorReturn(this, _React$Component.call(this, props));
    _this2.state = {
      error: null,
      errorInfo: null
    };
    return _this2;
  }
  ErrorBoundary2.prototype.componentDidCatch = function componentDidCatch(error, errorInfo) {
    this.setState({
      error,
      errorInfo
    });
    var afterCatch = this.props.afterCatch;
    if ("afterCatch" in this.props && typeof afterCatch === "function") {
      this.props.afterCatch(error, errorInfo);
    }
  };
  ErrorBoundary2.prototype.render = function render2() {
    var _props$fallbackUI = this.props.fallbackUI, FallbackUI = _props$fallbackUI === void 0 ? DefaultUI : _props$fallbackUI;
    if (this.state.errorInfo) {
      return /* @__PURE__ */ React.createElement(FallbackUI, {
        error: this.state.error,
        errorInfo: this.state.errorInfo
      });
    }
    return this.props.children;
  };
  return ErrorBoundary2;
}(React.Component), _class.propTypes = {
  children: propTypes$1.element,
  afterCatch: propTypes$1.func,
  fallbackUI: propTypes$1.func
}, _temp);
ErrorBoundary.displayName = "ErrorBoundary";
var shallowEqual$1 = obj.shallowEqual;
function getDisplayName(Component2) {
  return Component2.displayName || Component2.name || "Component";
}
var globalLocales = void 0;
var currentGlobalLanguage = "zh-cn";
var currentGlobalLocale = {};
var currentGlobalRtl = void 0;
function initLocales(locales) {
  globalLocales = locales;
  if (locales) {
    currentGlobalLocale = locales[currentGlobalLanguage];
    if (typeof currentGlobalRtl !== "boolean") {
      currentGlobalRtl = currentGlobalLocale && currentGlobalLocale.rtl;
    }
  }
}
function setLanguage(language) {
  if (globalLocales) {
    currentGlobalLanguage = language;
    currentGlobalLocale = globalLocales[language];
    if (typeof currentGlobalRtl !== "boolean") {
      currentGlobalRtl = currentGlobalLocale && currentGlobalLocale.rtl;
    }
  }
}
function setLocale(locale) {
  currentGlobalLocale = _extends$1$1({}, globalLocales ? globalLocales[currentGlobalLanguage] : {}, locale);
  if (typeof currentGlobalRtl !== "boolean") {
    currentGlobalRtl = currentGlobalLocale && currentGlobalLocale.rtl;
  }
}
function setDirection(dir) {
  currentGlobalRtl = dir === "rtl";
}
function getLocale() {
  return currentGlobalLocale;
}
function getLanguage() {
  return currentGlobalLanguage;
}
function getDirection() {
  return currentGlobalRtl;
}
function config(Component2) {
  var _class2, _temp3;
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  if (obj.isClassComponent(Component2) && Component2.prototype.shouldComponentUpdate === void 0) {
    Component2.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
      if (this.props.pure) {
        return !shallowEqual$1(this.props, nextProps) || !shallowEqual$1(this.state, nextState);
      }
      return true;
    };
  }
  var ConfigedComponent = (_temp3 = _class2 = function(_React$Component) {
    _inherits(ConfigedComponent2, _React$Component);
    function ConfigedComponent2(props, context2) {
      _classCallCheck(this, ConfigedComponent2);
      var _this2 = _possibleConstructorReturn(this, _React$Component.call(this, props, context2));
      _this2._getInstance = _this2._getInstance.bind(_this2);
      _this2._deprecated = _this2._deprecated.bind(_this2);
      return _this2;
    }
    ConfigedComponent2.prototype._getInstance = function _getInstance(ref) {
      var _this2 = this;
      this._instance = ref;
      if (this._instance && options.exportNames) {
        options.exportNames.forEach(function(name) {
          var field = _this2._instance[name];
          if (typeof field === "function") {
            _this2[name] = field.bind(_this2._instance);
          } else {
            _this2[name] = field;
          }
        });
      }
    };
    ConfigedComponent2.prototype._deprecated = function _deprecated() {
      if (this.context.nextWarning !== false) {
        log.deprecated.apply(log, arguments);
      }
    };
    ConfigedComponent2.prototype.getInstance = function getInstance() {
      return this._instance;
    };
    ConfigedComponent2.prototype.render = function render2() {
      var _props = this.props, prefix2 = _props.prefix, locale = _props.locale, pure = _props.pure, rtl = _props.rtl, device = _props.device, popupContainer = _props.popupContainer, errorBoundary = _props.errorBoundary, others = _objectWithoutProperties$1(_props, ["prefix", "locale", "pure", "rtl", "device", "popupContainer", "errorBoundary"]);
      var _context = this.context, nextPrefix = _context.nextPrefix, _context$nextLocale = _context.nextLocale, nextLocale = _context$nextLocale === void 0 ? {} : _context$nextLocale, nextPure = _context.nextPure, nextRtl = _context.nextRtl, nextDevice = _context.nextDevice, nextPopupContainer = _context.nextPopupContainer, nextErrorBoundary = _context.nextErrorBoundary;
      var displayName = options.componentName || getDisplayName(Component2);
      var contextProps = getContextProps({
        prefix: prefix2,
        locale,
        pure,
        device,
        popupContainer,
        rtl,
        errorBoundary
      }, {
        nextPrefix,
        nextLocale: _extends$1$1({}, currentGlobalLocale, nextLocale),
        nextPure,
        nextDevice,
        nextPopupContainer,
        nextRtl: typeof nextRtl === "boolean" ? nextRtl : currentGlobalRtl === true ? true : void 0,
        nextErrorBoundary
      }, displayName);
      var newContextProps = ["prefix", "locale", "pure", "rtl", "device", "popupContainer"].reduce(function(ret, name) {
        if (typeof contextProps[name] !== "undefined") {
          ret[name] = contextProps[name];
        }
        return ret;
      }, {});
      if ("pure" in newContextProps && newContextProps.pure) {
        log.warning("pure of ConfigProvider is deprecated, use Function Component or React.PureComponent");
      }
      var newOthers = options.transform ? options.transform(others, this._deprecated) : others;
      var content = /* @__PURE__ */ React.createElement(Component2, _extends$1$1({}, newOthers, newContextProps, {
        ref: obj.isClassComponent(Component2) ? this._getInstance : null
      }));
      var _contextProps$errorBo = contextProps.errorBoundary, open = _contextProps$errorBo.open, othersBoundary = _objectWithoutProperties$1(_contextProps$errorBo, ["open"]);
      return open ? /* @__PURE__ */ React.createElement(ErrorBoundary, othersBoundary, content) : content;
    };
    return ConfigedComponent2;
  }(React.Component), _class2.propTypes = _extends$1$1({}, Component2.propTypes || {}, {
    prefix: propTypes$1.string,
    locale: propTypes$1.object,
    pure: propTypes$1.bool,
    rtl: propTypes$1.bool,
    device: propTypes$1.oneOf(["tablet", "desktop", "phone"]),
    popupContainer: propTypes$1.any,
    errorBoundary: propTypes$1.oneOfType([propTypes$1.bool, propTypes$1.object])
  }), _class2.contextTypes = _extends$1$1({}, Component2.contextTypes || {}, {
    nextPrefix: propTypes$1.string,
    nextLocale: propTypes$1.object,
    nextPure: propTypes$1.bool,
    nextRtl: propTypes$1.bool,
    nextWarning: propTypes$1.bool,
    nextDevice: propTypes$1.oneOf(["tablet", "desktop", "phone"]),
    nextPopupContainer: propTypes$1.any,
    nextErrorBoundary: propTypes$1.oneOfType([propTypes$1.bool, propTypes$1.object])
  }), _temp3);
  ConfigedComponent.displayName = "ConfigedComponent";
  ConfigedComponent.displayName = "Config(" + getDisplayName(Component2) + ")";
  hoistNonReactStatics_cjs$1(ConfigedComponent, Component2);
  return ConfigedComponent;
}
var mapKeys = function mapKeys2(obj2, fn) {
  var result = {};
  for (var key in obj2) {
    if (Object.prototype.hasOwnProperty.call(obj2, key)) {
      var value = obj2[key];
      var newKey = fn(key, value);
      result[newKey] = value;
    }
  }
  return result;
};
var replaceKey = function replaceKey2(key) {
  return key.replace(/^(next)([A-Z])/, function(match, p1, p2) {
    return p2.toLowerCase();
  });
};
var transformContext = function transformContext2(source) {
  return mapKeys(source, replaceKey);
};
var Consumer = function Consumer2(_ref, context2) {
  var children = _ref.children;
  return typeof children === "function" ? children(transformContext(context2)) : null;
};
Consumer.propTypes = {
  children: propTypes$1.func
};
Consumer.contextTypes = {
  nextPrefix: propTypes$1.string,
  nextLocale: propTypes$1.object,
  nextPure: propTypes$1.bool,
  newRtl: propTypes$1.bool,
  nextWarning: propTypes$1.bool,
  nextDevice: propTypes$1.oneOf(["tablet", "desktop", "phone"]),
  nextPopupContainer: propTypes$1.any
};
var Cache = function() {
  function Cache2() {
    _classCallCheck(this, Cache2);
    this._root = null;
    this._store = new Map();
  }
  Cache2.prototype.empty = function empty() {
    return this._store.size === 0;
  };
  Cache2.prototype.has = function has2(key) {
    return this._store.has(key);
  };
  Cache2.prototype.get = function get(key, defaultValue) {
    var res = this.has(key) ? this._store.get(key) : this.root();
    return typeof res === "undefined" || res === null ? defaultValue : res;
  };
  Cache2.prototype.add = function add(key, value) {
    if (this.empty()) {
      this._root = key;
    }
    this._store.set(key, value);
  };
  Cache2.prototype.update = function update(key, value) {
    if (this.has(key)) {
      this._store.set(key, value);
    }
  };
  Cache2.prototype.remove = function remove(key) {
    this._store.delete(key);
    if (key === this._root) {
      var maps = this._store.keys();
      var nextkey = maps.next().value;
      this._root = nextkey;
    }
  };
  Cache2.prototype.root = function root() {
    return this._store.get(this._root);
  };
  return Cache2;
}();
var _class$1, _temp$1;
var childContextCache = new Cache();
var setMomentLocale = function setMomentLocale2(locale) {
  var moment = void 0;
  try {
    moment = require("moment");
  } catch (e2) {
  }
  if (moment && locale) {
    moment.locale(locale.momentLocale);
  }
};
var ConfigProvider = (_temp$1 = _class$1 = function(_Component) {
  _inherits(ConfigProvider2, _Component);
  function ConfigProvider2() {
    _classCallCheck(this, ConfigProvider2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var _this2 = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args)));
    childContextCache.add(_this2, _extends$1$1({}, childContextCache.get(_this2, {}), _this2.getChildContext()));
    setMomentLocale(_this2.props.locale);
    _this2.state = {
      locale: _this2.props.locale
    };
    return _this2;
  }
  ConfigProvider2.prototype.getChildContext = function getChildContext() {
    var _props = this.props, prefix2 = _props.prefix, locale = _props.locale, pure = _props.pure, warning2 = _props.warning, rtl = _props.rtl, device = _props.device, popupContainer = _props.popupContainer, errorBoundary = _props.errorBoundary;
    var _context = this.context, nextPrefix = _context.nextPrefix, nextLocale = _context.nextLocale, nextPure = _context.nextPure, nextRtl = _context.nextRtl, nextWarning = _context.nextWarning, nextDevice = _context.nextDevice, nextPopupContainer = _context.nextPopupContainer, nextErrorBoundary = _context.nextErrorBoundary;
    return {
      nextPrefix: prefix2 || nextPrefix,
      nextLocale: locale || nextLocale,
      nextPure: typeof pure === "boolean" ? pure : nextPure,
      nextRtl: typeof rtl === "boolean" ? rtl : nextRtl,
      nextWarning: typeof warning2 === "boolean" ? warning2 : nextWarning,
      nextDevice: device || nextDevice,
      nextPopupContainer: popupContainer || nextPopupContainer,
      nextErrorBoundary: errorBoundary || nextErrorBoundary
    };
  };
  ConfigProvider2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if (nextProps.locale !== prevState.locale) {
      setMomentLocale(nextProps.locale);
      return {
        locale: nextProps.locale
      };
    }
    return null;
  };
  ConfigProvider2.prototype.componentDidUpdate = function componentDidUpdate() {
    childContextCache.add(this, _extends$1$1({}, childContextCache.get(this, {}), this.getChildContext()));
  };
  ConfigProvider2.prototype.componentWillUnmount = function componentWillUnmount() {
    childContextCache.remove(this);
  };
  ConfigProvider2.prototype.render = function render2() {
    return Children.only(this.props.children);
  };
  return ConfigProvider2;
}(Component), _class$1.propTypes = {
  prefix: propTypes$1.string,
  locale: propTypes$1.object,
  errorBoundary: propTypes$1.oneOfType([propTypes$1.bool, propTypes$1.object]),
  pure: propTypes$1.bool,
  warning: propTypes$1.bool,
  rtl: propTypes$1.bool,
  device: propTypes$1.oneOf(["tablet", "desktop", "phone"]),
  children: propTypes$1.any,
  popupContainer: propTypes$1.any
}, _class$1.defaultProps = {
  warning: true,
  errorBoundary: false
}, _class$1.contextTypes = {
  nextPrefix: propTypes$1.string,
  nextLocale: propTypes$1.object,
  nextPure: propTypes$1.bool,
  nextRtl: propTypes$1.bool,
  nextWarning: propTypes$1.bool,
  nextDevice: propTypes$1.oneOf(["tablet", "desktop", "phone"]),
  nextPopupContainer: propTypes$1.any,
  nextErrorBoundary: propTypes$1.oneOfType([propTypes$1.bool, propTypes$1.object])
}, _class$1.childContextTypes = {
  nextPrefix: propTypes$1.string,
  nextLocale: propTypes$1.object,
  nextPure: propTypes$1.bool,
  nextRtl: propTypes$1.bool,
  nextWarning: propTypes$1.bool,
  nextDevice: propTypes$1.oneOf(["tablet", "desktop", "phone"]),
  nextPopupContainer: propTypes$1.any,
  nextErrorBoundary: propTypes$1.oneOfType([propTypes$1.bool, propTypes$1.object])
}, _class$1.config = function(Component2, options) {
  return config(Component2, options);
}, _class$1.getContextProps = function(props, displayName) {
  return getContextProps(props, childContextCache.root() || {}, displayName);
}, _class$1.initLocales = initLocales, _class$1.setLanguage = setLanguage, _class$1.setLocale = setLocale, _class$1.setDirection = setDirection, _class$1.getLanguage = getLanguage, _class$1.getLocale = getLocale, _class$1.getDirection = getDirection, _class$1.Consumer = Consumer, _class$1.ErrorBoundary = ErrorBoundary, _class$1.getContext = function() {
  var _ref = childContextCache.root() || {}, nextPrefix = _ref.nextPrefix, nextLocale = _ref.nextLocale, nextPure = _ref.nextPure, nextRtl = _ref.nextRtl, nextWarning = _ref.nextWarning, nextDevice = _ref.nextDevice, nextPopupContainer = _ref.nextPopupContainer, nextErrorBoundary = _ref.nextErrorBoundary;
  return {
    prefix: nextPrefix,
    locale: nextLocale,
    pure: nextPure,
    rtl: nextRtl,
    warning: nextWarning,
    device: nextDevice,
    popupContainer: nextPopupContainer,
    errorBoundary: nextErrorBoundary
  };
}, _temp$1);
ConfigProvider.displayName = "ConfigProvider";
var _ConfigProvider = polyfill(ConfigProvider);
var classnames = createCommonjsModule$1(function(module) {
  /*!
    Copyright (c) 2017 Jed Watson.
    Licensed under the MIT License (MIT), see
    http://jedwatson.github.io/classnames
  */
  (function() {
    var hasOwn = {}.hasOwnProperty;
    function classNames() {
      var classes = [];
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        if (!arg)
          continue;
        var argType = typeof arg;
        if (argType === "string" || argType === "number") {
          classes.push(arg);
        } else if (Array.isArray(arg) && arg.length) {
          var inner = classNames.apply(null, arg);
          if (inner) {
            classes.push(inner);
          }
        } else if (argType === "object") {
          for (var key in arg) {
            if (hasOwn.call(arg, key) && arg[key]) {
              classes.push(key);
            }
          }
        }
      }
      return classes.join(" ");
    }
    if (module.exports) {
      classNames.default = classNames;
      module.exports = classNames;
    } else {
      window.classNames = classNames;
    }
  })();
});
var interopRequireDefault = createCommonjsModule$1(function(module) {
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  module.exports = _interopRequireDefault;
});
var hasClass_1 = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.default = hasClass2;
  function hasClass2(element, className) {
    if (element.classList)
      return !!className && element.classList.contains(className);
    else
      return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
  }
  module.exports = exports["default"];
});
var addClass_1 = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.default = addClass2;
  var _hasClass = interopRequireDefault(hasClass_1);
  function addClass2(element, className) {
    if (element.classList)
      element.classList.add(className);
    else if (!(0, _hasClass.default)(element, className))
      if (typeof element.className === "string")
        element.className = element.className + " " + className;
      else
        element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
  }
  module.exports = exports["default"];
});
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
var removeClass$1 = function removeClass2(element, className) {
  if (element.classList)
    element.classList.remove(className);
  else if (typeof element.className === "string")
    element.className = replaceClassName(element.className, className);
  else
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
};
var PropTypes = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.classNamesShape = exports.timeoutsShape = void 0;
  var _propTypes = _interopRequireDefault(propTypes$1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  var timeoutsShape = null;
  exports.timeoutsShape = timeoutsShape;
  var classNamesShape = null;
  exports.classNamesShape = classNamesShape;
});
var Transition_1 = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;
  var PropTypes$1 = _interopRequireWildcard(propTypes$1);
  var _react = _interopRequireDefault(React);
  var _reactDom2 = _interopRequireDefault(ReactDOM);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  function _interopRequireWildcard(obj2) {
    if (obj2 && obj2.__esModule) {
      return obj2;
    } else {
      var newObj = {};
      if (obj2 != null) {
        for (var key in obj2) {
          if (Object.prototype.hasOwnProperty.call(obj2, key)) {
            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj2, key) : {};
            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj2[key];
            }
          }
        }
      }
      newObj.default = obj2;
      return newObj;
    }
  }
  function _objectWithoutPropertiesLoose2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function _inheritsLoose2(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var UNMOUNTED = "unmounted";
  exports.UNMOUNTED = UNMOUNTED;
  var EXITED = "exited";
  exports.EXITED = EXITED;
  var ENTERING = "entering";
  exports.ENTERING = ENTERING;
  var ENTERED = "entered";
  exports.ENTERED = ENTERED;
  var EXITING = "exiting";
  exports.EXITING = EXITING;
  var Transition = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose2(Transition2, _React$Component);
    function Transition2(props, context2) {
      var _this2;
      _this2 = _React$Component.call(this, props, context2) || this;
      var parentGroup = context2.transitionGroup;
      var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
      var initialStatus;
      _this2.appearStatus = null;
      if (props.in) {
        if (appear) {
          initialStatus = EXITED;
          _this2.appearStatus = ENTERING;
        } else {
          initialStatus = ENTERED;
        }
      } else {
        if (props.unmountOnExit || props.mountOnEnter) {
          initialStatus = UNMOUNTED;
        } else {
          initialStatus = EXITED;
        }
      }
      _this2.state = {
        status: initialStatus
      };
      _this2.nextCallback = null;
      return _this2;
    }
    var _proto = Transition2.prototype;
    _proto.getChildContext = function getChildContext() {
      return {
        transitionGroup: null
      };
    };
    Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
      var nextIn = _ref.in;
      if (nextIn && prevState.status === UNMOUNTED) {
        return {
          status: EXITED
        };
      }
      return null;
    };
    _proto.componentDidMount = function componentDidMount() {
      this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
      var nextStatus = null;
      if (prevProps !== this.props) {
        var status = this.state.status;
        if (this.props.in) {
          if (status !== ENTERING && status !== ENTERED) {
            nextStatus = ENTERING;
          }
        } else {
          if (status === ENTERING || status === ENTERED) {
            nextStatus = EXITING;
          }
        }
      }
      this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
      var timeout = this.props.timeout;
      var exit, enter, appear;
      exit = enter = appear = timeout;
      if (timeout != null && typeof timeout !== "number") {
        exit = timeout.exit;
        enter = timeout.enter;
        appear = timeout.appear !== void 0 ? timeout.appear : enter;
      }
      return {
        exit,
        enter,
        appear
      };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
      if (mounting === void 0) {
        mounting = false;
      }
      if (nextStatus !== null) {
        this.cancelNextCallback();
        var node = _reactDom2.default.findDOMNode(this);
        if (nextStatus === ENTERING) {
          this.performEnter(node, mounting);
        } else {
          this.performExit(node);
        }
      } else if (this.props.unmountOnExit && this.state.status === EXITED) {
        this.setState({
          status: UNMOUNTED
        });
      }
    };
    _proto.performEnter = function performEnter(node, mounting) {
      var _this2 = this;
      var enter = this.props.enter;
      var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
      var timeouts = this.getTimeouts();
      var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
      if (!mounting && !enter) {
        this.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(node);
        });
        return;
      }
      this.props.onEnter(node, appearing);
      this.safeSetState({
        status: ENTERING
      }, function() {
        _this2.props.onEntering(node, appearing);
        _this2.onTransitionEnd(node, enterTimeout, function() {
          _this2.safeSetState({
            status: ENTERED
          }, function() {
            _this2.props.onEntered(node, appearing);
          });
        });
      });
    };
    _proto.performExit = function performExit(node) {
      var _this3 = this;
      var exit = this.props.exit;
      var timeouts = this.getTimeouts();
      if (!exit) {
        this.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(node);
        });
        return;
      }
      this.props.onExit(node);
      this.safeSetState({
        status: EXITING
      }, function() {
        _this3.props.onExiting(node);
        _this3.onTransitionEnd(node, timeouts.exit, function() {
          _this3.safeSetState({
            status: EXITED
          }, function() {
            _this3.props.onExited(node);
          });
        });
      });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
      if (this.nextCallback !== null) {
        this.nextCallback.cancel();
        this.nextCallback = null;
      }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
      callback = this.setNextCallback(callback);
      this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
      var _this4 = this;
      var active = true;
      this.nextCallback = function(event) {
        if (active) {
          active = false;
          _this4.nextCallback = null;
          callback(event);
        }
      };
      this.nextCallback.cancel = function() {
        active = false;
      };
      return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
      this.setNextCallback(handler);
      var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
      if (!node || doesNotHaveTimeoutOrListener) {
        setTimeout(this.nextCallback, 0);
        return;
      }
      if (this.props.addEndListener) {
        this.props.addEndListener(node, this.nextCallback);
      }
      if (timeout != null) {
        setTimeout(this.nextCallback, timeout);
      }
    };
    _proto.render = function render2() {
      var status = this.state.status;
      if (status === UNMOUNTED) {
        return null;
      }
      var _this$props = this.props, children = _this$props.children, childProps = _objectWithoutPropertiesLoose2(_this$props, ["children"]);
      delete childProps.in;
      delete childProps.mountOnEnter;
      delete childProps.unmountOnExit;
      delete childProps.appear;
      delete childProps.enter;
      delete childProps.exit;
      delete childProps.timeout;
      delete childProps.addEndListener;
      delete childProps.onEnter;
      delete childProps.onEntering;
      delete childProps.onEntered;
      delete childProps.onExit;
      delete childProps.onExiting;
      delete childProps.onExited;
      if (typeof children === "function") {
        return children(status, childProps);
      }
      var child = _react.default.Children.only(children);
      return _react.default.cloneElement(child, childProps);
    };
    return Transition2;
  }(_react.default.Component);
  Transition.contextTypes = {
    transitionGroup: PropTypes$1.object
  };
  Transition.childContextTypes = {
    transitionGroup: function transitionGroup() {
    }
  };
  Transition.propTypes = {};
  function noop12() {
  }
  Transition.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop12,
    onEntering: noop12,
    onEntered: noop12,
    onExit: noop12,
    onExiting: noop12,
    onExited: noop12
  };
  Transition.UNMOUNTED = 0;
  Transition.EXITED = 1;
  Transition.ENTERING = 2;
  Transition.ENTERED = 3;
  Transition.EXITING = 4;
  var _default = (0, reactLifecyclesCompat_es.polyfill)(Transition);
  exports.default = _default;
});
var CSSTransition_1 = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var PropTypes$1 = _interopRequireWildcard(propTypes$1);
  var _addClass = _interopRequireDefault(addClass_1);
  var _removeClass = _interopRequireDefault(removeClass$1);
  var _react = _interopRequireDefault(React);
  var _Transition = _interopRequireDefault(Transition_1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  function _interopRequireWildcard(obj2) {
    if (obj2 && obj2.__esModule) {
      return obj2;
    } else {
      var newObj = {};
      if (obj2 != null) {
        for (var key in obj2) {
          if (Object.prototype.hasOwnProperty.call(obj2, key)) {
            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj2, key) : {};
            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj2[key];
            }
          }
        }
      }
      newObj.default = obj2;
      return newObj;
    }
  }
  function _extends2() {
    _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends2.apply(this, arguments);
  }
  function _inheritsLoose2(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var addClass2 = function addClass3(node, classes) {
    return node && classes && classes.split(" ").forEach(function(c2) {
      return (0, _addClass.default)(node, c2);
    });
  };
  var removeClass4 = function removeClass5(node, classes) {
    return node && classes && classes.split(" ").forEach(function(c2) {
      return (0, _removeClass.default)(node, c2);
    });
  };
  var CSSTransition = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose2(CSSTransition2, _React$Component);
    function CSSTransition2() {
      var _this2;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this2 = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _this2.onEnter = function(node, appearing) {
        var _this$getClassNames = _this2.getClassNames(appearing ? "appear" : "enter"), className = _this$getClassNames.className;
        _this2.removeClasses(node, "exit");
        addClass2(node, className);
        if (_this2.props.onEnter) {
          _this2.props.onEnter(node, appearing);
        }
      };
      _this2.onEntering = function(node, appearing) {
        var _this$getClassNames2 = _this2.getClassNames(appearing ? "appear" : "enter"), activeClassName = _this$getClassNames2.activeClassName;
        _this2.reflowAndAddClass(node, activeClassName);
        if (_this2.props.onEntering) {
          _this2.props.onEntering(node, appearing);
        }
      };
      _this2.onEntered = function(node, appearing) {
        var appearClassName = _this2.getClassNames("appear").doneClassName;
        var enterClassName = _this2.getClassNames("enter").doneClassName;
        var doneClassName = appearing ? appearClassName + " " + enterClassName : enterClassName;
        _this2.removeClasses(node, appearing ? "appear" : "enter");
        addClass2(node, doneClassName);
        if (_this2.props.onEntered) {
          _this2.props.onEntered(node, appearing);
        }
      };
      _this2.onExit = function(node) {
        var _this$getClassNames3 = _this2.getClassNames("exit"), className = _this$getClassNames3.className;
        _this2.removeClasses(node, "appear");
        _this2.removeClasses(node, "enter");
        addClass2(node, className);
        if (_this2.props.onExit) {
          _this2.props.onExit(node);
        }
      };
      _this2.onExiting = function(node) {
        var _this$getClassNames4 = _this2.getClassNames("exit"), activeClassName = _this$getClassNames4.activeClassName;
        _this2.reflowAndAddClass(node, activeClassName);
        if (_this2.props.onExiting) {
          _this2.props.onExiting(node);
        }
      };
      _this2.onExited = function(node) {
        var _this$getClassNames5 = _this2.getClassNames("exit"), doneClassName = _this$getClassNames5.doneClassName;
        _this2.removeClasses(node, "exit");
        addClass2(node, doneClassName);
        if (_this2.props.onExited) {
          _this2.props.onExited(node);
        }
      };
      _this2.getClassNames = function(type) {
        var classNames = _this2.props.classNames;
        var isStringClassNames = typeof classNames === "string";
        var prefix2 = isStringClassNames && classNames ? classNames + "-" : "";
        var className = isStringClassNames ? prefix2 + type : classNames[type];
        var activeClassName = isStringClassNames ? className + "-active" : classNames[type + "Active"];
        var doneClassName = isStringClassNames ? className + "-done" : classNames[type + "Done"];
        return {
          className,
          activeClassName,
          doneClassName
        };
      };
      return _this2;
    }
    var _proto = CSSTransition2.prototype;
    _proto.removeClasses = function removeClasses(node, type) {
      var _this$getClassNames6 = this.getClassNames(type), className = _this$getClassNames6.className, activeClassName = _this$getClassNames6.activeClassName, doneClassName = _this$getClassNames6.doneClassName;
      className && removeClass4(node, className);
      activeClassName && removeClass4(node, activeClassName);
      doneClassName && removeClass4(node, doneClassName);
    };
    _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
      if (className) {
        node && node.scrollTop;
        addClass2(node, className);
      }
    };
    _proto.render = function render2() {
      var props = _extends2({}, this.props);
      delete props.classNames;
      return _react.default.createElement(_Transition.default, _extends2({}, props, {
        onEnter: this.onEnter,
        onEntered: this.onEntered,
        onEntering: this.onEntering,
        onExit: this.onExit,
        onExiting: this.onExiting,
        onExited: this.onExited
      }));
    };
    return CSSTransition2;
  }(_react.default.Component);
  CSSTransition.defaultProps = {
    classNames: ""
  };
  CSSTransition.propTypes = {};
  var _default = CSSTransition;
  exports.default = _default;
  module.exports = exports["default"];
});
var ChildMapping = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.getChildMapping = getChildMapping;
  exports.mergeChildMappings = mergeChildMappings;
  exports.getInitialChildMapping = getInitialChildMapping;
  exports.getNextChildMapping = getNextChildMapping;
  function getChildMapping(children, mapFn) {
    var mapper = function mapper2(child) {
      return mapFn && (0, React.isValidElement)(child) ? mapFn(child) : child;
    };
    var result = Object.create(null);
    if (children)
      React.Children.map(children, function(c2) {
        return c2;
      }).forEach(function(child) {
        result[child.key] = mapper(child);
      });
    return result;
  }
  function mergeChildMappings(prev, next) {
    prev = prev || {};
    next = next || {};
    function getValueForKey(key) {
      return key in next ? next[key] : prev[key];
    }
    var nextKeysPending = Object.create(null);
    var pendingKeys = [];
    for (var prevKey in prev) {
      if (prevKey in next) {
        if (pendingKeys.length) {
          nextKeysPending[prevKey] = pendingKeys;
          pendingKeys = [];
        }
      } else {
        pendingKeys.push(prevKey);
      }
    }
    var i;
    var childMapping = {};
    for (var nextKey in next) {
      if (nextKeysPending[nextKey]) {
        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
          var pendingNextKey = nextKeysPending[nextKey][i];
          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
      }
      childMapping[nextKey] = getValueForKey(nextKey);
    }
    for (i = 0; i < pendingKeys.length; i++) {
      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    }
    return childMapping;
  }
  function getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop];
  }
  function getInitialChildMapping(props, onExited) {
    return getChildMapping(props.children, function(child) {
      return (0, React.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        appear: getProp(child, "appear", props),
        enter: getProp(child, "enter", props),
        exit: getProp(child, "exit", props)
      });
    });
  }
  function getNextChildMapping(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = getChildMapping(nextProps.children);
    var children = mergeChildMappings(prevChildMapping, nextChildMapping);
    Object.keys(children).forEach(function(key) {
      var child = children[key];
      if (!(0, React.isValidElement)(child))
        return;
      var hasPrev = key in prevChildMapping;
      var hasNext = key in nextChildMapping;
      var prevChild = prevChildMapping[key];
      var isLeaving = (0, React.isValidElement)(prevChild) && !prevChild.props.in;
      if (hasNext && (!hasPrev || isLeaving)) {
        children[key] = (0, React.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: true,
          exit: getProp(child, "exit", nextProps),
          enter: getProp(child, "enter", nextProps)
        });
      } else if (!hasNext && hasPrev && !isLeaving) {
        children[key] = (0, React.cloneElement)(child, {
          in: false
        });
      } else if (hasNext && hasPrev && (0, React.isValidElement)(prevChild)) {
        children[key] = (0, React.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: prevChild.props.in,
          exit: getProp(child, "exit", nextProps),
          enter: getProp(child, "enter", nextProps)
        });
      }
    });
    return children;
  }
});
var TransitionGroup_1 = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _propTypes = _interopRequireDefault(propTypes$1);
  var _react = _interopRequireDefault(React);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  function _objectWithoutPropertiesLoose2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function _extends2() {
    _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends2.apply(this, arguments);
  }
  function _inheritsLoose2(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  function _assertThisInitialized(self2) {
    if (self2 === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self2;
  }
  var values = Object.values || function(obj2) {
    return Object.keys(obj2).map(function(k2) {
      return obj2[k2];
    });
  };
  var defaultProps2 = {
    component: "div",
    childFactory: function childFactory(child) {
      return child;
    }
  };
  var TransitionGroup = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose2(TransitionGroup2, _React$Component);
    function TransitionGroup2(props, context2) {
      var _this2;
      _this2 = _React$Component.call(this, props, context2) || this;
      var handleExited = _this2.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this2)));
      _this2.state = {
        handleExited,
        firstRender: true
      };
      return _this2;
    }
    var _proto = TransitionGroup2.prototype;
    _proto.getChildContext = function getChildContext() {
      return {
        transitionGroup: {
          isMounting: !this.appeared
        }
      };
    };
    _proto.componentDidMount = function componentDidMount() {
      this.appeared = true;
      this.mounted = true;
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.mounted = false;
    };
    TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
      var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
      return {
        children: firstRender ? (0, ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
        firstRender: false
      };
    };
    _proto.handleExited = function handleExited(child, node) {
      var currentChildMapping = (0, ChildMapping.getChildMapping)(this.props.children);
      if (child.key in currentChildMapping)
        return;
      if (child.props.onExited) {
        child.props.onExited(node);
      }
      if (this.mounted) {
        this.setState(function(state) {
          var children = _extends2({}, state.children);
          delete children[child.key];
          return {
            children
          };
        });
      }
    };
    _proto.render = function render2() {
      var _this$props = this.props, Component2 = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLoose2(_this$props, ["component", "childFactory"]);
      var children = values(this.state.children).map(childFactory);
      delete props.appear;
      delete props.enter;
      delete props.exit;
      if (Component2 === null) {
        return children;
      }
      return _react.default.createElement(Component2, props, children);
    };
    return TransitionGroup2;
  }(_react.default.Component);
  TransitionGroup.childContextTypes = {
    transitionGroup: _propTypes.default.object.isRequired
  };
  TransitionGroup.propTypes = {};
  TransitionGroup.defaultProps = defaultProps2;
  var _default = (0, reactLifecyclesCompat_es.polyfill)(TransitionGroup);
  exports.default = _default;
  module.exports = exports["default"];
});
var ReplaceTransition_1 = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _propTypes = _interopRequireDefault(propTypes$1);
  var _react = _interopRequireDefault(React);
  var _TransitionGroup = _interopRequireDefault(TransitionGroup_1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  function _objectWithoutPropertiesLoose2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function _inheritsLoose2(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var ReplaceTransition = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose2(ReplaceTransition2, _React$Component);
    function ReplaceTransition2() {
      var _this2;
      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
        _args[_key] = arguments[_key];
      }
      _this2 = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
      _this2.handleEnter = function() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        return _this2.handleLifecycle("onEnter", 0, args);
      };
      _this2.handleEntering = function() {
        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }
        return _this2.handleLifecycle("onEntering", 0, args);
      };
      _this2.handleEntered = function() {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }
        return _this2.handleLifecycle("onEntered", 0, args);
      };
      _this2.handleExit = function() {
        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
          args[_key5] = arguments[_key5];
        }
        return _this2.handleLifecycle("onExit", 1, args);
      };
      _this2.handleExiting = function() {
        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
          args[_key6] = arguments[_key6];
        }
        return _this2.handleLifecycle("onExiting", 1, args);
      };
      _this2.handleExited = function() {
        for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
          args[_key7] = arguments[_key7];
        }
        return _this2.handleLifecycle("onExited", 1, args);
      };
      return _this2;
    }
    var _proto = ReplaceTransition2.prototype;
    _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
      var _child$props;
      var children = this.props.children;
      var child = _react.default.Children.toArray(children)[idx];
      if (child.props[handler])
        (_child$props = child.props)[handler].apply(_child$props, originalArgs);
      if (this.props[handler])
        this.props[handler]((0, ReactDOM.findDOMNode)(this));
    };
    _proto.render = function render2() {
      var _this$props = this.props, children = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose2(_this$props, ["children", "in"]);
      var _React$Children$toArr = _react.default.Children.toArray(children), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
      delete props.onEnter;
      delete props.onEntering;
      delete props.onEntered;
      delete props.onExit;
      delete props.onExiting;
      delete props.onExited;
      return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
        key: "first",
        onEnter: this.handleEnter,
        onEntering: this.handleEntering,
        onEntered: this.handleEntered
      }) : _react.default.cloneElement(second, {
        key: "second",
        onEnter: this.handleExit,
        onEntering: this.handleExiting,
        onEntered: this.handleExited
      }));
    };
    return ReplaceTransition2;
  }(_react.default.Component);
  ReplaceTransition.propTypes = {};
  var _default = ReplaceTransition;
  exports.default = _default;
  module.exports = exports["default"];
});
var reactTransitionGroup = createCommonjsModule$1(function(module) {
  var _CSSTransition = _interopRequireDefault(CSSTransition_1);
  var _ReplaceTransition = _interopRequireDefault(ReplaceTransition_1);
  var _TransitionGroup = _interopRequireDefault(TransitionGroup_1);
  var _Transition = _interopRequireDefault(Transition_1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  module.exports = {
    Transition: _Transition.default,
    TransitionGroup: _TransitionGroup.default,
    ReplaceTransition: _ReplaceTransition.default,
    CSSTransition: _CSSTransition.default
  };
});
var _class$2, _temp$2;
var noop$1 = function noop3() {
};
var on$1 = events.on, off = events.off;
var addClass$1 = dom.addClass, removeClass$2 = dom.removeClass;
var prefixes = ["-webkit-", "-moz-", "-o-", "ms-", ""];
function getStyleProperty(node, name) {
  var style = window.getComputedStyle(node);
  var ret = "";
  for (var i = 0; i < prefixes.length; i++) {
    ret = style.getPropertyValue(prefixes[i] + name);
    if (ret) {
      break;
    }
  }
  return ret;
}
var AnimateChild = (_temp$2 = _class$2 = function(_Component) {
  _inherits(AnimateChild2, _Component);
  function AnimateChild2(props) {
    _classCallCheck(this, AnimateChild2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    func.bindCtx(_this2, ["handleEnter", "handleEntering", "handleEntered", "handleExit", "handleExiting", "handleExited", "addEndListener"]);
    _this2.endListeners = {
      transitionend: [],
      animationend: []
    };
    _this2.timeoutMap = {};
    return _this2;
  }
  AnimateChild2.prototype.componentWillUnmount = function componentWillUnmount() {
    var _this3 = this;
    Object.keys(this.endListeners).forEach(function(eventName) {
      _this3.endListeners[eventName].forEach(function(listener) {
        off(_this3.node, eventName, listener);
      });
    });
    this.endListeners = {
      transitionend: [],
      animationend: []
    };
  };
  AnimateChild2.prototype.generateEndListener = function generateEndListener(node, done, eventName, id2) {
    var _this2 = this;
    return function endListener(e2) {
      if (e2 && e2.target === node) {
        if (_this2.timeoutMap[id2]) {
          clearTimeout(_this2.timeoutMap[id2]);
          delete _this2.timeoutMap[id2];
        }
        done();
        off(node, eventName, endListener);
        var listeners = _this2.endListeners[eventName];
        var index2 = listeners.indexOf(endListener);
        index2 > -1 && listeners.splice(index2, 1);
      }
    };
  };
  AnimateChild2.prototype.addEndListener = function addEndListener(node, done) {
    var _this4 = this;
    if (support.transition || support.animation) {
      var id2 = guid();
      this.node = node;
      if (support.transition) {
        var transitionEndListener = this.generateEndListener(node, done, "transitionend", id2);
        on$1(node, "transitionend", transitionEndListener);
        this.endListeners.transitionend.push(transitionEndListener);
      }
      if (support.animation) {
        var animationEndListener = this.generateEndListener(node, done, "animationend", id2);
        on$1(node, "animationend", animationEndListener);
        this.endListeners.animationend.push(animationEndListener);
      }
      setTimeout(function() {
        var transitionDelay = parseFloat(getStyleProperty(node, "transition-delay")) || 0;
        var transitionDuration = parseFloat(getStyleProperty(node, "transition-duration")) || 0;
        var animationDelay = parseFloat(getStyleProperty(node, "animation-delay")) || 0;
        var animationDuration = parseFloat(getStyleProperty(node, "animation-duration")) || 0;
        var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
        if (time) {
          _this4.timeoutMap[id2] = setTimeout(function() {
            done();
          }, time * 1e3 + 200);
        }
      }, 15);
    } else {
      done();
    }
  };
  AnimateChild2.prototype.removeEndtListener = function removeEndtListener() {
    this.transitionOff && this.transitionOff();
    this.animationOff && this.animationOff();
  };
  AnimateChild2.prototype.removeClassNames = function removeClassNames(node, names) {
    Object.keys(names).forEach(function(key) {
      removeClass$2(node, names[key]);
    });
  };
  AnimateChild2.prototype.handleEnter = function handleEnter(node, isAppearing) {
    var names = this.props.names;
    if (names) {
      this.removeClassNames(node, names);
      var className = isAppearing ? "appear" : "enter";
      addClass$1(node, names[className]);
    }
    var hook = isAppearing ? this.props.onAppear : this.props.onEnter;
    hook(node);
  };
  AnimateChild2.prototype.handleEntering = function handleEntering(node, isAppearing) {
    var _this5 = this;
    setTimeout(function() {
      var names = _this5.props.names;
      if (names) {
        var className = isAppearing ? "appearActive" : "enterActive";
        addClass$1(node, names[className]);
      }
      var hook = isAppearing ? _this5.props.onAppearing : _this5.props.onEntering;
      hook(node);
    }, 10);
  };
  AnimateChild2.prototype.handleEntered = function handleEntered(node, isAppearing) {
    var names = this.props.names;
    if (names) {
      var classNames = isAppearing ? [names.appear, names.appearActive] : [names.enter, names.enterActive];
      classNames.forEach(function(className) {
        removeClass$2(node, className);
      });
    }
    var hook = isAppearing ? this.props.onAppeared : this.props.onEntered;
    hook(node);
  };
  AnimateChild2.prototype.handleExit = function handleExit(node) {
    var names = this.props.names;
    if (names) {
      this.removeClassNames(node, names);
      addClass$1(node, names.leave);
    }
    this.props.onExit(node);
  };
  AnimateChild2.prototype.handleExiting = function handleExiting(node) {
    var _this6 = this;
    setTimeout(function() {
      var names = _this6.props.names;
      if (names) {
        addClass$1(node, names.leaveActive);
      }
      _this6.props.onExiting(node);
    }, 10);
  };
  AnimateChild2.prototype.handleExited = function handleExited(node) {
    var names = this.props.names;
    if (names) {
      [names.leave, names.leaveActive].forEach(function(className) {
        removeClass$2(node, className);
      });
    }
    this.props.onExited(node);
  };
  AnimateChild2.prototype.render = function render2() {
    var _props = this.props, names = _props.names, onAppear = _props.onAppear, onAppeared = _props.onAppeared, onAppearing = _props.onAppearing, onEnter = _props.onEnter, onEntering = _props.onEntering, onEntered = _props.onEntered, onExit = _props.onExit, onExiting = _props.onExiting, onExited = _props.onExited, others = _objectWithoutProperties$1(_props, ["names", "onAppear", "onAppeared", "onAppearing", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited"]);
    return /* @__PURE__ */ React.createElement(reactTransitionGroup.Transition, _extends$1$1({}, others, {
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered,
      onExit: this.handleExit,
      onExiting: this.handleExiting,
      onExited: this.handleExited,
      addEndListener: this.addEndListener
    }));
  };
  return AnimateChild2;
}(Component), _class$2.propTypes = {
  names: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.object]),
  onAppear: propTypes$1.func,
  onAppearing: propTypes$1.func,
  onAppeared: propTypes$1.func,
  onEnter: propTypes$1.func,
  onEntering: propTypes$1.func,
  onEntered: propTypes$1.func,
  onExit: propTypes$1.func,
  onExiting: propTypes$1.func,
  onExited: propTypes$1.func
}, _class$2.defaultProps = {
  onAppear: noop$1,
  onAppearing: noop$1,
  onAppeared: noop$1,
  onEnter: noop$1,
  onEntering: noop$1,
  onEntered: noop$1,
  onExit: noop$1,
  onExiting: noop$1,
  onExited: noop$1
}, _temp$2);
AnimateChild.displayName = "AnimateChild";
var _class$3, _temp$3;
var noop$2 = function noop4() {
};
var FirstChild = function FirstChild2(props) {
  var childrenArray = React.Children.toArray(props.children);
  return childrenArray[0] || null;
};
var Animate = (_temp$3 = _class$3 = function(_Component) {
  _inherits(Animate2, _Component);
  function Animate2() {
    _classCallCheck(this, Animate2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  Animate2.prototype.normalizeNames = function normalizeNames(names) {
    if (typeof names === "string") {
      return {
        appear: names + "-appear",
        appearActive: names + "-appear-active",
        enter: names + "-enter",
        enterActive: names + "-enter-active",
        leave: names + "-leave",
        leaveActive: names + "-leave-active"
      };
    }
    if ((typeof names === "undefined" ? "undefined" : _typeof(names)) === "object") {
      return {
        appear: names.appear,
        appearActive: names.appear + "-active",
        enter: "" + names.enter,
        enterActive: names.enter + "-active",
        leave: "" + names.leave,
        leaveActive: names.leave + "-active"
      };
    }
  };
  Animate2.prototype.render = function render2() {
    var _this2 = this;
    var _props = this.props, animation2 = _props.animation, children = _props.children, animationAppear = _props.animationAppear, singleMode = _props.singleMode, component = _props.component, beforeAppear = _props.beforeAppear, onAppear = _props.onAppear, afterAppear = _props.afterAppear, beforeEnter = _props.beforeEnter, onEnter = _props.onEnter, afterEnter = _props.afterEnter, beforeLeave = _props.beforeLeave, onLeave = _props.onLeave, afterLeave = _props.afterLeave, others = _objectWithoutProperties$1(_props, ["animation", "children", "animationAppear", "singleMode", "component", "beforeAppear", "onAppear", "afterAppear", "beforeEnter", "onEnter", "afterEnter", "beforeLeave", "onLeave", "afterLeave"]);
    var animateChildren = Children.map(children, function(child) {
      return /* @__PURE__ */ React.createElement(AnimateChild, {
        key: child.key,
        names: _this2.normalizeNames(animation2),
        onAppear: beforeAppear,
        onAppearing: onAppear,
        onAppeared: afterAppear,
        onEnter: beforeEnter,
        onEntering: onEnter,
        onEntered: afterEnter,
        onExit: beforeLeave,
        onExiting: onLeave,
        onExited: afterLeave
      }, child);
    });
    return /* @__PURE__ */ React.createElement(reactTransitionGroup.TransitionGroup, _extends$1$1({
      appear: animationAppear,
      component: singleMode ? FirstChild : component
    }, others), animateChildren);
  };
  return Animate2;
}(Component), _class$3.propTypes = {
  animation: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.object]),
  animationAppear: propTypes$1.bool,
  component: propTypes$1.any,
  singleMode: propTypes$1.bool,
  children: propTypes$1.oneOfType([propTypes$1.element, propTypes$1.arrayOf(propTypes$1.element)]),
  beforeAppear: propTypes$1.func,
  onAppear: propTypes$1.func,
  afterAppear: propTypes$1.func,
  beforeEnter: propTypes$1.func,
  onEnter: propTypes$1.func,
  afterEnter: propTypes$1.func,
  beforeLeave: propTypes$1.func,
  onLeave: propTypes$1.func,
  afterLeave: propTypes$1.func
}, _class$3.defaultProps = {
  animationAppear: true,
  component: "div",
  singleMode: true,
  beforeAppear: noop$2,
  onAppear: noop$2,
  afterAppear: noop$2,
  beforeEnter: noop$2,
  onEnter: noop$2,
  afterEnter: noop$2,
  beforeLeave: noop$2,
  onLeave: noop$2,
  afterLeave: noop$2
}, _temp$3);
Animate.displayName = "Animate";
var _class$4, _temp$4;
var noop$3 = function noop5() {
};
var getStyle$1 = dom.getStyle;
var Expand = (_temp$4 = _class$4 = function(_Component) {
  _inherits(Expand2, _Component);
  function Expand2(props) {
    _classCallCheck(this, Expand2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    func.bindCtx(_this2, ["beforeEnter", "onEnter", "afterEnter", "beforeLeave", "onLeave", "afterLeave"]);
    return _this2;
  }
  Expand2.prototype.beforeEnter = function beforeEnter(node) {
    if (this.leaving) {
      this.afterLeave(node);
    }
    this.cacheCurrentStyle(node);
    this.cacheComputedStyle(node);
    this.setCurrentStyleToZero(node);
    this.props.beforeEnter(node);
  };
  Expand2.prototype.onEnter = function onEnter(node) {
    this.setCurrentStyleToComputedStyle(node);
    this.props.onEnter(node);
  };
  Expand2.prototype.afterEnter = function afterEnter(node) {
    this.restoreCurrentStyle(node);
    this.props.afterEnter(node);
  };
  Expand2.prototype.beforeLeave = function beforeLeave(node) {
    this.leaving = true;
    this.cacheCurrentStyle(node);
    this.cacheComputedStyle(node);
    this.setCurrentStyleToComputedStyle(node);
    this.props.beforeLeave(node);
  };
  Expand2.prototype.onLeave = function onLeave(node) {
    this.setCurrentStyleToZero(node);
    this.props.onLeave(node);
  };
  Expand2.prototype.afterLeave = function afterLeave(node) {
    this.leaving = false;
    this.restoreCurrentStyle(node);
    this.props.afterLeave(node);
  };
  Expand2.prototype.cacheCurrentStyle = function cacheCurrentStyle(node) {
    this.styleBorderTopWidth = node.style.borderTopWidth;
    this.stylePaddingTop = node.style.paddingTop;
    this.styleHeight = node.style.height;
    this.stylePaddingBottom = node.style.paddingBottom;
    this.styleBorderBottomWidth = node.style.borderBottomWidth;
  };
  Expand2.prototype.cacheComputedStyle = function cacheComputedStyle(node) {
    this.borderTopWidth = getStyle$1(node, "borderTopWidth");
    this.paddingTop = getStyle$1(node, "paddingTop");
    this.height = node.offsetHeight;
    this.paddingBottom = getStyle$1(node, "paddingBottom");
    this.borderBottomWidth = getStyle$1(node, "borderBottomWidth");
  };
  Expand2.prototype.setCurrentStyleToZero = function setCurrentStyleToZero(node) {
    node.style.borderTopWidth = "0px";
    node.style.paddingTop = "0px";
    node.style.height = "0px";
    node.style.paddingBottom = "0px";
    node.style.borderBottomWidth = "0px";
  };
  Expand2.prototype.setCurrentStyleToComputedStyle = function setCurrentStyleToComputedStyle(node) {
    node.style.borderTopWidth = this.borderTopWidth + "px";
    node.style.paddingTop = this.paddingTop + "px";
    node.style.height = this.height + "px";
    node.style.paddingBottom = this.paddingBottom + "px";
    node.style.borderBottomWidth = this.borderBottomWidth + "px";
  };
  Expand2.prototype.restoreCurrentStyle = function restoreCurrentStyle(node) {
    node.style.borderTopWidth = this.styleBorderTopWidth;
    node.style.paddingTop = this.stylePaddingTop;
    node.style.height = this.styleHeight;
    node.style.paddingBottom = this.stylePaddingBottom;
    node.style.borderBottomWidth = this.styleBorderBottomWidth;
  };
  Expand2.prototype.render = function render2() {
    var _props = this.props, animation2 = _props.animation, others = _objectWithoutProperties$1(_props, ["animation"]);
    var newAnimation = animation2 || "expand";
    return /* @__PURE__ */ React.createElement(Animate, _extends$1$1({}, others, {
      animation: newAnimation,
      beforeEnter: this.beforeEnter,
      onEnter: this.onEnter,
      afterEnter: this.afterEnter,
      beforeLeave: this.beforeLeave,
      onLeave: this.onLeave,
      afterLeave: this.afterLeave
    }));
  };
  return Expand2;
}(Component), _class$4.propTypes = {
  animation: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.object]),
  beforeEnter: propTypes$1.func,
  onEnter: propTypes$1.func,
  afterEnter: propTypes$1.func,
  beforeLeave: propTypes$1.func,
  onLeave: propTypes$1.func,
  afterLeave: propTypes$1.func
}, _class$4.defaultProps = {
  beforeEnter: noop$3,
  onEnter: noop$3,
  afterEnter: noop$3,
  beforeLeave: noop$3,
  onLeave: noop$3,
  afterLeave: noop$3
}, _temp$4);
Expand.displayName = "Expand";
Animate.Expand = Expand;
var customCache = new Set();
function createFromIconfontCN() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var scriptUrl = options.scriptUrl, _options$extraCommonP = options.extraCommonProps, extraCommonProps = _options$extraCommonP === void 0 ? {} : _options$extraCommonP;
  var hasExist = customCache.has(scriptUrl);
  if (document.querySelector('script[data-namespace="' + scriptUrl + '"]')) {
    hasExist = true;
  }
  if (typeof document !== "undefined" && typeof window !== "undefined" && typeof document.createElement === "function" && typeof scriptUrl === "string" && scriptUrl.length && !hasExist) {
    var script = document.createElement("script");
    script.setAttribute("src", scriptUrl);
    script.setAttribute("data-namespace", scriptUrl);
    customCache.add(scriptUrl);
    document.body.appendChild(script);
  }
  var Iconfont = function Iconfont2(props) {
    var _cx;
    var type = props.type, size = props.size, children = props.children, className = props.className, _props$prefix = props.prefix, prefix2 = _props$prefix === void 0 ? "next-" : _props$prefix, others = _objectWithoutProperties$1(props, ["type", "size", "children", "className", "prefix"]);
    var content = null;
    if (props.type) {
      content = /* @__PURE__ */ React.createElement("use", {
        xlinkHref: "#" + type
      });
    }
    if (children) {
      content = children;
    }
    var classes = classnames((_cx = {}, _cx[prefix2 + "icon-remote"] = true, _cx), className);
    return /* @__PURE__ */ React.createElement(Icon$1, {
      size
    }, /* @__PURE__ */ React.createElement("svg", _extends$1$1({
      className: classes,
      focusable: false
    }, others, extraCommonProps), content));
  };
  Iconfont.displayName = "Iconfont";
  return _ConfigProvider.config(Iconfont);
}
var _class$5, _temp$5;
var Icon = (_temp$5 = _class$5 = function(_Component) {
  _inherits(Icon2, _Component);
  function Icon2() {
    _classCallCheck(this, Icon2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  Icon2.prototype.render = function render2() {
    var _cx;
    var _props = this.props, prefix2 = _props.prefix, type = _props.type, size = _props.size, className = _props.className, rtl = _props.rtl, style = _props.style, children = _props.children;
    var others = obj.pickOthers(_extends$1$1({}, Icon2.propTypes), this.props);
    var classes = classnames((_cx = {}, _cx[prefix2 + "icon"] = true, _cx[prefix2 + "icon-" + type] = !!type, _cx["" + prefix2 + size] = !!size && typeof size === "string", _cx[className] = !!className, _cx));
    if (rtl && ["arrow-left", "arrow-right", "arrow-double-left", "arrow-double-right", "switch", "sorting", "descending", "ascending"].indexOf(type) !== -1) {
      others.dir = "rtl";
    }
    var sizeStyle = typeof size === "number" ? {
      width: size,
      height: size,
      lineHeight: size + "px",
      fontSize: size
    } : {};
    return /* @__PURE__ */ React.createElement("i", _extends$1$1({}, others, {
      style: _extends$1$1({}, sizeStyle, style),
      className: classes
    }), children);
  };
  return Icon2;
}(Component), _class$5.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
  type: propTypes$1.string,
  children: propTypes$1.node,
  size: propTypes$1.oneOfType([propTypes$1.oneOf(["xxs", "xs", "small", "medium", "large", "xl", "xxl", "xxxl", "inherit"]), propTypes$1.number]),
  className: propTypes$1.string,
  style: propTypes$1.object
}), _class$5.defaultProps = {
  prefix: "next-",
  size: "medium"
}, _class$5._typeMark = "icon", _temp$5);
Icon.displayName = "Icon";
Icon.createFromIconfontCN = createFromIconfontCN;
var Icon$1 = _ConfigProvider.config(Icon);
var _class$6, _temp$6;
var bindCtx$1 = func.bindCtx;
var pickOthers$1 = obj.pickOthers;
var Item = (_temp$6 = _class$6 = function(_Component) {
  _inherits(Item2, _Component);
  function Item2(props) {
    _classCallCheck(this, Item2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    bindCtx$1(_this2, ["handleClick", "handleKeyDown"]);
    return _this2;
  }
  Item2.prototype.componentDidMount = function componentDidMount() {
    this.itemNode = findDOMNode(this);
    var _props = this.props, parentMode = _props.parentMode, root = _props.root, menu = _props.menu;
    if (menu) {
      this.menuNode = findDOMNode(menu);
    } else if (parentMode === "popup") {
      this.menuNode = this.itemNode.parentNode;
    } else {
      this.menuNode = findDOMNode(root);
      var _root$props = root.props, prefix2 = _root$props.prefix, header = _root$props.header, footer = _root$props.footer;
      if (header || footer) {
        this.menuNode = this.menuNode.querySelector("." + prefix2 + "menu-content");
      }
    }
    this.setFocus();
  };
  Item2.prototype.componentDidUpdate = function componentDidUpdate() {
    this.setFocus();
  };
  Item2.prototype.focusable = function focusable() {
    var _props2 = this.props, root = _props2.root, type = _props2.type, disabled = _props2.disabled;
    var focusable2 = root.props.focusable;
    return focusable2 && (type === "submenu" || !disabled);
  };
  Item2.prototype.getFocused = function getFocused() {
    var _props3 = this.props, _key = _props3._key, root = _props3.root;
    var focusedKey = root.state.focusedKey;
    return focusedKey === _key;
  };
  Item2.prototype.setFocus = function setFocus() {
    var focused = this.getFocused();
    if (focused) {
      if (this.focusable()) {
        this.itemNode.focus({
          preventScroll: true
        });
      }
      if (this.menuNode && this.menuNode.scrollHeight > this.menuNode.clientHeight) {
        var scrollBottom = this.menuNode.clientHeight + this.menuNode.scrollTop;
        var itemBottom = this.itemNode.offsetTop + this.itemNode.offsetHeight;
        if (itemBottom > scrollBottom) {
          this.menuNode.scrollTop = itemBottom - this.menuNode.clientHeight;
        } else if (this.itemNode.offsetTop < this.menuNode.scrollTop) {
          this.menuNode.scrollTop = this.itemNode.offsetTop;
        }
      }
    }
  };
  Item2.prototype.handleClick = function handleClick(e2) {
    e2.stopPropagation();
    var _props4 = this.props, _key = _props4._key, root = _props4.root, disabled = _props4.disabled;
    if (!disabled) {
      root.handleItemClick(_key, this, e2);
      this.props.onClick && this.props.onClick(e2);
    } else {
      e2.preventDefault();
    }
  };
  Item2.prototype.handleKeyDown = function handleKeyDown(e2) {
    var _props5 = this.props, _key = _props5._key, root = _props5.root, type = _props5.type;
    if (this.focusable()) {
      root.handleItemKeyDown(_key, type, this, e2);
      switch (e2.keyCode) {
        case KEYCODE.ENTER: {
          if (!(type === "submenu")) {
            this.handleClick(e2);
          }
          break;
        }
      }
    }
    this.props.onKeyDown && this.props.onKeyDown(e2);
  };
  Item2.prototype.getTitle = function getTitle(children) {
    if (typeof children === "string") {
      return children;
    }
    return;
  };
  Item2.prototype.render = function render2() {
    var _cx;
    var _props6 = this.props, inlineLevel = _props6.inlineLevel, root = _props6.root, replaceClassName2 = _props6.replaceClassName, groupIndent = _props6.groupIndent, component = _props6.component, disabled = _props6.disabled, className = _props6.className, children = _props6.children, needIndent = _props6.needIndent, parentMode = _props6.parentMode, _key = _props6._key;
    var others = pickOthers$1(Object.keys(Item2.propTypes), this.props);
    var _root$props2 = root.props, prefix2 = _root$props2.prefix, focusable = _root$props2.focusable, inlineIndent = _root$props2.inlineIndent, itemClassName = _root$props2.itemClassName, rtl = _root$props2.rtl;
    var focused = this.getFocused();
    var newClassName = replaceClassName2 ? className : classnames((_cx = {}, _cx[prefix2 + "menu-item"] = true, _cx[prefix2 + "disabled"] = disabled, _cx[prefix2 + "focused"] = !focusable && focused, _cx[itemClassName] = !!itemClassName, _cx[className] = !!className, _cx));
    if (disabled) {
      others["aria-disabled"] = true;
      others["aria-hidden"] = true;
    }
    others.tabIndex = root.state.tabbableKey === _key ? "0" : "-1";
    if (parentMode === "inline" && inlineLevel > 1 && inlineIndent > 0 && needIndent) {
      var _extends2;
      var paddingProp = rtl ? "paddingRight" : "paddingLeft";
      others.style = _extends$1$1({}, others.style || {}, (_extends2 = {}, _extends2[paddingProp] = inlineLevel * inlineIndent - (groupIndent || 0) * 0.4 * inlineIndent + "px", _extends2));
    }
    var TagName = component;
    var role = "menuitem";
    if ("selectMode" in root.props) {
      role = "option";
    }
    return /* @__PURE__ */ React.createElement(TagName, _extends$1$1({
      role,
      title: this.getTitle(children)
    }, others, {
      className: newClassName,
      onClick: this.handleClick,
      onKeyDown: this.handleKeyDown
    }), /* @__PURE__ */ React.createElement("div", {
      className: prefix2 + "menu-item-inner"
    }, children));
  };
  return Item2;
}(Component), _class$6.propTypes = {
  _key: propTypes$1.string,
  level: propTypes$1.number,
  inlineLevel: propTypes$1.number,
  groupIndent: propTypes$1.number,
  root: propTypes$1.object,
  menu: propTypes$1.any,
  parent: propTypes$1.object,
  parentMode: propTypes$1.oneOf(["inline", "popup"]),
  type: propTypes$1.oneOf(["submenu", "item"]),
  component: propTypes$1.string,
  disabled: propTypes$1.bool,
  className: propTypes$1.string,
  onClick: propTypes$1.func,
  onKeyDown: propTypes$1.func,
  needIndent: propTypes$1.bool,
  replaceClassName: propTypes$1.bool
}, _class$6.defaultProps = {
  component: "li",
  groupIndent: 0,
  replaceClassName: false,
  needIndent: true
}, _temp$6);
Item.displayName = "Item";
var _class$7, _temp$7;
var bindCtx$2 = func.bindCtx;
var pickOthers$2 = obj.pickOthers;
var SelectableItem = (_temp$7 = _class$7 = function(_Component) {
  _inherits(SelectableItem2, _Component);
  function SelectableItem2(props) {
    _classCallCheck(this, SelectableItem2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    bindCtx$2(_this2, ["handleKeyDown", "handleClick"]);
    return _this2;
  }
  SelectableItem2.prototype.getSelected = function getSelected() {
    var _props = this.props, _key = _props._key, root = _props.root, selected = _props.selected;
    var selectMode = root.props.selectMode;
    var selectedKeys = root.state.selectedKeys;
    return selected || !!selectMode && selectedKeys.indexOf(_key) > -1;
  };
  SelectableItem2.prototype.handleSelect = function handleSelect(e2) {
    var _props2 = this.props, _key = _props2._key, root = _props2.root, onSelect = _props2.onSelect;
    if (onSelect) {
      onSelect(!this.getSelected(), this, e2);
    } else {
      root.handleSelect(_key, !this.getSelected(), this);
    }
  };
  SelectableItem2.prototype.handleKeyDown = function handleKeyDown(e2) {
    if (e2.keyCode === KEYCODE.SPACE && !this.props.disabled) {
      this.handleSelect(e2);
    }
    this.props.onKeyDown && this.props.onKeyDown(e2);
  };
  SelectableItem2.prototype.handleClick = function handleClick(e2) {
    this.handleSelect(e2);
    this.props.onClick && this.props.onClick(e2);
  };
  SelectableItem2.prototype.renderSelectedIcon = function renderSelectedIcon(selected) {
    var _cx;
    var _props3 = this.props, root = _props3.root, inlineIndent = _props3.inlineIndent, needIndent = _props3.needIndent, hasSelectedIcon = _props3.hasSelectedIcon, isSelectIconRight = _props3.isSelectIconRight, type = _props3.type;
    var _root$props = root.props, prefix2 = _root$props.prefix, rootSelectedIcon = _root$props.hasSelectedIcon, rootSelectIconRight = _root$props.isSelectIconRight, icons = _root$props.icons;
    var iconsSelect = icons.select;
    if (!/* @__PURE__ */ isValidElement(icons.select) && icons.select) {
      iconsSelect = /* @__PURE__ */ React.createElement("span", null, icons.select);
    }
    var cls = classnames((_cx = {}, _cx[prefix2 + "menu-icon-selected"] = true, _cx[prefix2 + "menu-symbol-icon-selected"] = !iconsSelect, _cx[prefix2 + "menu-icon-right"] = ("isSelectIconRight" in this.props ? isSelectIconRight : rootSelectIconRight) && type !== "submenu", _cx));
    return ("hasSelectedIcon" in this.props ? hasSelectedIcon : rootSelectedIcon) && selected ? /* @__PURE__ */ React.cloneElement(iconsSelect || /* @__PURE__ */ React.createElement(Icon$1, {
      type: "select"
    }), {
      style: needIndent && inlineIndent > 0 ? {
        left: inlineIndent + "px"
      } : null,
      className: cls
    }) : null;
  };
  SelectableItem2.prototype.render = function render2() {
    var _cx2;
    var _props4 = this.props, _key = _props4._key, root = _props4.root, className = _props4.className, disabled = _props4.disabled, helper = _props4.helper, children = _props4.children, needIndent = _props4.needIndent;
    var prefix2 = root.props.prefix;
    var others = pickOthers$2(Object.keys(SelectableItem2.propTypes), this.props);
    var selected = this.getSelected();
    var newProps = _extends$1$1({
      _key,
      root,
      disabled,
      type: "item",
      className: classnames((_cx2 = {}, _cx2[prefix2 + "selected"] = selected, _cx2[className] = !!className, _cx2)),
      onKeyDown: this.handleKeyDown,
      onClick: !disabled ? this.handleClick : this.props.onClick,
      needIndent
    }, others);
    if (!("title" in newProps) && typeof children === "string") {
      newProps.title = children;
    }
    var textProps = {};
    if ("selectMode" in root.props) {
      textProps["aria-selected"] = selected;
    }
    return /* @__PURE__ */ React.createElement(Item, newProps, this.renderSelectedIcon(selected), /* @__PURE__ */ React.createElement("span", _extends$1$1({
      className: prefix2 + "menu-item-text"
    }, textProps), children), helper ? /* @__PURE__ */ React.createElement("div", {
      className: prefix2 + "menu-item-helper"
    }, helper) : null);
  };
  return SelectableItem2;
}(Component), _class$7.menuChildType = "item", _class$7.propTypes = {
  _key: propTypes$1.string,
  root: propTypes$1.object,
  selected: propTypes$1.bool,
  onSelect: propTypes$1.func,
  inlineIndent: propTypes$1.number,
  disabled: propTypes$1.bool,
  helper: propTypes$1.node,
  children: propTypes$1.node,
  className: propTypes$1.string,
  onKeyDown: propTypes$1.func,
  onClick: propTypes$1.func,
  needIndent: propTypes$1.bool,
  hasSelectedIcon: propTypes$1.bool,
  isSelectIconRight: propTypes$1.bool,
  icons: propTypes$1.object
}, _class$7.defaultProps = {
  disabled: false,
  needIndent: true,
  icons: {}
}, _temp$7);
SelectableItem.displayName = "SelectableItem";
var overlayManager = {
  allOverlays: [],
  addOverlay: function addOverlay(overlay) {
    this.removeOverlay(overlay);
    this.allOverlays.unshift(overlay);
  },
  isCurrentOverlay: function isCurrentOverlay(overlay) {
    return overlay && this.allOverlays[0] === overlay;
  },
  removeOverlay: function removeOverlay(overlay) {
    var i = this.allOverlays.indexOf(overlay);
    if (i > -1) {
      this.allOverlays.splice(i, 1);
    }
  }
};
function findNode(target, param) {
  if (!target) {
    return null;
  }
  if (typeof target === "string") {
    return document.getElementById(target);
  }
  if (typeof target === "function") {
    try {
      target = target(param);
    } catch (err) {
      target = null;
    }
  }
  if (!target) {
    return null;
  }
  try {
    return findDOMNode(target);
  } catch (err) {
    return target;
  }
}
var _class$8, _temp$8;
var makeChain$1 = func.makeChain;
var getContainerNode = function getContainerNode2(props) {
  var targetNode = findNode(props.target);
  return findNode(props.container, targetNode);
};
var Gateway = (_temp$8 = _class$8 = function(_Component) {
  _inherits(Gateway2, _Component);
  function Gateway2(props) {
    _classCallCheck(this, Gateway2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    _this2.saveChildRef = function(ref) {
      _this2.child = ref;
    };
    _this2.state = {
      containerNode: null
    };
    return _this2;
  }
  Gateway2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
    return {
      containerNode: getContainerNode(nextProps)
    };
  };
  Gateway2.prototype.componentDidMount = function componentDidMount() {
    this.setState({
      containerNode: getContainerNode(this.props)
    });
  };
  Gateway2.prototype.getChildNode = function getChildNode() {
    try {
      return findDOMNode(this.child);
    } catch (err) {
      return null;
    }
  };
  Gateway2.prototype.render = function render2() {
    var containerNode = this.state.containerNode;
    if (!containerNode) {
      return null;
    }
    var children = this.props.children;
    var child = children ? Children.only(children) : null;
    if (!child) {
      return null;
    }
    if (typeof child.ref === "string") {
      throw new Error("Can not set ref by string in Gateway, use function instead.");
    }
    child = /* @__PURE__ */ React.cloneElement(child, {
      ref: makeChain$1(this.saveChildRef, child.ref)
    });
    return /* @__PURE__ */ createPortal(child, containerNode);
  };
  return Gateway2;
}(Component), _class$8.propTypes = {
  children: propTypes$1.node,
  container: propTypes$1.any,
  target: propTypes$1.any
}, _class$8.defaultProps = {
  container: function container() {
    return document.body;
  }
}, _temp$8);
Gateway.displayName = "Gateway";
var Gateway$1 = polyfill(Gateway);
var _class$9, _temp$9, _initialiseProps;
var VIEWPORT = "viewport";
var getPageX = function getPageX2() {
  return window.pageXOffset || document.documentElement.scrollLeft;
};
var getPageY = function getPageY2() {
  return window.pageYOffset || document.documentElement.scrollTop;
};
function _getElementRect(elem, container6) {
  var offsetTop = 0, offsetLeft = 0, scrollTop = 0, scrollLeft = 0;
  var offsetHeight = elem.offsetHeight;
  var offsetWidth = elem.offsetWidth;
  do {
    if (!isNaN(elem.offsetTop)) {
      offsetTop += elem.offsetTop;
    }
    if (!isNaN(elem.offsetLeft)) {
      offsetLeft += elem.offsetLeft;
    }
    if (elem && elem.offsetParent) {
      if (!isNaN(elem.offsetParent.scrollLeft) && elem.offsetParent !== document.body) {
        scrollLeft += elem.offsetParent.scrollLeft;
      }
      if (!isNaN(elem.offsetParent.scrollTop) && elem.offsetParent !== document.body) {
        scrollTop += elem.offsetParent.scrollTop;
      }
    }
    elem = elem.offsetParent;
  } while (elem !== null && elem !== container6);
  var treatAsWindow = !container6 || container6 === document.body;
  return {
    top: offsetTop - scrollTop - (treatAsWindow ? document.documentElement.scrollTop || document.body.scrollTop : 0),
    left: offsetLeft - scrollLeft - (treatAsWindow ? document.documentElement.scrollLeft || document.body.scrollLeft : 0),
    height: offsetHeight,
    width: offsetWidth
  };
}
function _getViewportSize(container6) {
  if (!container6 || container6 === document.body) {
    return {
      width: document.documentElement.clientWidth,
      height: document.documentElement.clientHeight
    };
  }
  var _container$getBoundin = container6.getBoundingClientRect(), width = _container$getBoundin.width, height = _container$getBoundin.height;
  return {
    width,
    height
  };
}
var getContainer = function getContainer2(_ref) {
  var container6 = _ref.container, autoFit = _ref.autoFit, baseElement = _ref.baseElement;
  var calcContainer = findNode(container6, baseElement);
  if (!calcContainer) {
    calcContainer = document.body;
  }
  if (!autoFit) {
    return calcContainer;
  }
  while (dom.getStyle(calcContainer, "position") === "static") {
    if (!calcContainer || calcContainer === document.body) {
      return document.body;
    }
    calcContainer = calcContainer.parentNode;
  }
  return calcContainer;
};
var Position = (_temp$9 = _class$9 = function() {
  function Position2(props) {
    _classCallCheck(this, Position2);
    _initialiseProps.call(this);
    this.pinElement = props.pinElement;
    this.baseElement = props.baseElement;
    this.pinFollowBaseElementWhenFixed = props.pinFollowBaseElementWhenFixed;
    this.container = getContainer(props);
    this.autoFit = props.autoFit || false;
    this.align = props.align || "tl tl";
    this.offset = props.offset || [0, 0];
    this.needAdjust = props.needAdjust || false;
    this.isRtl = props.isRtl || false;
  }
  Position2.prototype.setPosition = function setPosition() {
    var pinElement = this.pinElement;
    var baseElement = this.baseElement;
    var pinFollowBaseElementWhenFixed = this.pinFollowBaseElementWhenFixed;
    var expectedAlign = this._getExpectedAlign();
    var isPinFixed = void 0, isBaseFixed = void 0, firstPositionResult = void 0;
    if (pinElement === VIEWPORT) {
      return;
    }
    if (dom.getStyle(pinElement, "position") !== "fixed") {
      dom.setStyle(pinElement, "position", "absolute");
      isPinFixed = false;
    } else {
      isPinFixed = true;
    }
    if (baseElement === VIEWPORT || dom.getStyle(baseElement, "position") !== "fixed") {
      isBaseFixed = false;
    } else {
      isBaseFixed = true;
    }
    for (var i = 0; i < expectedAlign.length; i++) {
      var align = expectedAlign[i];
      var pinElementPoints = this._normalizePosition(pinElement, align.split(" ")[0], isPinFixed);
      var baseElementPoints = this._normalizePosition(baseElement, align.split(" ")[1], isPinFixed && !pinFollowBaseElementWhenFixed);
      var pinElementParentOffset = this._getParentOffset(pinElement);
      var pinElementParentScrollOffset = this._getParentScrollOffset(pinElement);
      var baseElementOffset = isPinFixed && isBaseFixed ? this._getLeftTop(baseElement) : baseElementPoints.offset(isPinFixed && pinFollowBaseElementWhenFixed);
      var top = baseElementOffset.top + baseElementPoints.y - pinElementParentOffset.top - pinElementPoints.y + pinElementParentScrollOffset.top;
      var left = baseElementOffset.left + baseElementPoints.x - pinElementParentOffset.left - pinElementPoints.x + pinElementParentScrollOffset.left;
      this._setPinElementPostion(pinElement, {
        left,
        top
      }, this.offset);
      if (!firstPositionResult) {
        firstPositionResult = {
          left,
          top
        };
      }
      if (this._isInViewport(pinElement, align)) {
        return align;
      }
    }
    var inViewportLeft = this._makeElementInViewport(pinElement, firstPositionResult.left, "Left", isPinFixed);
    var inViewportTop = this._makeElementInViewport(pinElement, firstPositionResult.top, "Top", isPinFixed);
    this._setPinElementPostion(pinElement, {
      left: inViewportLeft,
      top: inViewportTop
    }, this._calPinOffset(expectedAlign[0]));
    return expectedAlign[0];
  };
  Position2.prototype._getParentOffset = function _getParentOffset(element) {
    var parent = element.offsetParent || document.documentElement;
    var offset = void 0;
    if (parent === document.body && dom.getStyle(parent, "position") === "static") {
      offset = {
        top: 0,
        left: 0
      };
    } else {
      offset = this._getElementOffset(parent);
    }
    offset.top += parseFloat(dom.getStyle(parent, "border-top-width"), 10);
    offset.left += parseFloat(dom.getStyle(parent, "border-left-width"), 10);
    offset.offsetParent = parent;
    return offset;
  };
  Position2.prototype._makeElementInViewport = function _makeElementInViewport(pinElement, number, type, isPinFixed) {
    var result = number;
    var docElement = document.documentElement;
    var offsetParent = pinElement.offsetParent || document.documentElement;
    if (result < 0) {
      if (isPinFixed) {
        result = 0;
      } else if (offsetParent === document.body && dom.getStyle(offsetParent, "position") === "static") {
        result = Math.max(docElement["scroll" + type], document.body["scroll" + type]);
      }
    }
    return result;
  };
  Position2.prototype._normalizePosition = function _normalizePosition(element, align, ignoreElementOffset) {
    var points = this._normalizeElement(element, ignoreElementOffset);
    this._normalizeXY(points, align);
    return points;
  };
  Position2.prototype._normalizeXY = function _normalizeXY(points, align) {
    var x2 = align.split("")[1];
    var y2 = align.split("")[0];
    points.x = this._xyConverter(x2, points, "width");
    points.y = this._xyConverter(y2, points, "height");
    return points;
  };
  Position2.prototype._xyConverter = function _xyConverter(align, points, type) {
    var res = align.replace(/t|l/gi, "0%").replace(/c/gi, "50%").replace(/b|r/gi, "100%").replace(/(\d+)%/gi, function(m2, d2) {
      return points.size()[type] * (d2 / 100);
    });
    return parseFloat(res, 10) || 0;
  };
  Position2.prototype._getLeftTop = function _getLeftTop(element) {
    return {
      left: parseFloat(dom.getStyle(element, "left")) || 0,
      top: parseFloat(dom.getStyle(element, "top")) || 0
    };
  };
  Position2.prototype._normalizeElement = function _normalizeElement(element, ignoreElementOffset) {
    var _this2 = this;
    var result = {
      element,
      x: 0,
      y: 0
    }, isViewport = element === VIEWPORT, docElement = document.documentElement;
    result.offset = function(ignoreScroll) {
      if (ignoreElementOffset) {
        return {
          left: 0,
          top: 0
        };
      } else if (isViewport) {
        return {
          left: getPageX(),
          top: getPageY()
        };
      } else {
        return _this2._getElementOffset(element, ignoreScroll);
      }
    };
    result.size = function() {
      if (isViewport) {
        return {
          width: docElement.clientWidth,
          height: docElement.clientHeight
        };
      } else {
        return {
          width: element.offsetWidth,
          height: element.offsetHeight
        };
      }
    };
    return result;
  };
  Position2.prototype._getElementOffset = function _getElementOffset(element, ignoreScroll) {
    var rect = element.getBoundingClientRect();
    var docElement = document.documentElement;
    var body = document.body;
    var docClientLeft = docElement.clientLeft || body.clientLeft || 0;
    var docClientTop = docElement.clientTop || body.clientTop || 0;
    return {
      left: rect.left + (ignoreScroll ? 0 : getPageX()) - docClientLeft,
      top: rect.top + (ignoreScroll ? 0 : getPageY()) - docClientTop
    };
  };
  Position2.prototype._getExpectedAlign = function _getExpectedAlign() {
    var align = this.isRtl ? this._replaceAlignDir(this.align, /l|r/g, {
      l: "r",
      r: "l"
    }) : this.align;
    var expectedAlign = [align];
    if (this.needAdjust) {
      if (/t|b/g.test(align)) {
        expectedAlign.push(this._replaceAlignDir(align, /t|b/g, {
          t: "b",
          b: "t"
        }));
      }
      if (/l|r/g.test(align)) {
        expectedAlign.push(this._replaceAlignDir(align, /l|r/g, {
          l: "r",
          r: "l"
        }));
      }
      if (/c/g.test(align)) {
        expectedAlign.push(this._replaceAlignDir(align, /c(?= |$)/g, {
          c: "l"
        }));
        expectedAlign.push(this._replaceAlignDir(align, /c(?= |$)/g, {
          c: "r"
        }));
      }
      expectedAlign.push(this._replaceAlignDir(align, /l|r|t|b/g, {
        l: "r",
        r: "l",
        t: "b",
        b: "t"
      }));
    }
    return expectedAlign;
  };
  Position2.prototype._replaceAlignDir = function _replaceAlignDir(align, regExp, map) {
    return align.replace(regExp, function(res) {
      return map[res];
    });
  };
  Position2.prototype._isRightAligned = function _isRightAligned(align) {
    var _align$split = align.split(" "), pinAlign = _align$split[0], baseAlign = _align$split[1];
    return pinAlign[1] === "r" && pinAlign[1] === baseAlign[1];
  };
  Position2.prototype._isBottomAligned = function _isBottomAligned(align) {
    var _align$split2 = align.split(" "), pinAlign = _align$split2[0], baseAlign = _align$split2[1];
    return pinAlign[0] === "b" && pinAlign[0] === baseAlign[0];
  };
  Position2.prototype._isInViewport = function _isInViewport(element, align) {
    var viewportSize = _getViewportSize(this.container);
    var elementRect = _getElementRect(element, this.container);
    var viewportWidth = this._isRightAligned(align) ? viewportSize.width : viewportSize.width - 1;
    var viewportHeight = this._isBottomAligned(align) ? viewportSize.height : viewportSize.height - 1;
    if (this.autoFit) {
      return elementRect.top >= 0 && elementRect.top + element.offsetHeight <= viewportHeight;
    }
    return elementRect.left >= 0 && elementRect.left + element.offsetWidth <= viewportWidth && elementRect.top >= 0 && elementRect.top + element.offsetHeight <= viewportHeight;
  };
  Position2.prototype._setPinElementPostion = function _setPinElementPostion(pinElement, postion) {
    var offset = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [0, 0];
    var top = postion.top, left = postion.left;
    if (!this.isRtl) {
      dom.setStyle(pinElement, {
        left: left + offset[0] + "px",
        top: top + offset[1] + "px"
      });
      return;
    }
    var pinElementParentOffset = this._getParentOffset(pinElement);
    var _getElementRect2 = _getElementRect(pinElementParentOffset.offsetParent), offsetParentWidth = _getElementRect2.width;
    var _getElementRect3 = _getElementRect(pinElement), width = _getElementRect3.width;
    var right = offsetParentWidth - (left + width);
    dom.setStyle(pinElement, {
      left: "auto",
      right: right + offset[0] + "px",
      top: top + offset[1] + "px"
    });
  };
  return Position2;
}(), _class$9.VIEWPORT = VIEWPORT, _class$9.place = function(props) {
  return new Position(props).setPosition();
}, _initialiseProps = function _initialiseProps2() {
  var _this2 = this;
  this._calPinOffset = function(align) {
    var offset = [].concat(_this2.offset);
    if (_this2.autoFit && align && _this2.container && _this2.container !== document.body) {
      var baseElementRect = _getElementRect(_this2.baseElement, _this2.container);
      var pinElementRect = _getElementRect(_this2.pinElement, _this2.container);
      var viewportSize = _getViewportSize(_this2.container);
      var pinAlign = align.split(" ")[0];
      var x2 = pinAlign.charAt(1);
      var y2 = pinAlign.charAt(0);
      if (pinElementRect.top < 0 || pinElementRect.top + pinElementRect.height > viewportSize.height) {
        offset[1] = -baseElementRect.top - (y2 === "t" ? baseElementRect.height : 0);
      }
    }
    return offset;
  };
  this._getParentScrollOffset = function(elem) {
    var top = 0;
    var left = 0;
    if (elem && elem.offsetParent && elem.offsetParent !== document.body) {
      if (!isNaN(elem.offsetParent.scrollTop)) {
        top += elem.offsetParent.scrollTop;
      }
      if (!isNaN(elem.offsetParent.scrollLeft)) {
        left += elem.offsetParent.scrollLeft;
      }
    }
    return {
      top,
      left
    };
  };
}, _temp$9);
var _class$a, _temp$a;
var noop$4 = func.noop, bindCtx$3 = func.bindCtx;
var getStyle$2 = dom.getStyle;
var place = Position.place;
var Position$1 = (_temp$a = _class$a = function(_Component) {
  _inherits(Position$12, _Component);
  function Position$12(props) {
    _classCallCheck(this, Position$12);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    bindCtx$3(_this2, ["handleResize"]);
    return _this2;
  }
  Position$12.prototype.componentDidMount = function componentDidMount() {
    this.setPosition();
    if (this.props.needListenResize) {
      events.on(window, "resize", this.handleResize);
    }
  };
  Position$12.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    var props = this.props;
    if ("align" in props && props.align !== prevProps.align || props.shouldUpdatePosition) {
      this.shouldUpdatePosition = true;
    }
    if (this.shouldUpdatePosition) {
      this.setPosition();
      this.shouldUpdatePosition = false;
    }
  };
  Position$12.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.props.needListenResize) {
      events.off(window, "resize", this.handleResize);
    }
    clearTimeout(this.resizeTimeout);
  };
  Position$12.prototype.setPosition = function setPosition() {
    var _props = this.props, align = _props.align, offset = _props.offset, beforePosition = _props.beforePosition, onPosition = _props.onPosition, needAdjust = _props.needAdjust, container6 = _props.container, rtl = _props.rtl, pinFollowBaseElementWhenFixed = _props.pinFollowBaseElementWhenFixed, autoFit = _props.autoFit;
    beforePosition();
    var contentNode = this.getContentNode();
    var targetNode = this.getTargetNode();
    if (contentNode && targetNode) {
      var resultAlign = place({
        pinElement: contentNode,
        baseElement: targetNode,
        pinFollowBaseElementWhenFixed,
        align,
        offset,
        autoFit,
        container: container6,
        needAdjust,
        isRtl: rtl
      });
      var top = getStyle$2(contentNode, "top");
      var left = getStyle$2(contentNode, "left");
      onPosition({
        align: resultAlign.split(" "),
        top,
        left
      }, contentNode);
    }
  };
  Position$12.prototype.getContentNode = function getContentNode() {
    try {
      return findDOMNode(this);
    } catch (err) {
      return null;
    }
  };
  Position$12.prototype.getTargetNode = function getTargetNode() {
    var target = this.props.target;
    return target === Position.VIEWPORT ? Position.VIEWPORT : findNode(target, this.props);
  };
  Position$12.prototype.handleResize = function handleResize() {
    var _this2 = this;
    clearTimeout(this.resizeTimeout);
    this.resizeTimeout = setTimeout(function() {
      _this2.setPosition();
    }, 200);
  };
  Position$12.prototype.render = function render2() {
    return Children.only(this.props.children);
  };
  return Position$12;
}(Component), _class$a.VIEWPORT = Position.VIEWPORT, _class$a.propTypes = {
  children: propTypes$1.node,
  target: propTypes$1.any,
  container: propTypes$1.any,
  align: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.bool]),
  offset: propTypes$1.array,
  beforePosition: propTypes$1.func,
  onPosition: propTypes$1.func,
  needAdjust: propTypes$1.bool,
  autoFit: propTypes$1.bool,
  needListenResize: propTypes$1.bool,
  shouldUpdatePosition: propTypes$1.bool,
  rtl: propTypes$1.bool,
  pinFollowBaseElementWhenFixed: propTypes$1.bool
}, _class$a.defaultProps = {
  align: "tl bl",
  offset: [0, 0],
  beforePosition: noop$4,
  onPosition: noop$4,
  needAdjust: true,
  autoFit: false,
  needListenResize: true,
  shouldUpdatePosition: false,
  rtl: false
}, _temp$a);
Position$1.displayName = "Position";
var _class$b, _temp$b;
var saveLastFocusNode$1 = focus.saveLastFocusNode, getFocusNodeList$1 = focus.getFocusNodeList, backLastFocusNode$1 = focus.backLastFocusNode;
var makeChain$2 = func.makeChain, noop$5 = func.noop, bindCtx$4 = func.bindCtx;
var isScrollDisplay = function isScrollDisplay2(element) {
  try {
    var scrollbarStyle = window.getComputedStyle(element, "::-webkit-scrollbar");
    return !scrollbarStyle || scrollbarStyle.getPropertyValue("display") !== "none";
  } catch (e2) {
  }
  return true;
};
var hasScroll = function hasScroll2() {
  var doc = document.documentElement;
  return doc.scrollHeight > doc.clientHeight && dom.scrollbar().width > 0 && isScrollDisplay(document.documentElement) && isScrollDisplay(document.body);
};
var prefixes$1 = ["-webkit-", "-moz-", "-o-", "ms-", ""];
var getStyleProperty$1 = function getStyleProperty2(node, name) {
  var style = window.getComputedStyle(node);
  var ret = "";
  for (var i = 0; i < prefixes$1.length; i++) {
    ret = style.getPropertyValue(prefixes$1[i] + name);
    if (ret) {
      break;
    }
  }
  return ret;
};
var modals = [];
var bodyOverflow = void 0, bodyPaddingRight = void 0;
var Overlay = (_temp$b = _class$b = function(_Component) {
  _inherits(Overlay2, _Component);
  function Overlay2(props) {
    _classCallCheck(this, Overlay2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    _this2.saveContentRef = function(ref) {
      _this2.contentRef = ref;
    };
    _this2.saveGatewayRef = function(ref) {
      _this2.gatewayRef = ref;
    };
    _this2.lastAlign = props.align;
    bindCtx$4(_this2, ["handlePosition", "handleAnimateEnd", "handleDocumentKeyDown", "handleDocumentClick", "handleMaskClick", "beforeOpen", "beforeClose"]);
    _this2.state = {
      visible: false,
      status: "none",
      animation: _this2.getAnimation(props),
      beforeOpen: _this2.beforeOpen,
      beforeClose: _this2.beforeClose
    };
    _this2.timeoutMap = {};
    return _this2;
  }
  Overlay2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var willOpen = !prevState.visible && nextProps.visible;
    var willClose = prevState.visible && !nextProps.visible;
    if (willOpen) {
      prevState.beforeOpen();
      nextProps.beforeOpen();
    } else if (willClose) {
      prevState.beforeClose();
      nextProps.beforeClose();
    }
    var nextState = {};
    if (nextProps.animation || nextProps.animation === false) {
      nextState.animation = nextProps.animation;
    }
    if (nextProps.animation !== false && support.animation) {
      if (willOpen) {
        nextState.visible = true;
        nextState.status = "mounting";
      } else if (willClose) {
        nextState.status = "leaving";
      }
    } else if ("visible" in nextProps && nextProps.visible !== prevState.visible) {
      nextState.visible = nextProps.visible;
    }
    return nextState;
  };
  Overlay2.prototype.componentDidMount = function componentDidMount() {
    if (this.state.visible) {
      this.doAnimation(true, false);
      this._isMounted = true;
    }
    this.addDocumentEvents();
    overlayManager.addOverlay(this);
  };
  Overlay2.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (!this._isMounted && this.props.visible) {
      this._isMounted = true;
    }
    if (this.props.align !== prevProps.align) {
      this.lastAlign = prevProps.align;
    }
    var willOpen = !prevProps.visible && this.props.visible;
    var willClose = prevProps.visible && !this.props.visible;
    (willOpen || willClose) && this.doAnimation(willOpen, willClose);
  };
  Overlay2.prototype.componentWillUnmount = function componentWillUnmount() {
    this._isDestroyed = true;
    this._isMounted = false;
    overlayManager.removeOverlay(this);
    this.removeDocumentEvents();
    if (this.focusTimeout) {
      clearTimeout(this.focusTimeout);
    }
    if (this._animation) {
      this._animation.off();
      this._animation = null;
    }
    this.beforeClose();
  };
  Overlay2.prototype.doAnimation = function doAnimation(open, close) {
    var _this2 = this;
    if (this.state.animation && support.animation) {
      if (open) {
        this.onEntering();
      } else if (close) {
        this.onLeaving();
      }
      this.addAnimationEvents();
    } else {
      var wrapperNode = this.getWrapperNode();
      if (open) {
        setTimeout(function() {
          _this2.props.onOpen();
          _this2.props.afterOpen();
          dom.addClass(wrapperNode, "opened");
          overlayManager.addOverlay(_this2);
        });
      } else if (close) {
        this.props.onClose();
        this.props.afterClose();
        dom.removeClass(wrapperNode, "opened");
        overlayManager.removeOverlay(this);
      }
      this.setFocusNode();
    }
  };
  Overlay2.prototype.getAnimation = function getAnimation(props) {
    if (props.animation === false) {
      return false;
    }
    if (props.animation) {
      return props.animation;
    }
    return this.getAnimationByAlign(props.align);
  };
  Overlay2.prototype.getAnimationByAlign = function getAnimationByAlign(align) {
    switch (align[0]) {
      case "t":
        return {
          in: "expandInDown",
          out: "expandOutUp"
        };
      case "b":
        return {
          in: "expandInUp",
          out: "expandOutDown"
        };
      default:
        return {
          in: "expandInDown",
          out: "expandOutUp"
        };
    }
  };
  Overlay2.prototype.addAnimationEvents = function addAnimationEvents() {
    var _this3 = this;
    setTimeout(function() {
      var node = _this3.getContentNode();
      if (node) {
        var id2 = guid();
        _this3._animation = events.on(node, support.animation.end, _this3.handleAnimateEnd.bind(_this3, id2));
        var animationDelay = parseFloat(getStyleProperty$1(node, "animation-delay")) || 0;
        var animationDuration = parseFloat(getStyleProperty$1(node, "animation-duration")) || 0;
        var time = animationDelay + animationDuration;
        if (time) {
          _this3.timeoutMap[id2] = setTimeout(function() {
            _this3.handleAnimateEnd(id2);
          }, time * 1e3 + 200);
        }
      }
    });
  };
  Overlay2.prototype.handlePosition = function handlePosition(config2) {
    var align = config2.align.join(" ");
    if (!("animation" in this.props) && this.props.needAdjust && this.lastAlign !== align) {
      this.setState({
        animation: this.getAnimationByAlign(align)
      });
    }
    var status = this.state.status;
    if (status === "mounting") {
      this.setState({
        status: "entering"
      });
    }
    this.lastAlign = align;
  };
  Overlay2.prototype.handleAnimateEnd = function handleAnimateEnd(id2) {
    if (this.timeoutMap[id2]) {
      clearTimeout(this.timeoutMap[id2]);
    }
    delete this.timeoutMap[id2];
    if (this._animation) {
      this._animation.off();
      this._animation = null;
    }
    if (!this._isMounted) {
      return;
    }
    if (this.state.status === "leaving") {
      this.setState({
        visible: false,
        status: "none"
      });
      this.onLeaved();
    } else if (this.state.status === "entering") {
      this.setState({
        status: "none"
      });
      this.onEntered();
    }
  };
  Overlay2.prototype.onEntering = function onEntering() {
    var _this4 = this;
    if (this._isDestroyed) {
      return;
    }
    setTimeout(function() {
      var wrapperNode = _this4.getWrapperNode();
      dom.addClass(wrapperNode, "opened");
      _this4.props.onOpen();
    });
  };
  Overlay2.prototype.onLeaving = function onLeaving() {
    var wrapperNode = this.getWrapperNode();
    dom.removeClass(wrapperNode, "opened");
    this.props.onClose();
  };
  Overlay2.prototype.onEntered = function onEntered() {
    overlayManager.addOverlay(this);
    this.setFocusNode();
    this.props.afterOpen();
  };
  Overlay2.prototype.onLeaved = function onLeaved() {
    overlayManager.removeOverlay(this);
    this.setFocusNode();
    this.props.afterClose();
  };
  Overlay2.prototype.beforeOpen = function beforeOpen() {
    if (this.props.disableScroll) {
      if (modals.length === 0) {
        var style = {
          overflow: "hidden"
        };
        var body = document.body;
        bodyOverflow = body.style.overflow;
        if (hasScroll()) {
          bodyPaddingRight = body.style.paddingRight;
          style.paddingRight = dom.getStyle(body, "paddingRight") + dom.scrollbar().width + "px";
        }
        dom.setStyle(body, style);
      }
      modals.push(this);
    }
  };
  Overlay2.prototype.beforeClose = function beforeClose() {
    if (this.props.disableScroll) {
      var index2 = modals.indexOf(this);
      if (index2 > -1) {
        if (modals.length === 1) {
          var style = {
            overflow: bodyOverflow
          };
          if (hasScroll()) {
            style.paddingRight = bodyPaddingRight;
          }
          dom.setStyle(document.body, style);
          bodyOverflow = void 0;
          bodyPaddingRight = void 0;
        }
        modals.splice(index2, 1);
      }
    }
  };
  Overlay2.prototype.setFocusNode = function setFocusNode() {
    var _this5 = this;
    if (!this.props.autoFocus) {
      return;
    }
    if (this.state.visible && !this._hasFocused) {
      saveLastFocusNode$1();
      this.focusTimeout = setTimeout(function() {
        var node = _this5.getContentNode();
        if (node) {
          var focusNodeList = getFocusNodeList$1(node);
          if (focusNodeList.length) {
            focusNodeList[0].focus();
          }
          _this5._hasFocused = true;
        }
      }, 100);
    } else if (!this.state.visible && this._hasFocused) {
      backLastFocusNode$1();
      this._hasFocused = false;
    }
  };
  Overlay2.prototype.getContent = function getContent() {
    return this.contentRef;
  };
  Overlay2.prototype.getContentNode = function getContentNode() {
    try {
      return findDOMNode(this.contentRef);
    } catch (err) {
      return null;
    }
  };
  Overlay2.prototype.getWrapperNode = function getWrapperNode() {
    return this.gatewayRef ? this.gatewayRef.getChildNode() : null;
  };
  Overlay2.prototype.addDocumentEvents = function addDocumentEvents() {
    if (this.props.canCloseByEsc) {
      this._keydownEvents = events.on(document, "keydown", this.handleDocumentKeyDown);
    }
    if (this.props.canCloseByOutSideClick) {
      this._clickEvents = events.on(document, "click", this.handleDocumentClick);
      this._touchEvents = events.on(document, "touchend", this.handleDocumentClick);
    }
  };
  Overlay2.prototype.removeDocumentEvents = function removeDocumentEvents() {
    if (this._keydownEvents) {
      this._keydownEvents.off();
      this._keydownEvents = null;
    }
    if (this._clickEvents) {
      this._clickEvents.off();
      this._clickEvents = null;
    }
    if (this._touchEvents) {
      this._touchEvents.off();
      this._touchEvents = null;
    }
  };
  Overlay2.prototype.handleDocumentKeyDown = function handleDocumentKeyDown(e2) {
    if (this.state.visible && e2.keyCode === KEYCODE.ESC && overlayManager.isCurrentOverlay(this)) {
      this.props.onRequestClose("keyboard", e2);
    }
  };
  Overlay2.prototype.isInShadowDOM = function isInShadowDOM(node) {
    return node.getRootNode ? node.getRootNode().nodeType === 11 : false;
  };
  Overlay2.prototype.getEventPath = function getEventPath(event) {
    return event.path || event.composedPath && event.composedPath() || this.composedPath(event.target);
  };
  Overlay2.prototype.composedPath = function composedPath(el) {
    var path = [];
    while (el) {
      path.push(el);
      if (el.tagName === "HTML") {
        path.push(document);
        path.push(window);
        return path;
      }
      el = el.parentElement;
    }
  };
  Overlay2.prototype.matchInShadowDOM = function matchInShadowDOM(node, e2) {
    if (this.isInShadowDOM(node)) {
      var eventPath = this.getEventPath(e2);
      return node === eventPath[0] || node.contains(eventPath[0]);
    }
    return false;
  };
  Overlay2.prototype.handleDocumentClick = function handleDocumentClick(e2) {
    var _this6 = this;
    if (this.state.visible) {
      var safeNode = this.props.safeNode;
      var safeNodes = Array.isArray(safeNode) ? [].concat(safeNode) : [safeNode];
      safeNodes.unshift(function() {
        return _this6.getWrapperNode();
      });
      for (var i = 0; i < safeNodes.length; i++) {
        var node = findNode(safeNodes[i], this.props);
        if (node && (node === e2.target || node.contains(e2.target) || this.matchInShadowDOM(node, e2) || e2.target !== document && !document.documentElement.contains(e2.target))) {
          return;
        }
      }
      this.props.onRequestClose("docClick", e2);
    }
  };
  Overlay2.prototype.handleMaskClick = function handleMaskClick(e2) {
    if (this.props.canCloseByMask) {
      this.props.onRequestClose("maskClick", e2);
    }
  };
  Overlay2.prototype.getInstance = function getInstance() {
    return this;
  };
  Overlay2.prototype.render = function render2() {
    var _props = this.props, prefix2 = _props.prefix, className = _props.className, style = _props.style, propChildren = _props.children, target = _props.target, align = _props.align, offset = _props.offset, container6 = _props.container, hasMask = _props.hasMask, needAdjust = _props.needAdjust, autoFit = _props.autoFit, beforePosition = _props.beforePosition, onPosition = _props.onPosition, wrapperStyle = _props.wrapperStyle, rtl = _props.rtl, propShouldUpdatePosition = _props.shouldUpdatePosition, cache2 = _props.cache, wrapperClassName = _props.wrapperClassName, onMaskMouseEnter = _props.onMaskMouseEnter, onMaskMouseLeave = _props.onMaskMouseLeave, maskClass = _props.maskClass, isChildrenInMask = _props.isChildrenInMask, pinFollowBaseElementWhenFixed = _props.pinFollowBaseElementWhenFixed;
    var _state = this.state, stateVisible = _state.visible, status = _state.status, animation2 = _state.animation;
    var children = stateVisible || cache2 && this._isMounted ? propChildren : null;
    if (children) {
      var _classnames, _classnames2;
      var child = Children.only(children);
      if (typeof child.type === "function" && !(child.type.prototype instanceof Component)) {
        child = /* @__PURE__ */ React.createElement("div", {
          role: "none"
        }, child);
      }
      var childClazz = classnames((_classnames = {}, _classnames[prefix2 + "overlay-inner"] = true, _classnames[animation2.in] = status === "entering" || status === "mounting", _classnames[animation2.out] = status === "leaving", _classnames[child.props.className] = !!child.props.className, _classnames[className] = !!className, _classnames));
      if (typeof child.ref === "string") {
        throw new Error("Can not set ref by string in Overlay, use function instead.");
      }
      children = /* @__PURE__ */ React.cloneElement(child, {
        className: childClazz,
        style: _extends$1$1({}, child.props.style, style),
        ref: makeChain$2(this.saveContentRef, child.ref),
        "aria-hidden": !stateVisible && cache2 && this._isMounted,
        onClick: this.props.onClick
      });
      if (align) {
        var shouldUpdatePosition = status === "leaving" ? false : propShouldUpdatePosition;
        children = /* @__PURE__ */ React.createElement(Position$1, {
          children,
          target,
          align,
          offset,
          autoFit,
          container: container6,
          needAdjust,
          pinFollowBaseElementWhenFixed,
          beforePosition,
          onPosition: makeChain$2(this.handlePosition, onPosition),
          shouldUpdatePosition,
          rtl
        });
      }
      var wrapperClazz = classnames([prefix2 + "overlay-wrapper", wrapperClassName]);
      var newWrapperStyle = _extends$1$1({}, {
        display: stateVisible ? "" : "none"
      }, wrapperStyle);
      var maskClazz = classnames((_classnames2 = {}, _classnames2[prefix2 + "overlay-backdrop"] = true, _classnames2[maskClass] = !!maskClass, _classnames2));
      children = /* @__PURE__ */ React.createElement("div", {
        className: wrapperClazz,
        style: newWrapperStyle,
        dir: rtl ? "rtl" : void 0
      }, hasMask ? /* @__PURE__ */ React.createElement("div", {
        className: maskClazz,
        onClick: this.handleMaskClick,
        onMouseEnter: onMaskMouseEnter,
        onMouseLeave: onMaskMouseLeave,
        dir: rtl ? "rtl" : void 0
      }, isChildrenInMask && children) : null, !isChildrenInMask && children);
    }
    return /* @__PURE__ */ React.createElement(Gateway$1, _extends$1$1({
      container: container6,
      target,
      children
    }, {
      ref: this.saveGatewayRef
    }));
  };
  return Overlay2;
}(Component), _class$b.propTypes = {
  prefix: propTypes$1.string,
  pure: propTypes$1.bool,
  rtl: propTypes$1.bool,
  className: propTypes$1.string,
  style: propTypes$1.object,
  children: propTypes$1.any,
  visible: propTypes$1.bool,
  onRequestClose: propTypes$1.func,
  target: propTypes$1.any,
  align: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.bool]),
  offset: propTypes$1.array,
  container: propTypes$1.any,
  hasMask: propTypes$1.bool,
  canCloseByEsc: propTypes$1.bool,
  canCloseByOutSideClick: propTypes$1.bool,
  canCloseByMask: propTypes$1.bool,
  beforeOpen: propTypes$1.func,
  onOpen: propTypes$1.func,
  afterOpen: propTypes$1.func,
  beforeClose: propTypes$1.func,
  onClose: propTypes$1.func,
  afterClose: propTypes$1.func,
  beforePosition: propTypes$1.func,
  onPosition: propTypes$1.func,
  shouldUpdatePosition: propTypes$1.bool,
  autoFocus: propTypes$1.bool,
  needAdjust: propTypes$1.bool,
  disableScroll: propTypes$1.bool,
  cache: propTypes$1.bool,
  safeNode: propTypes$1.any,
  wrapperClassName: propTypes$1.string,
  wrapperStyle: propTypes$1.object,
  animation: propTypes$1.oneOfType([propTypes$1.object, propTypes$1.bool]),
  onMaskMouseEnter: propTypes$1.func,
  onMaskMouseLeave: propTypes$1.func,
  onClick: propTypes$1.func,
  maskClass: propTypes$1.string,
  isChildrenInMask: propTypes$1.bool,
  pinFollowBaseElementWhenFixed: propTypes$1.bool
}, _class$b.defaultProps = {
  prefix: "next-",
  pure: false,
  visible: false,
  onRequestClose: noop$5,
  target: Position$1.VIEWPORT,
  align: "tl bl",
  offset: [0, 0],
  hasMask: false,
  canCloseByEsc: true,
  canCloseByOutSideClick: true,
  canCloseByMask: true,
  beforeOpen: noop$5,
  onOpen: noop$5,
  afterOpen: noop$5,
  beforeClose: noop$5,
  onClose: noop$5,
  afterClose: noop$5,
  beforePosition: noop$5,
  onPosition: noop$5,
  onMaskMouseEnter: noop$5,
  onMaskMouseLeave: noop$5,
  shouldUpdatePosition: false,
  autoFocus: false,
  needAdjust: true,
  disableScroll: false,
  cache: false,
  isChildrenInMask: false,
  onClick: function onClick(e2) {
    return e2.stopPropagation();
  },
  maskClass: ""
}, _temp$b);
Overlay.displayName = "Overlay";
var Overlay$1 = polyfill(Overlay);
var _class$c, _temp$c;
var noop$6 = func.noop, makeChain$3 = func.makeChain, bindCtx$5 = func.bindCtx;
var Popup = (_temp$c = _class$c = function(_Component) {
  _inherits(Popup2, _Component);
  function Popup2(props) {
    _classCallCheck(this, Popup2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    _this2.state = {
      visible: typeof props.visible === "undefined" ? props.defaultVisible : props.visible
    };
    bindCtx$5(_this2, ["handleTriggerClick", "handleTriggerKeyDown", "handleTriggerMouseEnter", "handleTriggerMouseLeave", "handleTriggerFocus", "handleTriggerBlur", "handleContentMouseEnter", "handleContentMouseLeave", "handleContentMouseDown", "handleRequestClose", "handleMaskMouseEnter", "handleMaskMouseLeave"]);
    return _this2;
  }
  Popup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if ("visible" in nextProps) {
      return _extends$1$1({}, prevState, {
        visible: nextProps.visible
      });
    }
    return null;
  };
  Popup2.prototype.componentWillUnmount = function componentWillUnmount() {
    var _this2 = this;
    ["_timer", "_hideTimer", "_showTimer"].forEach(function(time) {
      _this2[time] && clearTimeout(_this2[time]);
    });
  };
  Popup2.prototype.handleVisibleChange = function handleVisibleChange(visible, type, e2) {
    if (!("visible" in this.props)) {
      this.setState({
        visible
      });
    }
    this.props.onVisibleChange(visible, type, e2);
  };
  Popup2.prototype.handleTriggerClick = function handleTriggerClick(e2) {
    if (this.state.visible && !this.props.canCloseByTrigger) {
      return;
    }
    this.handleVisibleChange(!this.state.visible, "fromTrigger", e2);
  };
  Popup2.prototype.handleTriggerKeyDown = function handleTriggerKeyDown(e2) {
    var triggerClickKeycode = this.props.triggerClickKeycode;
    var keycodes = Array.isArray(triggerClickKeycode) ? triggerClickKeycode : [triggerClickKeycode];
    if (keycodes.includes(e2.keyCode)) {
      e2.preventDefault();
      this.handleTriggerClick(e2);
    }
  };
  Popup2.prototype.handleTriggerMouseEnter = function handleTriggerMouseEnter(e2) {
    var _this3 = this;
    this._mouseNotFirstOnMask = false;
    if (this._hideTimer) {
      clearTimeout(this._hideTimer);
      this._hideTimer = null;
    }
    if (this._showTimer) {
      clearTimeout(this._showTimer);
      this._showTimer = null;
    }
    if (!this.state.visible) {
      this._showTimer = setTimeout(function() {
        _this3.handleVisibleChange(true, "fromTrigger", e2);
      }, this.props.delay);
    }
  };
  Popup2.prototype.handleTriggerMouseLeave = function handleTriggerMouseLeave(e2, type) {
    var _this4 = this;
    if (this._showTimer) {
      clearTimeout(this._showTimer);
      this._showTimer = null;
    }
    if (this.state.visible) {
      this._hideTimer = setTimeout(function() {
        _this4.handleVisibleChange(false, type || "fromTrigger", e2);
      }, this.props.delay);
    }
  };
  Popup2.prototype.handleTriggerFocus = function handleTriggerFocus(e2) {
    this.handleVisibleChange(true, "fromTrigger", e2);
  };
  Popup2.prototype.handleTriggerBlur = function handleTriggerBlur(e2) {
    if (!this._isForwardContent) {
      this.handleVisibleChange(false, "fromTrigger", e2);
    }
    this._isForwardContent = false;
  };
  Popup2.prototype.handleContentMouseDown = function handleContentMouseDown() {
    this._isForwardContent = true;
  };
  Popup2.prototype.handleContentMouseEnter = function handleContentMouseEnter() {
    clearTimeout(this._hideTimer);
  };
  Popup2.prototype.handleContentMouseLeave = function handleContentMouseLeave(e2) {
    this.handleTriggerMouseLeave(e2, "fromContent");
  };
  Popup2.prototype.handleMaskMouseEnter = function handleMaskMouseEnter() {
    if (!this._mouseNotFirstOnMask) {
      clearTimeout(this._hideTimer);
      this._hideTimer = null;
      this._mouseNotFirstOnMask = false;
    }
  };
  Popup2.prototype.handleMaskMouseLeave = function handleMaskMouseLeave() {
    this._mouseNotFirstOnMask = true;
  };
  Popup2.prototype.handleRequestClose = function handleRequestClose(type, e2) {
    this.handleVisibleChange(false, type, e2);
  };
  Popup2.prototype.renderTrigger = function renderTrigger() {
    var _this5 = this;
    var _props = this.props, trigger = _props.trigger, disabled = _props.disabled;
    var props = {
      key: "trigger",
      "aria-haspopup": true,
      "aria-expanded": this.state.visible
    };
    if (!this.state.visible) {
      props["aria-describedby"] = void 0;
    }
    if (!disabled) {
      var triggerType = this.props.triggerType;
      var triggerTypes = Array.isArray(triggerType) ? triggerType : [triggerType];
      var _ref = trigger && trigger.props || {}, onClick4 = _ref.onClick, onKeyDown = _ref.onKeyDown, onMouseEnter = _ref.onMouseEnter, onMouseLeave = _ref.onMouseLeave, onFocus = _ref.onFocus, onBlur = _ref.onBlur;
      triggerTypes.forEach(function(triggerType2) {
        switch (triggerType2) {
          case "click":
            props.onClick = makeChain$3(_this5.handleTriggerClick, onClick4);
            props.onKeyDown = makeChain$3(_this5.handleTriggerKeyDown, onKeyDown);
            break;
          case "hover":
            props.onMouseEnter = makeChain$3(_this5.handleTriggerMouseEnter, onMouseEnter);
            props.onMouseLeave = makeChain$3(_this5.handleTriggerMouseLeave, onMouseLeave);
            break;
          case "focus":
            props.onFocus = makeChain$3(_this5.handleTriggerFocus, onFocus);
            props.onBlur = makeChain$3(_this5.handleTriggerBlur, onBlur);
            break;
        }
      });
    }
    return trigger && /* @__PURE__ */ React.cloneElement(trigger, props);
  };
  Popup2.prototype.renderContent = function renderContent() {
    var _this6 = this;
    var _props2 = this.props, children = _props2.children, triggerType = _props2.triggerType;
    var triggerTypes = Array.isArray(triggerType) ? triggerType : [triggerType];
    var content = Children.only(children);
    var _content$props = content.props, onMouseDown = _content$props.onMouseDown, onMouseEnter = _content$props.onMouseEnter, onMouseLeave = _content$props.onMouseLeave;
    var props = {
      key: "portal"
    };
    triggerTypes.forEach(function(triggerType2) {
      switch (triggerType2) {
        case "focus":
          props.onMouseDown = makeChain$3(_this6.handleContentMouseDown, onMouseDown);
          break;
        case "hover":
          props.onMouseEnter = makeChain$3(_this6.handleContentMouseEnter, onMouseEnter);
          props.onMouseLeave = makeChain$3(_this6.handleContentMouseLeave, onMouseLeave);
          break;
      }
    });
    return /* @__PURE__ */ React.cloneElement(content, props);
  };
  Popup2.prototype.renderPortal = function renderPortal() {
    var _this7 = this;
    var _props3 = this.props, target = _props3.target, safeNode = _props3.safeNode, followTrigger = _props3.followTrigger, triggerType = _props3.triggerType, hasMask = _props3.hasMask, wrapperStyle = _props3.wrapperStyle, others = _objectWithoutProperties$1(_props3, ["target", "safeNode", "followTrigger", "triggerType", "hasMask", "wrapperStyle"]);
    var container6 = this.props.container;
    var findTriggerNode = function findTriggerNode2() {
      return findDOMNode(_this7);
    };
    var safeNodes = Array.isArray(safeNode) ? [].concat(safeNode) : [safeNode];
    safeNodes.unshift(findTriggerNode);
    var newWrapperStyle = wrapperStyle || {};
    if (followTrigger) {
      container6 = function container7(trigger) {
        return trigger && trigger.parentNode || trigger;
      };
      newWrapperStyle.position = "relative";
    }
    if (triggerType === "hover" && hasMask) {
      others.onMaskMouseEnter = this.handleMaskMouseEnter;
      others.onMaskMouseLeave = this.handleMaskMouseLeave;
    }
    return /* @__PURE__ */ React.createElement(Overlay$1, _extends$1$1({}, others, {
      key: "overlay",
      ref: function ref(overlay) {
        return _this7.overlay = overlay;
      },
      visible: this.state.visible,
      target: target || findTriggerNode,
      container: container6,
      safeNode: safeNodes,
      wrapperStyle: newWrapperStyle,
      triggerType,
      hasMask,
      onRequestClose: this.handleRequestClose
    }), this.renderContent());
  };
  Popup2.prototype.render = function render2() {
    return [this.renderTrigger(), this.renderPortal()];
  };
  return Popup2;
}(Component), _class$c.propTypes = {
  children: propTypes$1.node,
  trigger: propTypes$1.element,
  triggerType: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.array]),
  triggerClickKeycode: propTypes$1.oneOfType([propTypes$1.number, propTypes$1.array]),
  visible: propTypes$1.bool,
  defaultVisible: propTypes$1.bool,
  onVisibleChange: propTypes$1.func,
  disabled: propTypes$1.bool,
  autoFit: propTypes$1.bool,
  delay: propTypes$1.number,
  canCloseByTrigger: propTypes$1.bool,
  target: propTypes$1.any,
  safeNode: propTypes$1.any,
  followTrigger: propTypes$1.bool,
  container: propTypes$1.any,
  hasMask: propTypes$1.bool,
  wrapperStyle: propTypes$1.object,
  rtl: propTypes$1.bool
}, _class$c.defaultProps = {
  triggerType: "hover",
  triggerClickKeycode: [KEYCODE.SPACE, KEYCODE.ENTER],
  defaultVisible: false,
  onVisibleChange: noop$6,
  disabled: false,
  autoFit: false,
  delay: 200,
  canCloseByTrigger: true,
  followTrigger: false,
  container: function container2() {
    return document.body;
  },
  rtl: false
}, _temp$c);
Popup.displayName = "Popup";
var Popup$1 = polyfill(Popup);
Overlay$1.Gateway = Gateway$1;
Overlay$1.Position = Position$1;
Overlay$1.Popup = _ConfigProvider.config(Popup$1, {
  exportNames: ["overlay"]
});
var Overlay$2 = _ConfigProvider.config(Overlay$1, {
  exportNames: ["getContent", "getContentNode"]
});
var getWidth = function getWidth2(elem) {
  var width = elem && typeof elem.getBoundingClientRect === "function" && elem.getBoundingClientRect().width;
  if (width) {
    width = +width.toFixed(6);
  }
  return width || 0;
};
var normalizeToArray = function normalizeToArray2(items) {
  if (items) {
    if (Array.isArray(items)) {
      return items;
    }
    return [items];
  }
  return [];
};
var isSibling = function isSibling2(currentPos, targetPos) {
  var currentNums = currentPos.split("-").slice(0, -1);
  var targetNums = targetPos.split("-").slice(0, -1);
  return currentNums.length === targetNums.length && currentNums.every(function(num, index2) {
    return num === targetNums[index2];
  });
};
var isAncestor = function isAncestor2(currentPos, targetPos) {
  var currentNums = currentPos.split("-");
  var targetNums = targetPos.split("-");
  return currentNums.length > targetNums.length && targetNums.every(function(num, index2) {
    return num === currentNums[index2];
  });
};
var isAvailablePos = function isAvailablePos2(refPos, targetPos, _p2n) {
  var _p2n$targetPos = _p2n[targetPos], type = _p2n$targetPos.type, disabled = _p2n$targetPos.disabled;
  return isSibling(refPos, targetPos) && (type === "item" && !disabled || type === "submenu");
};
var getFirstAvaliablelChildKey = function getFirstAvaliablelChildKey2(parentPos, _p2n) {
  var pos = Object.keys(_p2n).find(function(p2) {
    return isAvailablePos(parentPos + "-0", p2, _p2n);
  });
  return pos ? _p2n[pos].key : null;
};
var getChildSelected = function getChildSelected2(_ref) {
  var selectMode = _ref.selectMode, selectedKeys = _ref.selectedKeys, _k2n = _ref._k2n, _key = _ref._key;
  if (!_k2n) {
    return false;
  }
  var _keyPos = (_k2n[_key] && _k2n[_key].pos) + "-";
  return !!selectMode && selectedKeys.some(function(key) {
    return _k2n[key] && _k2n[key].pos.indexOf(_keyPos) === 0;
  });
};
var _class$d, _temp$d;
var bindCtx$6 = func.bindCtx;
var setStyle$1 = dom.setStyle;
var Popup$2 = Overlay$2.Popup;
var PopupItem = (_temp$d = _class$d = function(_Component) {
  _inherits(PopupItem2, _Component);
  function PopupItem2(props) {
    _classCallCheck(this, PopupItem2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    bindCtx$6(_this2, ["handleOpen", "handlePopupOpen", "handlePopupClose", "getPopup"]);
    return _this2;
  }
  PopupItem2.prototype.getPopup = function getPopup(ref) {
    this.popup = ref;
  };
  PopupItem2.prototype.getOpen = function getOpen() {
    var _props = this.props, _key = _props._key, root = _props.root;
    var openKeys = root.state.openKeys;
    return openKeys.indexOf(_key) > -1;
  };
  PopupItem2.prototype.getPopupProps = function getPopupProps() {
    var popupProps = this.props.root.props.popupProps;
    if (typeof popupProps === "function") {
      popupProps = popupProps(this.props);
    }
    return popupProps;
  };
  PopupItem2.prototype.handleOpen = function handleOpen(open, triggerType, e2) {
    var _props2 = this.props, _key = _props2._key, root = _props2.root;
    root.handleOpen(_key, open, triggerType, e2);
    var popupProps = this.popupProps;
    popupProps.onVisibleChange && popupProps.onVisibleChange(open, triggerType, e2);
  };
  PopupItem2.prototype.handlePopupOpen = function handlePopupOpen() {
    var _props3 = this.props, root = _props3.root, level = _props3.level, align = _props3.align, autoWidth = _props3.autoWidth;
    var _root$props = root.props, rootPopupAutoWidth = _root$props.popupAutoWidth, rootPopupAlign = _root$props.popupAlign, direction = _root$props.direction;
    var popupAlign = align || rootPopupAlign;
    var popupAutoWidth = "autoWidth" in this.props ? autoWidth : rootPopupAutoWidth;
    var itemNode = findDOMNode(this);
    var menuNode = itemNode.parentNode;
    this.popupNode = this.popup.getInstance().overlay.getInstance().getContentNode();
    root.popupNodes.push(this.popupNode);
    if (popupAutoWidth) {
      var targetNode = direction === "hoz" && level === 1 ? itemNode : menuNode;
      if (targetNode.offsetWidth > this.popupNode.offsetWidth) {
        setStyle$1(this.popupNode, "width", targetNode.offsetWidth + "px");
      }
    }
    if (popupAlign === "outside" && !(direction === "hoz" && level === 1)) {
      setStyle$1(this.popupNode, "height", menuNode.offsetHeight + "px");
      setStyle$1(this.popupNode, "overflow-y", "scroll");
    }
    var popupProps = this.popupProps;
    popupProps.onOpen && popupProps.onOpen();
  };
  PopupItem2.prototype.handlePopupClose = function handlePopupClose() {
    var root = this.props.root;
    var popupNodes = root.popupNodes;
    var index2 = popupNodes.indexOf(this.popupNode);
    index2 > -1 && popupNodes.splice(index2, 1);
    var popupProps = this.popupProps;
    popupProps.onClose && popupProps.onClose();
  };
  PopupItem2.prototype.renderItem = function renderItem(selectable, children, others) {
    var _cx;
    var _props4 = this.props, _key = _props4._key, root = _props4.root, level = _props4.level, inlineLevel = _props4.inlineLevel, label = _props4.label, className = _props4.className;
    var _root$props2 = root.props, prefix2 = _root$props2.prefix, selectMode = _root$props2.selectMode;
    var NewItem = selectable ? SelectableItem : Item;
    var open = this.getOpen();
    var _root$state = root.state, selectedKeys = _root$state.selectedKeys, _k2n = _root$state._k2n;
    var isChildSelected = getChildSelected({
      _key,
      _k2n,
      selectMode,
      selectedKeys
    });
    var itemProps = {
      "aria-haspopup": true,
      "aria-expanded": open,
      _key,
      root,
      level,
      inlineLevel,
      type: "submenu"
    };
    itemProps.className = classnames((_cx = {}, _cx[prefix2 + "opened"] = open, _cx[prefix2 + "child-selected"] = isChildSelected, _cx[className] = !!className, _cx));
    return /* @__PURE__ */ React.createElement(NewItem, _extends$1$1({}, itemProps, others), /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "menu-item-text"
    }, label), children);
  };
  PopupItem2.prototype.renderPopup = function renderPopup(trigger, triggerType, positionProps, children) {
    var _this2 = this;
    var _props5 = this.props, root = _props5.root, level = _props5.level, selectable = _props5.selectable;
    var direction = root.props.direction;
    this.popupProps = this.getPopupProps();
    var open = this.getOpen();
    if (direction === "hoz" && level === 1 && selectable) {
      positionProps.target = function() {
        return findDOMNode(_this2);
      };
    }
    return /* @__PURE__ */ React.createElement(Popup$2, _extends$1$1({
      ref: this.getPopup
    }, positionProps, this.popupProps, {
      canCloseByEsc: false,
      trigger,
      triggerType,
      visible: open,
      pinFollowBaseElementWhenFixed: true,
      onVisibleChange: this.handleOpen,
      onOpen: this.handlePopupOpen,
      onClose: this.handlePopupClose
    }), children);
  };
  PopupItem2.prototype.render = function render2() {
    var _this3 = this;
    var _props6 = this.props, root = _props6.root, level = _props6.level, hasSubMenu = _props6.hasSubMenu, selectableFromProps = _props6.selectable, children = _props6.children, triggerType = _props6.triggerType, align = _props6.align, noIcon = _props6.noIcon, rtl = _props6.rtl;
    var others = obj.pickOthers(Object.keys(PopupItem2.propTypes), this.props);
    var _root$props3 = root.props, prefix2 = _root$props3.prefix, selectMode = _root$props3.selectMode, direction = _root$props3.direction, rootPopupAlign = _root$props3.popupAlign, rootTriggerType = _root$props3.triggerType;
    var popupAlign = align || rootPopupAlign;
    var newTriggerType = triggerType || (hasSubMenu ? rootTriggerType : "hover");
    var newChildren = Array.isArray(children) ? children[0] : children;
    var selectable = selectMode && selectableFromProps;
    var triggerIsIcon = selectable && newTriggerType === "click";
    var open = this.getOpen();
    var positionProps = {};
    var arrowProps = void 0;
    if (direction === "hoz" && level === 1) {
      var _cx2;
      positionProps.align = "tl bl";
      positionProps.offset = [0, 0];
      arrowProps = {
        type: "arrow-down",
        className: classnames((_cx2 = {}, _cx2[prefix2 + "menu-hoz-icon-arrow"] = true, _cx2[prefix2 + "open"] = open, _cx2))
      };
    } else {
      if (popupAlign === "outside") {
        positionProps.target = function() {
          return findDOMNode(root);
        };
        positionProps.align = "tl tr";
        rtl ? positionProps.offset = [-2, 0] : positionProps.offset = [2, 0];
      } else {
        if (triggerIsIcon) {
          positionProps.target = function() {
            return findDOMNode(_this3);
          };
        }
        positionProps.align = "tl tr";
        rtl ? positionProps.offset = [2, -8] : positionProps.offset = [-2, -8];
      }
      arrowProps = {
        type: "arrow-right",
        className: prefix2 + "menu-icon-arrow " + prefix2 + "menu-symbol-popupfold"
      };
    }
    var arrow = /* @__PURE__ */ React.createElement(Icon$1, arrowProps);
    var trigger = triggerIsIcon ? arrow : this.renderItem(selectable, noIcon ? null : arrow, others);
    var popup = this.renderPopup(trigger, newTriggerType, positionProps, newChildren);
    return triggerIsIcon ? this.renderItem(selectable, popup, others) : popup;
  };
  return PopupItem2;
}(Component), _class$d.menuChildType = "submenu", _class$d.propTypes = {
  _key: propTypes$1.string,
  root: propTypes$1.object,
  level: propTypes$1.number,
  hasSubMenu: propTypes$1.bool,
  noIcon: propTypes$1.bool,
  rtl: propTypes$1.bool,
  selectable: propTypes$1.bool,
  label: propTypes$1.node,
  children: propTypes$1.node,
  className: propTypes$1.string,
  triggerType: propTypes$1.oneOf(["click", "hover"]),
  align: propTypes$1.oneOf(["outside", "follow"]),
  autoWidth: propTypes$1.bool
}, _class$d.defaultProps = {
  selectable: false,
  noIcon: false
}, _temp$d);
PopupItem.displayName = "PopupItem";
var _class$e, _temp$e;
var Expand$1 = Animate.Expand;
var bindCtx$7 = func.bindCtx;
var SubMenu = (_temp$e = _class$e = function(_Component) {
  _inherits(SubMenu2, _Component);
  function SubMenu2(props) {
    _classCallCheck(this, SubMenu2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    bindCtx$7(_this2, ["handleMouseEnter", "handleMouseLeave", "handleClick", "handleOpen", "afterLeave"]);
    return _this2;
  }
  SubMenu2.prototype.componentDidMount = function componentDidMount() {
    this.itemNode = findDOMNode(this);
  };
  SubMenu2.prototype.afterLeave = function afterLeave() {
    var _props = this.props, focused = _props.focused, root = _props.root;
    var focusable = root.props.focusable;
    if (focusable && focused) {
      this.itemNode.focus();
    }
  };
  SubMenu2.prototype.getOpen = function getOpen() {
    var _props2 = this.props, _key = _props2._key, root = _props2.root;
    var openKeys = root.state.openKeys;
    return openKeys.indexOf(_key) > -1;
  };
  SubMenu2.prototype.handleMouseEnter = function handleMouseEnter(e2) {
    this.handleOpen(true);
    this.props.onMouseEnter && this.props.onMouseEnter(e2);
  };
  SubMenu2.prototype.handleMouseLeave = function handleMouseLeave(e2) {
    this.handleOpen(false);
    this.props.onMouseLeave && this.props.onMouseLeave(e2);
  };
  SubMenu2.prototype.handleClick = function handleClick(e2) {
    var _props3 = this.props, root = _props3.root, selectable = _props3.selectable;
    var selectMode = root.props.selectMode;
    if (selectMode && selectable) {
      e2.stopPropagation();
    }
    var open = this.getOpen();
    this.handleOpen(!open);
  };
  SubMenu2.prototype.handleOpen = function handleOpen(open, triggerType, e2) {
    var _props4 = this.props, _key = _props4._key, root = _props4.root;
    root.handleOpen(_key, open, triggerType, e2);
  };
  SubMenu2.prototype.passParentToChildren = function passParentToChildren(children) {
    var _this2 = this;
    var _props5 = this.props, mode = _props5.mode, root = _props5.root;
    return Children.map(children, function(child) {
      if (typeof child !== "function" && (typeof child === "undefined" ? "undefined" : _typeof(child)) !== "object") {
        return child;
      }
      return /* @__PURE__ */ cloneElement(child, {
        parent: _this2,
        parentMode: mode || root.props.mode
      });
    });
  };
  SubMenu2.prototype.renderInline = function renderInline() {
    var _cx, _cx2, _cx3, _cx4;
    var _props6 = this.props, _key = _props6._key, level = _props6.level, inlineLevel = _props6.inlineLevel, root = _props6.root, className = _props6.className, selectableFromProps = _props6.selectable, label = _props6.label, children = _props6.children, noIcon = _props6.noIcon, subMenuContentClassName = _props6.subMenuContentClassName, propsTriggerType = _props6.triggerType, parentMode = _props6.parentMode;
    var _root$props = root.props, prefix2 = _root$props.prefix, selectMode = _root$props.selectMode, rootTriggerType = _root$props.triggerType, inlineArrowDirection = _root$props.inlineArrowDirection, expandAnimation = _root$props.expandAnimation, rtl = _root$props.rtl;
    var triggerType = propsTriggerType || rootTriggerType;
    var open = this.getOpen();
    var _root$state = root.state, selectedKeys = _root$state.selectedKeys, _k2n = _root$state._k2n;
    var isChildSelected = getChildSelected({
      _key,
      _k2n,
      selectMode,
      selectedKeys
    });
    var others = obj.pickOthers(Object.keys(SubMenu2.propTypes), this.props);
    var liProps = {
      className: classnames((_cx = {}, _cx[prefix2 + "menu-sub-menu-wrapper"] = true, _cx[className] = !!className, _cx))
    };
    var itemProps = {
      "aria-expanded": open,
      _key,
      level,
      role: "listitem",
      inlineLevel,
      root,
      type: "submenu",
      component: "div",
      parentMode,
      className: classnames((_cx2 = {}, _cx2[prefix2 + "opened"] = open, _cx2[prefix2 + "child-selected"] = isChildSelected, _cx2))
    };
    if (typeof label === "string") {
      itemProps.title = label;
    }
    var arrorProps = {
      type: inlineArrowDirection === "right" ? "arrow-right" : "arrow-down",
      className: classnames((_cx3 = {}, _cx3[prefix2 + "menu-icon-arrow"] = true, _cx3[prefix2 + "menu-icon-arrow-down"] = inlineArrowDirection === "down", _cx3[prefix2 + "menu-icon-arrow-right"] = inlineArrowDirection === "right", _cx3[prefix2 + "open"] = open, _cx3))
    };
    var selectable = !!selectMode && selectableFromProps;
    var NewItem = selectable ? SelectableItem : Item;
    if (triggerType === "hover") {
      liProps.onMouseEnter = this.handleMouseEnter;
      liProps.onMouseLeave = this.handleMouseLeave;
    } else if (selectable) {
      arrorProps.onClick = this.handleClick;
    } else {
      itemProps.onClick = this.handleClick;
    }
    var newSubMenuContentClassName = classnames((_cx4 = {}, _cx4[prefix2 + "menu-sub-menu"] = true, _cx4[subMenuContentClassName] = !!subMenuContentClassName, _cx4));
    var roleMenu = "menu", roleItem = "menuitem";
    if ("selectMode" in root.props) {
      roleMenu = "listbox";
      roleItem = "option";
    }
    var subMenu = open ? /* @__PURE__ */ React.createElement("ul", {
      role: roleMenu,
      dir: rtl ? "rtl" : void 0,
      className: newSubMenuContentClassName
    }, this.passParentToChildren(children)) : null;
    return /* @__PURE__ */ React.createElement("li", _extends$1$1({
      role: roleItem
    }, others, liProps), /* @__PURE__ */ React.createElement(NewItem, itemProps, /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "menu-item-text"
    }, label), noIcon ? null : /* @__PURE__ */ React.createElement(Icon$1, arrorProps)), expandAnimation ? /* @__PURE__ */ React.createElement(Expand$1, {
      animationAppear: false,
      afterLeave: this.afterLeave
    }, subMenu) : subMenu);
  };
  SubMenu2.prototype.renderPopup = function renderPopup() {
    var _cx5;
    var _props7 = this.props, children = _props7.children, subMenuContentClassName = _props7.subMenuContentClassName, noIcon = _props7.noIcon, others = _objectWithoutProperties$1(_props7, ["children", "subMenuContentClassName", "noIcon"]);
    var root = this.props.root;
    var _root$props2 = root.props, prefix2 = _root$props2.prefix, popupClassName = _root$props2.popupClassName, popupStyle = _root$props2.popupStyle, rtl = _root$props2.rtl;
    var newClassName = classnames((_cx5 = {}, _cx5[prefix2 + "menu"] = true, _cx5[prefix2 + "ver"] = true, _cx5[popupClassName] = !!popupClassName, _cx5[subMenuContentClassName] = !!subMenuContentClassName, _cx5));
    others.rtl = rtl;
    return /* @__PURE__ */ React.createElement(PopupItem, _extends$1$1({}, others, {
      noIcon,
      hasSubMenu: true
    }), /* @__PURE__ */ React.createElement("ul", {
      role: "menu",
      dir: rtl ? "rtl" : void 0,
      className: newClassName,
      style: popupStyle
    }, this.passParentToChildren(children)));
  };
  SubMenu2.prototype.render = function render2() {
    var _props8 = this.props, mode = _props8.mode, root = _props8.root;
    var newMode = mode || root.props.mode;
    return newMode === "popup" ? this.renderPopup() : this.renderInline();
  };
  return SubMenu2;
}(Component), _class$e.menuChildType = "submenu", _class$e.propTypes = {
  _key: propTypes$1.string,
  root: propTypes$1.object,
  level: propTypes$1.number,
  inlineLevel: propTypes$1.number,
  groupIndent: propTypes$1.number,
  noIcon: propTypes$1.bool,
  label: propTypes$1.node,
  selectable: propTypes$1.bool,
  mode: propTypes$1.oneOf(["inline", "popup"]),
  children: propTypes$1.node,
  onMouseEnter: propTypes$1.func,
  onMouseLeave: propTypes$1.func,
  subMenuContentClassName: propTypes$1.string,
  triggerType: propTypes$1.oneOf(["click", "hover"]),
  align: propTypes$1.oneOf(["outside", "follow"]),
  parentMode: propTypes$1.oneOf(["inline", "popup"]),
  parent: propTypes$1.any
}, _class$e.defaultProps = {
  groupIndent: 0,
  noIcon: false,
  selectable: false
}, _temp$e);
SubMenu.displayName = "SubMenu";
var _class$f, _temp$f, _initialiseProps$1;
var bindCtx$8 = func.bindCtx;
var pickOthers$3 = obj.pickOthers, isNil$1 = obj.isNil;
var noop$7 = function noop6() {
};
var MENUITEM_OVERFLOWED_CLASSNAME = "menuitem-overflowed";
var getIndicatorsItem = function getIndicatorsItem2(items, isPlaceholder) {
  var _cx;
  var prefix2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
  var renderMore = arguments[3];
  var moreCls = classnames((_cx = {}, _cx[prefix2 + "menu-more"] = true, _cx));
  var style = {};
  if (isPlaceholder) {
    style.visibility = "hidden";
    style.display = "inline-block";
  } else if (items && items.length === 0) {
    style.display = "none";
    style.visibility = "unset";
  }
  if (renderMore && typeof renderMore === "function") {
    var moreNode = renderMore(items);
    var renderMoreCls = classnames(moreCls, moreNode.props && moreNode.props.className);
    return /* @__PURE__ */ React.isValidElement(moreNode) ? /* @__PURE__ */ React.cloneElement(moreNode, {
      style,
      className: renderMoreCls
    }) : moreNode;
  }
  return /* @__PURE__ */ React.createElement(SubMenu, {
    label: "···",
    noIcon: true,
    className: moreCls,
    style
  }, items);
};
var addIndicators = function addIndicators2(_ref) {
  var children = _ref.children, lastVisibleIndex = _ref.lastVisibleIndex, prefix2 = _ref.prefix, renderMore = _ref.renderMore;
  var arr = [];
  children.forEach(function(child, index2) {
    if (!child) {
      return;
    }
    var overflowedItems = [];
    if (index2 > lastVisibleIndex) {
      child = /* @__PURE__ */ React.cloneElement(child, {
        key: "more-" + index2,
        style: {
          display: "none"
        },
        className: (child && child.className || "") + " " + MENUITEM_OVERFLOWED_CLASSNAME
      });
    }
    if (index2 === lastVisibleIndex + 1) {
      overflowedItems = children.slice(lastVisibleIndex + 1).map(function(c2, i) {
        return /* @__PURE__ */ React.cloneElement(c2, {
          key: "more-" + index2 + "-" + i
        });
      });
      arr.push(getIndicatorsItem(overflowedItems, false, prefix2, renderMore));
    }
    arr.push(child);
  });
  arr.push(getIndicatorsItem([], true, prefix2, renderMore));
  return arr;
};
var getNewChildren = function getNewChildren2(_ref2) {
  var children = _ref2.children, root = _ref2.root, lastVisibleIndex = _ref2.lastVisibleIndex, hozInLine = _ref2.hozInLine, prefix2 = _ref2.prefix, renderMore = _ref2.renderMore;
  var k2n = {};
  var p2n = {};
  var arr = hozInLine ? addIndicators({
    children,
    lastVisibleIndex,
    prefix: prefix2,
    renderMore
  }) : children;
  var loop = function loop2(children2, posPrefix) {
    var indexWrapper = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
      index: 0
    };
    var inlineLevel = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1;
    var keyArray = [];
    return Children.map(children2, function(child) {
      if (child && (typeof child.type === "function" || _typeof(child.type) === "object") && "menuChildType" in child.type) {
        var newChild = void 0;
        var pos = void 0;
        var props = {
          root
        };
        if (["item", "submenu", "group"].indexOf(child.type.menuChildType) > -1) {
          pos = posPrefix + "-" + indexWrapper.index++;
          var key = typeof child.key === "string" ? child.key : pos;
          if (keyArray.indexOf(key) > -1) {
            return;
          }
          keyArray.push(key);
          var level = pos.split("-").length - 1;
          k2n[key] = p2n[pos] = {
            key,
            pos,
            mode: child.props.mode,
            type: child.type.menuChildType,
            disabled: child.props.disabled,
            label: child.props.label || child.props.children
          };
          props.level = level;
          props.inlineLevel = inlineLevel;
          props._key = key;
          props.groupIndent = child.type.menuChildType === "group" ? 1 : 0;
        }
        var childLevel = (child.props.mode || props.root.props.mode) === "popup" ? 1 : inlineLevel + 1;
        switch (child.type.menuChildType) {
          case "submenu":
            newChild = /* @__PURE__ */ cloneElement(child, props, loop2(child.props.children, pos, void 0, childLevel));
            break;
          case "group":
            newChild = /* @__PURE__ */ cloneElement(child, props, loop2(child.props.children, posPrefix, indexWrapper, props.level));
            break;
          case "item":
          case "divider":
            newChild = /* @__PURE__ */ cloneElement(child, props);
            break;
          default:
            newChild = child;
            break;
        }
        return newChild;
      }
      return child;
    });
  };
  var newChildren = loop(arr, "0");
  return {
    newChildren,
    _k2n: k2n,
    _p2n: p2n
  };
};
var Menu = (_temp$f = _class$f = function(_Component) {
  _inherits(Menu2, _Component);
  function Menu2(props) {
    _classCallCheck(this, Menu2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    _initialiseProps$1.call(_this2);
    var _this$props = _this2.props, prefix2 = _this$props.prefix, children = _this$props.children, selectedKeys = _this$props.selectedKeys, defaultSelectedKeys = _this$props.defaultSelectedKeys, focusedKey = _this$props.focusedKey, focusable = _this$props.focusable, autoFocus = _this$props.autoFocus, hozInLine = _this$props.hozInLine, renderMore = _this$props.renderMore;
    _this2.state = {
      lastVisibleIndex: void 0
    };
    var _getNewChildren = getNewChildren({
      root: _this2,
      hozInLine,
      prefix: prefix2,
      children,
      renderMore
    }), newChildren = _getNewChildren.newChildren, _k2n = _getNewChildren._k2n, _p2n = _getNewChildren._p2n;
    var tabbableKey = focusable ? getFirstAvaliablelChildKey("0", _p2n) : void 0;
    _this2.state = {
      root: _this2,
      lastVisibleIndex: void 0,
      newChildren,
      _k2n,
      _p2n,
      tabbableKey,
      openKeys: _this2.getInitOpenKeys(props, _k2n, _p2n),
      selectedKeys: normalizeToArray(selectedKeys || defaultSelectedKeys),
      focusedKey: !isNil$1(_this2.props.focusedKey) ? focusedKey : focusable && autoFocus ? tabbableKey : null
    };
    bindCtx$8(_this2, ["handleOpen", "handleSelect", "handleItemClick", "handleItemKeyDown", "onBlur", "adjustChildrenWidth"]);
    _this2.popupNodes = [];
    return _this2;
  }
  Menu2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var state = {};
    if ("openKeys" in nextProps) {
      state.openKeys = normalizeToArray(nextProps.openKeys);
    }
    if ("selectedKeys" in nextProps) {
      state.selectedKeys = normalizeToArray(nextProps.selectedKeys);
    }
    if ("focusedKey" in nextProps) {
      state.focusedKey = nextProps.focusedKey;
    }
    var hozInLine = nextProps.hozInLine, children = nextProps.children, prefix2 = nextProps.prefix, renderMore = nextProps.renderMore;
    var _getNewChildren2 = getNewChildren({
      root: prevState.root,
      hozInLine,
      lastVisibleIndex: prevState.lastVisibleIndex,
      prefix: prefix2,
      children,
      renderMore
    }), newChildren = _getNewChildren2.newChildren, _k2n = _getNewChildren2._k2n, _p2n = _getNewChildren2._p2n;
    state.newChildren = newChildren;
    state._k2n = _k2n;
    state._p2n = _p2n;
    if (nextProps.focusable) {
      if (prevState.tabbableKey in _k2n) {
        if (prevState.focusedKey) {
          state.tabbableKey = prevState.focusedKey;
        }
      } else {
        state.tabbableKey = getFirstAvaliablelChildKey("0", _p2n);
      }
    }
    return state;
  };
  Menu2.prototype.componentDidMount = function componentDidMount() {
    this.menuNode = findDOMNode(this);
    this.adjustChildrenWidth();
    if (this.props.hozInLine) {
      events.on(window, "resize", this.adjustChildrenWidth);
    }
  };
  Menu2.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (prevState.lastVisibleIndex !== this.state.lastVisibleIndex) {
      this.adjustChildrenWidth();
    }
  };
  Menu2.prototype.componentWillUnmount = function componentWillUnmount() {
    events.off(window, "resize", this.adjustChildrenWidth);
  };
  Menu2.prototype.adjustChildrenWidth = function adjustChildrenWidth() {
    var _props = this.props, direction = _props.direction, prefix2 = _props.prefix, header = _props.header, footer = _props.footer, hozInLine = _props.hozInLine;
    if (direction !== "hoz" || !hozInLine) {
      return;
    }
    if (!this.menuNode && !this.menuContent) {
      return;
    }
    var children = [], spaceWidth = void 0;
    if (header || footer) {
      children = this.menuContent.children;
      spaceWidth = getWidth(this.menuNode) - getWidth(this.menuHeader) - getWidth(this.menuFooter);
    } else {
      children = this.menuNode.children;
      spaceWidth = getWidth(this.menuNode);
    }
    if (children.length < 2) {
      return;
    }
    var currentSumWidth = 0, lastVisibleIndex = -1;
    var moreNode = "";
    var menuItemNodes = [].slice.call(children).filter(function(node) {
      if (node.className.split(" ").indexOf(prefix2 + "menu-more") < 0) {
        return true;
      } else {
        moreNode = node;
      }
      return false;
    });
    var overflowedItems = menuItemNodes.filter(function(c2) {
      return c2.className.split(" ").indexOf(MENUITEM_OVERFLOWED_CLASSNAME) >= 0;
    });
    overflowedItems.forEach(function(c2) {
      dom.setStyle(c2, "display", "inline-block");
    });
    dom.setStyle(moreNode, "display", "inline-block");
    var moreWidth = getWidth(moreNode);
    this.menuItemSizes = menuItemNodes.map(function(c2) {
      return getWidth(c2);
    });
    var totalLen = this.menuItemSizes.length;
    overflowedItems.forEach(function(c2) {
      dom.setStyle(c2, "display", "none");
    });
    this.menuItemSizes.forEach(function(liWidth, i) {
      currentSumWidth += liWidth;
      if (i >= totalLen - 1 && currentSumWidth <= spaceWidth || currentSumWidth + moreWidth <= spaceWidth) {
        lastVisibleIndex++;
      }
    });
    if (lastVisibleIndex >= totalLen - 1) {
      dom.setStyle(moreNode, "display", "none");
    }
    this.setState(_extends$1$1({
      lastVisibleIndex
    }, this.getUpdateChildren()));
  };
  Menu2.prototype.onBlur = function onBlur(e2) {
    this.setState({
      focusedKey: void 0
    });
    this.props.onBlur && this.props.onBlur(e2);
  };
  Menu2.prototype.getInitOpenKeys = function getInitOpenKeys(props, _k2n, _p2n) {
    var initOpenKeys = void 0;
    var openKeys = props.openKeys, defaultOpenKeys = props.defaultOpenKeys, defaultOpenAll = props.defaultOpenAll, mode = props.mode, openMode = props.openMode;
    if (openKeys) {
      initOpenKeys = openKeys;
    } else if (defaultOpenAll && mode === "inline" && openMode === "multiple") {
      initOpenKeys = Object.keys(_k2n).filter(function(key) {
        return _k2n[key].type === "submenu";
      });
    } else {
      initOpenKeys = defaultOpenKeys;
    }
    return normalizeToArray(initOpenKeys);
  };
  Menu2.prototype.handleOpen = function handleOpen(key, open, triggerType, e2) {
    var newOpenKeys = void 0;
    var _props2 = this.props, mode = _props2.mode, openMode = _props2.openMode;
    var _state = this.state, openKeys = _state.openKeys, _k2n = _state._k2n;
    var index2 = openKeys.indexOf(key);
    if (open && index2 === -1) {
      if (mode === "inline") {
        if (openMode === "single") {
          newOpenKeys = openKeys.filter(function(k2) {
            return _k2n[k2] && !isSibling(_k2n[key].pos, _k2n[k2].pos);
          });
          newOpenKeys.push(key);
        } else {
          newOpenKeys = openKeys.concat(key);
        }
      } else {
        newOpenKeys = openKeys.filter(function(k2) {
          return _k2n[k2] && isAncestor(_k2n[key].pos, _k2n[k2].pos);
        });
        newOpenKeys.push(key);
      }
    } else if (!open && index2 > -1) {
      if (mode === "inline") {
        newOpenKeys = [].concat(openKeys.slice(0, index2), openKeys.slice(index2 + 1));
      } else if (triggerType === "docClick") {
        if (!this.popupNodes.concat(this.menuNode).some(function(node) {
          return node.contains(e2.target);
        })) {
          newOpenKeys = [];
        }
      } else {
        newOpenKeys = openKeys.filter(function(k2) {
          return k2 !== key && _k2n[k2] && !isAncestor(_k2n[k2].pos, _k2n[key].pos);
        });
      }
    }
    if (newOpenKeys) {
      if (isNil$1(this.props.openKeys)) {
        this.setState(_extends$1$1({
          openKeys: newOpenKeys
        }, this.getUpdateChildren()));
      }
      this.props.onOpen(newOpenKeys, {
        key,
        open
      });
    }
  };
  Menu2.prototype.getPath = function getPath(key, _k2n, _p2n) {
    var keyPath = [];
    var labelPath = [];
    var pos = _k2n[key].pos;
    var nums = pos.split("-");
    for (var i = 1; i < nums.length - 1; i++) {
      var parentNums = nums.slice(0, i + 1);
      var parentPos = parentNums.join("-");
      var parent = _p2n[parentPos];
      keyPath.push(parent.key);
      labelPath.push(parent.label);
    }
    return {
      keyPath,
      labelPath
    };
  };
  Menu2.prototype.handleSelect = function handleSelect(key, select, menuItem) {
    var _state2 = this.state, _k2n = _state2._k2n, _p2n = _state2._p2n;
    var pos = _k2n[key].pos;
    var level = pos.split("-").length - 1;
    if (this.props.shallowSelect && level > 1) {
      return;
    }
    var newSelectedKeys = void 0;
    var selectMode = this.props.selectMode;
    var selectedKeys = this.state.selectedKeys;
    var index2 = selectedKeys.indexOf(key);
    if (select && index2 === -1) {
      if (selectMode === "single") {
        newSelectedKeys = [key];
      } else if (selectMode === "multiple") {
        newSelectedKeys = selectedKeys.concat(key);
      }
    } else if (!select && index2 > -1 && selectMode === "multiple") {
      newSelectedKeys = [].concat(selectedKeys.slice(0, index2), selectedKeys.slice(index2 + 1));
    }
    if (newSelectedKeys) {
      if (isNil$1(this.props.selectedKeys)) {
        this.setState({
          selectedKeys: newSelectedKeys
        });
      }
      this.props.onSelect(newSelectedKeys, menuItem, _extends$1$1({
        key,
        select,
        label: _k2n[key].label
      }, this.getPath(key, _k2n, _p2n)));
    }
  };
  Menu2.prototype.handleItemClick = function handleItemClick(key, item, e2) {
    var _k2n = this.state._k2n;
    if (this.props.focusable) {
      if (isNil$1(this.props.focusedKey)) {
        this.setState({
          focusedKey: key
        });
      }
      this.props.onItemFocus(key, item, e2);
    }
    if (item.props.type === "item") {
      if (item.props.parentMode === "popup" && this.state.openKeys.length) {
        if (isNil$1(this.props.openKeys)) {
          this.setState({
            openKeys: []
          });
        }
        this.props.onOpen([], {
          key: this.state.openKeys.sort(function(prevKey, nextKey) {
            return _k2n[nextKey].pos.split("-").length - _k2n[prevKey].pos.split("-").length;
          })[0],
          open: false
        });
      }
      this.props.onItemClick(key, item, e2);
    }
  };
  Menu2.prototype.getAvailableKey = function getAvailableKey(pos, prev) {
    var _p2n = this.state._p2n;
    var ps = Object.keys(_p2n).filter(function(p2) {
      return isAvailablePos(pos, p2, _p2n);
    });
    if (ps.length > 1) {
      var index2 = ps.indexOf(pos);
      var targetIndex = void 0;
      if (prev) {
        targetIndex = index2 === 0 ? ps.length - 1 : index2 - 1;
      } else {
        targetIndex = index2 === ps.length - 1 ? 0 : index2 + 1;
      }
      return _p2n[ps[targetIndex]].key;
    }
    return null;
  };
  Menu2.prototype.getParentKey = function getParentKey(pos) {
    return this.state._p2n[pos.slice(0, pos.length - 2)].key;
  };
  Menu2.prototype.handleItemKeyDown = function handleItemKeyDown(key, type, item, e2) {
    if ([KEYCODE.UP, KEYCODE.DOWN, KEYCODE.RIGHT, KEYCODE.LEFT, KEYCODE.ENTER, KEYCODE.ESC, KEYCODE.SPACE].indexOf(e2.keyCode) > -1) {
      e2.preventDefault();
      e2.stopPropagation();
    }
    var focusedKey = this.state.focusedKey;
    var _state3 = this.state, _p2n = _state3._p2n, _k2n = _state3._k2n;
    var direction = this.props.direction;
    var pos = _k2n[key].pos;
    var level = pos.split("-").length - 1;
    switch (e2.keyCode) {
      case KEYCODE.UP: {
        var avaliableKey = this.getAvailableKey(pos, true);
        if (avaliableKey) {
          focusedKey = avaliableKey;
        }
        break;
      }
      case KEYCODE.DOWN: {
        var _avaliableKey = void 0;
        if (direction === "hoz" && level === 1 && type === "submenu") {
          this.handleOpen(key, true);
          _avaliableKey = getFirstAvaliablelChildKey(pos, _p2n);
        } else {
          _avaliableKey = this.getAvailableKey(pos, false);
        }
        if (_avaliableKey) {
          focusedKey = _avaliableKey;
        }
        break;
      }
      case KEYCODE.RIGHT: {
        var _avaliableKey2 = void 0;
        if (direction === "hoz" && level === 1) {
          _avaliableKey2 = this.getAvailableKey(pos, false);
        } else if (type === "submenu") {
          this.handleOpen(key, true);
          _avaliableKey2 = getFirstAvaliablelChildKey(pos, _p2n);
        }
        if (_avaliableKey2) {
          focusedKey = _avaliableKey2;
        }
        break;
      }
      case KEYCODE.ENTER: {
        if (type === "submenu") {
          this.handleOpen(key, true);
          var _avaliableKey3 = getFirstAvaliablelChildKey(pos, _p2n);
          if (_avaliableKey3) {
            focusedKey = _avaliableKey3;
          }
        }
        break;
      }
      case KEYCODE.LEFT: {
        if (direction === "hoz" && level === 1) {
          var _avaliableKey4 = this.getAvailableKey(pos, true);
          if (_avaliableKey4) {
            focusedKey = _avaliableKey4;
          }
        } else if (level > 1) {
          var parentKey = this.getParentKey(pos);
          this.handleOpen(parentKey, false);
          focusedKey = parentKey;
        }
        break;
      }
      case KEYCODE.ESC:
        if (level > 1) {
          var _parentKey = this.getParentKey(pos);
          this.handleOpen(_parentKey, false);
          focusedKey = _parentKey;
        }
        break;
      case KEYCODE.TAB:
        focusedKey = null;
        break;
    }
    if (focusedKey !== this.state.focusedKey) {
      if (isNil$1(this.props.focusedKey)) {
        this.setState({
          focusedKey
        });
      }
      this.props.onItemKeyDown(focusedKey, item, e2);
      this.props.onItemFocus(focusedKey, e2);
    }
  };
  Menu2.prototype.render = function render2() {
    var _cx2;
    var _props3 = this.props, prefix2 = _props3.prefix, className = _props3.className, direction = _props3.direction, hozAlign = _props3.hozAlign, header = _props3.header, footer = _props3.footer, embeddable = _props3.embeddable, selectMode = _props3.selectMode, hozInLine = _props3.hozInLine, rtl = _props3.rtl, flatenContent = _props3.flatenContent;
    var newChildren = this.state.newChildren;
    var others = pickOthers$3(Object.keys(Menu2.propTypes), this.props);
    var newClassName = classnames((_cx2 = {}, _cx2[prefix2 + "menu"] = true, _cx2[prefix2 + "ver"] = direction === "ver", _cx2[prefix2 + "hoz"] = direction === "hoz", _cx2[prefix2 + "menu-embeddable"] = embeddable, _cx2[prefix2 + "menu-nowrap"] = hozInLine, _cx2[className] = !!className, _cx2));
    var role = direction === "hoz" ? "menubar" : "menu";
    var ariaMultiselectable = void 0;
    if ("selectMode" in this.props) {
      role = "listbox";
      ariaMultiselectable = selectMode === "multiple";
    }
    var headerElement = header ? /* @__PURE__ */ React.createElement("li", {
      className: prefix2 + "menu-header",
      ref: this.menuHeaderRef
    }, header) : null;
    var itemsElement = !flatenContent && (header || footer) ? /* @__PURE__ */ React.createElement("ul", {
      className: prefix2 + "menu-content",
      ref: this.menuContentRef
    }, newChildren) : newChildren;
    var footerElement = footer ? /* @__PURE__ */ React.createElement("li", {
      className: prefix2 + "menu-footer",
      ref: this.menuFooterRef
    }, footer) : null;
    var shouldWrapItemsAndFooter = hozAlign === "right" && !!header;
    if (rtl) {
      others.dir = "rtl";
    }
    return /* @__PURE__ */ React.createElement("ul", _extends$1$1({
      role,
      onBlur: this.onBlur,
      className: newClassName,
      onKeyDown: this.handleEnter,
      "aria-multiselectable": ariaMultiselectable
    }, others), headerElement, shouldWrapItemsAndFooter ? /* @__PURE__ */ React.createElement("div", {
      className: prefix2 + "menu-hoz-right"
    }, itemsElement, footerElement) : null, !shouldWrapItemsAndFooter ? itemsElement : null, !shouldWrapItemsAndFooter ? footerElement : null);
  };
  return Menu2;
}(Component), _class$f.isNextMenu = true, _class$f.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
  prefix: propTypes$1.string,
  pure: propTypes$1.bool,
  rtl: propTypes$1.bool,
  className: propTypes$1.string,
  children: propTypes$1.node,
  onItemClick: propTypes$1.func,
  openKeys: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.array]),
  defaultOpenKeys: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.array]),
  defaultOpenAll: propTypes$1.bool,
  onOpen: propTypes$1.func,
  mode: propTypes$1.oneOf(["inline", "popup"]),
  triggerType: propTypes$1.oneOf(["click", "hover"]),
  openMode: propTypes$1.oneOf(["single", "multiple"]),
  inlineIndent: propTypes$1.number,
  inlineArrowDirection: propTypes$1.oneOf(["down", "right"]),
  popupAutoWidth: propTypes$1.bool,
  popupAlign: propTypes$1.oneOf(["follow", "outside"]),
  popupProps: propTypes$1.oneOfType([propTypes$1.object, propTypes$1.func]),
  popupClassName: propTypes$1.string,
  popupStyle: propTypes$1.object,
  selectedKeys: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.array]),
  defaultSelectedKeys: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.array]),
  onSelect: propTypes$1.func,
  selectMode: propTypes$1.oneOf(["single", "multiple"]),
  shallowSelect: propTypes$1.bool,
  hasSelectedIcon: propTypes$1.bool,
  labelToggleChecked: propTypes$1.bool,
  isSelectIconRight: propTypes$1.bool,
  direction: propTypes$1.oneOf(["ver", "hoz"]),
  hozAlign: propTypes$1.oneOf(["left", "right"]),
  hozInLine: propTypes$1.bool,
  renderMore: propTypes$1.func,
  header: propTypes$1.node,
  footer: propTypes$1.node,
  autoFocus: propTypes$1.bool,
  focusedKey: propTypes$1.string,
  focusable: propTypes$1.bool,
  onItemFocus: propTypes$1.func,
  onBlur: propTypes$1.func,
  embeddable: propTypes$1.bool,
  onItemKeyDown: propTypes$1.func,
  expandAnimation: propTypes$1.bool,
  itemClassName: propTypes$1.string,
  icons: propTypes$1.object,
  flatenContent: propTypes$1.bool
}), _class$f.defaultProps = {
  prefix: "next-",
  pure: false,
  defaultOpenKeys: [],
  defaultOpenAll: false,
  onOpen: noop$7,
  mode: "inline",
  triggerType: "click",
  openMode: "multiple",
  inlineIndent: 20,
  inlineArrowDirection: "down",
  popupAutoWidth: false,
  popupAlign: "follow",
  popupProps: {},
  defaultSelectedKeys: [],
  onSelect: noop$7,
  shallowSelect: false,
  hasSelectedIcon: true,
  isSelectIconRight: false,
  labelToggleChecked: true,
  direction: "ver",
  hozAlign: "left",
  hozInLine: false,
  autoFocus: false,
  focusable: true,
  embeddable: false,
  onItemFocus: noop$7,
  onItemKeyDown: noop$7,
  onItemClick: noop$7,
  expandAnimation: true,
  icons: {}
}, _initialiseProps$1 = function _initialiseProps3() {
  var _this2 = this;
  this.getUpdateChildren = function() {
    var _state4 = _this2.state, root = _state4.root, lastVisibleIndex = _state4.lastVisibleIndex;
    var _props4 = _this2.props, prefix2 = _props4.prefix, hozInLine = _props4.hozInLine, children = _props4.children, renderMore = _props4.renderMore;
    return getNewChildren({
      root,
      hozInLine,
      lastVisibleIndex,
      prefix: prefix2,
      children,
      renderMore
    });
  };
  this.menuContentRef = function(ref) {
    _this2.menuContent = ref;
  };
  this.menuHeaderRef = function(ref) {
    _this2.menuHeader = ref;
  };
  this.menuFooterRef = function(ref) {
    _this2.menuFooter = ref;
  };
}, _temp$f);
Menu.displayName = "Menu";
var Menu$1 = polyfill(Menu);
_export(_export.S + _export.F * !_descriptors, "Object", {
  defineProperty: _objectDp.f
});
var $Object$1 = _core.Object;
var defineProperty$2 = function defineProperty4(it, key, desc) {
  return $Object$1.defineProperty(it, key, desc);
};
var defineProperty$3 = createCommonjsModule$1(function(module) {
  module.exports = {
    default: defineProperty$2,
    __esModule: true
  };
});
var createClass = createCommonjsModule$1(function(module, exports) {
  exports.__esModule = true;
  var _defineProperty2 = _interopRequireDefault(defineProperty$3);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  exports.default = function() {
    function defineProperties5(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        (0, _defineProperty2.default)(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties5(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties5(Constructor, staticProps);
      return Constructor;
    };
  }();
});
var _createClass = /* @__PURE__ */ getDefaultExportFromCjs$1(createClass);
var makeChain$4 = func.makeChain;
var UIState = function(_Component) {
  _inherits(UIState2, _Component);
  function UIState2(props) {
    _classCallCheck(this, UIState2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    _this2.state = {};
    ["_onUIFocus", "_onUIBlur"].forEach(function(item) {
      _this2[item] = _this2[item].bind(_this2);
    });
    return _this2;
  }
  UIState2.prototype.getStateElement = function getStateElement(base) {
    var _props = this.props, onFocus = _props.onFocus, onBlur = _props.onBlur;
    return /* @__PURE__ */ React.cloneElement(base, {
      onFocus: makeChain$4(this._onUIFocus, onFocus),
      onBlur: makeChain$4(this._onUIBlur, onBlur)
    });
  };
  UIState2.prototype.getStateClassName = function getStateClassName() {
    var focused = this.state.focused;
    return classnames({
      focused
    });
  };
  UIState2.prototype.resetUIState = function resetUIState() {
    this.setState({
      focused: false
    });
  };
  UIState2.prototype._onUIFocus = function _onUIFocus() {
    this.setState({
      focused: true
    });
  };
  UIState2.prototype._onUIBlur = function _onUIBlur() {
    this.setState({
      focused: false
    });
  };
  return UIState2;
}(Component);
UIState.displayName = "UIState";
function withContext(Checkbox2) {
  var _class2, _temp3;
  return _temp3 = _class2 = function(_React$Component) {
    _inherits(WrappedComp, _React$Component);
    function WrappedComp() {
      _classCallCheck(this, WrappedComp);
      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    WrappedComp.prototype.render = function render2() {
      return /* @__PURE__ */ React.createElement(Checkbox2, _extends$1$1({}, this.props, {
        context: this.context
      }));
    };
    return WrappedComp;
  }(React.Component), _class2.displayName = "Checkbox", _class2.contextTypes = {
    onChange: propTypes$1.func,
    __group__: propTypes$1.bool,
    selectedValue: propTypes$1.array,
    disabled: propTypes$1.bool,
    prefix: propTypes$1.string
  }, _temp3;
}
var _class$g, _temp$g;
var noop$8 = func.noop;
function isChecked(selectedValue, value) {
  return selectedValue.indexOf(value) > -1;
}
var Checkbox = (_temp$g = _class$g = function(_UIState) {
  _inherits(Checkbox2, _UIState);
  function Checkbox2(props) {
    _classCallCheck(this, Checkbox2);
    var _this2 = _possibleConstructorReturn(this, _UIState.call(this, props));
    var context2 = props.context;
    var checked = void 0, indeterminate = void 0;
    if ("checked" in props) {
      checked = props.checked;
    } else {
      checked = props.defaultChecked;
    }
    if ("indeterminate" in props) {
      indeterminate = props.indeterminate;
    } else {
      indeterminate = props.defaultIndeterminate;
    }
    if (context2.__group__) {
      checked = isChecked(context2.selectedValue, props.value);
    }
    _this2.state = {
      checked,
      indeterminate
    };
    _this2.onChange = _this2.onChange.bind(_this2);
    return _this2;
  }
  Checkbox2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
    var nextContext = nextProps.context;
    var state = {};
    if (nextContext.__group__) {
      if ("selectedValue" in nextContext) {
        state.checked = isChecked(nextContext.selectedValue, nextProps.value);
      }
    } else if ("checked" in nextProps) {
      state.checked = nextProps.checked;
    }
    if ("indeterminate" in nextProps) {
      state.indeterminate = nextProps.indeterminate;
    }
    return state;
  };
  Checkbox2.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
    var shallowEqual2 = obj.shallowEqual;
    return !shallowEqual2(this.props, nextProps) || !shallowEqual2(this.state, nextState) || !shallowEqual2(this.context, nextContext);
  };
  Checkbox2.prototype.onChange = function onChange9(e2) {
    var _props = this.props, context2 = _props.context, value = _props.value;
    var checked = e2.target.checked;
    if (this.disabled) {
      return;
    }
    if (context2.__group__) {
      context2.onChange(value, e2);
    } else {
      if (!("checked" in this.props)) {
        this.setState({
          checked
        });
      }
      if (!("indeterminate" in this.props)) {
        this.setState({
          indeterminate: false
        });
      }
      this.props.onChange(checked, e2);
    }
  };
  Checkbox2.prototype.render = function render2() {
    var _classnames, _classnames2;
    var _props2 = this.props, id2 = _props2.id, className = _props2.className, children = _props2.children, style = _props2.style, label = _props2.label, onMouseEnter = _props2.onMouseEnter, onMouseLeave = _props2.onMouseLeave, rtl = _props2.rtl, isPreview = _props2.isPreview, renderPreview = _props2.renderPreview, context2 = _props2.context, value = _props2.value, name = _props2.name, otherProps = _objectWithoutProperties$1(_props2, ["id", "className", "children", "style", "label", "onMouseEnter", "onMouseLeave", "rtl", "isPreview", "renderPreview", "context", "value", "name"]);
    var checked = !!this.state.checked;
    var disabled = this.disabled;
    var indeterminate = !!this.state.indeterminate;
    var prefix2 = context2.prefix || this.props.prefix;
    var others = obj.pickOthers(Checkbox2.propTypes, otherProps);
    var othersData = obj.pickAttrsWith(others, "data-");
    if (otherProps.title) {
      othersData.title = otherProps.title;
    }
    var childInput = /* @__PURE__ */ React.createElement("input", _extends$1$1({}, obj.pickOthers(Checkbox2.propTypes, otherProps), {
      id: id2,
      value,
      name,
      disabled,
      checked,
      type: "checkbox",
      onChange: this.onChange,
      "aria-checked": indeterminate ? "mixed" : checked,
      className: prefix2 + "checkbox-input"
    }));
    if (!disabled) {
      childInput = this.getStateElement(childInput);
    }
    var cls = classnames((_classnames = {}, _classnames[prefix2 + "checkbox-wrapper"] = true, _classnames[className] = !!className, _classnames.checked = checked, _classnames.disabled = disabled, _classnames.indeterminate = indeterminate, _classnames[this.getStateClassName()] = true, _classnames));
    var labelCls = prefix2 + "checkbox-label";
    var type = indeterminate ? "semi-select" : "select";
    if (isPreview) {
      var previewCls = classnames(className, prefix2 + "form-preview");
      if ("renderPreview" in this.props) {
        return /* @__PURE__ */ React.createElement("div", _extends$1$1({
          id: id2,
          dir: rtl ? "rtl" : void 0
        }, othersData, {
          className: previewCls
        }), renderPreview(checked, this.props));
      }
      return /* @__PURE__ */ React.createElement("p", _extends$1$1({
        id: id2,
        dir: rtl ? "rtl" : void 0
      }, othersData, {
        className: previewCls
      }), checked && (children || label || this.state.value));
    }
    var iconCls = classnames((_classnames2 = {
      zoomIn: indeterminate
    }, _classnames2[prefix2 + "checkbox-semi-select-icon"] = indeterminate, _classnames2[prefix2 + "checkbox-select-icon"] = !indeterminate, _classnames2));
    return /* @__PURE__ */ React.createElement("label", _extends$1$1({}, othersData, {
      className: cls,
      style,
      dir: rtl ? "rtl" : void 0,
      onMouseEnter,
      onMouseLeave
    }), /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "checkbox"
    }, /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "checkbox-inner"
    }, /* @__PURE__ */ React.createElement(Icon$1, {
      type,
      size: "xs",
      className: iconCls
    })), childInput), [label, children].map(function(item, i) {
      return [void 0, null].indexOf(item) === -1 ? /* @__PURE__ */ React.createElement("span", {
        key: i,
        className: labelCls
      }, item) : null;
    }));
  };
  _createClass(Checkbox2, [{
    key: "disabled",
    get: function get() {
      var props = this.props;
      var context2 = props.context;
      return props.disabled || "disabled" in context2 && context2.disabled;
    }
  }]);
  return Checkbox2;
}(UIState), _class$g.displayName = "Checkbox", _class$g.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
  prefix: propTypes$1.string,
  rtl: propTypes$1.bool,
  className: propTypes$1.string,
  id: propTypes$1.string,
  style: propTypes$1.object,
  checked: propTypes$1.bool,
  defaultChecked: propTypes$1.bool,
  disabled: propTypes$1.bool,
  label: propTypes$1.node,
  indeterminate: propTypes$1.bool,
  defaultIndeterminate: propTypes$1.bool,
  onChange: propTypes$1.func,
  onMouseEnter: propTypes$1.func,
  onMouseLeave: propTypes$1.func,
  value: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number]),
  name: propTypes$1.string,
  isPreview: propTypes$1.bool,
  renderPreview: propTypes$1.func
}), _class$g.defaultProps = {
  defaultChecked: false,
  defaultIndeterminate: false,
  onChange: noop$8,
  onMouseEnter: noop$8,
  onMouseLeave: noop$8,
  prefix: "next-",
  isPreview: false
}, _temp$g);
var Checkbox$1 = _ConfigProvider.config(withContext(polyfill(Checkbox)));
var _class$h, _temp$h;
var pickOthers$4 = obj.pickOthers;
var CheckboxGroup = (_temp$h = _class$h = function(_Component) {
  _inherits(CheckboxGroup2, _Component);
  function CheckboxGroup2(props) {
    _classCallCheck(this, CheckboxGroup2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    var value = [];
    if ("value" in props) {
      value = props.value;
    } else if ("defaultValue" in props) {
      value = props.defaultValue;
    }
    if (!Array.isArray(value)) {
      if (value === null || value === void 0) {
        value = [];
      } else {
        value = [value];
      }
    }
    _this2.state = {
      value: [].concat(value)
    };
    _this2.onChange = _this2.onChange.bind(_this2);
    return _this2;
  }
  CheckboxGroup2.prototype.getChildContext = function getChildContext() {
    return {
      __group__: true,
      onChange: this.onChange,
      selectedValue: this.state.value,
      disabled: this.props.disabled
    };
  };
  CheckboxGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
    if ("value" in nextProps) {
      var value = nextProps.value;
      if (!Array.isArray(value)) {
        if (value === null || value === void 0) {
          value = [];
        } else {
          value = [value];
        }
      }
      return {
        value
      };
    }
    return null;
  };
  CheckboxGroup2.prototype.onChange = function onChange9(currentValue, e2) {
    var value = this.state.value;
    var index2 = value.indexOf(currentValue);
    var valTemp = [].concat(value);
    if (index2 === -1) {
      valTemp.push(currentValue);
    } else {
      valTemp.splice(index2, 1);
    }
    if (!("value" in this.props)) {
      this.setState({
        value: valTemp
      });
    }
    this.props.onChange(valTemp, e2);
  };
  CheckboxGroup2.prototype.render = function render2() {
    var _this2 = this, _classnames;
    var _props = this.props, className = _props.className, style = _props.style, prefix2 = _props.prefix, disabled = _props.disabled, itemDirection = _props.itemDirection, rtl = _props.rtl, isPreview = _props.isPreview, renderPreview = _props.renderPreview;
    var others = pickOthers$4(CheckboxGroup2.propTypes, this.props);
    var children = void 0;
    var previewed = [];
    if (this.props.children) {
      children = React.Children.map(this.props.children, function(child) {
        if (!/* @__PURE__ */ React.isValidElement(child)) {
          return child;
        }
        var checked = _this2.state.value && _this2.state.value.indexOf(child.props.value) > -1;
        if (checked) {
          previewed.push({
            label: child.props.children,
            value: child.props.value
          });
        }
        return /* @__PURE__ */ React.cloneElement(child, child.props.rtl === void 0 ? {
          rtl
        } : null);
      });
    } else {
      children = this.props.dataSource.map(function(item, index2) {
        var option = item;
        if ((typeof item === "undefined" ? "undefined" : _typeof(item)) !== "object") {
          option = {
            label: item,
            value: item,
            disabled
          };
        }
        var checked = _this2.state.value && _this2.state.value.indexOf(option.value) > -1;
        if (checked) {
          previewed.push({
            label: option.label,
            value: option.value
          });
        }
        return /* @__PURE__ */ React.createElement(Checkbox$1, {
          key: index2,
          value: option.value,
          checked,
          rtl,
          disabled: disabled || option.disabled,
          label: option.label
        });
      });
    }
    if (isPreview) {
      var previewCls = classnames(className, prefix2 + "form-preview");
      if ("renderPreview" in this.props) {
        return /* @__PURE__ */ React.createElement("div", _extends$1$1({}, others, {
          dir: rtl ? "rtl" : void 0,
          className: previewCls
        }), renderPreview(previewed, this.props));
      }
      return /* @__PURE__ */ React.createElement("p", _extends$1$1({}, others, {
        dir: rtl ? "rtl" : void 0,
        className: previewCls
      }), previewed.map(function(item) {
        return item.label;
      }).join(", "));
    }
    var cls = classnames((_classnames = {}, _classnames[prefix2 + "checkbox-group"] = true, _classnames[prefix2 + "checkbox-group-" + itemDirection] = true, _classnames[className] = !!className, _classnames.disabled = disabled, _classnames));
    return /* @__PURE__ */ React.createElement("span", _extends$1$1({
      dir: rtl ? "rtl" : void 0
    }, others, {
      className: cls,
      style
    }), children);
  };
  return CheckboxGroup2;
}(Component), _class$h.propTypes = {
  prefix: propTypes$1.string,
  rtl: propTypes$1.bool,
  className: propTypes$1.string,
  style: propTypes$1.object,
  disabled: propTypes$1.bool,
  dataSource: propTypes$1.oneOfType([propTypes$1.arrayOf(propTypes$1.string), propTypes$1.arrayOf(propTypes$1.object)]),
  value: propTypes$1.oneOfType([propTypes$1.array, propTypes$1.string, propTypes$1.number]),
  defaultValue: propTypes$1.oneOfType([propTypes$1.array, propTypes$1.string, propTypes$1.number]),
  children: propTypes$1.arrayOf(propTypes$1.element),
  onChange: propTypes$1.func,
  itemDirection: propTypes$1.oneOf(["hoz", "ver"]),
  isPreview: propTypes$1.bool,
  renderPreview: propTypes$1.func
}, _class$h.defaultProps = {
  dataSource: [],
  onChange: function onChange() {
  },
  prefix: "next-",
  itemDirection: "hoz",
  isPreview: false
}, _class$h.childContextTypes = {
  onChange: propTypes$1.func,
  __group__: propTypes$1.bool,
  selectedValue: propTypes$1.array,
  disabled: propTypes$1.bool
}, _temp$h);
CheckboxGroup.displayName = "CheckboxGroup";
var Group = _ConfigProvider.config(polyfill(CheckboxGroup));
Checkbox$1.Group = Group;
function withContext$1(Radio2) {
  var _class2, _temp3;
  return _temp3 = _class2 = function(_React$Component) {
    _inherits(WrappedComp, _React$Component);
    function WrappedComp() {
      _classCallCheck(this, WrappedComp);
      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    WrappedComp.prototype.render = function render2() {
      return /* @__PURE__ */ React.createElement(Radio2, _extends$1$1({}, this.props, {
        context: this.context
      }));
    };
    return WrappedComp;
  }(React.Component), _class2.displayName = "Radio", _class2.contextTypes = {
    onChange: propTypes$1.func,
    __group__: propTypes$1.bool,
    isButton: propTypes$1.bool,
    selectedValue: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number, propTypes$1.bool]),
    disabled: propTypes$1.bool
  }, _temp3;
}
var _class$i, _temp$i;
var makeChain$5 = func.makeChain, noop$9 = func.noop;
var Radio = (_temp$i = _class$i = function(_UIState) {
  _inherits(Radio2, _UIState);
  function Radio2(props) {
    _classCallCheck(this, Radio2);
    var _this2 = _possibleConstructorReturn(this, _UIState.call(this, props));
    var context2 = props.context;
    var checked = void 0;
    if (context2.__group__) {
      checked = context2.selectedValue === props.value;
    } else if ("checked" in props) {
      checked = props.checked;
    } else {
      checked = props.defaultChecked;
    }
    _this2.state = {
      checked
    };
    _this2.onChange = _this2.onChange.bind(_this2);
    return _this2;
  }
  Radio2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
    var nextContext = nextProps.context;
    if (nextContext.__group__ && "selectedValue" in nextContext) {
      return {
        checked: nextContext.selectedValue === nextProps.value
      };
    } else if ("checked" in nextProps) {
      return {
        checked: nextProps.checked
      };
    }
    return null;
  };
  Radio2.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
    var shallowEqual2 = obj.shallowEqual;
    return !shallowEqual2(this.props, nextProps) || !shallowEqual2(this.state, nextState) || !shallowEqual2(this.context, nextContext);
  };
  Radio2.prototype.componentDidUpdate = function componentDidUpdate() {
    if (this.disabled) {
      this.resetUIState();
    }
  };
  Radio2.prototype.onChange = function onChange9(e2) {
    var checked = e2.target.checked;
    var _props = this.props, context2 = _props.context, value = _props.value;
    if (context2.__group__) {
      context2.onChange(value, e2);
    } else if (this.state.checked !== checked) {
      if (!("checked" in this.props)) {
        this.setState({
          checked
        });
      }
      this.props.onChange(checked, e2);
    }
  };
  Radio2.prototype.render = function render2() {
    var _classnames, _classnames2, _classnames3;
    var _props2 = this.props, id2 = _props2.id, className = _props2.className, children = _props2.children, style = _props2.style, label = _props2.label, onMouseEnter = _props2.onMouseEnter, onMouseLeave = _props2.onMouseLeave, tabIndex = _props2.tabIndex, rtl = _props2.rtl, name = _props2.name, isPreview = _props2.isPreview, renderPreview = _props2.renderPreview, value = _props2.value, context2 = _props2.context, otherProps = _objectWithoutProperties$1(_props2, ["id", "className", "children", "style", "label", "onMouseEnter", "onMouseLeave", "tabIndex", "rtl", "name", "isPreview", "renderPreview", "value", "context"]);
    var checked = !!this.state.checked;
    var disabled = this.disabled;
    var isButton = context2.isButton;
    var prefix2 = context2.prefix || this.props.prefix;
    var others = obj.pickOthers(Radio2.propTypes, otherProps);
    var othersData = obj.pickAttrsWith(others, "data-");
    if (isPreview) {
      var previewCls = classnames(className, prefix2 + "form-preview");
      if ("renderPreview" in this.props) {
        return /* @__PURE__ */ React.createElement("div", _extends$1$1({
          id: id2,
          dir: rtl ? "rtl" : "ltr"
        }, others, {
          className: previewCls
        }), renderPreview(checked, this.props));
      }
      return /* @__PURE__ */ React.createElement("p", _extends$1$1({
        id: id2,
        dir: rtl ? "rtl" : "ltr"
      }, others, {
        className: previewCls
      }), checked && (children || label || value));
    }
    var input = /* @__PURE__ */ React.createElement("input", _extends$1$1({}, obj.pickOthers(othersData, others), {
      name,
      id: id2,
      tabIndex,
      disabled,
      checked,
      type: "radio",
      onChange: this.onChange,
      "aria-checked": checked,
      className: prefix2 + "radio-input"
    }));
    if (!disabled) {
      input = this.getStateElement(input);
    }
    var cls = classnames((_classnames = {}, _classnames[prefix2 + "radio"] = true, _classnames.checked = checked, _classnames.disabled = disabled, _classnames[this.getStateClassName()] = true, _classnames));
    var clsInner = classnames((_classnames2 = {}, _classnames2[prefix2 + "radio-inner"] = true, _classnames2.press = checked, _classnames2.unpress = !checked, _classnames2));
    var clsWrapper = classnames((_classnames3 = {}, _classnames3[prefix2 + "radio-wrapper"] = true, _classnames3[className] = !!className, _classnames3.checked = checked, _classnames3.disabled = disabled, _classnames3[this.getStateClassName()] = true, _classnames3));
    var childrenCls = prefix2 + "radio-label";
    var radioComp = !isButton ? /* @__PURE__ */ React.createElement("span", {
      className: cls
    }, /* @__PURE__ */ React.createElement("span", {
      className: clsInner
    }), input) : /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "radio-single-input"
    }, input);
    return /* @__PURE__ */ React.createElement("label", _extends$1$1({}, othersData, {
      dir: rtl ? "rtl" : "ltr",
      style,
      "aria-checked": checked,
      "aria-disabled": disabled,
      className: clsWrapper,
      onMouseEnter: disabled ? onMouseEnter : makeChain$5(this._onUIMouseEnter, onMouseEnter),
      onMouseLeave: disabled ? onMouseLeave : makeChain$5(this._onUIMouseLeave, onMouseLeave)
    }), radioComp, [children, label].map(function(d2, i) {
      return d2 !== void 0 ? /* @__PURE__ */ React.createElement("span", {
        key: i,
        className: childrenCls
      }, d2) : null;
    }));
  };
  _createClass(Radio2, [{
    key: "disabled",
    get: function get() {
      var props = this.props;
      var context2 = props.context;
      var disabled = props.disabled || context2.__group__ && "disabled" in context2 && context2.disabled;
      return disabled;
    }
  }]);
  return Radio2;
}(UIState), _class$i.displayName = "Radio", _class$i.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
  className: propTypes$1.string,
  id: propTypes$1.string,
  style: propTypes$1.object,
  checked: propTypes$1.bool,
  defaultChecked: propTypes$1.bool,
  label: propTypes$1.node,
  onChange: propTypes$1.func,
  onMouseEnter: propTypes$1.func,
  onMouseLeave: propTypes$1.func,
  disabled: propTypes$1.bool,
  value: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number, propTypes$1.bool]),
  name: propTypes$1.string,
  isPreview: propTypes$1.bool,
  renderPreview: propTypes$1.func
}), _class$i.defaultProps = {
  onChange: noop$9,
  onMouseLeave: noop$9,
  onMouseEnter: noop$9,
  tabIndex: 0,
  prefix: "next-",
  isPreview: false
}, _class$i.contextTypes = {
  onChange: propTypes$1.func,
  __group__: propTypes$1.bool,
  isButton: propTypes$1.bool,
  selectedValue: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number, propTypes$1.bool]),
  disabled: propTypes$1.bool
}, _temp$i);
var Radio$1 = _ConfigProvider.config(withContext$1(polyfill(Radio)));
var _class$j, _temp$j;
var pickOthers$5 = obj.pickOthers;
var RadioGroup = (_temp$j = _class$j = function(_Component) {
  _inherits(RadioGroup2, _Component);
  function RadioGroup2(props) {
    _classCallCheck(this, RadioGroup2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    var value = "";
    if ("value" in props) {
      value = props.value;
    } else if ("defaultValue" in props) {
      value = props.defaultValue;
    }
    _this2.state = {
      value
    };
    _this2.onChange = _this2.onChange.bind(_this2);
    return _this2;
  }
  RadioGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if ("value" in props && props.value !== state.value) {
      return {
        value: props.value
      };
    }
    return null;
  };
  RadioGroup2.prototype.getChildContext = function getChildContext() {
    var disabled = this.props.disabled;
    return {
      __group__: true,
      isButton: this.props.shape === "button",
      onChange: this.onChange,
      selectedValue: this.state.value,
      disabled
    };
  };
  RadioGroup2.prototype.onChange = function onChange9(currentValue, e2) {
    if (!("value" in this.props)) {
      this.setState({
        value: currentValue
      });
    }
    if (currentValue !== this.state.value) {
      this.props.onChange(currentValue, e2);
    }
  };
  RadioGroup2.prototype.render = function render2() {
    var _this2 = this, _classnames;
    var _props = this.props, rtl = _props.rtl, className = _props.className, disabled = _props.disabled, shape = _props.shape, size = _props.size, style = _props.style, prefix2 = _props.prefix, itemDirection = _props.itemDirection, component = _props.component, isPreview = _props.isPreview, renderPreview = _props.renderPreview;
    var others = pickOthers$5(Object.keys(RadioGroup2.propTypes), this.props);
    if (rtl) {
      others.dir = "rtl";
    }
    var children = void 0;
    var previewed = {};
    if (this.props.children) {
      children = React.Children.map(this.props.children, function(child, index2) {
        if (!/* @__PURE__ */ React.isValidElement(child)) {
          return child;
        }
        var checked = _this2.state.value === child.props.value;
        if (checked) {
          previewed.label = child.props.children;
          previewed.value = child.props.value;
        }
        var tabIndex = index2 === 0 && !_this2.state.value || checked ? 0 : -1;
        var childrtl = child.props.rtl === void 0 ? rtl : child.props.rtl;
        if (child.type && child.type.displayName === "Config(Radio)") {
          return /* @__PURE__ */ React.cloneElement(child, {
            checked,
            tabIndex,
            rtl: childrtl
          });
        }
        return /* @__PURE__ */ React.cloneElement(child, {
          checked,
          rtl: childrtl
        });
      });
    } else {
      children = this.props.dataSource.map(function(item, index2) {
        var option = item;
        if ((typeof item === "undefined" ? "undefined" : _typeof(item)) !== "object") {
          option = {
            label: item,
            value: item,
            disabled
          };
        }
        var checked = _this2.state.value === option.value;
        if (checked) {
          previewed.label = option.label;
          previewed.value = option.value;
        }
        return /* @__PURE__ */ React.createElement(Radio$1, {
          key: index2,
          tabIndex: index2 === 0 && !_this2.state.value || checked ? 0 : -1,
          value: option.value,
          checked,
          label: option.label,
          disabled: disabled || option.disabled
        });
      });
    }
    if (isPreview) {
      var previewCls = classnames(className, prefix2 + "form-preview");
      if ("renderPreview" in this.props) {
        return /* @__PURE__ */ React.createElement("div", _extends$1$1({}, others, {
          className: previewCls
        }), renderPreview(previewed, this.props));
      }
      return /* @__PURE__ */ React.createElement("p", _extends$1$1({}, others, {
        className: previewCls
      }), previewed.label);
    }
    var isButtonShape = shape === "button";
    var cls = classnames((_classnames = {}, _classnames[prefix2 + "radio-group"] = true, _classnames[prefix2 + "radio-group-" + itemDirection] = !isButtonShape, _classnames[prefix2 + "radio-button"] = isButtonShape, _classnames[prefix2 + "radio-button-" + size] = isButtonShape, _classnames[className] = !!className, _classnames.disabled = disabled, _classnames));
    var TagName = component;
    return /* @__PURE__ */ React.createElement(TagName, _extends$1$1({}, others, {
      "aria-disabled": disabled,
      role: "radiogroup",
      className: cls,
      style
    }), children);
  };
  return RadioGroup2;
}(Component), _class$j.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
  prefix: propTypes$1.string,
  className: propTypes$1.string,
  style: propTypes$1.object,
  name: propTypes$1.string,
  value: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number, propTypes$1.bool]),
  defaultValue: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number, propTypes$1.bool]),
  component: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.func]),
  onChange: propTypes$1.func,
  disabled: propTypes$1.bool,
  shape: propTypes$1.oneOf(["normal", "button"]),
  size: propTypes$1.oneOf(["large", "medium", "small"]),
  dataSource: propTypes$1.oneOfType([propTypes$1.arrayOf(propTypes$1.string), propTypes$1.arrayOf(propTypes$1.object)]),
  children: propTypes$1.oneOfType([propTypes$1.arrayOf(propTypes$1.element), propTypes$1.element]),
  itemDirection: propTypes$1.oneOf(["hoz", "ver"]),
  isPreview: propTypes$1.bool,
  renderPreview: propTypes$1.func
}), _class$j.defaultProps = {
  dataSource: [],
  size: "medium",
  onChange: function onChange2() {
  },
  prefix: "next-",
  component: "div",
  itemDirection: "hoz",
  isPreview: false
}, _class$j.childContextTypes = {
  onChange: propTypes$1.func,
  __group__: propTypes$1.bool,
  isButton: propTypes$1.bool,
  selectedValue: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number, propTypes$1.bool]),
  disabled: propTypes$1.bool
}, _temp$j);
RadioGroup.displayName = "RadioGroup";
var RadioGroup$1 = _ConfigProvider.config(polyfill(RadioGroup));
Radio$1.Group = RadioGroup$1;
var _class$k, _temp$k;
var noop$a = {};
var bindCtx$9 = func.bindCtx;
var pickOthers$6 = obj.pickOthers;
var CheckableItem = (_temp$k = _class$k = function(_Component) {
  _inherits(CheckableItem2, _Component);
  function CheckableItem2(props) {
    _classCallCheck(this, CheckableItem2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    bindCtx$9(_this2, ["stopPropagation", "handleKeyDown", "handleClick"]);
    _this2.id = htmlId.escapeForId("checkable-item-" + (props.id || props._key));
    return _this2;
  }
  CheckableItem2.prototype.stopPropagation = function stopPropagation(e2) {
    e2.stopPropagation();
  };
  CheckableItem2.prototype.handleCheck = function handleCheck(e2) {
    var _props = this.props, checkType = _props.checkType, checked = _props.checked, onChange9 = _props.onChange;
    if (!(checkType === "radio" && checked)) {
      onChange9(!checked, e2);
    }
  };
  CheckableItem2.prototype.handleKeyDown = function handleKeyDown(e2) {
    if (e2.keyCode === KEYCODE.SPACE && !this.props.checkDisabled) {
      this.handleCheck(e2);
    }
    this.props.onKeyDown && this.props.onKeyDown(e2);
  };
  CheckableItem2.prototype.handleClick = function handleClick(e2) {
    this.handleCheck(e2);
    this.props.onClick && this.props.onClick(e2);
  };
  CheckableItem2.prototype.renderCheck = function renderCheck() {
    var _props2 = this.props, root = _props2.root, checked = _props2.checked, indeterminate = _props2.indeterminate, disabled = _props2.disabled, checkType = _props2.checkType, checkDisabled = _props2.checkDisabled, onChange9 = _props2.onChange;
    var labelToggleChecked = root.props.labelToggleChecked;
    var Check = checkType === "radio" ? Radio$1 : Checkbox$1;
    var checkProps = {
      tabIndex: "-1",
      checked,
      disabled: disabled || checkDisabled
    };
    if (checkType === "checkbox") {
      checkProps.indeterminate = indeterminate;
    }
    if (!labelToggleChecked) {
      checkProps.onChange = onChange9;
      checkProps.onClick = this.stopPropagation;
    }
    return /* @__PURE__ */ React.createElement(Check, _extends$1$1({
      "aria-labelledby": this.id
    }, checkProps));
  };
  CheckableItem2.prototype.render = function render2() {
    var _props3 = this.props, _key = _props3._key, root = _props3.root, checked = _props3.checked, disabled = _props3.disabled, onClick4 = _props3.onClick, helper = _props3.helper, children = _props3.children;
    var _root$props = root.props, prefix2 = _root$props.prefix, labelToggleChecked = _root$props.labelToggleChecked;
    var others = pickOthers$6(Object.keys(CheckableItem2.propTypes), this.props);
    var newProps = _extends$1$1({
      _key,
      root,
      disabled,
      type: "item",
      onClick: onClick4,
      onKeyDown: this.handleKeyDown
    }, others);
    if (labelToggleChecked && !disabled) {
      newProps.onClick = this.handleClick;
    }
    var title = void 0;
    if (typeof children === "string") {
      title = children;
    }
    return /* @__PURE__ */ React.createElement(Item, _extends$1$1({
      "aria-checked": checked,
      title
    }, newProps), this.renderCheck(), /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "menu-item-text",
      id: this.id
    }, children), helper ? /* @__PURE__ */ React.createElement("div", {
      className: prefix2 + "menu-item-helper"
    }, helper) : null);
  };
  return CheckableItem2;
}(Component), _class$k.propTypes = {
  _key: propTypes$1.string,
  root: propTypes$1.object,
  disabled: propTypes$1.bool,
  inlineIndent: propTypes$1.number,
  checked: propTypes$1.bool,
  indeterminate: propTypes$1.bool,
  onChange: propTypes$1.func,
  checkType: propTypes$1.oneOf(["checkbox", "radio"]),
  checkDisabled: propTypes$1.bool,
  helper: propTypes$1.node,
  children: propTypes$1.node,
  onKeyDown: propTypes$1.func,
  onClick: propTypes$1.func,
  id: propTypes$1.string
}, _class$k.defaultProps = {
  disabled: false,
  checked: false,
  indeterminate: false,
  checkType: "checkbox",
  checkDisabled: false,
  onChange: noop$a
}, _temp$k);
CheckableItem.displayName = "CheckableItem";
var _class$l, _temp$l;
var CheckboxItem = (_temp$l = _class$l = function(_Component) {
  _inherits(CheckboxItem2, _Component);
  function CheckboxItem2() {
    _classCallCheck(this, CheckboxItem2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  CheckboxItem2.prototype.render = function render2() {
    var _props = this.props, checkboxDisabled = _props.checkboxDisabled, others = _objectWithoutProperties$1(_props, ["checkboxDisabled"]);
    return /* @__PURE__ */ React.createElement(CheckableItem, _extends$1$1({
      role: "menuitemcheckbox",
      checkType: "checkbox",
      checkDisabled: checkboxDisabled
    }, others));
  };
  return CheckboxItem2;
}(Component), _class$l.menuChildType = "item", _class$l.propTypes = {
  checked: propTypes$1.bool,
  indeterminate: propTypes$1.bool,
  disabled: propTypes$1.bool,
  onChange: propTypes$1.func,
  helper: propTypes$1.node,
  children: propTypes$1.node,
  checkboxDisabled: propTypes$1.bool
}, _class$l.defaultProps = {
  checked: false,
  indeterminate: false,
  disabled: false,
  onChange: function onChange3() {
  },
  checkboxDisabled: false
}, _temp$l);
CheckboxItem.displayName = "CheckboxItem";
var _class$m, _temp$m;
var RadioItem = (_temp$m = _class$m = function(_Component) {
  _inherits(RadioItem2, _Component);
  function RadioItem2() {
    _classCallCheck(this, RadioItem2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  RadioItem2.prototype.render = function render2() {
    return /* @__PURE__ */ React.createElement(CheckableItem, _extends$1$1({
      role: "menuitemradio",
      checkType: "radio"
    }, this.props));
  };
  return RadioItem2;
}(Component), _class$m.menuChildType = "item", _class$m.propTypes = {
  checked: propTypes$1.bool,
  disabled: propTypes$1.bool,
  onChange: propTypes$1.func,
  helper: propTypes$1.node,
  children: propTypes$1.node
}, _class$m.defaultProps = {
  checked: false,
  disabled: false,
  onChange: function onChange4() {
  }
}, _temp$m);
RadioItem.displayName = "RadioItem";
var _class$n, _temp$n;
var Group$1 = (_temp$n = _class$n = function(_Component) {
  _inherits(Group2, _Component);
  function Group2() {
    _classCallCheck(this, Group2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  Group2.prototype.render = function render2() {
    var _cx;
    var _props = this.props, root = _props.root, className = _props.className, label = _props.label, children = _props.children, parentMode = _props.parentMode, others = _objectWithoutProperties$1(_props, ["root", "className", "label", "children", "parentMode"]);
    var prefix2 = root.props.prefix;
    var newClassName = classnames((_cx = {}, _cx[prefix2 + "menu-group-label"] = true, _cx[className] = !!className, _cx));
    var newChildren = children.map(function(child) {
      var _cx2;
      if (typeof child !== "function" && (typeof child === "undefined" ? "undefined" : _typeof(child)) !== "object") {
        return child;
      }
      var className2 = child.props.className;
      var newChildClassName = classnames((_cx2 = {}, _cx2[prefix2 + "menu-group-item"] = true, _cx2[className2] = !!className2, _cx2));
      return /* @__PURE__ */ cloneElement(child, {
        parentMode,
        className: newChildClassName
      });
    });
    return [/* @__PURE__ */ React.createElement(Item, _extends$1$1({
      key: "menu-group-label",
      className: newClassName,
      replaceClassName: true,
      root,
      parentMode
    }, others), label)].concat(newChildren);
  };
  return Group2;
}(Component), _class$n.menuChildType = "group", _class$n.propTypes = {
  root: propTypes$1.object,
  className: propTypes$1.string,
  label: propTypes$1.node,
  children: propTypes$1.node,
  parentMode: propTypes$1.oneOf(["inline", "popup"])
}, _temp$n);
Group$1.displayName = "Group";
var _class$o, _temp$o;
var Divider = (_temp$o = _class$o = function(_Component) {
  _inherits(Divider2, _Component);
  function Divider2() {
    _classCallCheck(this, Divider2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  Divider2.prototype.render = function render2() {
    var _cx;
    var _props = this.props, root = _props.root, className = _props.className, others = _objectWithoutProperties$1(_props, ["root", "className"]);
    var prefix2 = root.props.prefix;
    var newClassName = classnames((_cx = {}, _cx[prefix2 + "menu-divider"] = true, _cx[className] = !!className, _cx));
    return /* @__PURE__ */ React.createElement("li", _extends$1$1({
      role: "separator",
      className: newClassName
    }, others));
  };
  return Divider2;
}(Component), _class$o.menuChildType = "divider", _class$o.propTypes = {
  root: propTypes$1.object,
  className: propTypes$1.string
}, _temp$o);
Divider.displayName = "Divider";
var _class$p, _temp$p;
var bindCtx$a = func.bindCtx;
var getContextProps$1 = _ConfigProvider.getContextProps;
var Menu$2 = _ConfigProvider.config(Menu$1);
var menuInstance = void 0;
var ContextMenu = (_temp$p = _class$p = function(_Component) {
  _inherits(ContextMenu2, _Component);
  function ContextMenu2(props) {
    _classCallCheck(this, ContextMenu2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    _this2.state = {
      visible: true
    };
    bindCtx$a(_this2, ["handleOverlayClose", "handleOverlayOpen", "handleItemClick", "getOverlay"]);
    return _this2;
  }
  ContextMenu2.prototype.getOverlay = function getOverlay(ref) {
    this.overlay = ref;
  };
  ContextMenu2.prototype.close = function close() {
    this.setState({
      visible: false
    });
    menuInstance = null;
  };
  ContextMenu2.prototype.handleOverlayClose = function handleOverlayClose(triggerType, e2) {
    var clickedPopupMenu = triggerType === "docClick" && this.popupNodes.some(function(node) {
      return node.contains(e2.target);
    });
    if (!clickedPopupMenu) {
      this.close();
      var overlayProps = this.props.overlayProps;
      if (overlayProps && overlayProps.onRequestClose) {
        for (var _len = arguments.length, others = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          others[_key - 2] = arguments[_key];
        }
        overlayProps.onRequestClose.apply(overlayProps, [triggerType, e2].concat(others));
      }
    }
  };
  ContextMenu2.prototype.handleOverlayOpen = function handleOverlayOpen() {
    this.popupNodes = this.overlay.getInstance().getContent().getInstance().popupNodes;
    var overlayProps = this.props.overlayProps;
    if (overlayProps && overlayProps.onOpen) {
      overlayProps.onOpen();
    }
  };
  ContextMenu2.prototype.handleItemClick = function handleItemClick() {
    var _props;
    this.close();
    this.props.onItemClick && (_props = this.props).onItemClick.apply(_props, arguments);
  };
  ContextMenu2.prototype.render = function render2() {
    var _cx, _cx2;
    var _props2 = this.props, className = _props2.className, popupClassName = _props2.popupClassName, target = _props2.target, align = _props2.align, offset = _props2.offset, afterClose = _props2.afterClose, _props2$overlayProps = _props2.overlayProps, overlayProps = _props2$overlayProps === void 0 ? {} : _props2$overlayProps, others = _objectWithoutProperties$1(_props2, ["className", "popupClassName", "target", "align", "offset", "afterClose", "overlayProps"]);
    var contextProps = getContextProps$1(this.props);
    var prefix2 = contextProps.prefix;
    var visible = this.state.visible;
    var newOverlayProps = _extends$1$1({}, contextProps, overlayProps, {
      target,
      align,
      offset,
      afterClose,
      visible,
      onRequestClose: this.handleOverlayClose,
      onOpen: this.handleOverlayOpen,
      ref: this.getOverlay
    });
    var menuProps = _extends$1$1({}, contextProps, {
      triggerType: "hover"
    }, others, {
      className: classnames((_cx = {}, _cx[prefix2 + "context"] = true, _cx[className] = !!className, _cx)),
      popupClassName: classnames((_cx2 = {}, _cx2[prefix2 + "context"] = true, _cx2[popupClassName] = !!popupClassName, _cx2)),
      onItemClick: this.handleItemClick
    });
    newOverlayProps.rtl = false;
    return /* @__PURE__ */ React.createElement(Overlay$2, newOverlayProps, /* @__PURE__ */ React.createElement(Menu$2, menuProps));
  };
  return ContextMenu2;
}(Component), _class$p.propTypes = {
  className: propTypes$1.string,
  popupClassName: propTypes$1.string,
  target: propTypes$1.any,
  align: propTypes$1.string,
  offset: propTypes$1.array,
  overlayProps: propTypes$1.object,
  afterClose: propTypes$1.func,
  mode: propTypes$1.oneOf(["inline", "popup"]),
  onOpen: propTypes$1.func,
  onItemClick: propTypes$1.func
}, _class$p.defaultProps = {
  prefix: "next-",
  align: "tl tl",
  mode: "popup"
}, _temp$p);
ContextMenu.displayName = "ContextMenu";
function create$2(props) {
  if (menuInstance) {
    menuInstance.destroy();
  }
  var afterClose = props.afterClose, others = _objectWithoutProperties$1(props, ["afterClose"]);
  var div = document.createElement("div");
  document.body.appendChild(div);
  var closeChain = function closeChain2() {
    unmountComponentAtNode(div);
    document.body.removeChild(div);
    afterClose && afterClose();
  };
  var newContext = _ConfigProvider.getContext();
  var menu = void 0;
  render(/* @__PURE__ */ React.createElement(_ConfigProvider, newContext, /* @__PURE__ */ React.createElement(ContextMenu, _extends$1$1({
    ref: function ref(_ref) {
      menu = _ref;
    },
    afterClose: closeChain
  }, others))), div);
  menuInstance = {
    destroy: function destroy() {
      if (menu) {
        menu.close();
      }
    }
  };
  return menuInstance;
}
Menu$1.SubMenu = SubMenu;
Menu$1.Item = SelectableItem;
Menu$1.CheckboxItem = CheckboxItem;
Menu$1.RadioItem = RadioItem;
Menu$1.PopupItem = PopupItem;
Menu$1.Group = Group$1;
Menu$1.Divider = Divider;
Menu$1.create = create$2;
var transform = function transform2(props, deprecated2) {
  if ("indentSize" in props) {
    deprecated2("indentSize", "inlineIndent", "Menu");
    var _props = props, indentSize = _props.indentSize, others = _objectWithoutProperties$1(_props, ["indentSize"]);
    props = _extends$1$1({
      inlineIndent: indentSize
    }, others);
  }
  if ("onDeselect" in props) {
    deprecated2("onDeselect", "onSelect", "Menu");
    if (props.onDeselect) {
      var _props2 = props, onDeselect = _props2.onDeselect, onSelect = _props2.onSelect, _others = _objectWithoutProperties$1(_props2, ["onDeselect", "onSelect"]);
      var newOnSelect = function newOnSelect2(selectedKeys, item, extra) {
        if (!extra.select) {
          onDeselect(extra.key);
        }
        if (onSelect) {
          onSelect(selectedKeys, item, extra);
        }
      };
      props = _extends$1$1({
        onSelect: newOnSelect
      }, _others);
    }
  }
  return props;
};
var Menu$3 = _ConfigProvider.config(Menu$1, {
  transform
});
var _class$q, _temp$q;
var Nav = (_temp$q = _class$q = function(_Component) {
  _inherits(Nav2, _Component);
  function Nav2(props) {
    _classCallCheck(this, Nav2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    _this2.getMenuRef = _this2.getMenuRef.bind(_this2);
    return _this2;
  }
  Nav2.prototype.getChildContext = function getChildContext() {
    var _props = this.props, prefix2 = _props.prefix, direction = _props.direction, mode = _props.mode, iconOnly = _props.iconOnly, hasTooltip = _props.hasTooltip, hasArrow = _props.hasArrow;
    var isCollapse = this.context.isCollapse;
    return {
      prefix: prefix2,
      mode: direction === "hoz" ? "popup" : mode,
      iconOnly: "iconOnly" in this.props ? iconOnly : isCollapse,
      hasTooltip,
      hasArrow
    };
  };
  Nav2.prototype.getMenuRef = function getMenuRef(ref) {
    this.menu = ref;
  };
  Nav2.prototype.render = function render2() {
    var _classNames, _classNames2;
    var _props2 = this.props, prefix2 = _props2.prefix, className = _props2.className, style = _props2.style, children = _props2.children, type = _props2.type, direction = _props2.direction, activeDirection = _props2.activeDirection, mode = _props2.mode, triggerType = _props2.triggerType, inlineIndent = _props2.inlineIndent, openMode = _props2.openMode, popupAlign = _props2.popupAlign, popupClassName = _props2.popupClassName, iconOnly = _props2.iconOnly, hasArrow = _props2.hasArrow, hasTooltip = _props2.hasTooltip, embeddable = _props2.embeddable, _popupProps = _props2.popupProps, rtl = _props2.rtl, others = _objectWithoutProperties$1(_props2, ["prefix", "className", "style", "children", "type", "direction", "activeDirection", "mode", "triggerType", "inlineIndent", "openMode", "popupAlign", "popupClassName", "iconOnly", "hasArrow", "hasTooltip", "embeddable", "popupProps", "rtl"]);
    var isCollapse = this.context.isCollapse;
    var newIconOnly = "iconOnly" in this.props ? iconOnly : isCollapse;
    var realActiveDirection = activeDirection;
    if (realActiveDirection && (direction === "hoz" && (realActiveDirection === "left" || realActiveDirection === "right") || direction === "ver" && (realActiveDirection === "top" || realActiveDirection === "bottom"))) {
      realActiveDirection = null;
    }
    if (!newIconOnly && realActiveDirection === void 0) {
      realActiveDirection = direction === "hoz" ? "bottom" : type === "line" ? "right" : "left";
    }
    var cls = classnames((_classNames = {}, _classNames[prefix2 + "nav"] = true, _classNames["" + prefix2 + type] = type, _classNames[prefix2 + "active"] = realActiveDirection, _classNames["" + prefix2 + realActiveDirection] = realActiveDirection, _classNames[prefix2 + "icon-only"] = newIconOnly, _classNames[prefix2 + "no-arrow"] = !hasArrow, _classNames[prefix2 + "nav-embeddable"] = embeddable, _classNames[className] = !!className, _classNames));
    var newStyle = newIconOnly ? _extends$1$1({}, style, {
      width: "58px"
    }) : style;
    var props = {
      prefix: prefix2,
      direction,
      openMode,
      triggerType,
      mode: direction === "hoz" ? "popup" : mode,
      popupAlign: direction === "hoz" ? "follow" : popupAlign,
      inlineIndent: newIconOnly ? 0 : inlineIndent,
      hasSelectedIcon: false,
      popupAutoWidth: true,
      selectMode: "single",
      itemClassName: prefix2 + "nav-item",
      popupClassName: classnames((_classNames2 = {}, _classNames2[cls.replace(prefix2 + "icon-only", "").replace(prefix2 + "nav-embeddable", "")] = mode === "popup", _classNames2[prefix2 + "icon-only"] = newIconOnly && mode === "inline", _classNames2[popupClassName] = !!popupClassName, _classNames2)),
      popupProps: function popupProps(popupItemProps) {
        return _extends$1$1({
          offset: direction === "hoz" && popupItemProps.level === 1 ? [0, 2] : [-2, 0]
        }, _popupProps);
      }
    };
    return /* @__PURE__ */ React.createElement(Menu$3, _extends$1$1({
      className: cls,
      style: newStyle
    }, props, others, {
      ref: this.getMenuRef
    }), children);
  };
  return Nav2;
}(Component), _class$q.propTypes = {
  prefix: propTypes$1.string,
  pure: propTypes$1.bool,
  rtl: propTypes$1.bool,
  className: propTypes$1.string,
  style: propTypes$1.object,
  children: propTypes$1.node,
  type: propTypes$1.oneOf(["normal", "primary", "secondary", "line"]),
  direction: propTypes$1.oneOf(["hoz", "ver"]),
  hozAlign: propTypes$1.oneOf(["left", "right"]),
  activeDirection: propTypes$1.oneOf([null, "top", "bottom", "left", "right"]),
  mode: propTypes$1.oneOf(["inline", "popup"]),
  triggerType: propTypes$1.oneOf(["click", "hover"]),
  inlineIndent: propTypes$1.number,
  defaultOpenAll: propTypes$1.bool,
  openMode: propTypes$1.oneOf(["single", "multiple"]),
  selectedKeys: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.array]),
  defaultSelectedKeys: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.array]),
  onSelect: propTypes$1.func,
  popupAlign: propTypes$1.oneOf(["follow", "outside"]),
  popupClassName: propTypes$1.string,
  iconOnly: propTypes$1.bool,
  hasArrow: propTypes$1.bool,
  hasTooltip: propTypes$1.bool,
  header: propTypes$1.node,
  footer: propTypes$1.node,
  embeddable: propTypes$1.bool,
  popupProps: propTypes$1.object
}, _class$q.defaultProps = {
  prefix: "next-",
  pure: false,
  type: "normal",
  direction: "ver",
  hozAlign: "left",
  mode: "inline",
  triggerType: "click",
  inlineIndent: 20,
  defaultOpenAll: false,
  openMode: "multiple",
  defaultSelectedKeys: [],
  popupAlign: "follow",
  hasTooltip: false,
  embeddable: false,
  hasArrow: true,
  popupProps: {}
}, _class$q.childContextTypes = {
  prefix: propTypes$1.string,
  mode: propTypes$1.string,
  iconOnly: propTypes$1.bool,
  hasTooltip: propTypes$1.bool,
  hasArrow: propTypes$1.bool
}, _class$q.contextTypes = {
  isCollapse: propTypes$1.bool
}, _temp$q);
Nav.displayName = "Nav";
var Nav$1 = _ConfigProvider.config(Nav);
var normalMap = {
  t: {
    align: "bc tc",
    rtlAlign: "bc tc",
    arrow: "bottom",
    trOrigin: "bottom",
    rtlTrOrigin: "bottom",
    offset: [0, -12]
  },
  r: {
    align: "cl cr",
    rtlAlign: "cr cl",
    arrow: "left",
    trOrigin: "left",
    rtlTrOrigin: "right",
    offset: [12, 0]
  },
  b: {
    align: "tc bc",
    rtlAlign: "tc bc",
    arrow: "top",
    trOrigin: "top",
    rtlTrOrigin: "top",
    offset: [0, 12]
  },
  l: {
    align: "cr cl",
    rtlAlign: "cl cr",
    arrow: "right",
    trOrigin: "right",
    rtlTrOrigin: "left",
    offset: [-12, 0]
  },
  tl: {
    align: "br tc",
    rtlAlign: "bl tc",
    arrow: "bottom-right",
    trOrigin: "bottom right",
    rtlTrOrigin: "bottom left",
    offset: [20, -12]
  },
  tr: {
    align: "bl tc",
    rtlAlign: "br tc",
    arrow: "bottom-left",
    trOrigin: "bottom left",
    rtlTrOrigin: "bottom right",
    offset: [-20, -12]
  },
  rt: {
    align: "bl cr",
    rtlAlign: "br cl",
    arrow: "left-bottom",
    trOrigin: "bottom left",
    rtlTrOrigin: "bottom right",
    offset: [12, 20]
  },
  rb: {
    align: "tl cr",
    rtlAlign: "tr cl",
    arrow: "left-top",
    trOrigin: "top left",
    rtlTrOrigin: "top right",
    offset: [12, -20]
  },
  bl: {
    align: "tr bc",
    rtlAlign: "tl bc",
    arrow: "top-right",
    trOrigin: "top right",
    rtlTrOrigin: "top left",
    offset: [20, 12]
  },
  br: {
    align: "tl bc",
    rtlAlign: "tr bc",
    arrow: "top-left",
    trOrigin: "top left",
    rtlTrOrigin: "top right",
    offset: [-20, 12]
  },
  lt: {
    align: "br cl",
    rtlAlign: "bl cr",
    arrow: "right-bottom",
    trOrigin: "bottom right",
    rtlTrOrigin: "bottom left",
    offset: [-12, 20]
  },
  lb: {
    align: "tr cl",
    rtlAlign: "tl cr",
    arrow: "right-top",
    trOrigin: "top right",
    rtlTrOrigin: "top left",
    offset: [-12, -20]
  }
};
var edgeMap = {
  t: {
    align: "bc tc",
    rtlAlign: "bc tc",
    arrow: "bottom",
    trOrigin: "bottom",
    rtlTrOrigin: "bottom",
    offset: [0, -12]
  },
  r: {
    align: "cl cr",
    rtlAlign: "cr cl",
    arrow: "left",
    trOrigin: "left",
    rtlTrOrigin: "right",
    offset: [12, 0]
  },
  b: {
    align: "tc bc",
    rtlAlign: "tc bc",
    arrow: "top",
    trOrigin: "top",
    rtlTrOrigin: "top",
    offset: [0, 12]
  },
  l: {
    align: "cr cl",
    rtlAlign: "cl cr",
    arrow: "right",
    trOrigin: "right",
    rtlTrOrigin: "left",
    offset: [-12, 0]
  },
  tl: {
    align: "bl tl",
    rtlAlign: "br tr",
    arrow: "bottom-left",
    trOrigin: "bottom left",
    rtlTrOrigin: "bottom right",
    offset: [0, -12]
  },
  tr: {
    align: "br tr",
    rtlAlign: "bl tl",
    arrow: "bottom-right",
    trOrigin: "bottom right",
    rtlTrOrigin: "bottom left",
    offset: [0, -12]
  },
  rt: {
    align: "tl tr",
    rtlAlign: "tr tl",
    arrow: "left-top",
    trOrigin: "top left",
    rtlTrOrigin: "top right",
    offset: [12, 0]
  },
  rb: {
    align: "bl br",
    rtlAlign: "br bl",
    arrow: "left-bottom",
    trOrigin: "bottom left",
    rtlTrOrigin: "bottom right",
    offset: [12, 0]
  },
  bl: {
    align: "tl bl",
    rtlAlign: "tr br",
    arrow: "top-left",
    trOrigin: "top left",
    rtlTrOrigin: "top right",
    offset: [0, 12]
  },
  br: {
    align: "tr br",
    rtlAlign: "tl bl",
    arrow: "top-right",
    trOrigin: "top right",
    rtlTrOrigin: "top left",
    offset: [0, 12]
  },
  lt: {
    align: "tr tl",
    rtlAlign: "tl tr",
    arrow: "right-top",
    trOrigin: "top right",
    rtlTrOrigin: "top left",
    offset: [-12, 0]
  },
  lb: {
    align: "br bl",
    rtlAlign: "bl br",
    arrow: "right-bottom",
    trOrigin: "bottom right",
    rtlTrOrigin: "bottom left",
    offset: [-12, 0]
  }
};
var _class$r, _temp$r;
var noop$b = func.noop;
var BalloonInner = (_temp$r = _class$r = function(_React$Component) {
  _inherits(BalloonInner2, _React$Component);
  function BalloonInner2() {
    _classCallCheck(this, BalloonInner2);
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }
  BalloonInner2.prototype.render = function render2() {
    var _classNames;
    var _props = this.props, prefix2 = _props.prefix, closable = _props.closable, className = _props.className, style = _props.style, isTooltip = _props.isTooltip, align = _props.align, type = _props.type, onClose = _props.onClose, alignEdge = _props.alignEdge, children = _props.children, rtl = _props.rtl, locale = _props.locale, others = _objectWithoutProperties$1(_props, ["prefix", "closable", "className", "style", "isTooltip", "align", "type", "onClose", "alignEdge", "children", "rtl", "locale"]);
    var alignMap2 = alignEdge ? edgeMap : normalMap;
    var _prefix = prefix2;
    if (isTooltip) {
      _prefix = _prefix + "balloon-tooltip";
    } else {
      _prefix = _prefix + "balloon";
    }
    var classes = classnames((_classNames = {}, _classNames["" + _prefix] = true, _classNames[_prefix + "-" + type] = type, _classNames[_prefix + "-medium"] = true, _classNames[_prefix + "-" + alignMap2[align].arrow] = alignMap2[align], _classNames[_prefix + "-closable"] = closable, _classNames[className] = className, _classNames));
    return /* @__PURE__ */ React.createElement("div", _extends$1$1({
      role: "tooltip",
      "aria-live": "polite",
      dir: rtl ? "rtl" : void 0,
      className: classes,
      style
    }, obj.pickOthers(Object.keys(BalloonInner2.propTypes), others)), children, closable ? /* @__PURE__ */ React.createElement("a", {
      role: "button",
      "aria-label": locale.close,
      tabIndex: "0",
      className: _prefix + "-close",
      onClick: onClose
    }, /* @__PURE__ */ React.createElement(Icon$1, {
      type: "close",
      size: "small"
    })) : null);
  };
  return BalloonInner2;
}(React.Component), _class$r.contextTypes = {
  prefix: propTypes$1.string
}, _class$r.propTypes = {
  prefix: propTypes$1.string,
  rtl: propTypes$1.bool,
  closable: propTypes$1.bool,
  children: propTypes$1.any,
  className: propTypes$1.string,
  alignEdge: propTypes$1.bool,
  onClose: propTypes$1.func,
  style: propTypes$1.any,
  align: propTypes$1.string,
  type: propTypes$1.string,
  isTooltip: propTypes$1.bool,
  locale: propTypes$1.object,
  pure: propTypes$1.bool
}, _class$r.defaultProps = {
  prefix: "next-",
  closable: true,
  onClose: noop$b,
  locale: zhCN.Balloon,
  align: "b",
  type: "normal",
  alignEdge: false,
  pure: false
}, _temp$r);
BalloonInner.displayName = "BalloonInner";
function getDisabledCompatibleTrigger(element) {
  if (element.type.displayName === "Config(Button)" && element.props.disabled) {
    var displayStyle = element.props.style && element.props.style.display ? element.props.style.display : "inline-block";
    var child = /* @__PURE__ */ React.cloneElement(element, {
      style: _extends$1$1({}, element.props.style, {
        pointerEvents: "none"
      })
    });
    return /* @__PURE__ */ React.createElement("span", {
      style: {
        display: displayStyle,
        cursor: "not-allowed"
      }
    }, child);
  }
  return element;
}
var _class$s, _temp$s;
var noop$c = func.noop;
var Popup$3 = Overlay$2.Popup;
var alignList = ["t", "r", "b", "l", "tl", "tr", "bl", "br", "lt", "lb", "rt", "rb"];
var alignMap = normalMap;
var Balloon = (_temp$s = _class$s = function(_React$Component) {
  _inherits(Balloon2, _React$Component);
  function Balloon2(props, context2) {
    _classCallCheck(this, Balloon2);
    var _this2 = _possibleConstructorReturn(this, _React$Component.call(this, props, context2));
    _this2.state = {
      align: alignList.includes(props.align) ? props.align : "b",
      visible: "visible" in props ? props.visible : props.defaultVisible
    };
    _this2._onClose = _this2._onClose.bind(_this2);
    _this2._onPosition = _this2._onPosition.bind(_this2);
    _this2._onVisibleChange = _this2._onVisibleChange.bind(_this2);
    return _this2;
  }
  Balloon2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var nextState = {};
    if ("visible" in nextProps) {
      nextState.visible = nextProps.visible;
    }
    if (!prevState.innerAlign && "align" in nextProps && alignList.includes(nextProps.align)) {
      nextState.align = nextProps.align;
      nextState.innerAlign = false;
    }
    return nextState;
  };
  Balloon2.prototype._onVisibleChange = function _onVisibleChange(visible, trigger) {
    if (!("visible" in this.props)) {
      this.setState({
        visible
      });
    }
    this.props.onVisibleChange(visible, trigger);
    if (!visible) {
      this.props.onClose();
    }
  };
  Balloon2.prototype._onClose = function _onClose(e2) {
    this._onVisibleChange(false, "closeClick");
    e2.preventDefault();
  };
  Balloon2.prototype._onPosition = function _onPosition(res) {
    var rtl = this.props.rtl;
    alignMap = this.props.alignEdge ? edgeMap : normalMap;
    var newAlign = res.align.join(" ");
    var resAlign = void 0;
    var alignKey = "align";
    if (rtl) {
      alignKey = "rtlAlign";
    }
    for (var key in alignMap) {
      if (alignMap[key][alignKey] === newAlign) {
        resAlign = key;
        break;
      }
    }
    resAlign = resAlign || this.state.align;
    if (resAlign !== this.state.align) {
      this.setState({
        align: resAlign,
        innerAlign: true
      });
    }
  };
  Balloon2.prototype.render = function render2() {
    var _props = this.props, id2 = _props.id, type = _props.type, prefix2 = _props.prefix, className = _props.className, alignEdge = _props.alignEdge, trigger = _props.trigger, triggerType = _props.triggerType, children = _props.children, closable = _props.closable, shouldUpdatePosition = _props.shouldUpdatePosition, delay = _props.delay, needAdjust = _props.needAdjust, safeId = _props.safeId, autoFocus = _props.autoFocus, safeNode = _props.safeNode, onClick4 = _props.onClick, onHover = _props.onHover, animation2 = _props.animation, offset = _props.offset, style = _props.style, container6 = _props.container, popupContainer = _props.popupContainer, cache2 = _props.cache, popupStyle = _props.popupStyle, popupClassName = _props.popupClassName, popupProps = _props.popupProps, followTrigger = _props.followTrigger, rtl = _props.rtl, others = _objectWithoutProperties$1(_props, ["id", "type", "prefix", "className", "alignEdge", "trigger", "triggerType", "children", "closable", "shouldUpdatePosition", "delay", "needAdjust", "safeId", "autoFocus", "safeNode", "onClick", "onHover", "animation", "offset", "style", "container", "popupContainer", "cache", "popupStyle", "popupClassName", "popupProps", "followTrigger", "rtl"]);
    if (container6) {
      log.deprecated("container", "popupContainer", "Balloon");
    }
    var align = this.state.align;
    alignMap = alignEdge ? edgeMap : normalMap;
    var _prefix = this.context.prefix || prefix2;
    var trOrigin = "trOrigin";
    if (rtl) {
      trOrigin = "rtlTrOrigin";
    }
    var _offset = [alignMap[align].offset[0] + offset[0], alignMap[align].offset[1] + offset[1]];
    var transformOrigin = alignMap[align][trOrigin];
    var _style = _extends$1$1({
      transformOrigin
    }, style);
    var content = /* @__PURE__ */ React.createElement(BalloonInner, _extends$1$1({}, obj.pickOthers(Object.keys(Balloon2.propTypes), others), {
      id: id2,
      prefix: _prefix,
      closable,
      onClose: this._onClose,
      className,
      style: _style,
      align,
      type,
      rtl,
      alignEdge
    }), children);
    var triggerProps = {};
    triggerProps["aria-describedby"] = id2;
    triggerProps.tabIndex = "0";
    var ariaTrigger = id2 ? /* @__PURE__ */ React.cloneElement(trigger, triggerProps) : trigger;
    var newTrigger = getDisabledCompatibleTrigger(/* @__PURE__ */ React.isValidElement(ariaTrigger) ? ariaTrigger : /* @__PURE__ */ React.createElement("span", null, ariaTrigger));
    return /* @__PURE__ */ React.createElement(Popup$3, _extends$1$1({}, popupProps, {
      followTrigger,
      trigger: newTrigger,
      cache: cache2,
      safeId,
      triggerType,
      align: alignMap[align].align,
      offset: _offset,
      visible: this.state.visible,
      onPosition: this._onPosition,
      onClick: onClick4,
      onHover,
      afterClose: this.props.afterClose,
      onVisibleChange: this._onVisibleChange,
      shouldUpdatePosition,
      needAdjust,
      animation: animation2,
      delay,
      autoFocus: triggerType === "focus" ? false : autoFocus,
      safeNode,
      container: popupContainer || container6,
      className: popupClassName,
      style: popupStyle,
      rtl
    }), content);
  };
  return Balloon2;
}(React.Component), _class$s.contextTypes = {
  prefix: propTypes$1.string
}, _class$s.propTypes = {
  prefix: propTypes$1.string,
  pure: propTypes$1.bool,
  rtl: propTypes$1.bool,
  className: propTypes$1.string,
  style: propTypes$1.object,
  children: propTypes$1.any,
  size: propTypes$1.string,
  type: propTypes$1.oneOf(["normal", "primary"]),
  visible: propTypes$1.bool,
  defaultVisible: propTypes$1.bool,
  onVisibleChange: propTypes$1.func,
  alignEdge: propTypes$1.bool,
  closable: propTypes$1.bool,
  align: propTypes$1.oneOf(alignList),
  offset: propTypes$1.array,
  trigger: propTypes$1.any,
  triggerType: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.array]),
  onClick: propTypes$1.func,
  onClose: propTypes$1.func,
  onHover: propTypes$1.func,
  needAdjust: propTypes$1.bool,
  delay: propTypes$1.number,
  afterClose: propTypes$1.func,
  shouldUpdatePosition: propTypes$1.bool,
  autoFocus: propTypes$1.bool,
  safeNode: propTypes$1.string,
  safeId: propTypes$1.string,
  animation: propTypes$1.oneOfType([propTypes$1.object, propTypes$1.bool]),
  cache: propTypes$1.bool,
  popupContainer: propTypes$1.any,
  container: propTypes$1.any,
  popupStyle: propTypes$1.object,
  popupClassName: propTypes$1.string,
  popupProps: propTypes$1.object,
  followTrigger: propTypes$1.bool,
  id: propTypes$1.string
}, _class$s.defaultProps = {
  prefix: "next-",
  pure: false,
  type: "normal",
  closable: true,
  defaultVisible: false,
  size: "medium",
  alignEdge: false,
  align: "b",
  offset: [0, 0],
  trigger: /* @__PURE__ */ React.createElement("span", null),
  onClose: noop$c,
  afterClose: noop$c,
  onVisibleChange: noop$c,
  needAdjust: false,
  triggerType: "hover",
  safeNode: void 0,
  safeId: null,
  autoFocus: true,
  animation: {
    in: "zoomIn",
    out: "zoomOut"
  },
  cache: false,
  popupStyle: {},
  popupClassName: "",
  popupProps: {}
}, _temp$s);
Balloon.displayName = "Balloon";
var Balloon$1 = polyfill(Balloon);
var _class$t, _temp$t;
var Popup$4 = Overlay$2.Popup;
var alignMap$1 = normalMap;
var Tooltip = (_temp$t = _class$t = function(_React$Component) {
  _inherits(Tooltip2, _React$Component);
  function Tooltip2() {
    _classCallCheck(this, Tooltip2);
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }
  Tooltip2.prototype.render = function render2() {
    var _props = this.props, id2 = _props.id, className = _props.className, align = _props.align, style = _props.style, prefix2 = _props.prefix, trigger = _props.trigger, children = _props.children, popupContainer = _props.popupContainer, popupProps = _props.popupProps, popupClassName = _props.popupClassName, popupStyle = _props.popupStyle, followTrigger = _props.followTrigger, triggerType = _props.triggerType, autoFocus = _props.autoFocus, alignEdge = _props.alignEdge, rtl = _props.rtl, delay = _props.delay, others = _objectWithoutProperties$1(_props, ["id", "className", "align", "style", "prefix", "trigger", "children", "popupContainer", "popupProps", "popupClassName", "popupStyle", "followTrigger", "triggerType", "autoFocus", "alignEdge", "rtl", "delay"]);
    var trOrigin = "trOrigin";
    if (rtl) {
      others.rtl = true;
      trOrigin = "rtlTrOrigin";
    }
    alignMap$1 = alignEdge ? edgeMap : normalMap;
    var transformOrigin = alignMap$1[align][trOrigin];
    var _offset = alignMap$1[align].offset;
    var _style = _extends$1$1({
      transformOrigin
    }, style);
    var content = /* @__PURE__ */ React.createElement(BalloonInner, _extends$1$1({}, others, {
      id: id2,
      prefix: prefix2,
      closable: false,
      isTooltip: true,
      className,
      style: _style,
      align,
      rtl,
      alignEdge
    }), children);
    var triggerProps = {};
    triggerProps["aria-describedby"] = id2;
    triggerProps.tabIndex = "0";
    var newTriggerType = triggerType;
    if (triggerType === "hover" && id2) {
      newTriggerType = ["focus", "hover"];
    }
    var ariaTrigger = id2 ? /* @__PURE__ */ React.cloneElement(trigger, triggerProps) : trigger;
    var newTrigger = getDisabledCompatibleTrigger(/* @__PURE__ */ React.isValidElement(ariaTrigger) ? ariaTrigger : /* @__PURE__ */ React.createElement("span", null, ariaTrigger));
    return /* @__PURE__ */ React.createElement(Popup$4, _extends$1$1({
      role: "tooltip",
      container: popupContainer,
      followTrigger,
      trigger: newTrigger,
      triggerType: newTriggerType,
      align: alignMap$1[align].align,
      offset: _offset,
      delay,
      className: popupClassName,
      style: popupStyle,
      rtl,
      autoFocus: triggerType === "focus" ? false : autoFocus,
      shouldUpdatePosition: true,
      needAdjust: false
    }, popupProps), content);
  };
  return Tooltip2;
}(React.Component), _class$t.propTypes = {
  prefix: propTypes$1.string,
  className: propTypes$1.string,
  style: propTypes$1.object,
  children: propTypes$1.any,
  align: propTypes$1.oneOf(["t", "r", "b", "l", "tl", "tr", "bl", "br", "lt", "lb", "rt", "rb"]),
  trigger: propTypes$1.any,
  triggerType: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.array]),
  popupStyle: propTypes$1.object,
  popupClassName: propTypes$1.string,
  popupProps: propTypes$1.object,
  pure: propTypes$1.bool,
  popupContainer: propTypes$1.any,
  followTrigger: propTypes$1.bool,
  id: propTypes$1.string,
  delay: propTypes$1.number
}, _class$t.defaultProps = {
  triggerType: "hover",
  prefix: "next-",
  align: "b",
  delay: 0,
  trigger: /* @__PURE__ */ React.createElement("span", null)
}, _temp$t);
Tooltip.displayName = "Tooltip";
Balloon$1.Tooltip = _ConfigProvider.config(Tooltip, {
  transform: function transform3(props, deprecated2) {
    if ("text" in props) {
      deprecated2("text", "children", "Tooltip");
      var _props = props, text = _props.text, others = _objectWithoutProperties$1(_props, ["text"]);
      props = _extends$1$1({
        children: text
      }, others);
    }
    return props;
  }
});
Balloon$1.Inner = BalloonInner;
var Balloon$2 = _ConfigProvider.config(Balloon$1, {
  transform: function transform4(props, deprecated2) {
    if (props.alignment) {
      deprecated2("alignment", "alignEdge", "Balloon");
      var _props2 = props, alignment = _props2.alignment, others = _objectWithoutProperties$1(_props2, ["alignment"]);
      props = _extends$1$1({
        alignEdge: alignment === "edge"
      }, others);
    }
    if (props.onCloseClick) {
      deprecated2("onCloseClick", 'onVisibleChange(visible, [type = "closeClick"])', "Balloon");
      var _props3 = props, onCloseClick = _props3.onCloseClick, onVisibleChange = _props3.onVisibleChange, _others = _objectWithoutProperties$1(_props3, ["onCloseClick", "onVisibleChange"]);
      var newOnVisibleChange = function newOnVisibleChange2(visible, type) {
        if (type === "closeClick") {
          onCloseClick();
        }
        if (onVisibleChange) {
          onVisibleChange(visible, type);
        }
      };
      props = _extends$1$1({
        onVisibleChange: newOnVisibleChange
      }, _others);
    }
    return props;
  }
});
var _class$u, _temp$u;
var Tooltip$1 = Balloon$2.Tooltip;
var Item$1 = (_temp$u = _class$u = function(_Component) {
  _inherits(Item2, _Component);
  function Item2() {
    _classCallCheck(this, Item2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  Item2.prototype.render = function render2() {
    var _context = this.context, prefix2 = _context.prefix, iconOnly = _context.iconOnly, hasTooltip = _context.hasTooltip;
    var _props = this.props, icon = _props.icon, children = _props.children, others = _objectWithoutProperties$1(_props, ["icon", "children"]);
    var iconEl = typeof icon === "string" ? /* @__PURE__ */ React.createElement(Icon$1, {
      className: prefix2 + "nav-icon",
      type: icon
    }) : icon;
    var title = void 0;
    if (typeof children === "string") {
      title = children;
    }
    var item = /* @__PURE__ */ React.createElement(Menu$3.Item, _extends$1$1({
      title
    }, others), iconEl, children);
    if (iconOnly && hasTooltip && others.parentMode !== "popup") {
      return /* @__PURE__ */ React.createElement(Tooltip$1, {
        align: "r",
        trigger: item
      }, children);
    }
    return item;
  };
  return Item2;
}(Component), _class$u.menuChildType = "item", _class$u.propTypes = {
  icon: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.node]),
  children: propTypes$1.node,
  parentMode: propTypes$1.oneOf(["inline", "popup"])
}, _class$u.contextTypes = {
  prefix: propTypes$1.string,
  iconOnly: propTypes$1.bool,
  hasTooltip: propTypes$1.bool
}, _temp$u);
Item$1.displayName = "Item";
var _class$v, _temp$v;
var Group$2 = (_temp$v = _class$v = function(_Component) {
  _inherits(Group2, _Component);
  function Group2() {
    _classCallCheck(this, Group2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  Group2.prototype.render = function render2() {
    var _classNames;
    var _context = this.context, prefix2 = _context.prefix, iconOnly = _context.iconOnly;
    var _props = this.props, className = _props.className, children = _props.children, label = _props.label, others = _objectWithoutProperties$1(_props, ["className", "children", "label"]);
    var newLabel = label;
    if (iconOnly) {
      newLabel = [/* @__PURE__ */ React.createElement("span", {
        key: "label"
      }, label)];
    }
    var cls = classnames((_classNames = {}, _classNames[prefix2 + "nav-group-label"] = true, _classNames[className] = !!className, _classNames));
    return /* @__PURE__ */ React.createElement(Menu$3.Group, _extends$1$1({
      className: cls,
      label: newLabel
    }, others), children);
  };
  return Group2;
}(Component), _class$v.menuChildType = "group", _class$v.propTypes = {
  className: propTypes$1.string,
  label: propTypes$1.node,
  children: propTypes$1.node
}, _class$v.contextTypes = {
  prefix: propTypes$1.string,
  iconOnly: propTypes$1.bool
}, _temp$v);
Group$2.displayName = "Group";
var _class$w, _temp$w;
var SubNav = (_temp$w = _class$w = function(_Component) {
  _inherits(SubNav2, _Component);
  function SubNav2() {
    _classCallCheck(this, SubNav2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  SubNav2.prototype.render = function render2() {
    var _classNames;
    var _context = this.context, prefix2 = _context.prefix, iconOnly = _context.iconOnly, hasArrow = _context.hasArrow, mode = _context.mode;
    var _props = this.props, className = _props.className, icon = _props.icon, label = _props.label, children = _props.children, level = _props.level, others = _objectWithoutProperties$1(_props, ["className", "icon", "label", "children", "level"]);
    var cls = classnames((_classNames = {}, _classNames[prefix2 + "nav-sub-nav-item"] = true, _classNames[className] = !!className, _classNames));
    var iconEl = typeof icon === "string" ? /* @__PURE__ */ React.createElement(Icon$1, {
      className: prefix2 + "nav-icon",
      type: icon
    }) : icon;
    if (iconOnly && hasArrow && (mode === "inline" || level === 1 && mode === "popup")) {
      iconEl = /* @__PURE__ */ React.createElement(Icon$1, {
        className: prefix2 + "nav-icon-only-arrow",
        type: mode === "popup" ? "arrow-right" : "arrow-down"
      });
    }
    var newLabel = [iconEl ? /* @__PURE__ */ cloneElement(iconEl, {
      key: "icon"
    }) : null, /* @__PURE__ */ React.createElement("span", {
      key: "label"
    }, label)];
    var title = void 0;
    if (typeof label === "string") {
      title = label;
    }
    return /* @__PURE__ */ React.createElement(Menu$3.SubMenu, _extends$1$1({
      className: cls,
      label: newLabel,
      level,
      title
    }, others), children);
  };
  return SubNav2;
}(Component), _class$w.menuChildType = "submenu", _class$w.propTypes = {
  className: propTypes$1.string,
  icon: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.node]),
  label: propTypes$1.node,
  selectable: propTypes$1.bool,
  children: propTypes$1.node
}, _class$w.defaultProps = {
  selectable: false
}, _class$w.contextTypes = {
  prefix: propTypes$1.string,
  mode: propTypes$1.string,
  iconOnly: propTypes$1.bool,
  hasArrow: propTypes$1.bool
}, _temp$w);
SubNav.displayName = "SubNav";
var _class$x, _temp$x;
var PopupItem$1 = (_temp$x = _class$x = function(_Component) {
  _inherits(PopupItem2, _Component);
  function PopupItem2() {
    _classCallCheck(this, PopupItem2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  PopupItem2.prototype.render = function render2() {
    var _classNames;
    var _context = this.context, prefix2 = _context.prefix, iconOnly = _context.iconOnly, hasArrow = _context.hasArrow;
    var _props = this.props, className = _props.className, icon = _props.icon, label = _props.label, children = _props.children, others = _objectWithoutProperties$1(_props, ["className", "icon", "label", "children"]);
    var cls = classnames((_classNames = {}, _classNames[prefix2 + "nav-popup-item"] = true, _classNames[className] = !!className, _classNames));
    var iconEl = typeof icon === "string" ? /* @__PURE__ */ React.createElement(Icon$1, {
      className: prefix2 + "nav-icon",
      type: icon
    }) : icon;
    if (iconOnly) {
      if (hasArrow) {
        iconEl = /* @__PURE__ */ React.createElement(Icon$1, {
          className: prefix2 + "nav-icon-only-arrow",
          type: "arrow-right"
        });
      }
    }
    var newLabel = [iconEl ? /* @__PURE__ */ cloneElement(iconEl, {
      key: "icon"
    }) : null, /* @__PURE__ */ React.createElement("span", {
      key: "label"
    }, label)];
    return /* @__PURE__ */ React.createElement(Menu$3.PopupItem, _extends$1$1({
      className: cls,
      label: newLabel
    }, others), children);
  };
  return PopupItem2;
}(Component), _class$x.menuChildType = "submenu", _class$x.propTypes = {
  className: propTypes$1.string,
  icon: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.node]),
  label: propTypes$1.node,
  children: propTypes$1.node
}, _class$x.contextTypes = {
  prefix: propTypes$1.string,
  iconOnly: propTypes$1.bool,
  hasArrow: propTypes$1.bool
}, _temp$x);
PopupItem$1.displayName = "PopupItem";
Nav$1.Item = Item$1;
Nav$1.Group = Group$2;
Nav$1.SubNav = SubNav;
Nav$1.PopupItem = PopupItem$1;
Nav$1.Divider = Menu$3.Divider;
function getScroll(node, isVertical) {
  if (typeof window === "undefined") {
    return 0;
  }
  var windowProp = isVertical ? "pageYOffset" : "pageXOffset";
  var elementProp = isVertical ? "scrollTop" : "scrollLeft";
  return node === window ? node[windowProp] : node[elementProp];
}
function getRect(node) {
  return node !== window ? node.getBoundingClientRect() : {
    top: 0,
    left: 0,
    bottom: 0
  };
}
function getNodeHeight(node) {
  if (!node) {
    return 0;
  }
  if (node === window) {
    return window.innerHeight;
  }
  return node.clientHeight;
}
var _class$y, _temp$y;
var Affix = (_temp$y = _class$y = function(_React$Component) {
  _inherits(Affix2, _React$Component);
  Affix2._getAffixMode = function _getAffixMode(nextProps) {
    var affixMode = {
      top: false,
      bottom: false,
      offset: 0
    };
    if (!nextProps) {
      return affixMode;
    }
    var offsetTop = nextProps.offsetTop, offsetBottom = nextProps.offsetBottom;
    if (typeof offsetTop !== "number" && typeof offsetBottom !== "number") {
      affixMode.top = true;
    } else if (typeof offsetTop === "number") {
      affixMode.top = true;
      affixMode.bottom = false;
      affixMode.offset = offsetTop;
    } else if (typeof offsetBottom === "number") {
      affixMode.bottom = true;
      affixMode.top = false;
      affixMode.offset = offsetBottom;
    }
    return affixMode;
  };
  function Affix2(props, context2) {
    _classCallCheck(this, Affix2);
    var _this2 = _possibleConstructorReturn(this, _React$Component.call(this, props, context2));
    _this2.updatePosition = function() {
      _this2._updateNodePosition();
    };
    _this2._updateNodePosition = function() {
      var affixMode = _this2.state.affixMode;
      var _this$props = _this2.props, container6 = _this$props.container, useAbsolute = _this$props.useAbsolute;
      var affixContainer = container6();
      if (!affixContainer || !_this2.affixNode) {
        return false;
      }
      var containerScrollTop = getScroll(affixContainer, true);
      var affixOffset = _this2._getOffset(_this2.affixNode, affixContainer);
      var containerHeight = getNodeHeight(affixContainer);
      var affixHeight = _this2.affixNode.offsetHeight;
      var containerRect = getRect(affixContainer);
      var affixChildHeight = _this2.affixChildNode.offsetHeight;
      var affixStyle = {
        width: affixOffset.width
      };
      var containerStyle = {
        width: affixOffset.width,
        height: affixChildHeight
      };
      if (affixMode.top && containerScrollTop > affixOffset.top - affixMode.offset) {
        if (useAbsolute) {
          affixStyle.position = "absolute";
          affixStyle.top = containerScrollTop - (affixOffset.top - affixMode.offset);
          containerStyle.position = "relative";
        } else {
          affixStyle.position = "fixed";
          affixStyle.top = affixMode.offset + containerRect.top;
        }
        _this2._setAffixStyle(affixStyle, true);
        _this2._setContainerStyle(containerStyle);
      } else if (affixMode.bottom && containerScrollTop < affixOffset.top + affixHeight + affixMode.offset - containerHeight) {
        affixStyle.height = affixHeight;
        if (useAbsolute) {
          affixStyle.position = "absolute";
          affixStyle.top = containerScrollTop - (affixOffset.top + affixHeight + affixMode.offset - containerHeight);
          containerStyle.position = "relative";
        } else {
          affixStyle.position = "fixed";
          affixStyle.bottom = affixMode.offset;
        }
        _this2._setAffixStyle(affixStyle, true);
        _this2._setContainerStyle(containerStyle);
      } else {
        _this2._setAffixStyle(null);
        _this2._setContainerStyle(null);
      }
    };
    _this2._affixNodeRefHandler = function(ref) {
      _this2.affixNode = findDOMNode(ref);
    };
    _this2._affixChildNodeRefHandler = function(ref) {
      _this2.affixChildNode = findDOMNode(ref);
    };
    _this2.state = {
      style: null,
      containerStyle: null,
      affixMode: Affix2._getAffixMode(props)
    };
    return _this2;
  }
  Affix2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if ("offsetTop" in nextProps || "offsetBottom" in nextProps) {
      return {
        affixMode: Affix2._getAffixMode(nextProps)
      };
    }
    return null;
  };
  Affix2.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;
    var container6 = this.props.container;
    this._updateNodePosition();
    this.timeout = setTimeout(function() {
      _this2._setEventHandlerForContainer(container6);
    });
  };
  Affix2.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState, snapshot) {
    setTimeout(this._updateNodePosition);
  };
  Affix2.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.timeout) {
      clearTimeout(this.timeout);
      this.timeout = null;
    }
    var container6 = this.props.container;
    this._removeEventHandlerForContainer(container6);
  };
  Affix2.prototype._setEventHandlerForContainer = function _setEventHandlerForContainer(getContainer4) {
    var container6 = getContainer4();
    if (!container6) {
      return;
    }
    events.on(container6, "scroll", this._updateNodePosition, false);
    events.on(container6, "resize", this._updateNodePosition, false);
  };
  Affix2.prototype._removeEventHandlerForContainer = function _removeEventHandlerForContainer(getContainer4) {
    var container6 = getContainer4();
    if (container6) {
      events.off(container6, "scroll", this._updateNodePosition);
      events.off(container6, "resize", this._updateNodePosition);
    }
  };
  Affix2.prototype._setAffixStyle = function _setAffixStyle(affixStyle) {
    var affixed = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    if (obj.shallowEqual(affixStyle, this.state.style)) {
      return;
    }
    this.setState({
      style: affixStyle
    });
    var onAffix = this.props.onAffix;
    if (affixed) {
      setTimeout(function() {
        return onAffix(true);
      });
    } else if (!affixStyle) {
      setTimeout(function() {
        return onAffix(false);
      });
    }
  };
  Affix2.prototype._setContainerStyle = function _setContainerStyle(containerStyle) {
    if (obj.shallowEqual(containerStyle, this.state.containerStyle)) {
      return;
    }
    this.setState({
      containerStyle
    });
  };
  Affix2.prototype._getOffset = function _getOffset(affixNode, affixContainer) {
    var affixRect = affixNode.getBoundingClientRect();
    var containerRect = getRect(affixContainer);
    var containerScrollTop = getScroll(affixContainer, true);
    var containerScrollLeft = getScroll(affixContainer, false);
    return {
      top: affixRect.top - containerRect.top + containerScrollTop,
      left: affixRect.left - containerRect.left + containerScrollLeft,
      width: affixRect.width,
      height: affixRect.height
    };
  };
  Affix2.prototype.render = function render2() {
    var _classnames;
    var affixMode = this.state.affixMode;
    var _props = this.props, prefix2 = _props.prefix, className = _props.className, style = _props.style, children = _props.children;
    var state = this.state;
    var classNames = classnames((_classnames = {}, _classnames[prefix2 + "affix"] = state.style, _classnames[prefix2 + "affix-top"] = !state.style && affixMode.top, _classnames[prefix2 + "affix-bottom"] = !state.style && affixMode.bottom, _classnames[className] = className, _classnames));
    var combinedStyle = _extends$1$1({}, state.containerStyle, style);
    return /* @__PURE__ */ React.createElement("div", {
      ref: this._affixNodeRefHandler,
      style: combinedStyle
    }, /* @__PURE__ */ React.createElement("div", {
      ref: this._affixChildNodeRefHandler,
      className: classNames,
      style: state.style
    }, children));
  };
  return Affix2;
}(React.Component), _class$y.propTypes = {
  prefix: propTypes$1.string,
  container: propTypes$1.func,
  offsetTop: propTypes$1.number,
  offsetBottom: propTypes$1.number,
  onAffix: propTypes$1.func,
  useAbsolute: propTypes$1.bool,
  className: propTypes$1.string,
  style: propTypes$1.object,
  children: propTypes$1.any
}, _class$y.defaultProps = {
  prefix: "next-",
  container: function container3() {
    return window;
  },
  onAffix: func.noop
}, _temp$y);
Affix.displayName = "Affix";
var Affix$1 = _ConfigProvider.config(polyfill(Affix));
function isBoolean(val) {
  return typeof val === "boolean";
}
function getCollapseMap(device) {
  var origin = {
    Navigation: true,
    LocalNavigation: true,
    Ancillary: true,
    ToolDock: true
  };
  var map = [];
  switch (device) {
    case "phone":
      break;
    case "pad":
    case "tablet":
      map = ["ToolDock"];
      break;
    case "desktop":
      map = ["Navigation", "LocalNavigation", "Ancillary", "ToolDock"];
      break;
  }
  Object.keys(origin).forEach(function(key) {
    if (map.indexOf(key) > -1) {
      origin[key] = false;
    }
  });
  return origin;
}
function ShellBase(props) {
  var _class2, _temp3, _initialiseProps8;
  var componentName = props.componentName;
  var Shell2 = (_temp3 = _class2 = function(_Component) {
    _inherits(Shell3, _Component);
    function Shell3(props2) {
      _classCallCheck(this, Shell3);
      var _this2 = _possibleConstructorReturn(this, _Component.call(this, props2));
      _initialiseProps8.call(_this2);
      var deviceMap = getCollapseMap(props2.device);
      _this2.layout = {};
      _this2.state = {
        controll: false,
        collapseMap: deviceMap,
        device: props2.device
      };
      return _this2;
    }
    Shell3.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
      var device = prevState.device;
      if (nextProps.device !== device) {
        var deviceMap = getCollapseMap(nextProps.device);
        return {
          controll: false,
          collapseMap: deviceMap,
          device: nextProps.device
        };
      }
      return {};
    };
    Shell3.prototype.componentDidMount = function componentDidMount() {
      this.checkAsideFixed();
    };
    Shell3.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
      var _this2 = this;
      if (prevProps.device !== this.props.device) {
        var deviceMapBefore = getCollapseMap(prevProps.device);
        var deviceMapAfter = getCollapseMap(this.props.device);
        Object.keys(deviceMapAfter).forEach(function(block) {
          var _ref = _this2.layout[block] || {}, props2 = _ref.props;
          if (deviceMapBefore[block] !== deviceMapAfter[block]) {
            if (props2 && typeof props2.onCollapseChange === "function") {
              props2.onCollapseChange(deviceMapAfter[block]);
            }
          }
        });
      }
      setTimeout(function() {
        _this2.checkAsideFixed();
      }, 201);
    };
    Shell3.prototype.render = function render2() {
      return this.renderShell(this.props);
    };
    return Shell3;
  }(Component), _class2.displayName = componentName, _class2._typeMark = componentName, _class2.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
    prefix: propTypes$1.string,
    device: propTypes$1.oneOf(["phone", "tablet", "desktop"]),
    type: propTypes$1.oneOf(["light", "dark", "brand"]),
    fixedHeader: propTypes$1.bool
  }), _class2.defaultProps = {
    prefix: "next-",
    device: "desktop",
    type: "light",
    fixedHeader: false
  }, _initialiseProps8 = function _initialiseProps9() {
    var _this3 = this;
    this.checkAsideFixed = function() {
      var fixedHeader = _this3.props.fixedHeader;
      if (!fixedHeader) {
        return;
      }
      var headerHeight = void 0;
      if (_this3.headerRef && (_this3.navigationFixed || _this3.toolDockFixed)) {
        headerHeight = dom.getStyle(_this3.headerRef, "height");
      }
      if (_this3.navigationFixed) {
        var style = {};
        style.marginLeft = dom.getStyle(_this3.navRef, "width");
        dom.addClass(_this3.navRef, "fixed");
        headerHeight && dom.setStyle(_this3.navRef, {
          top: headerHeight
        });
        dom.setStyle(_this3.localNavRef || _this3.submainRef, style);
      }
      if (_this3.toolDockFixed) {
        var _style = {};
        _style.marginRight = dom.getStyle(_this3.toolDockRef, "width");
        dom.addClass(_this3.toolDockRef, "fixed");
        headerHeight && dom.setStyle(_this3.toolDockRef, {
          top: headerHeight
        });
        dom.setStyle(_this3.localNavRef || _this3.submainRef, _style);
      }
    };
    this.setChildCollapse = function(child, mark) {
      var _state = _this3.state, device = _state.device, collapseMap = _state.collapseMap, controll = _state.controll;
      var collapse = child.props.collapse;
      var deviceMap = getCollapseMap(device);
      var props2 = {};
      if (isBoolean(collapse) === false) {
        props2.collapse = controll ? collapseMap[mark] : deviceMap[mark];
      }
      if (device !== "phone" && mark === "Navigation") {
        props2.miniable = true;
      }
      return /* @__PURE__ */ React.cloneElement(child, props2);
    };
    this.toggleAside = function(mark, props2, e2) {
      var _extends2;
      var _state2 = _this3.state, device = _state2.device, collapseMap = _state2.collapseMap;
      var deviceMap = getCollapseMap(device);
      var current = props2.collapse;
      var newCollapseMap = _extends$1$1({}, deviceMap, collapseMap, (_extends2 = {}, _extends2[mark] = !current, _extends2));
      _this3.setState({
        controll: true,
        collapseMap: newCollapseMap
      });
      if (props2 && typeof props2.onCollapseChange === "function") {
        props2.onCollapseChange(newCollapseMap[mark]);
      }
      var children = _this3.props.children;
      var com = void 0;
      if (mark === "Navigation") {
        com = children.filter(function(child) {
          return child && child.type._typeMark.replace("Shell_", "") === mark && child.props.direction !== "hoz";
        }).pop();
      } else {
        com = children.filter(function(child) {
          return child && child.type._typeMark.replace("Shell_", "") === mark;
        }).pop();
      }
      var _com$props$triggerPro = com.props.triggerProps, triggerProps = _com$props$triggerPro === void 0 ? {} : _com$props$triggerPro;
      if (typeof triggerProps.onClick === "function") {
        triggerProps.onClick(e2, _this3.state.collapseMap[mark]);
      }
    };
    this.toggleNavigation = function(e2) {
      var mark = "Navigation";
      var props2 = _this3.layout[mark].props;
      if ("keyCode" in e2 && e2.keyCode !== KEYCODE.ENTER) {
        return;
      }
      _this3.toggleAside(mark, props2, e2);
    };
    this.toggleLocalNavigation = function(e2) {
      var mark = "LocalNavigation";
      var props2 = _this3.layout[mark].props;
      if ("keyCode" in e2 && e2.keyCode !== KEYCODE.ENTER) {
        return;
      }
      _this3.toggleAside(mark, props2, e2);
    };
    this.toggleAncillary = function(e2) {
      var mark = "Ancillary";
      var props2 = _this3.layout[mark].props;
      if ("keyCode" in e2 && e2.keyCode !== KEYCODE.ENTER) {
        return;
      }
      _this3.toggleAside(mark, props2, e2);
    };
    this.toggleToolDock = function(e2) {
      var mark = "ToolDock";
      var props2 = _this3.layout[mark].props;
      if ("keyCode" in e2 && e2.keyCode !== KEYCODE.ENTER) {
        return;
      }
      _this3.toggleAside(mark, props2, e2);
    };
    this.saveHeaderRef = function(ref) {
      _this3.headerRef = ref;
    };
    this.saveLocalNavRef = function(ref) {
      _this3.localNavRef = ref;
    };
    this.saveNavRef = function(ref) {
      _this3.navRef = ref;
    };
    this.saveSubmainRef = function(ref) {
      _this3.submainRef = ref;
    };
    this.saveToolDockRef = function(ref) {
      _this3.toolDockRef = ref;
    };
    this.renderShell = function(props2) {
      var _classnames, _classnames2, _classnames3, _classnames4, _classnames5, _classnames6, _classnames7, _classnames11;
      var prefix2 = props2.prefix, children = props2.children, className = props2.className, type = props2.type, fixedHeader = props2.fixedHeader, others = _objectWithoutProperties$1(props2, ["prefix", "children", "className", "type", "fixedHeader"]);
      var device = _this3.state.device;
      var layout = {};
      layout.header = {};
      var hasToolDock = false, needNavigationTrigger = false, needDockTrigger = false;
      React.Children.map(children, function(child) {
        if (child && typeof child.type === "function") {
          var mark = child.type._typeMark.replace("Shell_", "");
          switch (mark) {
            case "Branding":
            case "Action":
              layout.header[mark] = child;
              break;
            case "MultiTask":
              layout.taskHeader = child;
              break;
            case "LocalNavigation":
              if (!layout[mark]) {
                layout[mark] = [];
              }
              layout[mark] = _this3.setChildCollapse(child, mark);
              break;
            case "Ancillary":
              if (!layout[mark]) {
                layout[mark] = [];
              }
              layout[mark] = _this3.setChildCollapse(child, mark);
              break;
            case "ToolDock":
              hasToolDock = true;
              if (!layout[mark]) {
                layout[mark] = [];
              }
              _this3.toolDockFixed = child.props.fixed;
              var childT = _this3.setChildCollapse(child, mark);
              layout[mark] = childT;
              break;
            case "AppBar":
            case "Content":
            case "Footer":
              layout.content || (layout.content = []);
              layout.content.push(child);
              break;
            case "Page":
              layout.page || (layout.page = []);
              layout.page = child;
              break;
            case "Navigation":
              if (child.props.direction === "hoz") {
                layout.header[mark] = child;
              } else {
                if (!layout[mark]) {
                  layout[mark] = [];
                }
                needNavigationTrigger = true;
                _this3.navigationFixed = child.props.fixed;
                var childN = _this3.setChildCollapse(child, mark);
                layout[mark] = childN;
              }
              break;
          }
        }
      });
      var headerCls = classnames((_classnames = {}, _classnames[prefix2 + "shell-header"] = true, _classnames[prefix2 + "shell-fixed-header"] = fixedHeader, _classnames));
      var mainCls = classnames((_classnames2 = {}, _classnames2[prefix2 + "shell-main"] = true, _classnames2));
      var pageCls = classnames((_classnames3 = {}, _classnames3[prefix2 + "shell-page"] = true, _classnames3));
      var submainCls = classnames((_classnames4 = {}, _classnames4[prefix2 + "shell-sub-main"] = true, _classnames4));
      var asideCls = classnames((_classnames5 = {}, _classnames5[prefix2 + "shell-aside"] = true, _classnames5));
      var toolDockCls = classnames((_classnames6 = {}, _classnames6[prefix2 + "aside-tooldock"] = true, _classnames6));
      var navigationCls = classnames((_classnames7 = {}, _classnames7[prefix2 + "aside-navigation"] = true, _classnames7));
      if (hasToolDock) {
        if (device === "phone") {
          needDockTrigger = true;
        }
      }
      if (needNavigationTrigger) {
        var branding = layout.header.Branding;
        var _layout$Navigation$pr = layout.Navigation.props, trigger = _layout$Navigation$pr.trigger, collapse = _layout$Navigation$pr.collapse;
        if ("trigger" in layout.Navigation.props) {
          trigger = trigger && /* @__PURE__ */ React.cloneElement(trigger, {
            onClick: _this3.toggleNavigation,
            "aria-expanded": !collapse
          }) || trigger;
        } else {
          trigger = /* @__PURE__ */ React.createElement("div", {
            key: "nav-trigger",
            role: "button",
            tabIndex: 0,
            "aria-expanded": !collapse,
            "aria-label": "toggle",
            className: "nav-trigger",
            onClick: _this3.toggleNavigation,
            onKeyDown: _this3.toggleNavigation
          }, collapse ? /* @__PURE__ */ React.createElement(Icon$1, {
            size: "small",
            type: "toggle-right"
          }) : /* @__PURE__ */ React.createElement(Icon$1, {
            size: "small",
            type: "toggle-left"
          }));
        }
        if (!branding) {
          trigger && (layout.header.Branding = trigger);
        } else {
          layout.header.Branding = /* @__PURE__ */ React.cloneElement(branding, {}, [trigger, branding.props.children]);
        }
      }
      if (needDockTrigger) {
        var action = layout.header.Action;
        var _layout$ToolDock$prop = layout.ToolDock.props, _trigger = _layout$ToolDock$prop.trigger, _collapse = _layout$ToolDock$prop.collapse;
        if ("trigger" in layout.ToolDock.props) {
          _trigger = _trigger && /* @__PURE__ */ React.cloneElement(_trigger, {
            onClick: _this3.toggleToolDock,
            "aria-expanded": !_collapse
          }) || _trigger;
        } else {
          _trigger = /* @__PURE__ */ React.createElement("div", {
            key: "dock-trigger",
            tabIndex: 0,
            role: "button",
            "aria-expanded": !_collapse,
            "aria-label": "toggle",
            className: "dock-trigger",
            onClick: _this3.toggleToolDock,
            onKeyDown: _this3.toggleToolDock
          }, /* @__PURE__ */ React.createElement(Icon$1, {
            size: "small",
            type: "add"
          }));
        }
        if (!action) {
          layout.header.Action = _trigger;
        } else {
          layout.header.Action = /* @__PURE__ */ React.cloneElement(action, {}, [action.props.children, _trigger]);
        }
      }
      var headerDom = [], contentArr = [], innerArr = [], taskHeaderDom = null;
      if (layout.taskHeader) {
        var _classnames8;
        var taskHeaderCls = classnames((_classnames8 = {}, _classnames8[prefix2 + "shell-task-header"] = true, _classnames8));
        taskHeaderDom = /* @__PURE__ */ React.createElement("section", {
          key: "task-header",
          className: taskHeaderCls
        }, layout.taskHeader);
      }
      if (layout.LocalNavigation) {
        var _classnames9;
        var _layout$LocalNavigati = layout.LocalNavigation.props, _trigger2 = _layout$LocalNavigati.trigger, _collapse2 = _layout$LocalNavigati.collapse;
        if ("trigger" in layout.LocalNavigation.props) {
          _trigger2 = _trigger2 && /* @__PURE__ */ React.cloneElement(_trigger2, {
            onClick: _this3.toggleLocalNavigation,
            "aria-expanded": !_collapse2
          }) || _trigger2;
        } else {
          _trigger2 = /* @__PURE__ */ React.createElement("div", {
            key: "local-nav-trigger",
            role: "button",
            tabIndex: 0,
            "aria-expanded": !_collapse2,
            "aria-label": "toggle",
            className: "local-nav-trigger aside-trigger",
            onClick: _this3.toggleLocalNavigation,
            onKeyDown: _this3.toggleLocalNavigation
          }, _collapse2 ? /* @__PURE__ */ React.createElement(Icon$1, {
            size: "small",
            type: "arrow-right"
          }) : /* @__PURE__ */ React.createElement(Icon$1, {
            size: "small",
            type: "arrow-left"
          }));
        }
        var localNavCls = classnames(asideCls, (_classnames9 = {}, _classnames9[prefix2 + "aside-localnavigation"] = true, _classnames9));
        innerArr.push(/* @__PURE__ */ React.createElement("aside", {
          key: "localnavigation",
          className: localNavCls,
          ref: _this3.saveLocalNavRef
        }, /* @__PURE__ */ React.cloneElement(layout.LocalNavigation, {}, [/* @__PURE__ */ React.createElement("div", {
          key: "wrapper",
          className: prefix2 + "shell-content-wrapper"
        }, layout.LocalNavigation.props.children), _trigger2])));
      }
      if (layout.content) {
        innerArr.push(/* @__PURE__ */ React.createElement("section", {
          key: "submain",
          className: submainCls,
          ref: _this3.saveSubmainRef
        }, layout.content));
      }
      if (layout.Ancillary) {
        var _classnames10;
        var _layout$Ancillary$pro = layout.Ancillary.props, _trigger3 = _layout$Ancillary$pro.trigger, _collapse3 = _layout$Ancillary$pro.collapse;
        if ("trigger" in layout.Ancillary.props) {
          _trigger3 = _trigger3 && /* @__PURE__ */ React.cloneElement(_trigger3, {
            onClick: _this3.toggleAncillary,
            "aria-expanded": !_collapse3
          }) || _trigger3;
        } else {
          _trigger3 = /* @__PURE__ */ React.createElement("div", {
            key: "ancillary-trigger",
            role: "button",
            tabIndex: 0,
            "aria-expanded": !_collapse3,
            "aria-label": "toggle",
            className: "ancillary-trigger aside-trigger",
            onClick: _this3.toggleAncillary,
            onKeyDown: _this3.toggleAncillary
          }, _collapse3 ? /* @__PURE__ */ React.createElement(Icon$1, {
            size: "small",
            type: "arrow-left"
          }) : /* @__PURE__ */ React.createElement(Icon$1, {
            size: "small",
            type: "arrow-right"
          }));
        }
        var ancillaryCls = classnames(asideCls, (_classnames10 = {}, _classnames10[prefix2 + "aside-ancillary"] = true, _classnames10));
        innerArr.push(/* @__PURE__ */ React.createElement("aside", {
          key: "ancillary",
          className: ancillaryCls
        }, /* @__PURE__ */ React.cloneElement(layout.Ancillary, {}, [/* @__PURE__ */ React.createElement("div", {
          key: "wrapper",
          className: prefix2 + "shell-content-wrapper"
        }, layout.Ancillary.props.children), _trigger3])));
      }
      if (Object.keys(layout.header).length > 0) {
        var _dom2 = /* @__PURE__ */ React.createElement("header", {
          key: "header",
          className: headerCls,
          ref: _this3.saveHeaderRef
        }, layout.header.Branding, layout.header.Navigation, layout.header.Action);
        if (fixedHeader && env$1.ieVersion) {
          headerDom = /* @__PURE__ */ React.createElement(Affix$1, {
            style: {
              zIndex: 9
            }
          }, _dom2);
        } else {
          headerDom = _dom2;
        }
      }
      layout.Navigation && contentArr.push(/* @__PURE__ */ React.createElement("aside", {
        key: "navigation",
        className: navigationCls,
        ref: _this3.saveNavRef
      }, /* @__PURE__ */ React.cloneElement(layout.Navigation, {
        className: classnames(asideCls, layout.Navigation.props.className)
      })));
      contentArr = contentArr.concat(innerArr.length > 0 ? innerArr : [/* @__PURE__ */ React.createElement("section", {
        key: "page",
        ref: _this3.saveSubmainRef,
        className: submainCls
      }, layout.page)]);
      layout.ToolDock && contentArr.push(/* @__PURE__ */ React.createElement("aside", {
        key: "tooldock",
        className: toolDockCls,
        ref: _this3.saveToolDockRef
      }, /* @__PURE__ */ React.cloneElement(layout.ToolDock, {
        className: classnames(asideCls, layout.ToolDock.props.className),
        key: "tooldock"
      })));
      var cls = classnames((_classnames11 = {}, _classnames11[prefix2 + "shell"] = true, _classnames11[prefix2 + "shell-" + device] = true, _classnames11[prefix2 + "shell-" + type] = true, _classnames11[className] = !!className, _classnames11));
      if (componentName === "Page") {
        return /* @__PURE__ */ React.createElement("section", {
          className: pageCls
        }, children);
      }
      _this3.layout = layout;
      return /* @__PURE__ */ React.createElement("section", _extends$1$1({
        className: cls
      }, others), headerDom, taskHeaderDom, /* @__PURE__ */ React.createElement("section", {
        className: mainCls
      }, contentArr));
    };
  }, _temp3);
  Shell2.displayName = "Shell";
  return polyfill(Shell2);
}
function Base(props) {
  var _class2, _temp3;
  var componentName = props.componentName;
  var Shell2 = (_temp3 = _class2 = function(_Component) {
    _inherits(Shell3, _Component);
    function Shell3() {
      _classCallCheck(this, Shell3);
      return _possibleConstructorReturn(this, _Component.apply(this, arguments));
    }
    Shell3.prototype.getChildContext = function getChildContext() {
      var collapse = this.props.collapse;
      return {
        isCollapse: collapse
      };
    };
    Shell3.prototype.render = function render2() {
      var _classnames;
      var _props = this.props, prefix2 = _props.prefix, className = _props.className, miniable = _props.miniable, device = _props.device, direction = _props.direction, children = _props.children, collapse = _props.collapse, triggerProps = _props.triggerProps, onCollapseChange = _props.onCollapseChange, component = _props.component, align = _props.align, fixed = _props.fixed, others = _objectWithoutProperties$1(_props, ["prefix", "className", "miniable", "device", "direction", "children", "collapse", "triggerProps", "onCollapseChange", "component", "align", "fixed"]);
      var Tag2 = component;
      var cls = classnames((_classnames = {}, _classnames[prefix2 + "shell-" + componentName.toLowerCase()] = true, _classnames[prefix2 + "shell-collapse"] = !!collapse, _classnames[prefix2 + "shell-mini"] = miniable, _classnames[prefix2 + "shell-nav-" + align] = componentName === "Navigation" && direction === "hoz" && align, _classnames[className] = !!className, _classnames));
      var newChildren = children;
      if (componentName === "Content") {
        newChildren = /* @__PURE__ */ React.createElement("div", {
          className: prefix2 + "shell-content-inner"
        }, children);
      }
      if (componentName === "Page") {
        return children;
      }
      return /* @__PURE__ */ React.createElement(Tag2, _extends$1$1({
        className: cls
      }, others), newChildren);
    };
    return Shell3;
  }(Component), _class2.displayName = componentName, _class2._typeMark = "Shell_" + componentName, _class2.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
    prefix: propTypes$1.string,
    collapse: propTypes$1.bool,
    miniable: propTypes$1.bool,
    component: propTypes$1.string,
    trigger: propTypes$1.node,
    triggerProps: propTypes$1.object,
    direction: propTypes$1.oneOf(["hoz", "ver"]),
    align: propTypes$1.oneOf(["left", "right", "center"]),
    onCollapseChange: propTypes$1.func,
    fixed: propTypes$1.bool
  }), _class2.defaultProps = {
    prefix: "next-",
    component: "div",
    onCollapseChange: function onCollapseChange() {
    },
    fixed: false
  }, _class2.childContextTypes = {
    isCollapse: propTypes$1.bool
  }, _temp3);
  Shell2.displayName = "Shell";
  return _ConfigProvider.config(Shell2);
}
var Shell = ShellBase({
  componentName: "Shell"
});
["Branding", "Navigation", "Action", "MultiTask", "LocalNavigation", "AppBar", "Content", "Footer", "Ancillary", "ToolDock", "ToolDockItem"].forEach(function(key) {
  Shell[key] = Base({
    componentName: key
  });
});
Shell.Page = _ConfigProvider.config(ShellBase({
  componentName: "Page"
}));
var _Shell = _ConfigProvider.config(Shell, {
  transform: function transform5(props, deprecated2) {
    if ("Component" in props) {
      deprecated2("Component", "component", "Shell");
      var _props = props, Component2 = _props.Component, component = _props.component, others = _objectWithoutProperties$1(_props, ["Component", "component"]);
      if ("component" in props) {
        props = _extends$1$1({
          component
        }, others);
      } else {
        props = _extends$1$1({
          component: Component2
        }, others);
      }
    }
    return props;
  }
});
var s = {layout: "style-module_layout__3vPKW", content: "style-module_content__2Czcn", search: "style-module_search__2rAzh"};
var _class$z, _temp2;
var Base$1 = (_temp2 = _class$z = function(_React$Component) {
  _inherits(Base2, _React$Component);
  function Base2() {
    var _temp3, _this2, _ret;
    _classCallCheck(this, Base2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp3 = (_this2 = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this2), _this2.saveRef = function(input) {
      _this2.inputRef = input;
    }, _temp3), _possibleConstructorReturn(_this2, _ret);
  }
  Base2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if ("value" in nextProps && nextProps.value !== prevState.value) {
      var value = nextProps.value;
      return {
        value: value === void 0 || value === null ? "" : value
      };
    }
    return null;
  };
  Base2.prototype.ieHack = function ieHack(value) {
    return value;
  };
  Base2.prototype.onChange = function onChange9(e2) {
    if ("stopPropagation" in e2) {
      e2.stopPropagation();
    } else if ("cancelBubble" in e2) {
      e2.cancelBubble();
    }
    var value = e2.target.value;
    if (this.props.trim) {
      value = value.trim();
    }
    value = this.ieHack(value);
    if (!("value" in this.props)) {
      this.setState({
        value
      });
    }
    if (value && this.props.htmlType === "number") {
      value = Number(value);
    }
    this.props.onChange(value, e2);
  };
  Base2.prototype.onKeyDown = function onKeyDown(e2) {
    var value = e2.target.value;
    var maxLength = this.props.maxLength;
    var len = maxLength > 0 && value ? this.getValueLength(value) : 0;
    var opts = {};
    if (this.props.trim && e2.keyCode === 32) {
      opts.beTrimed = true;
    }
    if (maxLength > 0 && (len > maxLength + 1 || (len === maxLength || len === maxLength + 1) && e2.keyCode !== 8 && e2.keyCode !== 46)) {
      opts.overMaxLength = true;
    }
    this.props.onKeyDown(e2, opts);
  };
  Base2.prototype.onFocus = function onFocus(e2) {
    this.setState({
      focus: true
    });
    this.props.onFocus(e2);
  };
  Base2.prototype.onBlur = function onBlur(e2) {
    this.setState({
      focus: false
    });
    this.props.onBlur(e2);
  };
  Base2.prototype.renderLength = function renderLength() {
    var _classNames;
    var _props = this.props, maxLength = _props.maxLength, hasLimitHint = _props.hasLimitHint, prefix2 = _props.prefix, rtl = _props.rtl;
    var len = maxLength > 0 && this.state.value ? this.getValueLength(this.state.value) : 0;
    var classesLenWrap = classnames((_classNames = {}, _classNames[prefix2 + "input-len"] = true, _classNames[prefix2 + "error"] = len > maxLength, _classNames));
    var content = rtl ? maxLength + "/" + len : len + "/" + maxLength;
    return maxLength && hasLimitHint ? /* @__PURE__ */ React.createElement("span", {
      className: classesLenWrap
    }, content) : null;
  };
  Base2.prototype.renderControl = function renderControl() {
    var lenWrap = this.renderLength();
    return lenWrap ? /* @__PURE__ */ React.createElement("span", {
      className: this.props.prefix + "input-control"
    }, lenWrap) : null;
  };
  Base2.prototype.getClass = function getClass() {
    var _classNames2;
    var _props2 = this.props, disabled = _props2.disabled, state = _props2.state, prefix2 = _props2.prefix;
    return classnames((_classNames2 = {}, _classNames2[prefix2 + "input"] = true, _classNames2[prefix2 + "disabled"] = !!disabled, _classNames2[prefix2 + "error"] = state === "error", _classNames2[prefix2 + "warning"] = state === "warning", _classNames2[prefix2 + "focus"] = this.state.focus, _classNames2));
  };
  Base2.prototype.getProps = function getProps() {
    var _props3 = this.props, placeholder = _props3.placeholder, inputStyle = _props3.inputStyle, disabled = _props3.disabled, readOnly = _props3.readOnly, cutString = _props3.cutString, maxLength = _props3.maxLength, name = _props3.name;
    var props = {
      style: inputStyle,
      placeholder,
      disabled,
      readOnly,
      name,
      maxLength: cutString ? maxLength : void 0,
      value: this.state.value,
      onChange: this.onChange.bind(this),
      onBlur: this.onBlur.bind(this),
      onFocus: this.onFocus.bind(this)
    };
    if (disabled) {
      props["aria-disabled"] = disabled;
    }
    return props;
  };
  Base2.prototype.getInputNode = function getInputNode() {
    return this.inputRef;
  };
  Base2.prototype.focus = function focus2(start, end) {
    this.inputRef.focus();
    if (typeof start === "number") {
      this.inputRef.selectionStart = start;
    }
    if (typeof end === "number") {
      this.inputRef.selectionEnd = end;
    }
  };
  return Base2;
}(React.Component), _class$z.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
  value: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number]),
  defaultValue: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number]),
  onChange: propTypes$1.func,
  onKeyDown: propTypes$1.func,
  disabled: propTypes$1.bool,
  maxLength: propTypes$1.number,
  hasLimitHint: propTypes$1.bool,
  cutString: propTypes$1.bool,
  readOnly: propTypes$1.bool,
  trim: propTypes$1.bool,
  placeholder: propTypes$1.string,
  onFocus: propTypes$1.func,
  onBlur: propTypes$1.func,
  getValueLength: propTypes$1.func,
  inputStyle: propTypes$1.object,
  className: propTypes$1.string,
  style: propTypes$1.object,
  htmlType: propTypes$1.string,
  name: propTypes$1.string,
  rtl: propTypes$1.bool,
  state: propTypes$1.oneOf(["error", "loading", "success", "warning"]),
  locale: propTypes$1.object,
  isPreview: propTypes$1.bool,
  renderPreview: propTypes$1.func,
  size: propTypes$1.oneOf(["small", "medium", "large"])
}), _class$z.defaultProps = {
  disabled: false,
  prefix: "next-",
  size: "medium",
  maxLength: null,
  hasLimitHint: false,
  cutString: true,
  readOnly: false,
  isPreview: false,
  trim: false,
  onFocus: func.noop,
  onBlur: func.noop,
  onChange: func.noop,
  onKeyDown: func.noop,
  getValueLength: func.noop,
  locale: zhCN.Input
}, _temp2);
Base$1.displayName = "Base";
var Base$2 = polyfill(Base$1);
var _class$A, _temp$z;
var Group$3 = (_temp$z = _class$A = function(_React$Component) {
  _inherits(Group2, _React$Component);
  function Group2() {
    _classCallCheck(this, Group2);
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }
  Group2.prototype.render = function render2() {
    var _classNames, _classNames2, _classNames3;
    var _props = this.props, className = _props.className, style = _props.style, children = _props.children, prefix2 = _props.prefix, addonBefore = _props.addonBefore, addonAfter = _props.addonAfter, addonBeforeClassName = _props.addonBeforeClassName, addonAfterClassName = _props.addonAfterClassName, rtl = _props.rtl, others = _objectWithoutProperties$1(_props, ["className", "style", "children", "prefix", "addonBefore", "addonAfter", "addonBeforeClassName", "addonAfterClassName", "rtl"]);
    var cls = classnames((_classNames = {}, _classNames[prefix2 + "input-group"] = true, _classNames[className] = !!className, _classNames));
    var addonCls = prefix2 + "input-group-addon";
    var beforeCls = classnames(addonCls, (_classNames2 = {}, _classNames2[prefix2 + "before"] = true, _classNames2[addonBeforeClassName] = addonBeforeClassName, _classNames2));
    var afterCls = classnames(addonCls, (_classNames3 = {}, _classNames3[prefix2 + "after"] = true, _classNames3[addonAfterClassName] = addonAfterClassName, _classNames3));
    var before = addonBefore ? /* @__PURE__ */ React.createElement("span", {
      className: beforeCls
    }, addonBefore) : null;
    var after = addonAfter ? /* @__PURE__ */ React.createElement("span", {
      className: afterCls
    }, addonAfter) : null;
    return /* @__PURE__ */ React.createElement("span", _extends$1$1({}, others, {
      dir: rtl ? "rtl" : void 0,
      className: cls,
      style
    }), before, children, after);
  };
  return Group2;
}(React.Component), _class$A.propTypes = {
  prefix: propTypes$1.string,
  className: propTypes$1.string,
  style: propTypes$1.object,
  children: propTypes$1.node,
  addonBefore: propTypes$1.node,
  addonBeforeClassName: propTypes$1.string,
  addonAfter: propTypes$1.node,
  addonAfterClassName: propTypes$1.string,
  rtl: propTypes$1.bool
}, _class$A.defaultProps = {
  prefix: "next-"
}, _temp$z);
Group$3.displayName = "Group";
var Group$4 = _ConfigProvider.config(Group$3);
var _class$B, _temp$A;
function preventDefault(e2) {
  e2.preventDefault();
}
var Input = (_temp$A = _class$B = function(_Base) {
  _inherits(Input2, _Base);
  function Input2(props) {
    _classCallCheck(this, Input2);
    var _this2 = _possibleConstructorReturn(this, _Base.call(this, props));
    _this2.handleKeyDown = function(e2) {
      if (e2.keyCode === 13) {
        _this2.props.onPressEnter(e2);
      }
      _this2.onKeyDown(e2);
    };
    _this2.handleKeyDownFromClear = function(e2) {
      if (e2.keyCode === 13) {
        _this2.onClear(e2);
      }
    };
    var value = void 0;
    if ("value" in props) {
      value = props.value;
    } else {
      value = props.defaultValue;
    }
    _this2.state = {
      value: typeof value === "undefined" ? "" : value
    };
    return _this2;
  }
  Input2.prototype.getValueLength = function getValueLength(value) {
    var nv = "" + value;
    var strLen = this.props.getValueLength(nv);
    if (typeof strLen !== "number") {
      strLen = nv.length;
    }
    return strLen;
  };
  Input2.prototype.renderControl = function renderControl() {
    var _props = this.props, hasClear = _props.hasClear, readOnly = _props.readOnly, state = _props.state, prefix2 = _props.prefix, hint = _props.hint, extra = _props.extra, locale = _props.locale;
    var lenWrap = this.renderLength();
    var stateWrap = null;
    if (state === "success") {
      stateWrap = /* @__PURE__ */ React.createElement(Icon$1, {
        type: "success-filling",
        className: prefix2 + "input-success-icon"
      });
    } else if (state === "loading") {
      stateWrap = /* @__PURE__ */ React.createElement(Icon$1, {
        type: "loading",
        className: prefix2 + "input-loading-icon"
      });
    } else if (state === "warning") {
      stateWrap = /* @__PURE__ */ React.createElement(Icon$1, {
        type: "warning",
        className: prefix2 + "input-warning-icon"
      });
    }
    var clearWrap = null;
    var showClear = hasClear && !readOnly && !!("" + this.state.value);
    if (hint || showClear) {
      var hintIcon = null;
      if (hint) {
        if (typeof hint === "string") {
          hintIcon = /* @__PURE__ */ React.createElement(Icon$1, {
            type: hint,
            className: prefix2 + "input-hint"
          });
        } else if (/* @__PURE__ */ isValidElement(hint)) {
          hintIcon = /* @__PURE__ */ cloneElement(hint, {
            className: classnames(hint.props.className, prefix2 + "input-hint")
          });
        } else {
          hintIcon = hint;
        }
      } else {
        hintIcon = /* @__PURE__ */ React.createElement(Icon$1, {
          type: "delete-filling",
          role: "button",
          tabIndex: "0",
          className: prefix2 + "input-hint " + prefix2 + "input-clear-icon",
          "aria-label": locale.clear,
          onClick: this.onClear.bind(this),
          onMouseDown: preventDefault,
          onKeyDown: this.handleKeyDownFromClear
        });
      }
      clearWrap = /* @__PURE__ */ React.createElement("span", {
        className: prefix2 + "input-hint-wrap"
      }, hasClear && hint ? /* @__PURE__ */ React.createElement(Icon$1, {
        type: "delete-filling",
        role: "button",
        tabIndex: "0",
        className: prefix2 + "input-clear " + prefix2 + "input-clear-icon",
        "aria-label": locale.clear,
        onClick: this.onClear.bind(this),
        onMouseDown: preventDefault,
        onKeyDown: this.handleKeyDownFromClear
      }) : null, hintIcon);
    }
    if (state === "loading") {
      clearWrap = null;
    }
    return clearWrap || lenWrap || stateWrap || extra ? /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "input-control"
    }, clearWrap, lenWrap, stateWrap, extra) : null;
  };
  Input2.prototype.renderLabel = function renderLabel() {
    var _props2 = this.props, label = _props2.label, prefix2 = _props2.prefix, id2 = _props2.id;
    return label ? /* @__PURE__ */ React.createElement("label", {
      className: prefix2 + "input-label",
      htmlFor: id2
    }, label) : null;
  };
  Input2.prototype.renderInner = function renderInner(inner, cls) {
    return inner ? /* @__PURE__ */ React.createElement("span", {
      className: cls
    }, inner) : null;
  };
  Input2.prototype.onClear = function onClear(e2) {
    if (this.props.disabled) {
      return;
    }
    if (!("value" in this.props)) {
      this.setState({
        value: ""
      });
    }
    this.props.onChange("", e2, "clear");
    this.focus();
  };
  Input2.prototype.render = function render2() {
    var _classNames, _classNames2, _classNames3, _classNames4, _classNames5, _classNames6, _classNames7;
    var _props3 = this.props, size = _props3.size, htmlType = _props3.htmlType, htmlSize = _props3.htmlSize, autoComplete = _props3.autoComplete, autoFocus = _props3.autoFocus, disabled = _props3.disabled, style = _props3.style, innerBefore = _props3.innerBefore, innerAfter = _props3.innerAfter, innerBeforeClassName = _props3.innerBeforeClassName, innerAfterClassName = _props3.innerAfterClassName, className = _props3.className, hasBorder = _props3.hasBorder, prefix2 = _props3.prefix, isPreview = _props3.isPreview, renderPreview = _props3.renderPreview, addonBefore = _props3.addonBefore, addonAfter = _props3.addonAfter, addonTextBefore = _props3.addonTextBefore, addonTextAfter = _props3.addonTextAfter, inputRender3 = _props3.inputRender, rtl = _props3.rtl;
    var hasAddon = addonBefore || addonAfter || addonTextBefore || addonTextAfter;
    var cls = classnames(this.getClass(), (_classNames = {}, _classNames["" + prefix2 + size] = true, _classNames[prefix2 + "hidden"] = this.props.htmlType === "hidden", _classNames[prefix2 + "noborder"] = !hasBorder || this.props.htmlType === "file", _classNames[prefix2 + "input-group-auto-width"] = hasAddon, _classNames[className] = !!className && !hasAddon, _classNames));
    var innerCls = prefix2 + "input-inner";
    var innerBeforeCls = classnames((_classNames2 = {}, _classNames2[innerCls] = true, _classNames2[prefix2 + "before"] = true, _classNames2[innerBeforeClassName] = innerBeforeClassName, _classNames2));
    var innerAfterCls = classnames((_classNames3 = {}, _classNames3[innerCls] = true, _classNames3[prefix2 + "after"] = true, _classNames3[innerAfterClassName] = innerAfterClassName, _classNames3));
    var previewCls = classnames((_classNames4 = {}, _classNames4[prefix2 + "form-preview"] = true, _classNames4[className] = !!className, _classNames4));
    var props = this.getProps();
    var dataProps = obj.pickAttrsWith(this.props, "data-");
    var others = obj.pickOthers(_extends$1$1({}, dataProps, Input2.propTypes), this.props);
    if (isPreview) {
      var value = props.value;
      var label = this.props.label;
      if (typeof renderPreview === "function") {
        return /* @__PURE__ */ React.createElement("div", _extends$1$1({}, others, {
          className: previewCls
        }), renderPreview(value, this.props));
      }
      return /* @__PURE__ */ React.createElement("div", _extends$1$1({}, others, {
        className: previewCls
      }), addonBefore || addonTextBefore, label, innerBefore, value, innerAfter, addonAfter || addonTextAfter);
    }
    var inputEl = /* @__PURE__ */ React.createElement("input", _extends$1$1({}, others, props, {
      height: "100%",
      type: htmlType,
      size: htmlSize,
      autoFocus,
      autoComplete,
      onKeyDown: this.handleKeyDown,
      ref: this.saveRef
    }));
    var inputWrap = /* @__PURE__ */ React.createElement("span", _extends$1$1({}, dataProps, {
      dir: rtl ? "rtl" : void 0,
      className: cls,
      style: hasAddon ? void 0 : style
    }), this.renderLabel(), this.renderInner(innerBefore, innerBeforeCls), inputRender3(inputEl), this.renderInner(innerAfter, innerAfterCls), this.renderControl());
    var groupCls = classnames((_classNames5 = {}, _classNames5[prefix2 + "input-group-text"] = true, _classNames5["" + prefix2 + size] = !!size, _classNames5[prefix2 + "disabled"] = disabled, _classNames5));
    var addonBeforeCls = classnames((_classNames6 = {}, _classNames6[groupCls] = addonTextBefore, _classNames6));
    var addonAfterCls = classnames((_classNames7 = {}, _classNames7[groupCls] = addonTextAfter, _classNames7));
    if (hasAddon) {
      return /* @__PURE__ */ React.createElement(Group$4, _extends$1$1({}, dataProps, {
        className,
        style,
        addonBefore: addonBefore || addonTextBefore,
        addonBeforeClassName: addonBeforeCls,
        addonAfter: addonAfter || addonTextAfter,
        addonAfterClassName: addonAfterCls
      }), inputWrap);
    }
    return inputWrap;
  };
  return Input2;
}(Base$2), _class$B.getDerivedStateFromProps = Base$2.getDerivedStateFromProps, _class$B.propTypes = _extends$1$1({}, Base$2.propTypes, {
  label: propTypes$1.node,
  hasClear: propTypes$1.bool,
  hasBorder: propTypes$1.bool,
  state: propTypes$1.oneOf(["error", "loading", "success", "warning"]),
  onPressEnter: propTypes$1.func,
  onClear: propTypes$1.func,
  htmlType: propTypes$1.string,
  htmlSize: propTypes$1.string,
  hint: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.node]),
  innerBefore: propTypes$1.node,
  innerAfter: propTypes$1.node,
  addonBefore: propTypes$1.node,
  addonAfter: propTypes$1.node,
  addonTextBefore: propTypes$1.node,
  addonTextAfter: propTypes$1.node,
  autoComplete: propTypes$1.string,
  autoFocus: propTypes$1.bool,
  inputRender: propTypes$1.func,
  extra: propTypes$1.node,
  innerBeforeClassName: propTypes$1.string,
  innerAfterClassName: propTypes$1.string,
  isPreview: propTypes$1.bool,
  renderPreview: propTypes$1.func
}), _class$B.defaultProps = _extends$1$1({}, Base$2.defaultProps, {
  autoComplete: "off",
  hasBorder: true,
  isPreview: false,
  onPressEnter: func.noop,
  inputRender: function inputRender(el) {
    return el;
  }
}), _temp$A);
var _class$C, _temp2$1;
function preventDefault$1(e2) {
  e2.preventDefault();
}
var Password = (_temp2$1 = _class$C = function(_Input) {
  _inherits(Password2, _Input);
  function Password2() {
    var _temp3, _this2, _ret;
    _classCallCheck(this, Password2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp3 = (_this2 = _possibleConstructorReturn(this, _Input.call.apply(_Input, [this].concat(args))), _this2), _this2.state = {
      hint: "eye",
      htmlType: "password"
    }, _this2.toggleEye = function(e2) {
      e2.preventDefault();
      var eyeClose = _this2.state.hint === "eye-close";
      _this2.setState({
        hint: eyeClose ? "eye" : "eye-close",
        htmlType: eyeClose || !_this2.props.showToggle ? "password" : "text"
      });
    }, _temp3), _possibleConstructorReturn(_this2, _ret);
  }
  Password2.prototype.render = function render2() {
    var _props = this.props, showToggle = _props.showToggle, others = _objectWithoutProperties$1(_props, ["showToggle"]);
    var _state = this.state, hint = _state.hint, htmlType = _state.htmlType;
    var extra = showToggle ? /* @__PURE__ */ React.createElement(Icon$1, {
      type: hint,
      onClick: this.toggleEye,
      onMouseDown: preventDefault$1
    }) : null;
    return /* @__PURE__ */ React.createElement(Input, _extends$1$1({}, others, {
      extra,
      htmlType
    }));
  };
  return Password2;
}(Input), _class$C.getDerivedStateFromProps = Input.getDerivedStateFromProps, _class$C.propTypes = _extends$1$1({}, Input.propTypes, {
  showToggle: propTypes$1.bool
}), _class$C.defaultProps = _extends$1$1({}, Input.defaultProps, {
  showToggle: true
}), _temp2$1);
var _class$D, _temp$B, _initialiseProps$2;
function onNextFrame(cb) {
  if (window.requestAnimationFrame) {
    return window.requestAnimationFrame(cb);
  }
  return window.setTimeout(cb, 1);
}
function clearNextFrameAction(nextFrameId) {
  if (window.cancelAnimationFrame) {
    window.cancelAnimationFrame(nextFrameId);
  } else {
    window.clearTimeout(nextFrameId);
  }
}
var isMacSafari = typeof navigator !== "undefined" && navigator && navigator.userAgent ? navigator.userAgent.match(/^((?!chrome|android|windows).)*safari/i) : false;
var hiddenStyle = {
  visibility: "hidden",
  position: "absolute",
  zIndex: "-1000",
  top: "-1000px",
  overflowY: "hidden",
  left: 0,
  right: 0
};
var TextArea = (_temp$B = _class$D = function(_Base) {
  _inherits(TextArea2, _Base);
  function TextArea2(props) {
    _classCallCheck(this, TextArea2);
    var _this2 = _possibleConstructorReturn(this, _Base.call(this, props));
    _initialiseProps$2.call(_this2);
    var value = void 0;
    if ("value" in props) {
      value = props.value;
    } else {
      value = props.defaultValue;
    }
    _this2.state = {
      value: typeof value === "undefined" ? "" : value
    };
    return _this2;
  }
  TextArea2.prototype.componentDidMount = function componentDidMount() {
    var autoHeight = this.props.autoHeight;
    if (autoHeight) {
      if ((typeof autoHeight === "undefined" ? "undefined" : _typeof(autoHeight)) === "object") {
        this.setState(this._getMinMaxHeight(autoHeight, this.state.value));
      } else {
        this.setState({
          height: this._getHeight(this.state.value),
          overflowY: "hidden"
        });
      }
    }
  };
  TextArea2.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.autoHeight && this.props.value !== prevProps.value) {
      this._resizeTextArea(this.props.value);
    }
  };
  TextArea2.prototype._getMinMaxHeight = function _getMinMaxHeight(_ref, value) {
    var minRows = _ref.minRows, maxRows = _ref.maxRows;
    var node = ReactDOM.findDOMNode(this.helpRef);
    node.setAttribute("rows", minRows);
    var minHeight = node.clientHeight;
    node.setAttribute("rows", maxRows);
    var maxHeight = node.clientHeight;
    node.setAttribute("rows", "1");
    var height = this._getHeight(value);
    return {
      minHeight,
      maxHeight,
      height,
      overflowY: height <= maxHeight ? "hidden" : void 0
    };
  };
  TextArea2.prototype._getHeight = function _getHeight(value) {
    var node = ReactDOM.findDOMNode(this.helpRef);
    node.value = value;
    return node.scrollHeight;
  };
  TextArea2.prototype.ieHack = function ieHack(value) {
    if (env$1.ieVersion === 9 && this.props.maxLength) {
      var maxLength = parseInt(this.props.maxLength);
      var len = this.getValueLength(value, true);
      if (len > maxLength && this.props.cutString) {
        value = value.replace(/\n/g, "\n\n");
        value = value.substr(0, maxLength);
        value = value.replace(/\n\n/g, "\n");
      }
    }
    this.props.autoHeight && this._resizeTextArea(value);
    return value;
  };
  TextArea2.prototype.getValueLength = function getValueLength(value) {
    var _props = this.props, maxLength = _props.maxLength, cutString = _props.cutString;
    var nv = "" + value;
    var strLen = this.props.getValueLength(nv);
    if (typeof strLen !== "number") {
      strLen = nv.length;
    }
    if (env$1.ieVersion || isMacSafari) {
      strLen = strLen + nv.split("\n").length - 1;
      if (strLen > maxLength && cutString) {
        strLen = maxLength;
      }
    }
    return strLen;
  };
  TextArea2.prototype.saveTextAreaRef = function saveTextAreaRef(textArea) {
    this.inputRef = textArea;
  };
  TextArea2.prototype.saveHelpRef = function saveHelpRef(ref) {
    this.helpRef = ref;
  };
  TextArea2.prototype.render = function render2() {
    var _classNames, _classNames2;
    var _props2 = this.props, rows = _props2.rows, style = _props2.style, className = _props2.className, autoHeight = _props2.autoHeight, isPreview = _props2.isPreview, renderPreview = _props2.renderPreview, prefix2 = _props2.prefix, rtl = _props2.rtl, hasBorder = _props2.hasBorder, size = _props2.size;
    var cls = classnames(this.getClass(), (_classNames = {}, _classNames["" + prefix2 + size] = size === "large" || false, _classNames[prefix2 + "input-textarea"] = true, _classNames[prefix2 + "noborder"] = !hasBorder, _classNames[className] = !!className, _classNames));
    var props = this.getProps();
    var dataProps = obj.pickAttrsWith(this.props, "data-");
    var others = obj.pickOthers(_extends$1$1({}, dataProps, TextArea2.propTypes), this.props);
    var textareStyle = _extends$1$1({}, props.style, {
      height: this.state.height,
      minHeight: this.state.minHeight,
      maxHeight: this.state.maxHeight,
      overflowY: this.state.overflowY
    });
    var previewCls = classnames((_classNames2 = {}, _classNames2[prefix2 + "input-textarea"] = true, _classNames2[prefix2 + "form-preview"] = true, _classNames2[className] = !!className, _classNames2));
    var wrapStyle = autoHeight ? _extends$1$1({}, style, {
      position: "relative"
    }) : style;
    if (isPreview) {
      var value = props.value;
      if ("renderPreview" in this.props) {
        return /* @__PURE__ */ React.createElement("div", _extends$1$1({}, others, {
          className: previewCls
        }), renderPreview(value, this.props));
      }
      return /* @__PURE__ */ React.createElement("div", _extends$1$1({}, others, {
        className: previewCls
      }), value.split("\n").map(function(data, i) {
        return /* @__PURE__ */ React.createElement("p", {
          key: "p-" + i
        }, data);
      }));
    }
    return /* @__PURE__ */ React.createElement("span", _extends$1$1({
      className: cls,
      style: wrapStyle,
      dir: rtl ? "rtl" : void 0
    }, dataProps), /* @__PURE__ */ React.createElement("textarea", _extends$1$1({}, others, props, {
      "data-real": true,
      rows,
      style: textareStyle,
      ref: this.saveRef.bind(this),
      onKeyDown: this.onKeyDown.bind(this)
    })), autoHeight ? /* @__PURE__ */ React.createElement("textarea", {
      "data-fake": true,
      ref: this.saveHelpRef.bind(this),
      style: _extends$1$1({}, props.style, hiddenStyle),
      rows: "1"
    }) : null, this.renderControl());
  };
  return TextArea2;
}(Base$2), _class$D.getDerivedStateFromProps = Base$2.getDerivedStateFromProps, _class$D.propTypes = _extends$1$1({}, Base$2.propTypes, {
  hasBorder: propTypes$1.bool,
  state: propTypes$1.oneOf(["error", "warning"]),
  autoHeight: propTypes$1.oneOfType([propTypes$1.bool, propTypes$1.object]),
  rows: propTypes$1.number,
  isPreview: propTypes$1.bool,
  renderPreview: propTypes$1.func
}), _class$D.defaultProps = _extends$1$1({}, Base$2.defaultProps, {
  hasBorder: true,
  isPreview: false,
  rows: 4,
  autoHeight: false
}), _initialiseProps$2 = function _initialiseProps4() {
  var _this2 = this;
  this._resizeTextArea = function(value) {
    if (_this2.nextFrameActionId) {
      clearNextFrameAction(_this2.nextFrameActionId);
    }
    _this2.nextFrameActionId = onNextFrame(function() {
      var height = _this2._getHeight(value);
      var maxHeight = _this2.state.maxHeight ? _this2.state.maxHeight : Infinity;
      _this2.setState({
        height: _this2._getHeight(value),
        overflowY: height <= maxHeight ? "hidden" : void 0
      });
    });
  };
}, _temp$B);
Input.Password = _ConfigProvider.config(Password, {
  exportNames: ["getInputNode", "focus"]
});
Input.TextArea = _ConfigProvider.config(TextArea, {
  exportNames: ["getInputNode", "focus"]
});
Input.Group = Group$4;
var Input$1 = _ConfigProvider.config(Input, {
  exportNames: ["getInputNode", "focus"]
});
var _class$E, _temp$C;
var noop$d = func.noop, bindCtx$b = func.bindCtx;
var PRESET_COLOR_REG = /blue|green|orange|red|turquoise|yellow/;
var Tag = (_temp$C = _class$E = function(_Component) {
  _inherits(Tag2, _Component);
  function Tag2(props) {
    _classCallCheck(this, Tag2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    _this2.onKeyDown = function(e2) {
      var _this$props = _this2.props, closable = _this$props.closable, closeArea = _this$props.closeArea, onClick4 = _this$props.onClick, disabled = _this$props.disabled;
      if (e2.keyCode !== KEYCODE.SPACE || disabled) {
        return;
      }
      e2.preventDefault();
      e2.stopPropagation();
      if (closable) {
        _this2.handleClose(closeArea);
      } else {
        typeof onClick4 === "function" && onClick4(e2);
      }
    };
    _this2.state = {
      visible: true
    };
    bindCtx$b(_this2, ["handleBodyClick", "handleTailClick", "handleAnimationInit", "handleAnimationEnd", "renderTailNode"]);
    return _this2;
  }
  Tag2.prototype.componentWillUnmount = function componentWillUnmount() {
    this.__destroyed = true;
  };
  Tag2.prototype.handleClose = function handleClose(from) {
    var _this2 = this;
    var _props = this.props, animation2 = _props.animation, onClose = _props.onClose;
    var hasAnimation = support.animation && animation2;
    var result = onClose(from, this.tagNode);
    if (result !== false && !this.__destroyed) {
      this.setState({
        visible: false
      }, function() {
        !hasAnimation && _this2.props.afterClose(_this2.tagNode);
      });
    }
  };
  Tag2.prototype.handleBodyClick = function handleBodyClick(e2) {
    var _props2 = this.props, closable = _props2.closable, closeArea = _props2.closeArea, onClick4 = _props2.onClick;
    if (closable && closeArea === "tag") {
      this.handleClose("tag");
    }
    if (typeof onClick4 === "function") {
      return onClick4(e2);
    }
  };
  Tag2.prototype.handleTailClick = function handleTailClick(e2) {
    e2 && e2.preventDefault();
    e2 && e2.stopPropagation();
    this.handleClose("tail");
  };
  Tag2.prototype.handleAnimationInit = function handleAnimationInit(node) {
    this.props.afterAppear(node);
  };
  Tag2.prototype.handleAnimationEnd = function handleAnimationEnd(node) {
    this.props.afterClose(node);
  };
  Tag2.prototype.renderAnimatedTag = function renderAnimatedTag(children, animationName) {
    return /* @__PURE__ */ React.createElement(Animate, {
      animation: animationName,
      afterAppear: this.handleAnimationInit,
      afterLeave: this.handleAnimationEnd
    }, children);
  };
  Tag2.prototype.renderTailNode = function renderTailNode() {
    var _props3 = this.props, prefix2 = _props3.prefix, closable = _props3.closable, locale = _props3.locale;
    if (!closable) {
      return null;
    }
    return /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "tag-close-btn",
      onClick: this.handleTailClick,
      role: "button",
      "aria-label": locale.delete
    }, /* @__PURE__ */ React.createElement(Icon$1, {
      type: "close"
    }));
  };
  Tag2.prototype.isPresetColor = function isPresetColor() {
    var color = this.props.color;
    if (!color) {
      return false;
    }
    return PRESET_COLOR_REG.test(color);
  };
  Tag2.prototype.getTagStyle = function getTagStyle() {
    var _props4 = this.props, _props4$color = _props4.color, color = _props4$color === void 0 ? "" : _props4$color, style = _props4.style;
    var isPresetColor = this.isPresetColor();
    var customColorStyle = {
      backgroundColor: color,
      borderColor: color,
      color: "#fff"
    };
    return _extends$1$1({}, color && !isPresetColor ? customColorStyle : null, style);
  };
  Tag2.prototype.render = function render2() {
    var _classNames, _this3 = this;
    var _props5 = this.props, prefix2 = _props5.prefix, type = _props5.type, size = _props5.size, color = _props5.color, _shape = _props5._shape, closable = _props5.closable, closeArea = _props5.closeArea, className = _props5.className, children = _props5.children, animation2 = _props5.animation, disabled = _props5.disabled, rtl = _props5.rtl;
    var visible = this.state.visible;
    var isPresetColor = this.isPresetColor();
    var others = obj.pickOthers(Tag2.propTypes, this.props);
    var style = others.style, otherTagProps = _objectWithoutProperties$1(others, ["style"]);
    var shape = closable ? "closable" : _shape;
    var bodyClazz = classnames([prefix2 + "tag", prefix2 + "tag-" + shape, prefix2 + "tag-" + size], (_classNames = {}, _classNames[prefix2 + "tag-level-" + type] = !color, _classNames[prefix2 + "tag-closable"] = closable, _classNames[prefix2 + "tag-body-pointer"] = closable && closeArea === "tag", _classNames[prefix2 + "tag-" + color] = color && isPresetColor && type === "primary", _classNames[prefix2 + "tag-" + color + "-inverse"] = color && isPresetColor && type === "normal", _classNames), className);
    var tailNode = this.renderTailNode();
    var tagNode = !visible ? null : /* @__PURE__ */ React.createElement("div", _extends$1$1({
      className: bodyClazz,
      onClick: this.handleBodyClick,
      onKeyDown: this.onKeyDown,
      tabIndex: disabled ? "" : "0",
      role: "button",
      "aria-disabled": disabled,
      disabled,
      dir: rtl ? "rtl" : void 0,
      ref: function ref(n2) {
        return _this3.tagNode = n2;
      },
      style: this.getTagStyle()
    }, otherTagProps), /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "tag-body"
    }, children), tailNode);
    if (animation2 && support.animation) {
      return this.renderAnimatedTag(tagNode, prefix2 + "tag-zoom");
    }
    return tagNode;
  };
  return Tag2;
}(Component), _class$E.propTypes = {
  prefix: propTypes$1.string,
  type: propTypes$1.oneOf(["normal", "primary"]),
  size: propTypes$1.oneOf(["small", "medium", "large"]),
  color: propTypes$1.string,
  animation: propTypes$1.bool,
  closeArea: propTypes$1.oneOf(["tag", "tail"]),
  closable: propTypes$1.bool,
  onClose: propTypes$1.func,
  afterClose: propTypes$1.func,
  afterAppear: propTypes$1.func,
  className: propTypes$1.any,
  children: propTypes$1.node,
  onClick: propTypes$1.func,
  _shape: propTypes$1.oneOf(["default", "closable", "checkable"]),
  disabled: propTypes$1.bool,
  rtl: propTypes$1.bool,
  locale: propTypes$1.object
}, _class$E.defaultProps = {
  prefix: "next-",
  type: "normal",
  size: "medium",
  closeArea: "tail",
  animation: false,
  onClose: noop$d,
  afterClose: noop$d,
  afterAppear: noop$d,
  onClick: noop$d,
  _shape: "default",
  disabled: false,
  rtl: false,
  locale: zhCN.Tag
}, _temp$C);
Tag.displayName = "Tag";
var Tag$1 = _ConfigProvider.config(Tag);
var _class$F, _temp$D;
var Group$5 = (_temp$D = _class$F = function(_Component) {
  _inherits(Group2, _Component);
  function Group2() {
    _classCallCheck(this, Group2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  Group2.prototype.render = function render2() {
    var _props = this.props, className = _props.className, prefix2 = _props.prefix, children = _props.children, rtl = _props.rtl, others = _objectWithoutProperties$1(_props, ["className", "prefix", "children", "rtl"]);
    var clazz = classnames((prefix2 || "next-") + "tag-group", className);
    return /* @__PURE__ */ React.createElement("div", _extends$1$1({
      className: clazz,
      dir: rtl ? "rtl" : void 0
    }, others), children);
  };
  return Group2;
}(Component), _class$F.propTypes = {
  prefix: propTypes$1.string,
  className: propTypes$1.any,
  children: propTypes$1.node,
  rtl: propTypes$1.bool
}, _class$F.defaultProps = {
  prefix: "next-",
  rtl: false
}, _temp$D);
Group$5.displayName = "Group";
var _class$G, _temp$E;
var noop$e = func.noop, bindCtx$c = func.bindCtx;
var Selectable = (_temp$E = _class$G = function(_Component) {
  _inherits(Selectable2, _Component);
  function Selectable2(props) {
    _classCallCheck(this, Selectable2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    _this2.state = {
      checked: "checked" in props ? props.checked : props.defaultChecked || false
    };
    bindCtx$c(_this2, ["handleClick"]);
    return _this2;
  }
  Selectable2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.checked !== void 0 && props.checked !== state.checked) {
      return {
        checked: props.checked
      };
    }
    return null;
  };
  Selectable2.prototype.handleClick = function handleClick(e2) {
    e2 && e2.preventDefault();
    if (this.props.disabled) {
      return false;
    }
    var checked = this.state.checked;
    this.setState({
      checked: !checked
    });
    this.props.onChange(!checked, e2);
  };
  Selectable2.prototype.render = function render2() {
    var attrFilterTarget = [
      "checked",
      "defaultChecked",
      "onChange",
      "className",
      "_shape",
      "closable"
    ];
    var others = obj.pickOthers(attrFilterTarget, this.props);
    var isChecked2 = "checked" in this.props ? this.props.checked : this.state.checked;
    var clazz = classnames(this.props.className, {
      checked: isChecked2
    });
    return /* @__PURE__ */ React.createElement(Tag$1, _extends$1$1({}, others, {
      role: "checkbox",
      _shape: "checkable",
      "aria-checked": isChecked2,
      className: clazz,
      onClick: this.handleClick
    }));
  };
  return Selectable2;
}(Component), _class$G.propTypes = {
  checked: propTypes$1.bool,
  defaultChecked: propTypes$1.bool,
  onChange: propTypes$1.func,
  disabled: propTypes$1.bool,
  className: propTypes$1.any
}, _class$G.defaultProps = {
  onChange: noop$e
}, _temp$E);
Selectable.displayName = "Selectable";
var Selectable$1 = polyfill(Selectable);
var _class$H, _temp$F;
var Closeable = (_temp$F = _class$H = function(_Component) {
  _inherits(Closeable2, _Component);
  function Closeable2() {
    _classCallCheck(this, Closeable2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  Closeable2.prototype.render = function render2() {
    var _props = this.props, disabled = _props.disabled, className = _props.className, closeArea = _props.closeArea, onClose = _props.onClose, afterClose = _props.afterClose, onClick4 = _props.onClick, type = _props.type, size = _props.size, children = _props.children, rtl = _props.rtl, others = _objectWithoutProperties$1(_props, ["disabled", "className", "closeArea", "onClose", "afterClose", "onClick", "type", "size", "children", "rtl"]);
    return /* @__PURE__ */ React.createElement(Tag$1, _extends$1$1({}, others, {
      rtl,
      disabled,
      className,
      closeArea,
      onClose,
      afterClose,
      onClick: onClick4,
      type,
      size,
      closable: true
    }), children);
  };
  return Closeable2;
}(Component), _class$H.propTypes = {
  disabled: propTypes$1.bool,
  className: propTypes$1.any,
  closeArea: propTypes$1.oneOf(["tag", "tail"]),
  onClose: propTypes$1.func,
  afterClose: propTypes$1.func,
  onClick: propTypes$1.func,
  type: propTypes$1.oneOf(["normal", "primary"]),
  size: propTypes$1.oneOf(["small", "medium", "large"]),
  children: propTypes$1.any,
  rtl: propTypes$1.bool
}, _class$H.defaultProps = {
  disabled: false,
  type: "normal"
}, _temp$F);
Closeable.displayName = "Closeable";
var ConfigTag = _ConfigProvider.config(Tag$1, {
  transfrom: function transfrom(props, deprecated2) {
    var shape = props.shape, type = props.type;
    if (shape === "selectable") {
      deprecated2("shape=selectable", "Tag.Selectable", "Tag");
    }
    if (shape === "deletable") {
      deprecated2("shape=deletable", "Tag.Closeable", "Tag");
    }
    if (shape === "link") {
      deprecated2("shape=link", '<Tag><a href="x">x</a></Tag>', "Tag");
    }
    if (shape === "readonly" || shape === "interactive") {
      log.warning("Warning: [ shape=" + shape + " ] is deprecated at [ Tag ]");
    }
    if (type === "secondary") {
      log.warning("Warning: [ type=secondary ] is deprecated at [ Tag ]");
    }
    ["count", "marked", "value", "onChange"].forEach(function(key) {
      if (key in props) {
        log.warning("Warning: [ " + key + " ] is deprecated at [ Tag ]");
      }
    });
    if ("selected" in props || "defaultSelected" in props) {
      log.warning("Warning: [ selected|defaultSelected  ] is deprecated at [ Tag ], use [ checked|defaultChecked ] at [ Tag.Selectable ] instead of it");
    }
    if ("closed" in props) {
      log.warning("Warning: [ closed  ] is deprecated at [ Tag ], use [ onClose ] at [ Tag.Closeable ] instead of it");
    }
    if ("onSelect" in props) {
      deprecated2("onSelect", "<Tag.Selectable onChange/>", "Tag");
    }
    if ("afterClose" in props) {
      log.warning("Warning: [ afterClose  ] is deprecated at [ Tag ], use [ afterClose ] at [ Tag.Closeable ] instead of it");
    }
    return props;
  }
});
ConfigTag.Group = _ConfigProvider.config(Group$5);
ConfigTag.Selectable = _ConfigProvider.config(Selectable$1);
ConfigTag.Closable = _ConfigProvider.config(Closeable);
ConfigTag.Closeable = ConfigTag.Closable;
function isSingle(mode) {
  return !mode || mode === "single";
}
function isNull(n2) {
  return n2 === null || n2 === void 0;
}
function escapeForReg(str2) {
  return str2.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function filter(key, item) {
  var _key = escapeForReg("" + key);
  var regExp = new RegExp("(" + _key + ")", "ig");
  return regExp.test("" + item.value) || regExp.test("" + item.label);
}
function loopMap(dataSource2, callback) {
  var result = [];
  dataSource2.forEach(function(option) {
    if (option.children) {
      var children = loopMap(option.children, callback);
      result.push(_extends$1$1({}, option, {
        children
      }));
    } else {
      var tmp = callback(option);
      tmp && result.push(tmp);
    }
  });
  return result;
}
function parseDataSourceFromChildren(children) {
  var deep = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var source = [];
  Children.forEach(children, function(child, index2) {
    if (!child) {
      return;
    }
    var type = child.type, childProps = child.props;
    var item2 = {
      deep
    };
    var isOption = false;
    var isOptionGroup = false;
    if (typeof type === "function" && type._typeMark === "next_select_option" || type === "option") {
      isOption = true;
    }
    if (typeof type === "function" && type._typeMark === "next_select_option_group" || type === "optgroup") {
      isOptionGroup = true;
    }
    if (!isOption && !isOptionGroup) {
      return;
    }
    if (isOption) {
      var isStrChild = typeof childProps.children === "string";
      item2.value = "value" in childProps ? childProps.value : "key" in childProps ? childProps.key : isStrChild ? childProps.children : "" + index2;
      item2.label = childProps.label || childProps.children || "" + item2.value;
      if ("title" in childProps) {
        item2.title = childProps.title;
      }
      childProps.disabled === true && (item2.disabled = true);
      _extends$1$1(item2, childProps["data-extra"] || {});
    } else if (isOptionGroup && deep < 1) {
      item2.label = childProps.label || "Group";
      item2.children = parseDataSourceFromChildren(childProps.children, deep + 1);
    }
    source.push(item2);
  });
  return source;
}
function normalizeDataSource(dataSource2) {
  var deep = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var showDataSourceChildren = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  var source = [];
  dataSource2.forEach(function(item, index2) {
    if (/string|boolean|number/.test(typeof item === "undefined" ? "undefined" : _typeof(item))) {
      item = {
        label: "" + item,
        value: item
      };
    }
    if (item.__isAddon) {
      return;
    }
    var item2 = {
      deep
    };
    if (Array.isArray(item.children) && deep < 1 && showDataSourceChildren) {
      item2.label = item.label || item.value || "Group " + index2;
      item2.children = normalizeDataSource(item.children, deep + 1);
    } else {
      var _item = item, value = _item.value, label = _item.label, disabled = _item.disabled, title = _item.title, others = _objectWithoutProperties$1(_item, ["value", "label", "disabled", "title"]);
      item2.value = !isNull(value) ? value : "" + index2;
      item2.label = label || "" + item2.value;
      if ("title" in item) {
        item2.title = title;
      }
      disabled === true && (item2.disabled = true);
      _extends$1$1(item2, others);
    }
    source.push(item2);
  });
  return source;
}
function flattingDataSource(dataSource2) {
  var source = [];
  dataSource2.forEach(function(item) {
    if (Array.isArray(item.children)) {
      source.push.apply(source, flattingDataSource(item.children));
    } else {
      source.push(item);
    }
  });
  return source;
}
function filterDataSource(dataSource2, key, filter2, addonKey) {
  if (!Array.isArray(dataSource2)) {
    return [];
  }
  if (typeof key === "undefined" || key === null) {
    return [].concat(dataSource2);
  }
  var addKey = true;
  var menuDataSource = loopMap(dataSource2, function(option) {
    if (key === "" + option.value) {
      addKey = false;
    }
    return filter2(key, option) && !option.__isAddon && option;
  });
  if (addonKey && key && addKey) {
    menuDataSource.unshift({
      value: key,
      label: key,
      __isAddon: true
    });
  }
  return menuDataSource;
}
function getKeyItemByValue(value, valueMap) {
  var item = void 0;
  if ((typeof value === "undefined" ? "undefined" : _typeof(value)) === "object" && value.hasOwnProperty("value")) {
    item = value;
  } else {
    item = valueMap["" + value] || {
      value,
      label: value
    };
  }
  return item;
}
function getValueDataSource(value, mapValueDS, mapMenuDS) {
  if (isNull(value)) {
    return {};
  }
  var newValue = [];
  var newValueDS = [];
  var newMapValueDS = {};
  var _newMapDS = _extends$1$1({}, mapValueDS, mapMenuDS);
  if (Array.isArray(value)) {
    value.forEach(function(v2) {
      var item2 = getKeyItemByValue(v2, _newMapDS);
      newValueDS.push(item2);
      newMapValueDS["" + item2.value] = item2;
      newValue.push(item2.value);
    });
    return {
      value: newValue,
      valueDS: newValueDS,
      mapValueDS: newMapValueDS
    };
  } else {
    var _mapValueDS;
    var item = getKeyItemByValue(value, _newMapDS);
    return {
      value: item.value,
      valueDS: item,
      mapValueDS: (_mapValueDS = {}, _mapValueDS["" + item.value] = item, _mapValueDS)
    };
  }
}
function valueToSelectKey(value) {
  var val = void 0;
  if ((typeof value === "undefined" ? "undefined" : _typeof(value)) === "object" && value.hasOwnProperty("value")) {
    val = value.value;
  } else {
    val = value;
  }
  return "" + val;
}
var DataStore = function() {
  function DataStore2(options) {
    _classCallCheck(this, DataStore2);
    this.options = _extends$1$1({
      filter,
      key: void 0,
      addonKey: false,
      filterLocal: true,
      showDataSourceChildren: true
    }, options);
    this.dataSource = [];
    this.menuDataSource = [];
    this.mapDataSource = {};
    this.enabledDataSource = [];
    this.flattenDataSource = [];
  }
  DataStore2.prototype.setOptions = function setOptions(options) {
    _extends$1$1(this.options, options);
  };
  DataStore2.prototype.updateByDS = function updateByDS(dataSource2) {
    var isChildren = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    this.dataSource = isChildren ? parseDataSourceFromChildren(dataSource2) : normalizeDataSource(dataSource2, 0, this.options.showDataSourceChildren);
    return this.updateAll();
  };
  DataStore2.prototype.updateByKey = function updateByKey(key) {
    if (key === this.options.key) {
      return this.getMenuDS();
    }
    this.options.key = key;
    return this.updateAll();
  };
  DataStore2.prototype.getOriginDS = function getOriginDS() {
    return this.dataSource;
  };
  DataStore2.prototype.getMenuDS = function getMenuDS() {
    return this.menuDataSource;
  };
  DataStore2.prototype.getFlattenDS = function getFlattenDS() {
    return this.flattenDataSource;
  };
  DataStore2.prototype.getEnableDS = function getEnableDS() {
    return this.enabledDataSource;
  };
  DataStore2.prototype.getMapDS = function getMapDS() {
    return this.mapDataSource;
  };
  DataStore2.prototype.updateAll = function updateAll() {
    var _this2 = this;
    var _options = this.options, key = _options.key, filter2 = _options.filter, filterLocal = _options.filterLocal, showDataSourceChildren = _options.showDataSourceChildren;
    this.menuDataSource = filterDataSource(this.dataSource, filterLocal ? key : "", filter2, this.options.addonKey);
    this.flattenDataSource = showDataSourceChildren ? flattingDataSource(this.menuDataSource) : this.menuDataSource;
    this.mapDataSource = {};
    this.flattenDataSource.forEach(function(item) {
      _this2.mapDataSource["" + item.value] = item;
    });
    this.enabledDataSource = this.flattenDataSource.filter(function(item) {
      return !item.disabled;
    });
    return this.menuDataSource;
  };
  return DataStore2;
}();
var _class$I, _temp$G;
var NOOP = function NOOP2() {
};
var MAX_SYNC_UPDATES = 40;
var isEqualSubset = function isEqualSubset2(a, b2) {
  for (var key in b2) {
    if (a[key] !== b2[key]) {
      return false;
    }
  }
  return true;
};
var getOffset$1 = function getOffset2(el) {
  var offset = el.clientLeft || 0;
  do {
    offset += el.offsetTop || 0;
    el = el.offsetParent;
  } while (el);
  return offset;
};
var constrain = function constrain2(from, size, _ref) {
  var children = _ref.children, minSize = _ref.minSize;
  var length = children && children.length;
  size = Math.max(size, minSize);
  if (size > length) {
    size = length;
  }
  from = from ? Math.max(Math.min(from, length - size), 0) : 0;
  return {
    from,
    size
  };
};
var VirtualList = (_temp$G = _class$I = function(_Component) {
  _inherits(VirtualList2, _Component);
  function VirtualList2(props) {
    _classCallCheck(this, VirtualList2);
    var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));
    var jumpIndex = props.jumpIndex;
    var _constrain = constrain(jumpIndex, 0, props), from = _constrain.from, size = _constrain.size;
    _this2.state = {
      from,
      size
    };
    _this2.cache = {};
    _this2.cacheAdd = {};
    _this2.scrollTo = _this2.scrollTo.bind(_this2);
    _this2.cachedScroll = null;
    _this2.unstable = false;
    _this2.updateCounter = 0;
    return _this2;
  }
  VirtualList2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var from = prevState.from, size = prevState.size;
    return constrain(from, size, nextProps);
  };
  VirtualList2.prototype.componentDidMount = function componentDidMount() {
    var jumpIndex = this.props.jumpIndex;
    this.updateFrameAndClearCache = this.updateFrameAndClearCache.bind(this);
    events.on(window, "resize", this.updateFrameAndClearCache);
    this.updateFrame(this.scrollTo.bind(this, jumpIndex));
  };
  VirtualList2.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    var _this2 = this;
    var oldIndex = prevProps.jumpIndex;
    var newIndex = this.props.jumpIndex;
    if (oldIndex !== newIndex) {
      this.updateFrame(this.scrollTo.bind(this, newIndex));
    }
    if (this.unstable) {
      return;
    }
    if (++this.updateCounter > MAX_SYNC_UPDATES) {
      this.unstable = true;
    }
    if (!this.updateCounterTimeoutId) {
      this.updateCounterTimeoutId = setTimeout(function() {
        _this2.updateCounter = 0;
        delete _this2.updateCounterTimeoutId;
      }, 0);
    }
    this.updateFrame();
  };
  VirtualList2.prototype.componentWillUnmount = function componentWillUnmount() {
    events.off(window, "resize", this.updateFrameAndClearCache);
    events.off(this.scrollParent, "scroll", this.updateFrameAndClearCache);
    events.off(this.scrollParent, "mousewheel", NOOP);
  };
  VirtualList2.prototype.maybeSetState = function maybeSetState(b2, cb) {
    if (isEqualSubset(this.state, b2)) {
      return cb();
    }
    this.setState(b2, cb);
  };
  VirtualList2.prototype.getEl = function getEl() {
    return this.el || this.items || {};
  };
  VirtualList2.prototype.getScrollParent = function getScrollParent() {
    var el = this.getEl();
    el = el.parentElement;
    switch (window.getComputedStyle(el).overflowY) {
      case "auto":
      case "scroll":
      case "overlay":
      case "visible":
        return el;
    }
    return window;
  };
  VirtualList2.prototype.getScroll = function getScroll2() {
    var scrollParent = this.scrollParent;
    var scrollKey = "scrollTop";
    var actual = scrollParent === window ? document.body[scrollKey] || document.documentElement[scrollKey] : scrollParent[scrollKey];
    var max2 = this.getScrollSize() - this.getViewportSize();
    var scroll = Math.max(0, Math.min(actual, max2));
    var el = this.getEl();
    this.cachedScroll = getOffset$1(scrollParent) + scroll - getOffset$1(el);
    return this.cachedScroll;
  };
  VirtualList2.prototype.setScroll = function setScroll(offset) {
    var scrollParent = this.scrollParent;
    offset += getOffset$1(this.getEl());
    if (scrollParent === window) {
      return window.scrollTo(0, offset);
    }
    offset -= getOffset$1(this.scrollParent);
    scrollParent.scrollTop = offset;
  };
  VirtualList2.prototype.getViewportSize = function getViewportSize() {
    var scrollParent = this.scrollParent;
    return scrollParent === window ? window.innerHeight : scrollParent.clientHeight;
  };
  VirtualList2.prototype.getScrollSize = function getScrollSize() {
    var scrollParent = this.scrollParent;
    var _document = document, body = _document.body, documentElement = _document.documentElement;
    var key = "scrollHeight";
    return scrollParent === window ? Math.max(body[key], documentElement[key]) : scrollParent[key];
  };
  VirtualList2.prototype.getStartAndEnd = function getStartAndEnd() {
    var threshold = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props.threshold;
    var scroll = this.getScroll();
    var trueScroll = scroll;
    var start = Math.max(0, trueScroll - threshold);
    var end = trueScroll + this.getViewportSize() + threshold;
    return {
      start,
      end
    };
  };
  VirtualList2.prototype.updateFrameAndClearCache = function updateFrameAndClearCache(cb) {
    this.cachedScroll = null;
    return this.updateFrame(cb);
  };
  VirtualList2.prototype.updateFrame = function updateFrame(cb) {
    this.updateScrollParent();
    if (typeof cb !== "function") {
      cb = NOOP;
    }
    return this.updateVariableFrame(cb);
  };
  VirtualList2.prototype.updateScrollParent = function updateScrollParent() {
    var prev = this.scrollParent;
    this.scrollParent = this.getScrollParent();
    if (prev === this.scrollParent) {
      return;
    }
    if (prev) {
      events.off(prev, "scroll", this.updateFrameAndClearCache);
      events.off(prev, "mousewheel", NOOP);
    }
    events.on(this.scrollParent, "scroll", this.updateFrameAndClearCache);
    events.on(this.scrollParent, "mousewheel", NOOP);
  };
  VirtualList2.prototype.updateVariableFrame = function updateVariableFrame(cb) {
    if (!this.props.itemSizeGetter) {
      this.cacheSizes();
    }
    var _getStartAndEnd = this.getStartAndEnd(), start = _getStartAndEnd.start, end = _getStartAndEnd.end;
    var _props = this.props, pageSize = _props.pageSize, children = _props.children;
    var length = children.length;
    var space = 0;
    var from = 0;
    var size = 0;
    var maxFrom = length - 1;
    while (from < maxFrom) {
      var itemSize = this.getSizeOf(from);
      if (itemSize === null || itemSize === void 0 || space + itemSize > start) {
        break;
      }
      space += itemSize;
      ++from;
    }
    var maxSize = length - from;
    while (size < maxSize && space < end) {
      var _itemSize = this.getSizeOf(from + size);
      if (_itemSize === null || _itemSize === void 0) {
        size = Math.min(size + pageSize, maxSize);
        break;
      }
      space += _itemSize;
      ++size;
    }
    this.maybeSetState({
      from,
      size
    }, cb);
  };
  VirtualList2.prototype.getSpaceBefore = function getSpaceBefore(index2) {
    var cache2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!index2) {
      return 0;
    }
    if (cache2[index2] !== null && cache2[index2] !== void 0) {
      return cache2[index2] || 0;
    }
    var from = index2;
    while (from > 0 && (cache2[from] === null || cache2[from] === void 0)) {
      from--;
    }
    var space = cache2[from] || 0;
    for (var i = from; i < index2; ++i) {
      cache2[i] = space;
      var itemSize = this.getSizeOf(i);
      if (itemSize === null || itemSize === void 0) {
        break;
      }
      space += itemSize;
    }
    cache2[index2] = space;
    return cache2[index2] || 0;
  };
  VirtualList2.prototype.cacheSizes = function cacheSizes() {
    var cache2 = this.cache;
    var from = this.state.from;
    var _items = this.items, children = _items.children, _items$props = _items.props, props = _items$props === void 0 ? {} : _items$props;
    var itemEls = children || props.children || [];
    try {
      for (var i = 0, l2 = itemEls.length; i < l2; ++i) {
        var ulRef = findDOMNode(this.items);
        var height = ulRef.children[i].offsetHeight;
        if (height > 0) {
          cache2[from + i] = height;
        }
      }
    } catch (error) {
    }
  };
  VirtualList2.prototype.getSizeOf = function getSizeOf(index2) {
    var _this3 = this;
    var cache2 = this.cache;
    var _props2 = this.props, itemSizeGetter = _props2.itemSizeGetter, jumpIndex = _props2.jumpIndex;
    if (index2 in cache2) {
      return cache2[index2];
    }
    if (itemSizeGetter) {
      return itemSizeGetter(index2);
    }
    var height = Object.keys(this.cache).map(function(key) {
      return _this3.cache[key];
    }).pop();
    if (!this.defaultItemHeight && jumpIndex > -1 && height) {
      this.defaultItemHeight = height;
    }
    if (this.defaultItemHeight) {
      return this.defaultItemHeight;
    }
  };
  VirtualList2.prototype.scrollTo = function scrollTo(index2) {
    this.setScroll(this.getSpaceBefore(index2, this.cacheAdd));
  };
  VirtualList2.prototype.renderMenuItems = function renderMenuItems() {
    var _this4 = this;
    var _props3 = this.props, children = _props3.children, itemsRenderer3 = _props3.itemsRenderer;
    var _state = this.state, from = _state.from, size = _state.size;
    var items = [];
    for (var i = 0; i < size; ++i) {
      items.push(children[from + i]);
    }
    return itemsRenderer3(items, function(c2) {
      _this4.items = c2;
      return _this4.items;
    });
  };
  VirtualList2.prototype.render = function render2() {
    var _cx, _this5 = this;
    var _props4 = this.props, _props4$children = _props4.children, children = _props4$children === void 0 ? [] : _props4$children, prefix2 = _props4.prefix, className = _props4.className;
    var length = children.length;
    var from = this.state.from;
    var items = this.renderMenuItems();
    var style = {
      position: "relative"
    };
    var size = this.getSpaceBefore(length, this.cacheAdd);
    if (size) {
      style.height = size;
    }
    var offset = this.getSpaceBefore(from, this.cacheAdd);
    var transform10 = "translate(0px, " + offset + "px)";
    var listStyle = {
      msTransform: transform10,
      WebkitTransform: transform10,
      transform: transform10
    };
    var cls = classnames((_cx = {}, _cx[prefix2 + "virtual-list-wrapper"] = true, _cx[className] = !!className, _cx));
    return /* @__PURE__ */ React.createElement("div", {
      className: cls,
      style,
      ref: function ref(c2) {
        _this5.el = c2;
        return _this5.el;
      }
    }, /* @__PURE__ */ React.createElement("div", {
      style: listStyle
    }, items));
  };
  return VirtualList2;
}(Component), _class$I.displayName = "VirtualList", _class$I.propTypes = {
  prefix: propTypes$1.string,
  children: propTypes$1.any,
  minSize: propTypes$1.number,
  pageSize: propTypes$1.number,
  itemsRenderer: propTypes$1.func,
  threshold: propTypes$1.number,
  itemSizeGetter: propTypes$1.func,
  jumpIndex: propTypes$1.number,
  className: propTypes$1.string
}, _class$I.defaultProps = {
  prefix: "next-",
  itemsRenderer: function itemsRenderer(items, ref) {
    return /* @__PURE__ */ React.createElement("ul", {
      ref
    }, items);
  },
  minSize: 1,
  pageSize: 10,
  jumpIndex: 0,
  threshold: 100
}, _temp$G);
VirtualList.displayName = "VirtualList";
var VirtualList$1 = polyfill(VirtualList);
var VirtualList$2 = _ConfigProvider.config(VirtualList$1);
var _class$J, _temp$H;
var Popup$5 = Overlay$2.Popup;
var MenuItem = Menu$3.Item, MenuGroup = Menu$3.Group;
var noop$f = func.noop, bindCtx$d = func.bindCtx, makeChain$6 = func.makeChain;
function preventDefault$2(e2) {
  e2.preventDefault();
}
var Base$3 = (_temp$H = _class$J = function(_React$Component) {
  _inherits(Base2, _React$Component);
  function Base2(props) {
    _classCallCheck(this, Base2);
    var _this2 = _possibleConstructorReturn(this, _React$Component.call(this, props));
    _this2.saveSelectRef = function(ref) {
      _this2.selectDOM = findDOMNode(ref);
    };
    _this2.saveInputRef = function(ref) {
      if (ref && ref.getInstance()) {
        _this2.inputRef = ref.getInstance();
      }
    };
    _this2.savePopupRef = function(ref) {
      _this2.popupRef = ref;
      if (_this2.props.popupProps && typeof _this2.props.popupProps.ref === "function") {
        _this2.props.popupProps.ref(ref);
      }
    };
    _this2.dataStore = new DataStore({
      filter: props.filter,
      filterLocal: props.filterLocal,
      showDataSourceChildren: props.showDataSourceChildren
    });
    _this2.state = {
      dataStore: _this2.dataStore,
      value: "value" in props ? props.value : props.defaultValue,
      visible: "visible" in props ? props.visible : props.defaultVisible,
      dataSource: _this2.setDataSource(_this2.props),
      width: 100,
      highlightKey: "highlightKey" in props ? props.highlightKey : props.defaultHighlightKey,
      srReader: ""
    };
    bindCtx$d(_this2, ["handleMenuBodyClick", "handleVisibleChange", "focusInput", "beforeOpen", "beforeClose", "afterClose", "handleResize"]);
    return _this2;
  }
  Base2.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;
    setTimeout(function() {
      return _this2.syncWidth();
    }, 0);
    events.on(window, "resize", this.handleResize);
  };
  Base2.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (prevProps.label !== this.props.label || prevState.value !== this.state.value) {
      this.syncWidth();
    }
  };
  Base2.prototype.componentWillUnmount = function componentWillUnmount() {
    events.off(window, "resize", this.handleResize);
    clearTimeout(this.resizeTimeout);
  };
  Base2.prototype.syncWidth = function syncWidth() {
    var _this3 = this;
    var _props2 = this.props, popupStyle = _props2.popupStyle, popupProps = _props2.popupProps;
    if (popupStyle && "width" in popupStyle || popupProps && popupProps.style && "width" in popupProps.style) {
      return;
    }
    var width = dom.getStyle(this.selectDOM, "width");
    if (width && this.width !== width) {
      this.width = width;
      if (this.popupRef && this.shouldAutoWidth()) {
        setTimeout(function() {
          if (_this3.popupRef && _this3.popupRef.getInstance().overlay) {
            dom.setStyle(_this3.popupRef.getInstance().overlay.getInstance().getContentNode(), "width", _this3.width);
          }
        }, 0);
      }
    }
  };
  Base2.prototype.handleResize = function handleResize() {
    var _this4 = this;
    clearTimeout(this.resizeTimeout);
    if (this.state.visible) {
      this.resizeTimeout = setTimeout(function() {
        _this4.syncWidth();
      }, 200);
    }
  };
  Base2.prototype.setDataSource = function setDataSource(props) {
    var dataSource2 = props.dataSource, children = props.children;
    if (Children.count(children)) {
      return this.dataStore.updateByDS(children, true);
    } else if (Array.isArray(dataSource2)) {
      return this.dataStore.updateByDS(dataSource2, false);
    }
    return [];
  };
  Base2.prototype.setVisible = function setVisible(visible, type) {
    if (this.props.disabled || this.state.visible === visible) {
      return;
    }
    if (!("visible" in this.props)) {
      this.setState({
        visible
      });
    }
    this.props.onVisibleChange(visible, type);
  };
  Base2.prototype.setFirstHightLightKeyForMenu = function setFirstHightLightKeyForMenu() {
    if (!this.props.autoHighlightFirstItem) {
      return;
    }
    if (this.dataStore.getMenuDS().length && this.dataStore.getEnableDS().length) {
      var highlightKey = "" + this.dataStore.getEnableDS()[0].value;
      this.setState({
        highlightKey
      });
      this.props.onToggleHighlightItem(highlightKey, "autoFirstItem");
    }
  };
  Base2.prototype.handleChange = function handleChange(value) {
    var _props3;
    if (!("value" in this.props)) {
      this.setState({
        value
      });
    }
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    (_props3 = this.props).onChange.apply(_props3, [value].concat(args));
  };
  Base2.prototype.handleMenuBodyClick = function handleMenuBodyClick(e2) {
    this.focusInput(e2);
  };
  Base2.prototype.toggleHighlightItem = function toggleHighlightItem(dir) {
    if (!this.state.visible) {
      this.setVisible(true, "enter");
      return;
    }
    var maxCount = this.dataStore.getEnableDS().length;
    if (!maxCount) {
      return false;
    }
    var highlightKey = this.state.highlightKey;
    var highlightIndex = -1;
    highlightKey !== null && this.dataStore.getEnableDS().some(function(item, index2) {
      if ("" + item.value === highlightKey) {
        highlightIndex = index2;
      }
      return highlightIndex > -1;
    });
    highlightIndex += dir;
    if (highlightIndex < 0) {
      highlightIndex = maxCount - 1;
    }
    if (highlightIndex >= maxCount) {
      highlightIndex = 0;
    }
    var highlightItem = this.dataStore.getEnableDS()[highlightIndex];
    highlightKey = highlightItem ? "" + highlightItem.value : null;
    this.setState({
      highlightKey,
      srReader: highlightItem.label
    });
    this.scrollMenuIntoView();
    return highlightItem;
  };
  Base2.prototype.scrollMenuIntoView = function scrollMenuIntoView() {
    var _this5 = this;
    var prefix2 = this.props.prefix;
    clearTimeout(this.highlightTimer);
    this.highlightTimer = setTimeout(function() {
      try {
        var menuNode = findDOMNode(_this5.menuRef);
        var itemNode = menuNode.querySelector("." + prefix2 + "select-menu-item." + prefix2 + "focused");
        itemNode && itemNode.scrollIntoViewIfNeeded();
      } catch (ex) {
      }
    });
  };
  Base2.prototype.renderMenuHeader = function renderMenuHeader() {
    var menuProps = this.props.menuProps;
    if (menuProps && "header" in menuProps) {
      return menuProps.header;
    }
    return null;
  };
  Base2.prototype.handleSelect = function handleSelect() {
  };
  Base2.prototype.renderMenu = function renderMenu() {
    var _classNames, _this6 = this;
    var _props4 = this.props, prefix2 = _props4.prefix, mode = _props4.mode, locale = _props4.locale, notFoundContent = _props4.notFoundContent, useVirtual = _props4.useVirtual, menuProps = _props4.menuProps;
    var _state = this.state, dataSource2 = _state.dataSource, highlightKey = _state.highlightKey;
    var value = this.state.value;
    var selectedKeys = void 0;
    if (isNull(value) || value.length === 0 || this.isAutoComplete) {
      selectedKeys = [];
    } else if (isSingle(mode)) {
      selectedKeys = [valueToSelectKey(value)];
    } else {
      selectedKeys = [].concat(value).map(function(n2) {
        return valueToSelectKey(n2);
      });
    }
    var children = this.renderMenuItem(dataSource2);
    var menuClassName = classnames((_classNames = {}, _classNames[prefix2 + "select-menu"] = true, _classNames[prefix2 + "select-menu-empty"] = !children || !children.length, _classNames));
    if (!children || !children.length) {
      children = /* @__PURE__ */ React.createElement("span", {
        className: prefix2 + "select-menu-empty-content"
      }, notFoundContent || locale.notFoundContent);
    }
    var customProps = _extends$1$1({}, menuProps, {
      children,
      role: "listbox",
      selectedKeys,
      focusedKey: highlightKey,
      focusable: false,
      selectMode: isSingle(mode) ? "single" : "multiple",
      onSelect: this.handleMenuSelect,
      onItemClick: this.handleItemClick,
      header: this.renderMenuHeader(),
      onClick: this.handleMenuBodyClick,
      onMouseDown: preventDefault$2,
      className: menuClassName
    });
    var menuStyle = this.shouldAutoWidth() ? {
      width: this.width
    } : {
      minWidth: this.width
    };
    return useVirtual && children.length ? /* @__PURE__ */ React.createElement("div", {
      className: prefix2 + "select-menu-wrapper",
      style: _extends$1$1({
        position: "relative"
      }, menuStyle)
    }, /* @__PURE__ */ React.createElement(VirtualList$2, {
      itemsRenderer: function itemsRenderer3(items, _ref) {
        return /* @__PURE__ */ React.createElement(Menu$3, _extends$1$1({
          ref: function ref(c2) {
            _ref(c2);
            _this6.menuRef = c2;
          },
          flatenContent: true
        }, customProps), items);
      }
    }, children)) : /* @__PURE__ */ React.createElement(Menu$3, _extends$1$1({}, customProps, {
      style: menuStyle
    }));
  };
  Base2.prototype.renderMenuItem = function renderMenuItem(dataSource2) {
    var _this7 = this;
    var _props5 = this.props, prefix2 = _props5.prefix, itemRender3 = _props5.itemRender, showDataSourceChildren = _props5.showDataSourceChildren;
    var searchKey = void 0;
    if (this.isAutoComplete) {
      searchKey = this.state.value;
    } else {
      searchKey = this.state.searchValue;
    }
    return dataSource2.map(function(item, index2) {
      if (!item) {
        return null;
      }
      if (Array.isArray(item.children) && showDataSourceChildren) {
        return /* @__PURE__ */ React.createElement(MenuGroup, {
          key: index2,
          label: item.label
        }, _this7.renderMenuItem(item.children));
      } else {
        var itemProps = {
          role: "option",
          key: item.value,
          className: prefix2 + "select-menu-item",
          disabled: item.disabled
        };
        if ("title" in item) {
          itemProps.title = item.title;
        }
        return /* @__PURE__ */ React.createElement(MenuItem, itemProps, itemRender3(item, searchKey));
      }
    });
  };
  Base2.prototype.focusInput = function focusInput() {
    this.inputRef.focus();
  };
  Base2.prototype.focus = function focus2() {
    var _inputRef;
    (_inputRef = this.inputRef).focus.apply(_inputRef, arguments);
  };
  Base2.prototype.beforeOpen = function beforeOpen() {
    var _state2 = this.state, value = _state2.value, highlightKey = _state2.highlightKey;
    if (this.props.mode === "single" && !value && !highlightKey) {
      this.setFirstHightLightKeyForMenu();
    }
    this.syncWidth();
  };
  Base2.prototype.beforeClose = function beforeClose() {
  };
  Base2.prototype.afterClose = function afterClose() {
  };
  Base2.prototype.shouldAutoWidth = function shouldAutoWidth() {
    if (this.props.popupComponent) {
      return false;
    }
    return this.props.autoWidth;
  };
  Base2.prototype.render = function render2(props) {
    var _classNames2;
    var prefix2 = props.prefix, mode = props.mode, popupProps = props.popupProps, popupContainer = props.popupContainer, popupClassName = props.popupClassName, popupStyle = props.popupStyle, popupContent = props.popupContent, canCloseByTrigger = props.canCloseByTrigger, followTrigger = props.followTrigger, cache2 = props.cache, popupComponent = props.popupComponent, isPreview = props.isPreview, renderPreview = props.renderPreview, style = props.style, className = props.className;
    var cls = classnames((_classNames2 = {}, _classNames2[prefix2 + "select-auto-complete-menu"] = !popupContent && this.isAutoComplete, _classNames2[prefix2 + "select-" + mode + "-menu"] = !popupContent && !!mode, _classNames2), popupClassName || popupProps.className);
    if (isPreview) {
      if (this.isAutoComplete) {
        return /* @__PURE__ */ React.createElement(Input$1, {
          style,
          className,
          isPreview,
          renderPreview,
          value: this.state.value
        });
      } else {
        var valueDS = this.valueDataSource.valueDS;
        if (typeof renderPreview === "function") {
          var _classNames3;
          var previewCls = classnames((_classNames3 = {}, _classNames3[prefix2 + "form-preview"] = true, _classNames3[className] = !!className, _classNames3));
          return /* @__PURE__ */ React.createElement("div", {
            style,
            className: previewCls
          }, renderPreview(valueDS, this.props));
        } else {
          var fillProps = this.props.fillProps;
          if (mode === "single") {
            return /* @__PURE__ */ React.createElement(Input$1, {
              style,
              className,
              isPreview,
              value: fillProps ? valueDS[fillProps] : valueDS.label
            });
          } else {
            return /* @__PURE__ */ React.createElement(Input$1, {
              style,
              className,
              isPreview,
              value: valueDS.map(function(i) {
                return i.label;
              }).join(", ")
            });
          }
        }
      }
    }
    var _props = _extends$1$1({
      triggerType: "click",
      autoFocus: !!this.props.popupAutoFocus,
      cache: cache2
    }, popupProps, {
      beforeOpen: makeChain$6(this.beforeOpen, popupProps.beforeOpen),
      beforeClose: makeChain$6(this.beforeClose, popupProps.beforeClose),
      afterClose: makeChain$6(this.afterClose, popupProps.afterClose),
      canCloseByTrigger,
      followTrigger,
      visible: this.state.visible,
      onVisibleChange: this.handleVisibleChange,
      shouldUpdatePosition: true,
      container: popupContainer || popupProps.container,
      className: cls,
      style: popupStyle || popupProps.style
    });
    var Tag2 = popupComponent ? popupComponent : Popup$5;
    return /* @__PURE__ */ React.createElement(Tag2, _extends$1$1({}, _props, {
      trigger: this.renderSelect(),
      ref: this.savePopupRef
    }), popupContent ? /* @__PURE__ */ React.createElement("div", {
      className: prefix2 + "select-popup-wrap",
      style: this.shouldAutoWidth() ? {
        width: this.width
      } : {}
    }, popupContent) : this.renderMenu());
  };
  return Base2;
}(React.Component), _class$J.propTypes = {
  prefix: propTypes$1.string,
  size: propTypes$1.oneOf(["small", "medium", "large"]),
  value: propTypes$1.any,
  defaultValue: propTypes$1.any,
  placeholder: propTypes$1.string,
  autoWidth: propTypes$1.bool,
  label: propTypes$1.node,
  hasClear: propTypes$1.bool,
  state: propTypes$1.oneOf(["error", "loading"]),
  readOnly: propTypes$1.bool,
  disabled: propTypes$1.bool,
  visible: propTypes$1.bool,
  defaultVisible: propTypes$1.bool,
  onVisibleChange: propTypes$1.func,
  popupContainer: propTypes$1.any,
  popupClassName: propTypes$1.any,
  popupStyle: propTypes$1.object,
  popupProps: propTypes$1.object,
  followTrigger: propTypes$1.bool,
  popupContent: propTypes$1.node,
  menuProps: propTypes$1.object,
  filterLocal: propTypes$1.bool,
  filter: propTypes$1.func,
  defaultHighlightKey: propTypes$1.string,
  highlightKey: propTypes$1.string,
  onToggleHighlightItem: propTypes$1.func,
  autoHighlightFirstItem: propTypes$1.bool,
  useVirtual: propTypes$1.bool,
  className: propTypes$1.any,
  children: propTypes$1.any,
  dataSource: propTypes$1.array,
  itemRender: propTypes$1.func,
  mode: propTypes$1.string,
  notFoundContent: propTypes$1.node,
  locale: propTypes$1.object,
  rtl: propTypes$1.bool,
  popupComponent: propTypes$1.any,
  isPreview: propTypes$1.bool,
  renderPreview: propTypes$1.func,
  showDataSourceChildren: propTypes$1.bool
}, _class$J.defaultProps = {
  prefix: "next-",
  size: "medium",
  autoWidth: true,
  onChange: noop$f,
  onVisibleChange: noop$f,
  onToggleHighlightItem: noop$f,
  popupProps: {},
  filterLocal: true,
  filter,
  itemRender: function itemRender(item) {
    return item.label || item.value;
  },
  locale: zhCN.Select,
  autoHighlightFirstItem: true,
  showDataSourceChildren: true,
  defaultHighlightKey: null
}, _temp$H);
Base$3.displayName = "Base";
var _class$K, _temp$I;
var bindCtx$e = func.bindCtx, noop$g = func.noop;
var isIE9 = env$1.ieVersion === 9;
var Select = (_temp$I = _class$K = function(_Base) {
  _inherits(Select2, _Base);
  function Select2(props) {
    _classCallCheck(this, Select2);
    var _this2 = _possibleConstructorReturn(this, _Base.call(this, props));
    _this2.handleWrapClick = function(e2) {
      if (e2.target.nodeName !== "INPUT") {
        e2.preventDefault();
      }
      _this2.focusInput();
    };
    _this2.handleArrowClick = function(e2) {
      e2.preventDefault();
      _this2.focusInput();
      _this2.state.visible && _this2.hasSearch() && _this2.setVisible(false);
    };
    _this2.handleClear = function(e2) {
      e2.stopPropagation();
      _this2.handleChange(void 0, "clear");
    };
    _this2.valueDataSource = {
      valueDS: [],
      mapValueDS: {}
    };
    var searchValue = "searchValue" in props ? props.searchValue : "";
    _this2.dataStore.setOptions({
      key: searchValue,
      addonKey: props.mode === "tag"
    });
    _extends$1$1(_this2.state, {
      searchValue,
      dataSource: _this2.setDataSource(props)
    });
    if (typeof _this2.state.value !== "undefined") {
      _this2.valueDataSource = getValueDataSource(_this2.state.value, _this2.valueDataSource.mapValueDS, _this2.dataStore.getMapDS());
    }
    bindCtx$e(_this2, ["handleMenuSelect", "handleItemClick", "handleSearch", "handleSearchKeyDown", "handleSelectAll", "maxTagPlaceholder"]);
    return _this2;
  }
  Select2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var state = {};
    if ("value" in nextProps && nextProps.value !== prevState.value) {
      _extends$1$1(state, {
        value: nextProps.value
      });
    }
    if ("highlightKey" in nextProps && nextProps.highlightKey !== prevState.highlightKey) {
      _extends$1$1(state, {
        highlightKey: nextProps.highlightKey
      });
    }
    if ("searchValue" in nextProps && nextProps.searchValue !== prevState.searchValue) {
      var searchValue = nextProps.searchValue;
      _extends$1$1(state, {
        searchValue: searchValue === void 0 || searchValue === null ? "" : searchValue
      });
    }
    if ("visible" in nextProps && nextProps.visible !== prevState.visible) {
      _extends$1$1(state, {
        visible: nextProps.visible
      });
    }
    if (Object.keys(state).length) {
      return state;
    }
    return null;
  };
  Select2.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    var props = this.props;
    if ("searchValue" in props && this.state.searchValue !== prevState.searchValue) {
      this.dataStore.setOptions({
        key: this.state.searchValue
      });
    }
    if (props.mode !== prevProps.mode) {
      this.dataStore.setOptions({
        addonKey: props.mode === "tag"
      });
    }
    if (props.mode !== prevProps.mode) {
      this.dataStore.setOptions({
        addonKey: props.mode === "tag"
      });
    }
    if (props.filter !== prevProps.filter) {
      this.dataStore.setOptions({
        filter: props.filter
      });
    }
    if (props.filterLocal !== prevProps.filterLocal) {
      this.dataStore.setOptions({
        filterLocal: props.filterLocal
      });
    }
    if (prevProps.children !== props.children || prevProps.dataSource !== props.dataSource) {
      this.setState({
        dataSource: this.setDataSource(props)
      });
      if (!props.popupContent) {
        this.setFirstHightLightKeyForMenu();
      }
    }
    if ("value" in props) {
      this.valueDataSource = getValueDataSource(props.value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
      this.updateSelectAllYet(this.valueDataSource.value);
    } else if ("defaultValue" in props && props.defaultValue === this.valueDataSource.value && (props.children !== prevProps.children || props.dataSource !== prevProps.dataSource)) {
      this.valueDataSource = getValueDataSource(props.defaultValue, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
    }
    if (prevProps.label !== this.props.label || prevState.value !== this.state.value || props.searchValue !== this.state.searchValue) {
      this.syncWidth();
    }
  };
  Select2.prototype.componentDidMount = function componentDidMount() {
    if (isIE9) {
      this.ie9Hack();
    }
    _Base.prototype.componentDidMount.call(this);
  };
  Select2.prototype.ie9Hack = function ie9Hack() {
    try {
      var width = this.selectDOM.currentStyle.width;
      this.setState({
        fixWidth: width !== "auto"
      });
    } catch (e2) {
    }
  };
  Select2.prototype.useDetailValue = function useDetailValue() {
    var _props = this.props, popupContent = _props.popupContent, useDetailValue2 = _props.useDetailValue, dataSource2 = _props.dataSource;
    return useDetailValue2 || popupContent && !dataSource2;
  };
  Select2.prototype.hasSearch = function hasSearch() {
    var _props2 = this.props, showSearch = _props2.showSearch, mode = _props2.mode;
    return showSearch || mode === "tag";
  };
  Select2.prototype.handleMenuSelect = function handleMenuSelect(keys3, item) {
    var _props3 = this.props, mode = _props3.mode, readOnly = _props3.readOnly, disabled = _props3.disabled;
    if (readOnly || disabled) {
      return false;
    }
    var isSingle2 = mode === "single";
    if (isSingle2) {
      return this.handleSingleSelect(keys3[0], "itemClick");
    } else {
      return this.handleMultipleSelect(keys3, "itemClick", item.props && item.props._key);
    }
  };
  Select2.prototype.handleItemClick = function handleItemClick() {
    if (!this.props.popupAutoFocus) {
      this.focusInput();
    }
  };
  Select2.prototype.handleSingleSelect = function handleSingleSelect(key, triggerType) {
    var cacheValue = this.props.cacheValue;
    var itemObj = getValueDataSource(key, cacheValue ? this.valueDataSource.mapValueDS : {}, this.dataStore.getMapDS());
    this.valueDataSource = itemObj;
    this.setVisible(false, triggerType);
    if (this.useDetailValue()) {
      return this.handleChange(itemObj.valueDS, triggerType);
    } else {
      this.handleChange(itemObj.value, triggerType, itemObj.valueDS);
    }
    this.setState({
      highlightKey: key
    });
    if (!("searchValue" in this.props) && this.state.searchValue) {
      this.handleSearchClear(triggerType);
    }
  };
  Select2.prototype.handleMultipleSelect = function handleMultipleSelect(keys3, triggerType, key, keepSearchValue) {
    var _this2 = this;
    var itemObj = getValueDataSource(keys3, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
    var _props4 = this.props, cacheValue = _props4.cacheValue, mode = _props4.mode, hiddenSelected = _props4.hiddenSelected;
    if (cacheValue || mode === "tag") {
      this.valueDataSource = itemObj;
    }
    if (hiddenSelected) {
      this.setVisible(false, triggerType);
    }
    key && this.state.visible && this.setState({
      highlightKey: key
    });
    if (this.useDetailValue()) {
      this.handleChange(itemObj.valueDS, triggerType);
    } else {
      this.handleChange(itemObj.value, triggerType, itemObj.valueDS);
    }
    this.updateSelectAllYet(itemObj.value);
    if (!("searchValue" in this.props) && this.state.searchValue && !keepSearchValue) {
      setTimeout(function() {
        _this2.handleSearchClear(triggerType);
      });
    }
  };
  Select2.prototype.updateSelectAllYet = function updateSelectAllYet(value) {
    var _this3 = this;
    this.selectAllYet = false;
    if (this.props.hasSelectAll && Array.isArray(value)) {
      var selectAllValues = this.dataStore.getEnableDS().map(function(item) {
        return item.value;
      });
      if (selectAllValues.length <= value.length) {
        this.selectAllYet = true;
        selectAllValues.forEach(function(val) {
          if (value.indexOf(val) === -1) {
            _this3.selectAllYet = false;
            return;
          }
        });
      }
    }
  };
  Select2.prototype.handleSearchValue = function handleSearchValue(value) {
    if (this.state.searchValue === value) {
      return;
    }
    var filterLocal = this.props.filterLocal;
    if (filterLocal) {
      if (!("searchValue" in this.props)) {
        this.setState({
          searchValue: value,
          dataSource: this.dataStore.updateByKey(value)
        });
        this.setFirstHightLightKeyForMenu();
      }
    } else if (!("searchValue" in this.props)) {
      this.setState({
        searchValue: value
      });
    }
  };
  Select2.prototype.handleSearch = function handleSearch(value) {
    this.handleSearchValue(value);
    if (!this.state.visible && value) {
      this.setVisible(true);
    }
    this.props.onSearch(value);
  };
  Select2.prototype.handleSearchClear = function handleSearchClear(triggerType) {
    this.handleSearchValue("");
    this.props.onSearchClear(triggerType);
  };
  Select2.prototype.handleSearchKeyDown = function handleSearchKeyDown(e2) {
    var _props5 = this.props, popupContent = _props5.popupContent, onKeyDown = _props5.onKeyDown, showSearch = _props5.showSearch, mode = _props5.mode, hasClear = _props5.hasClear, onToggleHighlightItem = _props5.onToggleHighlightItem, readOnly = _props5.readOnly, disabled = _props5.disabled;
    if (popupContent) {
      return onKeyDown(e2);
    }
    var proxy = "search";
    var hasSearch = this.hasSearch();
    switch (e2.keyCode) {
      case KEYCODE.UP:
        e2.preventDefault();
        onToggleHighlightItem(this.toggleHighlightItem(-1, e2), "up");
        break;
      case KEYCODE.DOWN:
        e2.preventDefault();
        onToggleHighlightItem(this.toggleHighlightItem(1, e2), "down");
        break;
      case KEYCODE.ENTER:
        e2.preventDefault();
        if (readOnly || disabled) {
          break;
        }
        this.chooseHighlightItem(proxy, e2);
        break;
      case KEYCODE.ESC:
        e2.preventDefault();
        this.state.visible && this.setVisible(false, "keyDown");
        break;
      case KEYCODE.SPACE:
        e2.stopPropagation();
        !hasSearch && e2.preventDefault();
        break;
      case KEYCODE.BACKSPACE:
        if (readOnly || disabled) {
          break;
        }
        if (mode === "multiple" && showSearch || mode === "tag") {
          var valueDS = this.valueDataSource.valueDS;
          if (valueDS && valueDS.length && !valueDS[valueDS.length - 1].disabled) {
            this.handleDeleteTag(e2);
          }
        } else if (mode === "single" && hasClear && !this.state.visible) {
          this.handleClear(e2);
        }
        break;
    }
    onKeyDown(e2);
  };
  Select2.prototype.chooseMultipleItem = function chooseMultipleItem(key) {
    var value = this.state.value || [];
    var keys3 = value.map(function(v2) {
      return valueToSelectKey(v2);
    });
    var keepSearchValue = false;
    var index2 = keys3.map(function(v2) {
      return "" + v2;
    }).indexOf(key);
    if (index2 > -1) {
      keys3.splice(index2, 1);
      keepSearchValue = true;
    } else {
      keys3.push(key);
    }
    this.handleMultipleSelect(keys3, "enter", null, keepSearchValue);
  };
  Select2.prototype.chooseHighlightItem = function chooseHighlightItem(proxy, e2) {
    var mode = this.props.mode;
    if (!this.state.visible) {
      if (mode === "tag" && this.state.searchValue) {
        this.chooseMultipleItem(this.state.searchValue);
      }
      return false;
    }
    var highlightKey = this.state.highlightKey;
    if (highlightKey === null || !this.dataStore.getMenuDS().length) {
      return;
    }
    if (mode === "single") {
      this.handleSingleSelect(highlightKey, "enter");
    } else {
      this.chooseMultipleItem(highlightKey);
      e2 && e2.stopPropagation();
    }
  };
  Select2.prototype.handleTagClose = function handleTagClose(item) {
    var readOnly = this.props.readOnly;
    if (readOnly)
      return false;
    if (this.useDetailValue()) {
      var value = this.state.value.filter(function(v2) {
        return item.value !== v2.value;
      });
      this.handleChange(value, "tag");
    } else {
      var _value = this.state.value.filter(function(v2) {
        return item.value !== v2;
      });
      this.handleMultipleSelect(_value, "tag");
    }
    this.props.onRemove(item);
    return false;
  };
  Select2.prototype.handleDeleteTag = function handleDeleteTag(e2) {
    var value = this.state.value;
    var searchValue = this.state.searchValue;
    if (searchValue || !value || !value.length) {
      return false;
    }
    e2.preventDefault();
    var nextValues = value.slice(0, value.length - 1);
    if (this.useDetailValue()) {
      this.handleChange(nextValues, "tag");
    } else {
      this.handleMultipleSelect(nextValues, "tag");
    }
  };
  Select2.prototype.handleSelectAll = function handleSelectAll(e2) {
    e2 && e2.preventDefault();
    var nextValues = void 0;
    if (this.selectAllYet) {
      nextValues = [];
    } else {
      nextValues = this.dataStore.getEnableDS().map(function(item) {
        return item.value;
      });
    }
    this.handleMultipleSelect(nextValues, "selectAll");
  };
  Select2.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
    this.setVisible(visible, type);
  };
  Select2.prototype.afterClose = function afterClose() {
    if (this.hasSearch()) {
      this.handleSearchClear("popupClose");
    }
  };
  Select2.prototype.maxTagPlaceholder = function maxTagPlaceholder(selectedValues, totalValues) {
    var locale = this.props.locale;
    return "" + str.template(locale.maxTagPlaceholder, {
      selected: selectedValues.length,
      total: totalValues.length
    });
  };
  Select2.prototype.renderValues = function renderValues() {
    var _this4 = this;
    var _props6 = this.props, prefix2 = _props6.prefix, mode = _props6.mode, size = _props6.size, valueRender3 = _props6.valueRender, fillProps = _props6.fillProps, disabled = _props6.disabled, maxTagCount = _props6.maxTagCount, maxTagPlaceholder = _props6.maxTagPlaceholder, tagInline = _props6.tagInline, tagClosable = _props6.tagClosable;
    var value = this.state.value;
    if (isNull(value)) {
      return null;
    }
    if (!this.useDetailValue()) {
      if (value === this.valueDataSource.value) {
        value = this.valueDataSource.valueDS;
      } else {
        value = getValueDataSource(value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS()).valueDS;
      }
    }
    if (mode === "single") {
      if (!value) {
        return null;
      }
      var retvalue = fillProps && (typeof value === "undefined" ? "undefined" : _typeof(value)) === "object" && fillProps in value ? value[fillProps] : valueRender3(value);
      return typeof retvalue === "number" ? retvalue.toString() : retvalue;
    } else if (value) {
      var limitedCountValue = value;
      var maxTagPlaceholderEl = void 0;
      var totalValue = this.dataStore.getFlattenDS();
      var holder = "maxTagPlaceholder" in this.props ? maxTagPlaceholder : this.maxTagPlaceholder;
      if (maxTagCount !== void 0 && value.length > maxTagCount && !tagInline) {
        limitedCountValue = limitedCountValue.slice(0, maxTagCount);
        maxTagPlaceholderEl = /* @__PURE__ */ React.createElement(ConfigTag, {
          key: "_count",
          type: "primary",
          size: size === "large" ? "medium" : "small",
          animation: false
        }, holder(value, totalValue));
      }
      if (value.length > 0 && tagInline) {
        maxTagPlaceholderEl = /* @__PURE__ */ React.createElement("div", {
          className: prefix2 + "select-tag-compact",
          key: "_count"
        }, holder(value, totalValue));
      }
      value = limitedCountValue;
      if (!Array.isArray(value)) {
        value = [value];
      }
      var selectedValueNodes = value.map(function(v2) {
        if (!v2) {
          return null;
        }
        var labelNode = fillProps ? v2[fillProps] : valueRender3(v2);
        return /* @__PURE__ */ React.createElement(ConfigTag, {
          key: v2.value,
          disabled: disabled || v2.disabled,
          type: "primary",
          size: size === "large" ? "medium" : "small",
          animation: false,
          onClose: _this4.handleTagClose.bind(_this4, v2),
          closable: tagClosable
        }, labelNode);
      });
      if (maxTagPlaceholderEl) {
        if (tagInline) {
          selectedValueNodes.unshift(maxTagPlaceholderEl);
        } else {
          selectedValueNodes.push(maxTagPlaceholderEl);
        }
      }
      return selectedValueNodes;
    }
    return null;
  };
  Select2.prototype.hasClear = function hasClear() {
    var _props7 = this.props, hasClear2 = _props7.hasClear, readOnly = _props7.readOnly, disabled = _props7.disabled, showSearch = _props7.showSearch;
    var _state = this.state, value = _state.value, visible = _state.visible;
    return typeof value !== "undefined" && value !== null && hasClear2 && !readOnly && !disabled && !(showSearch && visible);
  };
  Select2.prototype.renderExtraNode = function renderExtraNode() {
    var _props8 = this.props, hasArrow = _props8.hasArrow, hasClear = _props8.hasClear, prefix2 = _props8.prefix;
    var ret = [];
    if (hasArrow) {
      ret.push(/* @__PURE__ */ React.createElement("span", {
        key: "arrow",
        "aria-hidden": true,
        onClick: this.handleArrowClick,
        className: prefix2 + "select-arrow"
      }, /* @__PURE__ */ React.createElement(Icon$1, {
        type: "arrow-down",
        className: prefix2 + "select-symbol-fold"
      })));
    }
    if (hasClear) {
      ret.push(/* @__PURE__ */ React.createElement("span", {
        key: "clear",
        "aria-hidden": true,
        onClick: this.handleClear,
        className: prefix2 + "select-clear"
      }, /* @__PURE__ */ React.createElement(Icon$1, {
        type: "delete-filling"
      })));
    }
    return ret;
  };
  Select2.prototype.renderSelect = function renderSelect() {
    var _classNames, _this5 = this;
    var _props9 = this.props, prefix2 = _props9.prefix, showSearch = _props9.showSearch, placeholder = _props9.placeholder, mode = _props9.mode, size = _props9.size, className = _props9.className, style = _props9.style, readOnly = _props9.readOnly, disabled = _props9.disabled, hasBorder = _props9.hasBorder, label = _props9.label, locale = _props9.locale, state = _props9.state, onBlur = _props9.onBlur, onFocus = _props9.onFocus, onMouseEnter = _props9.onMouseEnter, onMouseLeave = _props9.onMouseLeave, rtl = _props9.rtl;
    var others = obj.pickOthers(Select2.propTypes, this.props);
    var othersData = obj.pickAttrsWith(others, "data-");
    var visible = this.state.visible;
    var isSingle2 = mode === "single";
    var hasSearch = this.hasSearch();
    var valueNodes = this.renderValues();
    var _placeholder = placeholder || locale.selectPlaceholder || locale.selectPlaceHolder;
    if (valueNodes && valueNodes.length) {
      _placeholder = null;
    }
    if (showSearch && visible && isSingle2 && typeof valueNodes === "string") {
      _placeholder = valueNodes;
    }
    var extra = this.renderExtraNode();
    var triggerClazz = classnames([prefix2 + "select", prefix2 + "select-trigger", prefix2 + "select-" + mode, "" + prefix2 + size, className], (_classNames = {}, _classNames[prefix2 + "active"] = visible, _classNames[prefix2 + "inactive"] = !visible, _classNames[prefix2 + "no-search"] = !hasSearch, _classNames[prefix2 + "has-search"] = hasSearch, _classNames[prefix2 + "select-in-ie"] = isIE9, _classNames[prefix2 + "select-in-ie-fixwidth"] = this.state.fixWidth, _classNames[prefix2 + "has-clear"] = this.hasClear(), _classNames));
    var valuetext = this.valueDataSource.valueDS ? this.valueDataSource.valueDS.label : "";
    return /* @__PURE__ */ React.createElement("span", _extends$1$1({}, othersData, {
      className: triggerClazz,
      style,
      dir: rtl ? "rtl" : void 0,
      ref: this.saveSelectRef,
      onClick: this.handleWrapClick,
      onMouseEnter,
      onMouseLeave,
      onMouseDown: this.handleWrapClick
    }), /* @__PURE__ */ React.createElement(Input$1, _extends$1$1({
      "aria-valuetext": valuetext
    }, obj.pickOthers(othersData, others), {
      role: "combobox",
      tabIndex: 0,
      "aria-expanded": this.state.visible,
      "aria-disabled": disabled,
      state,
      label,
      extra,
      value: this.state.searchValue,
      size,
      readOnly: !this.hasSearch() || readOnly,
      disabled,
      placeholder: _placeholder,
      hasBorder,
      hasClear: false,
      htmlSize: "1",
      inputRender: function inputRender3(inputEl) {
        return _this5.renderSearchInput(valueNodes, _placeholder, inputEl);
      },
      onChange: this.handleSearch,
      onKeyDown: this.handleSearchKeyDown,
      onFocus,
      onBlur,
      className: prefix2 + "select-inner",
      ref: this.saveInputRef
    })), /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "sr-only",
      "aria-live": "polite"
    }, this.state.srReader));
  };
  Select2.prototype.renderSearchInput = function renderSearchInput(valueNodes, placeholder, inputEl) {
    var _classNames2;
    var _props10 = this.props, prefix2 = _props10.prefix, mode = _props10.mode, tagInline = _props10.tagInline;
    var isSingle2 = mode === "single";
    var mirrorText = this.state.searchValue;
    var cls = classnames((_classNames2 = {}, _classNames2[prefix2 + "select-values"] = true, _classNames2[prefix2 + "input-text-field"] = true, _classNames2[prefix2 + "select-compact"] = !isSingle2 && tagInline, _classNames2));
    var searchInput = [isSingle2 && valueNodes ? /* @__PURE__ */ React.createElement("em", {
      key: "select-value"
    }, valueNodes) : valueNodes];
    var triggerSearch = /* @__PURE__ */ React.createElement("span", {
      key: "trigger-search",
      className: prefix2 + "select-trigger-search"
    }, inputEl, /* @__PURE__ */ React.createElement("span", {
      "aria-hidden": true
    }, mirrorText || placeholder, " "));
    if (!isSingle2 && tagInline) {
      searchInput.unshift(triggerSearch);
    } else {
      searchInput.push(triggerSearch);
    }
    return /* @__PURE__ */ React.createElement("span", {
      className: cls
    }, searchInput);
  };
  Select2.prototype.renderMenuHeader = function renderMenuHeader() {
    var _classNames3, _classNames4;
    var _props11 = this.props, prefix2 = _props11.prefix, hasSelectAll = _props11.hasSelectAll, mode = _props11.mode, locale = _props11.locale, menuProps = _props11.menuProps;
    if (menuProps && "header" in menuProps) {
      return menuProps.header;
    }
    var sourceCount = this.dataStore.getEnableDS().length;
    if (!hasSelectAll || mode === "single" || !sourceCount) {
      return null;
    }
    var text = typeof hasSelectAll === "boolean" ? locale.selectAll : hasSelectAll;
    var selectAllYet = this.selectAllYet;
    var cls = classnames((_classNames3 = {}, _classNames3[prefix2 + "select-all"] = true, _classNames3[prefix2 + "selected"] = selectAllYet, _classNames3));
    var clsInner = classnames((_classNames4 = {}, _classNames4[prefix2 + "select-all-inner"] = true, _classNames4));
    return /* @__PURE__ */ React.createElement("div", {
      key: "all",
      onClick: this.handleSelectAll,
      className: cls,
      style: {
        lineHeight: "unset"
      }
    }, selectAllYet ? /* @__PURE__ */ React.createElement(Icon$1, {
      className: prefix2 + "menu-icon-selected",
      style: {
        display: "none"
      },
      type: "select"
    }) : null, /* @__PURE__ */ React.createElement("span", {
      className: clsInner
    }, text));
  };
  Select2.prototype.render = function render2() {
    var mode = this.props.mode;
    var props = _extends$1$1({}, this.props);
    if (this.hasSearch()) {
      props.canCloseByTrigger = false;
    }
    if (mode === "single") {
      props.cache = true;
    }
    return _Base.prototype.render.call(this, props);
  };
  return Select2;
}(Base$3), _class$K.propTypes = _extends$1$1({}, Base$3.propTypes, {
  mode: propTypes$1.oneOf(["single", "multiple", "tag"]),
  value: propTypes$1.any,
  defaultValue: propTypes$1.any,
  onChange: propTypes$1.func,
  dataSource: propTypes$1.arrayOf(propTypes$1.oneOfType([propTypes$1.shape({
    value: propTypes$1.any,
    label: propTypes$1.any,
    disabled: propTypes$1.bool,
    children: propTypes$1.array
  }), propTypes$1.bool, propTypes$1.number, propTypes$1.string])),
  hasBorder: propTypes$1.bool,
  hasArrow: propTypes$1.bool,
  showSearch: propTypes$1.bool,
  onSearch: propTypes$1.func,
  onSearchClear: propTypes$1.func,
  hasSelectAll: propTypes$1.oneOfType([propTypes$1.bool, propTypes$1.string]),
  fillProps: propTypes$1.string,
  useDetailValue: propTypes$1.bool,
  cacheValue: propTypes$1.bool,
  valueRender: propTypes$1.func,
  itemRender: propTypes$1.func,
  notFoundContent: propTypes$1.node,
  style: propTypes$1.object,
  searchValue: propTypes$1.string,
  tagInline: propTypes$1.bool,
  tagClosable: propTypes$1.bool,
  maxTagCount: propTypes$1.number,
  maxTagPlaceholder: propTypes$1.func,
  hiddenSelected: propTypes$1.bool,
  onRemove: propTypes$1.func,
  onFocus: propTypes$1.func,
  onBlur: propTypes$1.func,
  onMouseEnter: propTypes$1.func,
  onMouseLeave: propTypes$1.func,
  onKeyDown: propTypes$1.func,
  locale: propTypes$1.object,
  popupAutoFocus: propTypes$1.bool,
  showDataSourceChildren: propTypes$1.bool
}), _class$K.defaultProps = _extends$1$1({}, Base$3.defaultProps, {
  locale: zhCN.Select,
  mode: "single",
  showSearch: false,
  cacheValue: true,
  tagInline: false,
  onSearch: noop$g,
  onSearchClear: noop$g,
  hasArrow: true,
  onRemove: noop$g,
  valueRender: function valueRender(item) {
    return item.label || item.value;
  },
  onKeyDown: noop$g,
  onFocus: noop$g,
  onBlur: noop$g,
  onMouseEnter: noop$g,
  onMouseLeave: noop$g,
  popupAutoFocus: false,
  tagClosable: true
}), _class$K.displayName = "Select", _temp$I);
var Select$1 = polyfill(Select);
var _class$L, _temp$J;
var bindCtx$f = func.bindCtx, noop$h = func.noop;
var AutoComplete = (_temp$J = _class$L = function(_Base) {
  _inherits(AutoComplete2, _Base);
  function AutoComplete2(props) {
    _classCallCheck(this, AutoComplete2);
    var _this2 = _possibleConstructorReturn(this, _Base.call(this, props));
    _this2.handleChange = function(value, proxy, item) {
      var _this$props = _this2.props, disabled = _this$props.disabled, readOnly = _this$props.readOnly, filterLocal = _this$props.filterLocal;
      if (disabled || readOnly) {
        return false;
      }
      var actionType = typeof proxy === "string" ? proxy : "change";
      _this2.isInputing = actionType === "change";
      if (filterLocal) {
        _this2.setState({
          dataSource: _this2.dataStore.updateByKey(value)
        });
        _this2.shouldControlPopup(_this2.props, actionType);
        _this2.setFirstHightLightKeyForMenu();
      }
      if (!("value" in _this2.props)) {
        _this2.setState({
          value
        });
      }
      _this2.props.onChange(value, actionType, item);
      if (actionType === "itemClick" || actionType === "enter") {
        _this2.setVisible(false, actionType);
      }
    };
    _this2.isAutoComplete = true;
    _this2.isInputing = false;
    _this2.dataStore.setOptions({
      key: _this2.state.value
    });
    _extends$1$1(_this2.state, {
      dataSource: _this2.setDataSource(props)
    });
    bindCtx$f(_this2, ["handleTriggerKeyDown", "handleMenuSelect", "handleItemClick"]);
    return _this2;
  }
  AutoComplete2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var state = {};
    if ("value" in nextProps && nextProps.value !== prevState.value) {
      _extends$1$1(state, {
        value: nextProps.value
      });
    }
    if ("visible" in nextProps && nextProps.visible !== prevState.visible) {
      _extends$1$1(state, {
        visible: nextProps.visible
      });
    }
    if (Object.keys(state).length) {
      return state;
    }
    return null;
  };
  AutoComplete2.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    var props = this.props;
    if ("value" in props) {
      this.dataStore.setOptions({
        key: props.value
      });
    }
    if (props.filter !== prevProps.filter) {
      this.dataStore.setOptions({
        filter: props.filter
      });
    }
    if (props.filterLocal !== prevProps.filterLocal) {
      this.dataStore.setOptions({
        filterLocal: props.filterLocal
      });
    }
    if (prevProps.children !== props.children || prevProps.dataSource !== props.dataSource) {
      this.setState({
        dataSource: this.setDataSource(props)
      });
      if (!props.filterLocal && this.isInputing) {
        this.shouldControlPopup(props, "update");
      }
      if (!props.filterLocal && !props.popupContent) {
        this.setFirstHightLightKeyForMenu();
      }
    }
  };
  AutoComplete2.prototype.shouldControlPopup = function shouldControlPopup() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
    var type = arguments[1];
    var hasPopup = props.popupContent || this.dataStore.getMenuDS().length;
    if (hasPopup) {
      this.setVisible(true, type);
    } else {
      this.setVisible(false, type);
    }
  };
  AutoComplete2.prototype.handleMenuSelect = function handleMenuSelect(keys3) {
    var key = keys3[0];
    var mapDS = this.dataStore.getMapDS();
    if (key in mapDS) {
      var item = mapDS[key];
      this.handleSelectEvent(key, item, "itemClick");
    }
  };
  AutoComplete2.prototype.handleItemClick = function handleItemClick() {
    this.setVisible(false, "itemClick");
  };
  AutoComplete2.prototype.handleSelectEvent = function handleSelectEvent(key, item, triggerType) {
    var value = item && item[this.props.fillProps] || key;
    if (triggerType === "itemClick" || triggerType === "enter") {
      this.setVisible(false, triggerType);
    }
    this.handleChange(value, triggerType, item);
  };
  AutoComplete2.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
    if (!("visible" in this.props) && visible && !this.props.popupContent && !this.dataStore.getMenuDS().length) {
      return;
    }
    this.setVisible(visible, type);
  };
  AutoComplete2.prototype.beforeClose = function beforeClose() {
    this.isInputing = false;
  };
  AutoComplete2.prototype.handleTriggerKeyDown = function handleTriggerKeyDown(e2) {
    var _props = this.props, popupContent = _props.popupContent, onToggleHighlightItem = _props.onToggleHighlightItem, onKeyDown = _props.onKeyDown;
    if (popupContent) {
      e2.stopPropagation();
      return onKeyDown(e2);
    }
    switch (e2.keyCode) {
      case KEYCODE.UP:
        e2.preventDefault();
        onToggleHighlightItem(this.toggleHighlightItem(-1, e2), "up");
        break;
      case KEYCODE.DOWN:
        e2.preventDefault();
        onToggleHighlightItem(this.toggleHighlightItem(1, e2), "down");
        break;
      case KEYCODE.ENTER:
        e2.preventDefault();
        this.chooseHighlightItem(e2);
        break;
      case KEYCODE.SPACE:
        e2.stopPropagation();
        break;
      case KEYCODE.ESC:
        e2.preventDefault();
        this.state.visible && this.setVisible(false, "esc");
        break;
    }
    onKeyDown(e2);
  };
  AutoComplete2.prototype.chooseHighlightItem = function chooseHighlightItem() {
    if (!this.state.visible) {
      return false;
    }
    var highlightKey = this.state.highlightKey;
    var highlightItem = this.dataStore.getEnableDS().find(function(item) {
      return highlightKey === "" + item.value;
    });
    if (highlightItem) {
      this.handleSelectEvent(highlightKey, highlightItem, "enter");
    }
  };
  AutoComplete2.prototype.hasClear = function hasClear() {
    var _props2 = this.props, hasClear2 = _props2.hasClear, readOnly = _props2.readOnly, disabled = _props2.disabled;
    var value = this.state.value;
    return value && hasClear2 && !readOnly && !disabled;
  };
  AutoComplete2.prototype.renderSelect = function renderSelect() {
    var _classNames;
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
    var placeholder = props.placeholder, size = props.size, prefix2 = props.prefix, className = props.className, style = props.style, label = props.label, readOnly = props.readOnly, disabled = props.disabled, highlightHolder = props.highlightHolder, locale = props.locale, hasClear = props.hasClear, state = props.state, rtl = props.rtl;
    var others = obj.pickOthers(AutoComplete2.propTypes, props);
    var othersData = obj.pickAttrsWith(others, "data-");
    var value = this.state.value;
    var visible = this.state.visible;
    var triggerClazz = classnames([prefix2 + "select", prefix2 + "select-auto-complete", prefix2 + "size-" + size, className], (_classNames = {}, _classNames[prefix2 + "active"] = visible, _classNames[prefix2 + "disabled"] = disabled, _classNames));
    var _placeholder = placeholder || locale.autoCompletePlaceholder || locale.autoCompletePlaceHolder;
    if (highlightHolder && visible) {
      _placeholder = this.state.highlightKey || _placeholder;
    }
    var _inputProps = _extends$1$1({}, obj.pickOthers(othersData, others), {
      state,
      ref: this.saveInputRef,
      hasClear,
      value,
      size,
      disabled,
      readOnly,
      placeholder: _placeholder,
      label,
      onChange: this.handleChange,
      onKeyDown: this.handleTriggerKeyDown
    });
    return /* @__PURE__ */ React.createElement("span", _extends$1$1({}, othersData, {
      className: triggerClazz,
      style,
      dir: rtl ? "rtl" : void 0,
      ref: this.saveSelectRef,
      onClick: this.focusInput
    }), /* @__PURE__ */ React.createElement(Input$1, _extends$1$1({
      role: "combobox",
      "aria-autocomplete": "list",
      "aria-disabled": disabled,
      "aria-expanded": this.state.visible
    }, _inputProps)), /* @__PURE__ */ React.createElement("span", {
      className: prefix2 + "sr-only",
      "aria-live": "polite"
    }, this.state.srReader));
  };
  AutoComplete2.prototype.render = function render2() {
    var _this2 = this;
    if (this.hasClear()) {
      var safeNode = this.props.popupProps.safeNode || [];
      var safeNodes = Array.isArray(safeNode) ? safeNode : [safeNode];
      safeNodes.push(function() {
        return _this2.clearNode;
      });
      this.props.popupProps.safeNode = safeNodes;
    }
    return _Base.prototype.render.call(this, _extends$1$1({}, this.props, {
      canCloseByTrigger: false
    }));
  };
  return AutoComplete2;
}(Base$3), _class$L.propTypes = _extends$1$1({}, Base$3.propTypes, {
  value: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number]),
  defaultValue: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number]),
  onChange: propTypes$1.func,
  dataSource: propTypes$1.arrayOf(propTypes$1.oneOfType([propTypes$1.shape({
    value: propTypes$1.string,
    label: propTypes$1.any,
    disabled: propTypes$1.bool,
    children: propTypes$1.array
  }), propTypes$1.string])),
  fillProps: propTypes$1.string,
  itemRender: propTypes$1.func,
  onKeyDown: propTypes$1.func,
  highlightHolder: propTypes$1.bool,
  style: propTypes$1.object
}), _class$L.defaultProps = _extends$1$1({}, Base$3.defaultProps, {
  onKeyDown: noop$h,
  fillProps: "value"
}), _temp$J);
var AutoComplete$1 = polyfill(AutoComplete);
var _class$M, _temp$K;
var Option = (_temp$K = _class$M = function(_React$Component) {
  _inherits(Option2, _React$Component);
  function Option2() {
    _classCallCheck(this, Option2);
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }
  Option2.prototype.render = function render2() {
    return this.props.children;
  };
  return Option2;
}(React.Component), _class$M.propTypes = {
  value: propTypes$1.any.isRequired,
  disabled: propTypes$1.bool,
  children: propTypes$1.any
}, _class$M._typeMark = "next_select_option", _temp$K);
Option.displayName = "Option";
var _class$N, _temp$L;
var OptionGroup = (_temp$L = _class$N = function(_React$Component) {
  _inherits(OptionGroup2, _React$Component);
  function OptionGroup2() {
    _classCallCheck(this, OptionGroup2);
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }
  OptionGroup2.prototype.render = function render2() {
    return this.props.children;
  };
  return OptionGroup2;
}(React.Component), _class$N.propTypes = {
  label: propTypes$1.node,
  children: propTypes$1.any
}, _class$N._typeMark = "next_select_option_group", _temp$L);
OptionGroup.displayName = "OptionGroup";
Select$1.AutoComplete = _ConfigProvider.config(AutoComplete$1, {
  componentName: "Select"
});
Select$1.Option = Option;
Select$1.OptionGroup = OptionGroup;
function _transform(props, deprecated2) {
  var shape = props.shape, container6 = props.container, multiple = props.multiple, filterBy = props.filterBy, overlay = props.overlay, safeNode = props.safeNode, noFoundContent = props.noFoundContent, others = _objectWithoutProperties$1(props, ["shape", "container", "multiple", "filterBy", "overlay", "safeNode", "noFoundContent"]);
  var newprops = others;
  if (shape === "arrow-only") {
    deprecated2("shape=arrow-only", "hasBorder=false", "Select");
    newprops.hasBorder = false;
  }
  if (container6) {
    deprecated2("container", "popupContainer", "Select");
    newprops.popupContainer = container6;
  }
  if (multiple) {
    deprecated2("multiple", "mode=multiple", "Select");
    newprops.mode = "multiple";
  }
  if (filterBy) {
    deprecated2("filterBy", "filter", "Select");
    newprops.filter = filterBy;
  }
  if (overlay) {
    deprecated2("overlay", "popupContent", "Select");
    newprops.popupContent = overlay;
    newprops.autoWidth = false;
  }
  if (noFoundContent) {
    deprecated2("noFoundContent", "notFoundContent", "Select");
    newprops.notFoundContent = noFoundContent;
  }
  if (safeNode) {
    deprecated2("safeNode", "popupProps={safeNode}", "Select");
    newprops.popupProps = {
      safeNode
    };
  }
  return newprops;
}
Select$1.Combobox = _ConfigProvider.config(Select$1, {
  transform: function transform6(props, deprecated2) {
    deprecated2("Select.Combobox", "<Select showSearch={true}/>", "Select");
    var newprops = _transform(props, deprecated2);
    if (props.onInputUpdate) {
      newprops.onSearch = props.onInputUpdate;
      newprops.showSearch = true;
    }
    return newprops;
  }
});
var _Select = _ConfigProvider.config(Select$1, {
  transform: _transform,
  exportNames: ["focusInput", "handleSearchClear"]
});
var _class$O, _temp2$2;
function mapIconSize(size) {
  return {
    large: "small",
    medium: "xs",
    small: "xs"
  }[size];
}
var Button = (_temp2$2 = _class$O = function(_Component) {
  _inherits(Button2, _Component);
  function Button2() {
    var _temp3, _this2, _ret;
    _classCallCheck(this, Button2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp3 = (_this2 = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this2), _this2.onMouseUp = function(e2) {
      _this2.button.blur();
      if (_this2.props.onMouseUp) {
        _this2.props.onMouseUp(e2);
      }
    }, _this2.buttonRefHandler = function(button) {
      _this2.button = button;
    }, _temp3), _possibleConstructorReturn(_this2, _ret);
  }
  Button2.prototype.render = function render2() {
    var _btnClsObj;
    var _props = this.props, prefix2 = _props.prefix, className = _props.className, type = _props.type, size = _props.size, htmlType = _props.htmlType, loading = _props.loading, text = _props.text, warning2 = _props.warning, ghost = _props.ghost, component = _props.component, iconSize = _props.iconSize, icons = _props.icons, disabled = _props.disabled, onClick4 = _props.onClick, children = _props.children, rtl = _props.rtl, others = _objectWithoutProperties$1(_props, ["prefix", "className", "type", "size", "htmlType", "loading", "text", "warning", "ghost", "component", "iconSize", "icons", "disabled", "onClick", "children", "rtl"]);
    var ghostType = ["light", "dark"].indexOf(ghost) >= 0 ? ghost : "dark";
    var btnClsObj = (_btnClsObj = {}, _btnClsObj[prefix2 + "btn"] = true, _btnClsObj["" + prefix2 + size] = size, _btnClsObj[prefix2 + "btn-" + type] = type && !ghost, _btnClsObj[prefix2 + "btn-text"] = text, _btnClsObj[prefix2 + "btn-warning"] = warning2, _btnClsObj[prefix2 + "btn-loading"] = loading, _btnClsObj[prefix2 + "btn-ghost"] = ghost, _btnClsObj[prefix2 + "btn-" + ghostType] = ghost, _btnClsObj[className] = className, _btnClsObj);
    var loadingIcon = null;
    if (icons && icons.loading && /* @__PURE__ */ isValidElement(icons.loading)) {
      var _classNames;
      if (loading) {
        delete btnClsObj[prefix2 + "btn-loading"];
        btnClsObj[prefix2 + "btn-custom-loading"] = true;
      }
      var loadingSize = iconSize || mapIconSize(size);
      loadingIcon = /* @__PURE__ */ React.cloneElement(icons.loading, {
        className: classnames((_classNames = {}, _classNames[prefix2 + "btn-custom-loading-icon"] = true, _classNames.show = loading, _classNames)),
        size: loadingSize
      });
    }
    var count = Children.count(children);
    var clonedChildren = Children.map(children, function(child, index2) {
      if (child && typeof child.type === "function" && child.type._typeMark === "icon") {
        var _classNames2;
        var iconCls = classnames((_classNames2 = {}, _classNames2[prefix2 + "btn-icon"] = !iconSize, _classNames2[prefix2 + "icon-first"] = count > 1 && index2 === 0, _classNames2[prefix2 + "icon-last"] = count > 1 && index2 === count - 1, _classNames2[prefix2 + "icon-alone"] = count === 1, _classNames2[child.props.className] = !!child.props.className, _classNames2));
        if ("size" in child.props) {
          log.warning('The size of Icon will not take effect, when Icon is the [direct child element] of Button(<Button><Icon size="' + child.props.size + '" /></Button>), use <Button iconSize="' + child.props.size + '"> or <Button><div><Icon size="' + child.props.size + '" /></div></Button> instead of.');
        }
        return /* @__PURE__ */ React.cloneElement(child, {
          className: iconCls,
          size: iconSize || mapIconSize(size)
        });
      }
      if (!/* @__PURE__ */ isValidElement(child)) {
        return /* @__PURE__ */ React.createElement("span", {
          className: prefix2 + "btn-helper"
        }, child);
      }
      return child;
    });
    var TagName = component;
    var tagAttrs = _extends$1$1({}, obj.pickOthers(Object.keys(Button2.propTypes), others), {
      type: htmlType,
      disabled,
      onClick: onClick4,
      className: classnames(btnClsObj)
    });
    if (TagName !== "button") {
      delete tagAttrs.type;
      if (tagAttrs.disabled) {
        delete tagAttrs.onClick;
        tagAttrs.href && delete tagAttrs.href;
      }
    }
    return /* @__PURE__ */ React.createElement(TagName, _extends$1$1({}, tagAttrs, {
      dir: rtl ? "rtl" : void 0,
      onMouseUp: this.onMouseUp,
      ref: this.buttonRefHandler
    }), loadingIcon, clonedChildren);
  };
  return Button2;
}(Component), _class$O.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
  prefix: propTypes$1.string,
  rtl: propTypes$1.bool,
  type: propTypes$1.oneOf(["primary", "secondary", "normal"]),
  size: propTypes$1.oneOf(["small", "medium", "large"]),
  icons: propTypes$1.shape({
    loading: propTypes$1.node
  }),
  iconSize: propTypes$1.oneOfType([propTypes$1.oneOf(["xxs", "xs", "small", "medium", "large", "xl", "xxl", "xxxl", "inherit"]), propTypes$1.number]),
  htmlType: propTypes$1.oneOf(["submit", "reset", "button"]),
  component: propTypes$1.oneOf(["button", "a", "div", "span"]),
  loading: propTypes$1.bool,
  ghost: propTypes$1.oneOf([true, false, "light", "dark"]),
  text: propTypes$1.bool,
  warning: propTypes$1.bool,
  disabled: propTypes$1.bool,
  onClick: propTypes$1.func,
  className: propTypes$1.string,
  onMouseUp: propTypes$1.func,
  children: propTypes$1.node
}), _class$O.defaultProps = {
  prefix: "next-",
  type: "normal",
  size: "medium",
  icons: {},
  htmlType: "button",
  component: "button",
  loading: false,
  ghost: false,
  text: false,
  warning: false,
  disabled: false,
  onClick: function onClick2() {
  }
}, _temp2$2);
Button.displayName = "Button";
var _class$P, _temp$M;
var ButtonGroup = (_temp$M = _class$P = function(_Component) {
  _inherits(ButtonGroup2, _Component);
  function ButtonGroup2() {
    _classCallCheck(this, ButtonGroup2);
    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }
  ButtonGroup2.prototype.render = function render2() {
    var _classNames;
    var _props = this.props, prefix2 = _props.prefix, className = _props.className, size = _props.size, children = _props.children, rtl = _props.rtl, others = _objectWithoutProperties$1(_props, ["prefix", "className", "size", "children", "rtl"]);
    var groupCls = classnames((_classNames = {}, _classNames[prefix2 + "btn-group"] = true, _classNames[className] = className, _classNames));
    var cloneChildren = Children.map(children, function(child) {
      if (child) {
        return /* @__PURE__ */ React.cloneElement(child, {
          size
        });
      }
    });
    if (rtl) {
      others.dir = "rtl";
    }
    return /* @__PURE__ */ React.createElement("div", _extends$1$1({}, others, {
      className: groupCls
    }), cloneChildren);
  };
  return ButtonGroup2;
}(Component), _class$P.propTypes = _extends$1$1({}, _ConfigProvider.propTypes, {
  rtl: propTypes$1.bool,
  prefix: propTypes$1.string,
  size: propTypes$1.string,
  className: propTypes$1.string,
  children: propTypes$1.node
}), _class$P.defaultProps = {
  prefix: "next-",
  size: "medium"
}, _temp$M);
ButtonGroup.displayName = "ButtonGroup";
var ButtonGroup$1 = _ConfigProvider.config(ButtonGroup);
Button.Group = ButtonGroup$1;
var Button$1 = _ConfigProvider.config(Button, {
  transform: function transform7(props, deprecated2) {
    if ("shape" in props) {
      deprecated2("shape", "text | warning | ghost", "Button");
      var _props = props, shape = _props.shape, type = _props.type, others = _objectWithoutProperties$1(_props, ["shape", "type"]);
      var newType = type;
      if (type === "light" || type === "dark" || type === "secondary" && shape === "warning") {
        newType = "normal";
      }
      var ghost = void 0;
      if (shape === "ghost") {
        ghost = {
          primary: "dark",
          secondary: "dark",
          normal: "light",
          dark: "dark",
          light: "light"
        }[type || Button.defaultProps.type];
      }
      var text = shape === "text";
      var warning2 = shape === "warning";
      props = _extends$1$1({
        type: newType,
        ghost,
        text,
        warning: warning2
      }, others);
    }
    return props;
  }
});
var _class$Q, _temp$N, _initialiseProps$3;
var Group$6 = Input$1.Group;
var AutoComplete$2 = _Select.AutoComplete;
var Search = (_temp$N = _class$Q = function(_React$Component) {
  _inherits(Search2, _React$Component);
  function Search2(props) {
    _classCallCheck(this, Search2);
    var _this2 = _possibleConstructorReturn(this, _React$Component.call(this, props));
    _initialiseProps$3.call(_this2);
    var value = "value" in props ? props.value : props.defaultValue;
    var filterValue = "filterValue" in props ? props.filterValue : props.defaultFilterValue;
    _this2.state = {
      value: typeof value === "undefined" ? "" : value,
      filterValue
    };
    _this2.highlightKey = null;
    return _this2;
  }
  Search2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var nextState = {};
    if ("value" in nextProps && nextProps.value !== prevState.value) {
      var value = nextProps.value;
      nextState.value = value === void 0 || value === null ? "" : nextProps.value;
    }
    if ("filterValue" in nextProps && nextProps.filterValue !== prevState.filterValue) {
      var filterValue = nextProps.filterValue;
      nextState.filterValue = filterValue === void 0 ? "" : filterValue;
    }
    if (Object.keys(nextState).length > 0) {
      return nextState;
    }
    return null;
  };
  Search2.prototype.focus = function focus2() {
    var _inputRef;
    (_inputRef = this.inputRef).focus.apply(_inputRef, arguments);
  };
  Search2.prototype.render = function render2() {
    var _classNames;
    var _props = this.props, shape = _props.shape, filter2 = _props.filter, hasIcon = _props.hasIcon, disabled = _props.disabled, placeholder = _props.placeholder, type = _props.type, className = _props.className, style = _props.style, size = _props.size, prefix2 = _props.prefix, searchText = _props.searchText, dataSource2 = _props.dataSource, filterProps = _props.filterProps, buttonProps = _props.buttonProps, popupContent = _props.popupContent, followTrigger = _props.followTrigger, hasClear = _props.hasClear, visible = _props.visible, locale = _props.locale, rtl = _props.rtl, icons = _props.icons, autoHighlightFirstItem = _props.autoHighlightFirstItem, others = _objectWithoutProperties$1(_props, ["shape", "filter", "hasIcon", "disabled", "placeholder", "type", "className", "style", "size", "prefix", "searchText", "dataSource", "filterProps", "buttonProps", "popupContent", "followTrigger", "hasClear", "visible", "locale", "rtl", "icons", "autoHighlightFirstItem"]);
    var cls = classnames((_classNames = {}, _classNames[prefix2 + "search"] = true, _classNames[prefix2 + "search-" + shape] = true, _classNames["" + prefix2 + type] = type, _classNames["" + prefix2 + size] = size, _classNames[className] = !!className, _classNames));
    var searchIcon = null, filterSelect = null, searchBtn = null, iconsSearch = icons.search;
    if (!/* @__PURE__ */ isValidElement(icons.search) && icons.search) {
      iconsSearch = /* @__PURE__ */ React.createElement("span", null, icons.search);
    }
    if (shape === "simple") {
      var _classNames2;
      var _cls = classnames((_classNames2 = {}, _classNames2[prefix2 + "search-icon"] = true, _classNames2[buttonProps.className] = !!buttonProps.className, _classNames2[prefix2 + "search-symbol-icon"] = !iconsSearch, _classNames2));
      hasIcon && (searchIcon = /* @__PURE__ */ React.cloneElement(iconsSearch || /* @__PURE__ */ React.createElement(Icon$1, {
        type: "search"
      }), _extends$1$1({
        role: "button",
        "aria-disabled": disabled,
        "aria-label": locale.buttonText
      }, buttonProps, {
        className: _cls,
        onClick: this.onSearch,
        onKeyDown: this.onKeyDown
      })));
    } else {
      var _classNames3;
      var _cls2 = classnames((_classNames3 = {}, _classNames3[prefix2 + "search-btn"] = true, _classNames3[buttonProps.className] = !!buttonProps.className, _classNames3));
      searchBtn = /* @__PURE__ */ React.createElement(Button$1, _extends$1$1({
        tabIndex: "0",
        "aria-disabled": disabled,
        "aria-label": locale.buttonText,
        className: _cls2,
        disabled
      }, buttonProps, {
        onClick: this.onSearch,
        onKeyDown: this.onKeyDown
      }), hasIcon ? iconsSearch || /* @__PURE__ */ React.createElement(Icon$1, {
        type: "search",
        className: prefix2 + "search-symbol-icon"
      }) : null, searchText ? /* @__PURE__ */ React.createElement("span", {
        className: prefix2 + "search-btn-text"
      }, searchText) : null);
    }
    if (filter2.length > 0) {
      filterSelect = /* @__PURE__ */ React.createElement(_Select, _extends$1$1({}, filterProps, {
        followTrigger,
        hasBorder: false,
        dataSource: filter2,
        size,
        disabled,
        value: this.state.filterValue,
        onChange: this.onFilterChange
      }));
    }
    var othersAttributes = obj.pickOthers(Search2.propTypes, others);
    if (visible !== void 0) {
      othersAttributes.visible = Boolean(visible);
    }
    var dataAttr = obj.pickAttrsWith(others, "data-");
    var left = /* @__PURE__ */ React.createElement(Group$6, {
      addonBefore: filterSelect,
      className: prefix2 + "search-left",
      addonBeforeClassName: prefix2 + "search-left-addon"
    }, /* @__PURE__ */ React.createElement(AutoComplete$2, _extends$1$1({
      "aria-label": locale.buttonText
    }, othersAttributes, {
      followTrigger,
      role: "searchbox",
      hasClear,
      className: prefix2 + "search-input",
      size,
      placeholder,
      dataSource: dataSource2,
      innerAfter: searchIcon,
      onPressEnter: this.onPressEnter,
      value: this.state.value,
      onChange: this.onChange,
      onToggleHighlightItem: this.onToggleHighlightItem,
      autoHighlightFirstItem,
      popupContent,
      disabled,
      ref: this.saveInputRef
    })));
    return /* @__PURE__ */ React.createElement("span", _extends$1$1({
      className: cls,
      style
    }, dataAttr, {
      dir: rtl ? "rtl" : void 0
    }), searchBtn ? /* @__PURE__ */ React.createElement(Group$6, {
      addonAfter: searchBtn
    }, left) : left);
  };
  return Search2;
}(React.Component), _class$Q.propTypes = {
  prefix: propTypes$1.string,
  shape: propTypes$1.oneOf(["normal", "simple"]),
  type: propTypes$1.oneOf(["primary", "secondary", "normal", "dark"]),
  size: propTypes$1.oneOf(["large", "medium"]),
  defaultValue: propTypes$1.string,
  value: propTypes$1.oneOfType([propTypes$1.string, propTypes$1.number]),
  onChange: propTypes$1.func,
  onSearch: propTypes$1.func,
  defaultFilterValue: propTypes$1.string,
  filter: propTypes$1.array,
  filterValue: propTypes$1.string,
  onFilterChange: propTypes$1.func,
  dataSource: propTypes$1.array,
  placeholder: propTypes$1.string,
  searchText: propTypes$1.node,
  style: propTypes$1.object,
  className: propTypes$1.string,
  filterProps: propTypes$1.object,
  buttonProps: propTypes$1.object,
  popupContent: propTypes$1.node,
  followTrigger: propTypes$1.bool,
  visible: propTypes$1.bool,
  hasClear: propTypes$1.bool,
  hasIcon: propTypes$1.bool,
  disabled: propTypes$1.bool,
  locale: propTypes$1.object,
  rtl: propTypes$1.bool,
  icons: propTypes$1.object,
  autoHighlightFirstItem: propTypes$1.bool
}, _class$Q.defaultProps = {
  prefix: "next-",
  shape: "normal",
  type: "normal",
  size: "medium",
  hasIcon: true,
  filter: [],
  locale: zhCN.Search,
  buttonProps: {},
  onChange: func.noop,
  onSearch: func.noop,
  onFilterChange: func.noop,
  hasClear: false,
  disabled: false,
  icons: {},
  autoHighlightFirstItem: true
}, _initialiseProps$3 = function _initialiseProps5() {
  var _this2 = this;
  this.onChange = function(value, type) {
    for (var _len = arguments.length, argv = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      argv[_key - 2] = arguments[_key];
    }
    var _props2;
    if (_this2.props.disabled) {
      return;
    }
    if (!("value" in _this2.props)) {
      _this2.setState({
        value
      });
    }
    (_props2 = _this2.props).onChange.apply(_props2, [value, type].concat(argv));
    if (type === "enter") {
      _this2.highlightKey = "";
      _this2.props.onSearch(value, _this2.state.filterValue);
    }
  };
  this.onPressEnter = function() {
    if (_this2.highlightKey) {
      return;
    }
    _this2.onSearch();
  };
  this.onSearch = function() {
    if (_this2.props.disabled) {
      return;
    }
    _this2.props.onSearch(_this2.state.value, _this2.state.filterValue);
  };
  this.onFilterChange = function(filterValue) {
    if (!("filterValue" in _this2.props)) {
      _this2.setState({
        filterValue
      });
    }
    _this2.props.onFilterChange(filterValue);
  };
  this.onToggleHighlightItem = function(highlightKey) {
    _this2.highlightKey = highlightKey;
  };
  this.onKeyDown = function(e2) {
    if (_this2.props.disabled) {
      return;
    }
    if (e2.keyCode !== KEYCODE.ENTER) {
      return;
    }
    _this2.onSearch();
  };
  this.saveInputRef = function(ref) {
    if (ref && ref.getInstance()) {
      _this2.inputRef = ref.getInstance();
    }
  };
}, _temp$N);
Search.displayName = "Search";
var Search$1 = polyfill(Search);
var _this = void 0;
var _Search = _ConfigProvider.config(Search$1, {
  transfrom: function transfrom2(props, deprecated2) {
    var _props = _this.props, onInputFocus = _props.onInputFocus, overlayVisible = _props.overlayVisible, combox = _props.combox, others = _objectWithoutProperties$1(_props, ["onInputFocus", "overlayVisible", "combox"]);
    var newprops = others;
    if ("overlayVisible" in _this.props) {
      deprecated2("overlayVisible", "visible", "Search");
      newprops.visible = overlayVisible;
    }
    return newprops;
  }
});
const SiteSearch = ({
  pagesStaticData
}) => {
  const [searchVal, setSearchVal] = useState("");
  const [filteredData, setFilteredData] = useState([]);
  const history = useHistory();
  useEffect(() => {
    setFilteredData(search(pagesStaticData, ""));
  }, []);
  const onChange9 = useCallback((value, type, _) => {
    if (type === "itemClick" || type === "enter") {
      history.push(value);
    } else if (type === "change") {
      setFilteredData(search(pagesStaticData, value));
      setSearchVal(value);
    }
  }, []);
  return /* @__PURE__ */ React.createElement(_Search, {
    shape: "simple",
    placeholder: "Search",
    filterLocal: false,
    className: s.search,
    value: searchVal,
    onChange: onChange9
  }, filteredData.map(({
    label,
    path
  }) => /* @__PURE__ */ React.createElement(_Select.Option, {
    value: path,
    key: path
  }, label)));
};
function containString(whole, part) {
  return whole.toLowerCase().indexOf(part.toLowerCase()) !== -1;
}
function search(pagesStaticData, value) {
  return Object.entries(pagesStaticData).map(([path, staticData]) => {
    if (path === "/404")
      return null;
    const label = staticData.title ?? staticData.main.title ?? path;
    if (containString(label, value?.trim() ?? "")) {
      return {
        label,
        path
      };
    }
    return null;
  }).filter(Boolean);
}
const Layout = ({
  sideMenuData,
  topNavs,
  logo,
  path,
  children,
  footer,
  pagesStaticData,
  topbarOperations,
  search: search2
}) => {
  return /* @__PURE__ */ React.createElement(_ConfigProvider, {
    prefix: "vp-theme-"
  }, /* @__PURE__ */ React.createElement(_Shell, {
    className: s.layout
  }, /* @__PURE__ */ React.createElement(_Shell.Branding, null, logo, " "), /* @__PURE__ */ React.createElement(_Shell.Action, null, topbarOperations, search2 && pagesStaticData && /* @__PURE__ */ React.createElement(SiteSearch, {
    pagesStaticData
  }), topNavs && /* @__PURE__ */ React.createElement(Nav$1, {
    direction: "hoz",
    embeddable: true
  }, renderNav(topNavs))), /* @__PURE__ */ React.createElement(_Shell.Navigation, {
    trigger: null
  }, /* @__PURE__ */ React.createElement(Nav$1, {
    embeddable: true
  }, renderNav(sideMenuData))), /* @__PURE__ */ React.createElement(_Shell.Content, {
    className: s.content,
    key: path
  }, /* @__PURE__ */ React.createElement(_ConfigProvider, {
    prefix: "next-"
  }, /* @__PURE__ */ React.createElement(React.Fragment, null, children))), footer && /* @__PURE__ */ React.createElement(_Shell.Footer, null, footer)));
};
function renderNav(navs) {
  return navs.map((item, idx) => {
    if ("path" in item) {
      return /* @__PURE__ */ React.createElement(Nav$1.Item, {
        key: idx
      }, /* @__PURE__ */ React.createElement(Link, {
        to: item.path
      }, item.text));
    }
    if ("href" in item) {
      return /* @__PURE__ */ React.createElement(Nav$1.Item, {
        key: idx
      }, /* @__PURE__ */ React.createElement("a", {
        href: item.href,
        target: "_blank"
      }, item.text));
    }
    if ("group" in item) {
      return /* @__PURE__ */ React.createElement(Nav$1.Group, {
        label: item.group,
        key: idx
      }, renderNav(item.children));
    }
    if ("subNav" in item) {
      return /* @__PURE__ */ React.createElement(Nav$1.SubNav, {
        label: item.subNav,
        key: idx
      }, renderNav(item.children));
    }
    throw new Error(`unexpected nav`);
  });
}
function _extends$2() {
  _extends$2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
var Prism = function() {
  var uniqueId = 0;
  var _ = {
    util: {
      encode: function(tokens) {
        if (tokens instanceof Token) {
          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);
        } else if (_.util.type(tokens) === "Array") {
          return tokens.map(_.util.encode);
        } else {
          return tokens.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
        }
      },
      type: function(o) {
        return Object.prototype.toString.call(o).match(/\[object (\w+)\]/)[1];
      },
      objId: function(obj2) {
        if (!obj2["__id"]) {
          Object.defineProperty(obj2, "__id", {
            value: ++uniqueId
          });
        }
        return obj2["__id"];
      },
      clone: function(o, visited) {
        var type = _.util.type(o);
        visited = visited || {};
        switch (type) {
          case "Object":
            if (visited[_.util.objId(o)]) {
              return visited[_.util.objId(o)];
            }
            var clone = {};
            visited[_.util.objId(o)] = clone;
            for (var key in o) {
              if (o.hasOwnProperty(key)) {
                clone[key] = _.util.clone(o[key], visited);
              }
            }
            return clone;
          case "Array":
            if (visited[_.util.objId(o)]) {
              return visited[_.util.objId(o)];
            }
            var clone = [];
            visited[_.util.objId(o)] = clone;
            o.forEach(function(v2, i) {
              clone[i] = _.util.clone(v2, visited);
            });
            return clone;
        }
        return o;
      }
    },
    languages: {
      extend: function(id2, redef) {
        var lang = _.util.clone(_.languages[id2]);
        for (var key in redef) {
          lang[key] = redef[key];
        }
        return lang;
      },
      insertBefore: function(inside, before, insert, root) {
        root = root || _.languages;
        var grammar = root[inside];
        if (arguments.length == 2) {
          insert = arguments[1];
          for (var newToken in insert) {
            if (insert.hasOwnProperty(newToken)) {
              grammar[newToken] = insert[newToken];
            }
          }
          return grammar;
        }
        var ret = {};
        for (var token in grammar) {
          if (grammar.hasOwnProperty(token)) {
            if (token == before) {
              for (var newToken in insert) {
                if (insert.hasOwnProperty(newToken)) {
                  ret[newToken] = insert[newToken];
                }
              }
            }
            ret[token] = grammar[token];
          }
        }
        _.languages.DFS(_.languages, function(key, value) {
          if (value === root[inside] && key != inside) {
            this[key] = ret;
          }
        });
        return root[inside] = ret;
      },
      DFS: function(o, callback, type, visited) {
        visited = visited || {};
        for (var i in o) {
          if (o.hasOwnProperty(i)) {
            callback.call(o, i, o[i], type || i);
            if (_.util.type(o[i]) === "Object" && !visited[_.util.objId(o[i])]) {
              visited[_.util.objId(o[i])] = true;
              _.languages.DFS(o[i], callback, null, visited);
            } else if (_.util.type(o[i]) === "Array" && !visited[_.util.objId(o[i])]) {
              visited[_.util.objId(o[i])] = true;
              _.languages.DFS(o[i], callback, i, visited);
            }
          }
        }
      }
    },
    plugins: {},
    highlight: function(text, grammar, language) {
      var env2 = {
        code: text,
        grammar,
        language
      };
      env2.tokens = _.tokenize(env2.code, env2.grammar);
      return Token.stringify(_.util.encode(env2.tokens), env2.language);
    },
    matchGrammar: function(text, strarr, grammar, index2, startPos, oneshot, target) {
      var Token2 = _.Token;
      for (var token in grammar) {
        if (!grammar.hasOwnProperty(token) || !grammar[token]) {
          continue;
        }
        if (token == target) {
          return;
        }
        var patterns = grammar[token];
        patterns = _.util.type(patterns) === "Array" ? patterns : [patterns];
        for (var j = 0; j < patterns.length; ++j) {
          var pattern = patterns[j], inside = pattern.inside, lookbehind = !!pattern.lookbehind, greedy = !!pattern.greedy, lookbehindLength = 0, alias = pattern.alias;
          if (greedy && !pattern.pattern.global) {
            var flags2 = pattern.pattern.toString().match(/[imuy]*$/)[0];
            pattern.pattern = RegExp(pattern.pattern.source, flags2 + "g");
          }
          pattern = pattern.pattern || pattern;
          for (var i = index2, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {
            var str2 = strarr[i];
            if (strarr.length > text.length) {
              return;
            }
            if (str2 instanceof Token2) {
              continue;
            }
            if (greedy && i != strarr.length - 1) {
              pattern.lastIndex = pos;
              var match = pattern.exec(text);
              if (!match) {
                break;
              }
              var from = match.index + (lookbehind ? match[1].length : 0), to = match.index + match[0].length, k2 = i, p2 = pos;
              for (var len = strarr.length; k2 < len && (p2 < to || !strarr[k2].type && !strarr[k2 - 1].greedy); ++k2) {
                p2 += strarr[k2].length;
                if (from >= p2) {
                  ++i;
                  pos = p2;
                }
              }
              if (strarr[i] instanceof Token2) {
                continue;
              }
              delNum = k2 - i;
              str2 = text.slice(pos, p2);
              match.index -= pos;
            } else {
              pattern.lastIndex = 0;
              var match = pattern.exec(str2), delNum = 1;
            }
            if (!match) {
              if (oneshot) {
                break;
              }
              continue;
            }
            if (lookbehind) {
              lookbehindLength = match[1] ? match[1].length : 0;
            }
            var from = match.index + lookbehindLength, match = match[0].slice(lookbehindLength), to = from + match.length, before = str2.slice(0, from), after = str2.slice(to);
            var args = [i, delNum];
            if (before) {
              ++i;
              pos += before.length;
              args.push(before);
            }
            var wrapped = new Token2(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);
            args.push(wrapped);
            if (after) {
              args.push(after);
            }
            Array.prototype.splice.apply(strarr, args);
            if (delNum != 1) {
              _.matchGrammar(text, strarr, grammar, i, pos, true, token);
            }
            if (oneshot) {
              break;
            }
          }
        }
      }
    },
    hooks: {
      add: function() {
      }
    },
    tokenize: function(text, grammar, language) {
      var strarr = [text];
      var rest = grammar.rest;
      if (rest) {
        for (var token in rest) {
          grammar[token] = rest[token];
        }
        delete grammar.rest;
      }
      _.matchGrammar(text, strarr, grammar, 0, 0, false);
      return strarr;
    }
  };
  var Token = _.Token = function(type, content, alias, matchedStr, greedy) {
    this.type = type;
    this.content = content;
    this.alias = alias;
    this.length = (matchedStr || "").length | 0;
    this.greedy = !!greedy;
  };
  Token.stringify = function(o, language, parent) {
    if (typeof o == "string") {
      return o;
    }
    if (_.util.type(o) === "Array") {
      return o.map(function(element) {
        return Token.stringify(element, language, o);
      }).join("");
    }
    var env2 = {
      type: o.type,
      content: Token.stringify(o.content, language, parent),
      tag: "span",
      classes: ["token", o.type],
      attributes: {},
      language,
      parent
    };
    if (o.alias) {
      var aliases = _.util.type(o.alias) === "Array" ? o.alias : [o.alias];
      Array.prototype.push.apply(env2.classes, aliases);
    }
    var attributes = Object.keys(env2.attributes).map(function(name) {
      return name + '="' + (env2.attributes[name] || "").replace(/"/g, "&quot;") + '"';
    }).join(" ");
    return "<" + env2.tag + ' class="' + env2.classes.join(" ") + '"' + (attributes ? " " + attributes : "") + ">" + env2.content + "</" + env2.tag + ">";
  };
  return _;
}();
Prism.languages.markup = {
  comment: /<!--[\s\S]*?-->/,
  prolog: /<\?[\s\S]+?\?>/,
  doctype: /<!DOCTYPE[\s\S]+?>/i,
  cdata: /<!\[CDATA\[[\s\S]*?]]>/i,
  tag: {
    pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i,
    greedy: true,
    inside: {
      tag: {
        pattern: /^<\/?[^\s>\/]+/i,
        inside: {
          punctuation: /^<\/?/,
          namespace: /^[^\s>\/:]+:/
        }
      },
      "attr-value": {
        pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,
        inside: {
          punctuation: [/^=/, {
            pattern: /^(\s*)["']|["']$/,
            lookbehind: true
          }]
        }
      },
      punctuation: /\/?>/,
      "attr-name": {
        pattern: /[^\s>\/]+/,
        inside: {
          namespace: /^[^\s>\/:]+:/
        }
      }
    }
  },
  entity: /&#?[\da-z]{1,8};/i
};
Prism.languages.markup["tag"].inside["attr-value"].inside["entity"] = Prism.languages.markup["entity"];
Prism.hooks.add("wrap", function(env2) {
  if (env2.type === "entity") {
    env2.attributes["title"] = env2.content.replace(/&amp;/, "&");
  }
});
Object.defineProperty(Prism.languages.markup.tag, "addInlined", {
  value: function addInlined(tagName, lang) {
    var includedCdataInside = {};
    includedCdataInside["language-" + lang] = {
      pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
      lookbehind: true,
      inside: Prism.languages[lang]
    };
    includedCdataInside["cdata"] = /^<!\[CDATA\[|\]\]>$/i;
    var inside = {
      "included-cdata": {
        pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
        inside: includedCdataInside
      }
    };
    inside["language-" + lang] = {
      pattern: /[\s\S]+/,
      inside: Prism.languages[lang]
    };
    var def2 = {};
    def2[tagName] = {
      pattern: RegExp(/(<__[\s\S]*?>)(?:<!\[CDATA\[[\s\S]*?\]\]>\s*|[\s\S])*?(?=<\/__>)/.source.replace(/__/g, tagName), "i"),
      lookbehind: true,
      greedy: true,
      inside
    };
    Prism.languages.insertBefore("markup", "cdata", def2);
  }
});
Prism.languages.xml = Prism.languages.extend("markup", {});
Prism.languages.html = Prism.languages.markup;
Prism.languages.mathml = Prism.languages.markup;
Prism.languages.svg = Prism.languages.markup;
(function(Prism2) {
  var envVars = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b";
  var insideString = {
    environment: {
      pattern: RegExp("\\$" + envVars),
      alias: "constant"
    },
    variable: [
      {
        pattern: /\$?\(\([\s\S]+?\)\)/,
        greedy: true,
        inside: {
          variable: [{
            pattern: /(^\$\(\([\s\S]+)\)\)/,
            lookbehind: true
          }, /^\$\(\(/],
          number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee]-?\d+)?/,
          operator: /--?|-=|\+\+?|\+=|!=?|~|\*\*?|\*=|\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\^=?|\|\|?|\|=|\?|:/,
          punctuation: /\(\(?|\)\)?|,|;/
        }
      },
      {
        pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
        greedy: true,
        inside: {
          variable: /^\$\(|^`|\)$|`$/
        }
      },
      {
        pattern: /\$\{[^}]+\}/,
        greedy: true,
        inside: {
          operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
          punctuation: /[\[\]]/,
          environment: {
            pattern: RegExp("(\\{)" + envVars),
            lookbehind: true,
            alias: "constant"
          }
        }
      },
      /\$(?:\w+|[#?*!@$])/
    ],
    entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/
  };
  Prism2.languages.bash = {
    shebang: {
      pattern: /^#!\s*\/.*/,
      alias: "important"
    },
    comment: {
      pattern: /(^|[^"{\\$])#.*/,
      lookbehind: true
    },
    "function-name": [
      {
        pattern: /(\bfunction\s+)\w+(?=(?:\s*\(?:\s*\))?\s*\{)/,
        lookbehind: true,
        alias: "function"
      },
      {
        pattern: /\b\w+(?=\s*\(\s*\)\s*\{)/,
        alias: "function"
      }
    ],
    "for-or-select": {
      pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
      alias: "variable",
      lookbehind: true
    },
    "assign-left": {
      pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
      inside: {
        environment: {
          pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + envVars),
          lookbehind: true,
          alias: "constant"
        }
      },
      alias: "variable",
      lookbehind: true
    },
    string: [
      {
        pattern: /((?:^|[^<])<<-?\s*)(\w+?)\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\2/,
        lookbehind: true,
        greedy: true,
        inside: insideString
      },
      {
        pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\3/,
        lookbehind: true,
        greedy: true
      },
      {
        pattern: /(["'])(?:\\[\s\S]|\$\([^)]+\)|`[^`]+`|(?!\1)[^\\])*\1/,
        greedy: true,
        inside: insideString
      }
    ],
    environment: {
      pattern: RegExp("\\$?" + envVars),
      alias: "constant"
    },
    variable: insideString.variable,
    function: {
      pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
      lookbehind: true
    },
    keyword: {
      pattern: /(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/,
      lookbehind: true
    },
    builtin: {
      pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/,
      lookbehind: true,
      alias: "class-name"
    },
    boolean: {
      pattern: /(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/,
      lookbehind: true
    },
    "file-descriptor": {
      pattern: /\B&\d\b/,
      alias: "important"
    },
    operator: {
      pattern: /\d?<>|>\||\+=|==?|!=?|=~|<<[<-]?|[&\d]?>>|\d?[<>]&?|&[>&]?|\|[&|]?|<=?|>=?/,
      inside: {
        "file-descriptor": {
          pattern: /^\d/,
          alias: "important"
        }
      }
    },
    punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
    number: {
      pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
      lookbehind: true
    }
  };
  var toBeCopied = ["comment", "function-name", "for-or-select", "assign-left", "string", "environment", "function", "keyword", "builtin", "boolean", "file-descriptor", "operator", "punctuation", "number"];
  var inside = insideString.variable[1].inside;
  for (var i = 0; i < toBeCopied.length; i++) {
    inside[toBeCopied[i]] = Prism2.languages.bash[toBeCopied[i]];
  }
  Prism2.languages.shell = Prism2.languages.bash;
})(Prism);
Prism.languages.clike = {
  comment: [{
    pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
    lookbehind: true
  }, {
    pattern: /(^|[^\\:])\/\/.*/,
    lookbehind: true,
    greedy: true
  }],
  string: {
    pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
    greedy: true
  },
  "class-name": {
    pattern: /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,
    lookbehind: true,
    inside: {
      punctuation: /[.\\]/
    }
  },
  keyword: /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
  boolean: /\b(?:true|false)\b/,
  function: /\w+(?=\()/,
  number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,
  operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,
  punctuation: /[{}[\];(),.:]/
};
Prism.languages.c = Prism.languages.extend("clike", {
  "class-name": {
    pattern: /(\b(?:enum|struct)\s+)\w+/,
    lookbehind: true
  },
  keyword: /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,
  operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/,
  number: /(?:\b0x(?:[\da-f]+\.?[\da-f]*|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?)[ful]*/i
});
Prism.languages.insertBefore("c", "string", {
  macro: {
    pattern: /(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,
    lookbehind: true,
    alias: "property",
    inside: {
      string: {
        pattern: /(#\s*include\s*)(?:<.+?>|("|')(?:\\?.)+?\2)/,
        lookbehind: true
      },
      directive: {
        pattern: /(#\s*)\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\b/,
        lookbehind: true,
        alias: "keyword"
      }
    }
  },
  constant: /\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/
});
delete Prism.languages.c["boolean"];
Prism.languages.cpp = Prism.languages.extend("c", {
  "class-name": {
    pattern: /(\b(?:class|enum|struct)\s+)\w+/,
    lookbehind: true
  },
  keyword: /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,
  number: {
    pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+\.?[\da-f']*|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+\.?[\d']*|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]*/i,
    greedy: true
  },
  operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
  boolean: /\b(?:true|false)\b/
});
Prism.languages.insertBefore("cpp", "string", {
  "raw-string": {
    pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,
    alias: "string",
    greedy: true
  }
});
(function(Prism2) {
  var string = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;
  Prism2.languages.css = {
    comment: /\/\*[\s\S]*?\*\//,
    atrule: {
      pattern: /@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/,
      inside: {
        rule: /@[\w-]+/
      }
    },
    url: {
      pattern: RegExp("url\\((?:" + string.source + "|[^\n\r()]*)\\)", "i"),
      inside: {
        function: /^url/i,
        punctuation: /^\(|\)$/
      }
    },
    selector: RegExp(`[^{}\\s](?:[^{};"']|` + string.source + ")*?(?=\\s*\\{)"),
    string: {
      pattern: string,
      greedy: true
    },
    property: /[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,
    important: /!important\b/i,
    function: /[-a-z0-9]+(?=\()/i,
    punctuation: /[(){};:,]/
  };
  Prism2.languages.css["atrule"].inside.rest = Prism2.languages.css;
  var markup = Prism2.languages.markup;
  if (markup) {
    markup.tag.addInlined("style", "css");
    Prism2.languages.insertBefore("inside", "attr-value", {
      "style-attr": {
        pattern: /\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,
        inside: {
          "attr-name": {
            pattern: /^\s*style/i,
            inside: markup.tag.inside
          },
          punctuation: /^\s*=\s*['"]|['"]\s*$/,
          "attr-value": {
            pattern: /.+/i,
            inside: Prism2.languages.css
          }
        },
        alias: "language-css"
      }
    }, markup.tag);
  }
})(Prism);
Prism.languages.css.selector = {
  pattern: Prism.languages.css.selector,
  inside: {
    "pseudo-element": /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
    "pseudo-class": /:[-\w]+/,
    class: /\.[-:.\w]+/,
    id: /#[-:.\w]+/,
    attribute: {
      pattern: /\[(?:[^[\]"']|("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1)*\]/,
      greedy: true,
      inside: {
        punctuation: /^\[|\]$/,
        "case-sensitivity": {
          pattern: /(\s)[si]$/i,
          lookbehind: true,
          alias: "keyword"
        },
        namespace: {
          pattern: /^(\s*)[-*\w\xA0-\uFFFF]*\|(?!=)/,
          lookbehind: true,
          inside: {
            punctuation: /\|$/
          }
        },
        attribute: {
          pattern: /^(\s*)[-\w\xA0-\uFFFF]+/,
          lookbehind: true
        },
        value: [/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, {
          pattern: /(=\s*)[-\w\xA0-\uFFFF]+(?=\s*$)/,
          lookbehind: true
        }],
        operator: /[|~*^$]?=/
      }
    },
    "n-th": [{
      pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,
      lookbehind: true,
      inside: {
        number: /[\dn]+/,
        operator: /[+-]/
      }
    }, {
      pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i,
      lookbehind: true
    }],
    punctuation: /[()]/
  }
};
Prism.languages.insertBefore("css", "property", {
  variable: {
    pattern: /(^|[^-\w\xA0-\uFFFF])--[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*/i,
    lookbehind: true
  }
});
Prism.languages.insertBefore("css", "function", {
  operator: {
    pattern: /(\s)[+\-*\/](?=\s)/,
    lookbehind: true
  },
  hexcode: /#[\da-f]{3,8}/i,
  entity: /\\[\da-f]{1,8}/i,
  unit: {
    pattern: /(\d)(?:%|[a-z]+)/,
    lookbehind: true
  },
  number: /-?[\d.]+/
});
Prism.languages.javascript = Prism.languages.extend("clike", {
  "class-name": [Prism.languages.clike["class-name"], {
    pattern: /(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,
    lookbehind: true
  }],
  keyword: [{
    pattern: /((?:^|})\s*)(?:catch|finally)\b/,
    lookbehind: true
  }, {
    pattern: /(^|[^.])\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
    lookbehind: true
  }],
  number: /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,
  function: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
  operator: /-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/
});
Prism.languages.javascript["class-name"][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/;
Prism.languages.insertBefore("javascript", "keyword", {
  regex: {
    pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=\s*($|[\r\n,.;})\]]))/,
    lookbehind: true,
    greedy: true
  },
  "function-variable": {
    pattern: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,
    alias: "function"
  },
  parameter: [{
    pattern: /(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,
    lookbehind: true,
    inside: Prism.languages.javascript
  }, {
    pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,
    inside: Prism.languages.javascript
  }, {
    pattern: /(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,
    lookbehind: true,
    inside: Prism.languages.javascript
  }, {
    pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,
    lookbehind: true,
    inside: Prism.languages.javascript
  }],
  constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
});
Prism.languages.insertBefore("javascript", "string", {
  "template-string": {
    pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,
    greedy: true,
    inside: {
      "template-punctuation": {
        pattern: /^`|`$/,
        alias: "string"
      },
      interpolation: {
        pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,
        lookbehind: true,
        inside: {
          "interpolation-punctuation": {
            pattern: /^\${|}$/,
            alias: "punctuation"
          },
          rest: Prism.languages.javascript
        }
      },
      string: /[\s\S]+/
    }
  }
});
if (Prism.languages.markup) {
  Prism.languages.markup.tag.addInlined("script", "javascript");
}
Prism.languages.js = Prism.languages.javascript;
(function(Prism2) {
  var javascript = Prism2.util.clone(Prism2.languages.javascript);
  Prism2.languages.jsx = Prism2.languages.extend("markup", javascript);
  Prism2.languages.jsx.tag.pattern = /<\/?(?:[\w.:-]+\s*(?:\s+(?:[\w.:-]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s{'">=]+|\{(?:\{(?:\{[^}]*\}|[^{}])*\}|[^{}])+\}))?|\{\.{3}[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\}))*\s*\/?)?>/i;
  Prism2.languages.jsx.tag.inside["tag"].pattern = /^<\/?[^\s>\/]*/i;
  Prism2.languages.jsx.tag.inside["attr-value"].pattern = /=(?!\{)(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">]+)/i;
  Prism2.languages.jsx.tag.inside["tag"].inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/;
  Prism2.languages.insertBefore("inside", "attr-name", {
    spread: {
      pattern: /\{\.{3}[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\}/,
      inside: {
        punctuation: /\.{3}|[{}.]/,
        "attr-value": /\w+/
      }
    }
  }, Prism2.languages.jsx.tag);
  Prism2.languages.insertBefore("inside", "attr-value", {
    script: {
      pattern: /=(\{(?:\{(?:\{[^}]*\}|[^}])*\}|[^}])+\})/i,
      inside: {
        "script-punctuation": {
          pattern: /^=(?={)/,
          alias: "punctuation"
        },
        rest: Prism2.languages.jsx
      },
      alias: "language-javascript"
    }
  }, Prism2.languages.jsx.tag);
  var stringifyToken = function(token) {
    if (!token) {
      return "";
    }
    if (typeof token === "string") {
      return token;
    }
    if (typeof token.content === "string") {
      return token.content;
    }
    return token.content.map(stringifyToken).join("");
  };
  var walkTokens = function(tokens) {
    var openedTags = [];
    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];
      var notTagNorBrace = false;
      if (typeof token !== "string") {
        if (token.type === "tag" && token.content[0] && token.content[0].type === "tag") {
          if (token.content[0].content[0].content === "</") {
            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {
              openedTags.pop();
            }
          } else {
            if (token.content[token.content.length - 1].content === "/>")
              ;
            else {
              openedTags.push({
                tagName: stringifyToken(token.content[0].content[1]),
                openedBraces: 0
              });
            }
          }
        } else if (openedTags.length > 0 && token.type === "punctuation" && token.content === "{") {
          openedTags[openedTags.length - 1].openedBraces++;
        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === "punctuation" && token.content === "}") {
          openedTags[openedTags.length - 1].openedBraces--;
        } else {
          notTagNorBrace = true;
        }
      }
      if (notTagNorBrace || typeof token === "string") {
        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {
          var plainText = stringifyToken(token);
          if (i < tokens.length - 1 && (typeof tokens[i + 1] === "string" || tokens[i + 1].type === "plain-text")) {
            plainText += stringifyToken(tokens[i + 1]);
            tokens.splice(i + 1, 1);
          }
          if (i > 0 && (typeof tokens[i - 1] === "string" || tokens[i - 1].type === "plain-text")) {
            plainText = stringifyToken(tokens[i - 1]) + plainText;
            tokens.splice(i - 1, 1);
            i--;
          }
          tokens[i] = new Prism2.Token("plain-text", plainText, null, plainText);
        }
      }
      if (token.content && typeof token.content !== "string") {
        walkTokens(token.content);
      }
    }
  };
  Prism2.hooks.add("after-tokenize", function(env2) {
    if (env2.language !== "jsx" && env2.language !== "tsx") {
      return;
    }
    walkTokens(env2.tokens);
  });
})(Prism);
(function(Prism2) {
  var javaDocLike = Prism2.languages.javadoclike = {
    parameter: {
      pattern: /(^\s*(?:\/{3}|\*|\/\*\*)\s*@(?:param|arg|arguments)\s+)\w+/m,
      lookbehind: true
    },
    keyword: {
      pattern: /(^\s*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,
      lookbehind: true
    },
    punctuation: /[{}]/
  };
  function docCommentSupport(lang, callback) {
    var tokenName = "doc-comment";
    var grammar = Prism2.languages[lang];
    if (!grammar) {
      return;
    }
    var token = grammar[tokenName];
    if (!token) {
      var definition = {};
      definition[tokenName] = {
        pattern: /(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,
        alias: "comment"
      };
      grammar = Prism2.languages.insertBefore(lang, "comment", definition);
      token = grammar[tokenName];
    }
    if (token instanceof RegExp) {
      token = grammar[tokenName] = {
        pattern: token
      };
    }
    if (Array.isArray(token)) {
      for (var i = 0, l2 = token.length; i < l2; i++) {
        if (token[i] instanceof RegExp) {
          token[i] = {
            pattern: token[i]
          };
        }
        callback(token[i]);
      }
    } else {
      callback(token);
    }
  }
  function addSupport(languages, docLanguage) {
    if (typeof languages === "string") {
      languages = [languages];
    }
    languages.forEach(function(lang) {
      docCommentSupport(lang, function(pattern) {
        if (!pattern.inside) {
          pattern.inside = {};
        }
        pattern.inside.rest = docLanguage;
      });
    });
  }
  Object.defineProperty(javaDocLike, "addSupport", {
    value: addSupport
  });
  javaDocLike.addSupport(["java", "javascript", "php"], javaDocLike);
})(Prism);
(function(Prism2) {
  var keywords = /\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\b/;
  var className = /\b[A-Z](?:\w*[a-z]\w*)?\b/;
  Prism2.languages.java = Prism2.languages.extend("clike", {
    "class-name": [
      className,
      /\b[A-Z]\w*(?=\s+\w+\s*[;,=())])/
    ],
    keyword: keywords,
    function: [Prism2.languages.clike.function, {
      pattern: /(\:\:)[a-z_]\w*/,
      lookbehind: true
    }],
    number: /\b0b[01][01_]*L?\b|\b0x[\da-f_]*\.?[\da-f_p+-]+\b|(?:\b\d[\d_]*\.?[\d_]*|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,
    operator: {
      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\2|[?:~]|[-+*/%&|^!=<>]=?)/m,
      lookbehind: true
    }
  });
  Prism2.languages.insertBefore("java", "class-name", {
    annotation: {
      alias: "punctuation",
      pattern: /(^|[^.])@\w+/,
      lookbehind: true
    },
    namespace: {
      pattern: /(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)[a-z]\w*(\.[a-z]\w*)+/,
      lookbehind: true,
      inside: {
        punctuation: /\./
      }
    },
    generics: {
      pattern: /<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,
      inside: {
        "class-name": className,
        keyword: keywords,
        punctuation: /[<>(),.:]/,
        operator: /[?&|]/
      }
    }
  });
})(Prism);
(function(Prism2) {
  function getPlaceholder(language, index2) {
    return "___" + language.toUpperCase() + index2 + "___";
  }
  Object.defineProperties(Prism2.languages["markup-templating"] = {}, {
    buildPlaceholders: {
      value: function(env2, language, placeholderPattern, replaceFilter) {
        if (env2.language !== language) {
          return;
        }
        var tokenStack = env2.tokenStack = [];
        env2.code = env2.code.replace(placeholderPattern, function(match) {
          if (typeof replaceFilter === "function" && !replaceFilter(match)) {
            return match;
          }
          var i = tokenStack.length;
          var placeholder;
          while (env2.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {
            ++i;
          }
          tokenStack[i] = match;
          return placeholder;
        });
        env2.grammar = Prism2.languages.markup;
      }
    },
    tokenizePlaceholders: {
      value: function(env2, language) {
        if (env2.language !== language || !env2.tokenStack) {
          return;
        }
        env2.grammar = Prism2.languages[language];
        var j = 0;
        var keys3 = Object.keys(env2.tokenStack);
        function walkTokens(tokens) {
          for (var i = 0; i < tokens.length; i++) {
            if (j >= keys3.length) {
              break;
            }
            var token = tokens[i];
            if (typeof token === "string" || token.content && typeof token.content === "string") {
              var k2 = keys3[j];
              var t2 = env2.tokenStack[k2];
              var s2 = typeof token === "string" ? token : token.content;
              var placeholder = getPlaceholder(language, k2);
              var index2 = s2.indexOf(placeholder);
              if (index2 > -1) {
                ++j;
                var before = s2.substring(0, index2);
                var middle = new Prism2.Token(language, Prism2.tokenize(t2, env2.grammar), "language-" + language, t2);
                var after = s2.substring(index2 + placeholder.length);
                var replacement = [];
                if (before) {
                  replacement.push.apply(replacement, walkTokens([before]));
                }
                replacement.push(middle);
                if (after) {
                  replacement.push.apply(replacement, walkTokens([after]));
                }
                if (typeof token === "string") {
                  tokens.splice.apply(tokens, [i, 1].concat(replacement));
                } else {
                  token.content = replacement;
                }
              }
            } else if (token.content) {
              walkTokens(token.content);
            }
          }
          return tokens;
        }
        walkTokens(env2.tokens);
      }
    }
  });
})(Prism);
(function(Prism2) {
  Prism2.languages.php = Prism2.languages.extend("clike", {
    keyword: /\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\b/i,
    boolean: {
      pattern: /\b(?:false|true)\b/i,
      alias: "constant"
    },
    constant: [/\b[A-Z_][A-Z0-9_]*\b/, /\b(?:null)\b/i],
    comment: {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
      lookbehind: true
    }
  });
  Prism2.languages.insertBefore("php", "string", {
    "shell-comment": {
      pattern: /(^|[^\\])#.*/,
      lookbehind: true,
      alias: "comment"
    }
  });
  Prism2.languages.insertBefore("php", "comment", {
    delimiter: {
      pattern: /\?>$|^<\?(?:php(?=\s)|=)?/i,
      alias: "important"
    }
  });
  Prism2.languages.insertBefore("php", "keyword", {
    variable: /\$+(?:\w+\b|(?={))/i,
    package: {
      pattern: /(\\|namespace\s+|use\s+)[\w\\]+/,
      lookbehind: true,
      inside: {
        punctuation: /\\/
      }
    }
  });
  Prism2.languages.insertBefore("php", "operator", {
    property: {
      pattern: /(->)[\w]+/,
      lookbehind: true
    }
  });
  var string_interpolation = {
    pattern: /{\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\{])\$+(?:\w+(?:\[.+?]|->\w+)*)/,
    lookbehind: true,
    inside: {
      rest: Prism2.languages.php
    }
  };
  Prism2.languages.insertBefore("php", "string", {
    "nowdoc-string": {
      pattern: /<<<'([^']+)'(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;/,
      greedy: true,
      alias: "string",
      inside: {
        delimiter: {
          pattern: /^<<<'[^']+'|[a-z_]\w*;$/i,
          alias: "symbol",
          inside: {
            punctuation: /^<<<'?|[';]$/
          }
        }
      }
    },
    "heredoc-string": {
      pattern: /<<<(?:"([^"]+)"(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;|([a-z_]\w*)(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\2;)/i,
      greedy: true,
      alias: "string",
      inside: {
        delimiter: {
          pattern: /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,
          alias: "symbol",
          inside: {
            punctuation: /^<<<"?|[";]$/
          }
        },
        interpolation: string_interpolation
      }
    },
    "single-quoted-string": {
      pattern: /'(?:\\[\s\S]|[^\\'])*'/,
      greedy: true,
      alias: "string"
    },
    "double-quoted-string": {
      pattern: /"(?:\\[\s\S]|[^\\"])*"/,
      greedy: true,
      alias: "string",
      inside: {
        interpolation: string_interpolation
      }
    }
  });
  delete Prism2.languages.php["string"];
  Prism2.hooks.add("before-tokenize", function(env2) {
    if (!/<\?/.test(env2.code)) {
      return;
    }
    var phpPattern = /<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#)(?:[^?\n\r]|\?(?!>))*|\/\*[\s\S]*?(?:\*\/|$))*?(?:\?>|$)/ig;
    Prism2.languages["markup-templating"].buildPlaceholders(env2, "php", phpPattern);
  });
  Prism2.hooks.add("after-tokenize", function(env2) {
    Prism2.languages["markup-templating"].tokenizePlaceholders(env2, "php");
  });
})(Prism);
(function(Prism2) {
  var javascript = Prism2.languages.javascript;
  var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;
  var parameterPrefix = "(@(?:param|arg|argument|property)\\s+(?:" + type + "\\s+)?)";
  Prism2.languages.jsdoc = Prism2.languages.extend("javadoclike", {
    parameter: {
      pattern: RegExp(parameterPrefix + /[$\w\xA0-\uFFFF.]+(?=\s|$)/.source),
      lookbehind: true,
      inside: {
        punctuation: /\./
      }
    }
  });
  Prism2.languages.insertBefore("jsdoc", "keyword", {
    "optional-parameter": {
      pattern: RegExp(parameterPrefix + /\[[$\w\xA0-\uFFFF.]+(?:=[^[\]]+)?\](?=\s|$)/.source),
      lookbehind: true,
      inside: {
        parameter: {
          pattern: /(^\[)[$\w\xA0-\uFFFF\.]+/,
          lookbehind: true,
          inside: {
            punctuation: /\./
          }
        },
        code: {
          pattern: /(=)[\s\S]*(?=\]$)/,
          lookbehind: true,
          inside: javascript,
          alias: "language-javascript"
        },
        punctuation: /[=[\]]/
      }
    },
    "class-name": [{
      pattern: RegExp("(@[a-z]+\\s+)" + type),
      lookbehind: true,
      inside: {
        punctuation: /[.,:?=<>|{}()[\]]/
      }
    }, {
      pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\s+)[A-Z]\w*(?:\.[A-Z]\w*)*/,
      lookbehind: true,
      inside: {
        punctuation: /\./
      }
    }],
    example: {
      pattern: /(@example\s+)[^@]+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,
      lookbehind: true,
      inside: {
        code: {
          pattern: /^(\s*(?:\*\s*)?).+$/m,
          lookbehind: true,
          inside: javascript,
          alias: "language-javascript"
        }
      }
    }
  });
  Prism2.languages.javadoclike.addSupport("javascript", Prism2.languages.jsdoc);
})(Prism);
Prism.languages.actionscript = Prism.languages.extend("javascript", {
  keyword: /\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\b/,
  operator: /\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/
});
Prism.languages.actionscript["class-name"].alias = "function";
if (Prism.languages.markup) {
  Prism.languages.insertBefore("actionscript", "string", {
    xml: {
      pattern: /(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,
      lookbehind: true,
      inside: {
        rest: Prism.languages.markup
      }
    }
  });
}
(function(Prism2) {
  var comment = /#(?!\{).+/, interpolation = {
    pattern: /#\{[^}]+\}/,
    alias: "variable"
  };
  Prism2.languages.coffeescript = Prism2.languages.extend("javascript", {
    comment,
    string: [
      {
        pattern: /'(?:\\[\s\S]|[^\\'])*'/,
        greedy: true
      },
      {
        pattern: /"(?:\\[\s\S]|[^\\"])*"/,
        greedy: true,
        inside: {
          interpolation
        }
      }
    ],
    keyword: /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
    "class-member": {
      pattern: /@(?!\d)\w+/,
      alias: "variable"
    }
  });
  Prism2.languages.insertBefore("coffeescript", "comment", {
    "multiline-comment": {
      pattern: /###[\s\S]+?###/,
      alias: "comment"
    },
    "block-regex": {
      pattern: /\/{3}[\s\S]*?\/{3}/,
      alias: "regex",
      inside: {
        comment,
        interpolation
      }
    }
  });
  Prism2.languages.insertBefore("coffeescript", "string", {
    "inline-javascript": {
      pattern: /`(?:\\[\s\S]|[^\\`])*`/,
      inside: {
        delimiter: {
          pattern: /^`|`$/,
          alias: "punctuation"
        },
        rest: Prism2.languages.javascript
      }
    },
    "multiline-string": [{
      pattern: /'''[\s\S]*?'''/,
      greedy: true,
      alias: "string"
    }, {
      pattern: /"""[\s\S]*?"""/,
      greedy: true,
      alias: "string",
      inside: {
        interpolation
      }
    }]
  });
  Prism2.languages.insertBefore("coffeescript", "keyword", {
    property: /(?!\d)\w+(?=\s*:(?!:))/
  });
  delete Prism2.languages.coffeescript["template-string"];
  Prism2.languages.coffee = Prism2.languages.coffeescript;
})(Prism);
(function(Prism2) {
  Prism2.languages.insertBefore("javascript", "function-variable", {
    "method-variable": {
      pattern: RegExp("(\\.\\s*)" + Prism2.languages.javascript["function-variable"].pattern.source),
      lookbehind: true,
      alias: ["function-variable", "method", "function", "property-access"]
    }
  });
  Prism2.languages.insertBefore("javascript", "function", {
    method: {
      pattern: RegExp("(\\.\\s*)" + Prism2.languages.javascript["function"].source),
      lookbehind: true,
      alias: ["function", "property-access"]
    }
  });
  Prism2.languages.insertBefore("javascript", "constant", {
    "known-class-name": [{
      pattern: /\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\b/,
      alias: "class-name"
    }, {
      pattern: /\b(?:[A-Z]\w*)Error\b/,
      alias: "class-name"
    }]
  });
  Prism2.languages.javascript["keyword"].unshift({
    pattern: /\b(?:as|default|export|from|import)\b/,
    alias: "module"
  }, {
    pattern: /\bnull\b/,
    alias: ["null", "nil"]
  }, {
    pattern: /\bundefined\b/,
    alias: "nil"
  });
  Prism2.languages.insertBefore("javascript", "operator", {
    spread: {
      pattern: /\.{3}/,
      alias: "operator"
    },
    arrow: {
      pattern: /=>/,
      alias: "operator"
    }
  });
  Prism2.languages.insertBefore("javascript", "punctuation", {
    "property-access": {
      pattern: /(\.\s*)#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*/,
      lookbehind: true
    },
    "maybe-class-name": {
      pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,
      lookbehind: true
    },
    dom: {
      pattern: /\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\b/,
      alias: "variable"
    },
    console: {
      pattern: /\bconsole(?=\s*\.)/,
      alias: "class-name"
    }
  });
  var maybeClassNameTokens = ["function", "function-variable", "method", "method-variable", "property-access"];
  for (var i = 0; i < maybeClassNameTokens.length; i++) {
    var token = maybeClassNameTokens[i];
    var value = Prism2.languages.javascript[token];
    if (Prism2.util.type(value) === "RegExp") {
      value = Prism2.languages.javascript[token] = {
        pattern: value
      };
    }
    var inside = value.inside || {};
    value.inside = inside;
    inside["maybe-class-name"] = /^[A-Z][\s\S]*/;
  }
})(Prism);
(function(Prism2) {
  Prism2.languages.flow = Prism2.languages.extend("javascript", {});
  Prism2.languages.insertBefore("flow", "keyword", {
    type: [{
      pattern: /\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\b/,
      alias: "tag"
    }]
  });
  Prism2.languages.flow["function-variable"].pattern = /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/i;
  delete Prism2.languages.flow["parameter"];
  Prism2.languages.insertBefore("flow", "operator", {
    "flow-punctuation": {
      pattern: /\{\||\|\}/,
      alias: "punctuation"
    }
  });
  if (!Array.isArray(Prism2.languages.flow.keyword)) {
    Prism2.languages.flow.keyword = [Prism2.languages.flow.keyword];
  }
  Prism2.languages.flow.keyword.unshift({
    pattern: /(^|[^$]\b)(?:type|opaque|declare|Class)\b(?!\$)/,
    lookbehind: true
  }, {
    pattern: /(^|[^$]\B)\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\b(?!\$)/,
    lookbehind: true
  });
})(Prism);
Prism.languages.n4js = Prism.languages.extend("javascript", {
  keyword: /\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/
});
Prism.languages.insertBefore("n4js", "constant", {
  annotation: {
    pattern: /@+\w+/,
    alias: "operator"
  }
});
Prism.languages.n4jsd = Prism.languages.n4js;
Prism.languages.typescript = Prism.languages.extend("javascript", {
  keyword: /\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\b/,
  builtin: /\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\b/
});
Prism.languages.ts = Prism.languages.typescript;
(function(Prism2) {
  var templateString = Prism2.languages.javascript["template-string"];
  var templateLiteralPattern = templateString.pattern.source;
  var interpolationObject = templateString.inside["interpolation"];
  var interpolationPunctuationObject = interpolationObject.inside["interpolation-punctuation"];
  var interpolationPattern = interpolationObject.pattern.source;
  function createTemplate(language, tag) {
    if (!Prism2.languages[language]) {
      return void 0;
    }
    return {
      pattern: RegExp("((?:" + tag + ")\\s*)" + templateLiteralPattern),
      lookbehind: true,
      greedy: true,
      inside: {
        "template-punctuation": {
          pattern: /^`|`$/,
          alias: "string"
        },
        "embedded-code": {
          pattern: /[\s\S]+/,
          alias: language
        }
      }
    };
  }
  Prism2.languages.javascript["template-string"] = [
    createTemplate("css", /\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),
    createTemplate("html", /\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),
    createTemplate("svg", /\bsvg/.source),
    createTemplate("markdown", /\b(?:md|markdown)/.source),
    createTemplate("graphql", /\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),
    templateString
  ].filter(Boolean);
  function getPlaceholder(counter, language) {
    return "___" + language.toUpperCase() + "_" + counter + "___";
  }
  function tokenizeWithHooks(code, grammar, language) {
    var env2 = {
      code,
      grammar,
      language
    };
    Prism2.hooks.run("before-tokenize", env2);
    env2.tokens = Prism2.tokenize(env2.code, env2.grammar);
    Prism2.hooks.run("after-tokenize", env2);
    return env2.tokens;
  }
  function tokenizeInterpolationExpression(expression) {
    var tempGrammar = {};
    tempGrammar["interpolation-punctuation"] = interpolationPunctuationObject;
    var tokens = Prism2.tokenize(expression, tempGrammar);
    if (tokens.length === 3) {
      var args = [1, 1];
      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism2.languages.javascript, "javascript"));
      tokens.splice.apply(tokens, args);
    }
    return new Prism2.Token("interpolation", tokens, interpolationObject.alias, expression);
  }
  function tokenizeEmbedded(code, grammar, language) {
    var _tokens = Prism2.tokenize(code, {
      interpolation: {
        pattern: RegExp(interpolationPattern),
        lookbehind: true
      }
    });
    var placeholderCounter = 0;
    var placeholderMap = {};
    var embeddedCode = _tokens.map(function(token) {
      if (typeof token === "string") {
        return token;
      } else {
        var interpolationExpression = token.content;
        var placeholder;
        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {
        }
        placeholderMap[placeholder] = interpolationExpression;
        return placeholder;
      }
    }).join("");
    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language);
    var placeholders = Object.keys(placeholderMap);
    placeholderCounter = 0;
    function walkTokens(tokens) {
      for (var i = 0; i < tokens.length; i++) {
        if (placeholderCounter >= placeholders.length) {
          return;
        }
        var token = tokens[i];
        if (typeof token === "string" || typeof token.content === "string") {
          var placeholder = placeholders[placeholderCounter];
          var s2 = typeof token === "string" ? token : token.content;
          var index2 = s2.indexOf(placeholder);
          if (index2 !== -1) {
            ++placeholderCounter;
            var before = s2.substring(0, index2);
            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);
            var after = s2.substring(index2 + placeholder.length);
            var replacement = [];
            if (before) {
              replacement.push(before);
            }
            replacement.push(middle);
            if (after) {
              var afterTokens = [after];
              walkTokens(afterTokens);
              replacement.push.apply(replacement, afterTokens);
            }
            if (typeof token === "string") {
              tokens.splice.apply(tokens, [i, 1].concat(replacement));
              i += replacement.length - 1;
            } else {
              token.content = replacement;
            }
          }
        } else {
          var content = token.content;
          if (Array.isArray(content)) {
            walkTokens(content);
          } else {
            walkTokens([content]);
          }
        }
      }
    }
    walkTokens(embeddedTokens);
    return new Prism2.Token(language, embeddedTokens, "language-" + language, code);
  }
  var supportedLanguages = {
    javascript: true,
    js: true,
    typescript: true,
    ts: true,
    jsx: true,
    tsx: true
  };
  Prism2.hooks.add("after-tokenize", function(env2) {
    if (!(env2.language in supportedLanguages)) {
      return;
    }
    function findTemplateStrings(tokens) {
      for (var i = 0, l2 = tokens.length; i < l2; i++) {
        var token = tokens[i];
        if (typeof token === "string") {
          continue;
        }
        var content = token.content;
        if (!Array.isArray(content)) {
          if (typeof content !== "string") {
            findTemplateStrings([content]);
          }
          continue;
        }
        if (token.type === "template-string") {
          var embedded = content[1];
          if (content.length === 3 && typeof embedded !== "string" && embedded.type === "embedded-code") {
            var code = stringContent(embedded);
            var alias = embedded.alias;
            var language = Array.isArray(alias) ? alias[0] : alias;
            var grammar = Prism2.languages[language];
            if (!grammar) {
              continue;
            }
            content[1] = tokenizeEmbedded(code, grammar, language);
          }
        } else {
          findTemplateStrings(content);
        }
      }
    }
    findTemplateStrings(env2.tokens);
  });
  function stringContent(value) {
    if (typeof value === "string") {
      return value;
    } else if (Array.isArray(value)) {
      return value.map(stringContent).join("");
    } else {
      return stringContent(value.content);
    }
  }
})(Prism);
Prism.languages.graphql = {
  comment: /#.*/,
  string: {
    pattern: /"(?:\\.|[^\\"\r\n])*"/,
    greedy: true
  },
  number: /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
  boolean: /\b(?:true|false)\b/,
  variable: /\$[a-z_]\w*/i,
  directive: {
    pattern: /@[a-z_]\w*/i,
    alias: "function"
  },
  "attr-name": {
    pattern: /[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
    greedy: true
  },
  "class-name": {
    pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+)[a-zA-Z_]\w*/,
    lookbehind: true
  },
  fragment: {
    pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
    lookbehind: true,
    alias: "function"
  },
  keyword: /\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\b/,
  operator: /[!=|]|\.{3}/,
  punctuation: /[!(){}\[\]:=,]/,
  constant: /\b(?!ID\b)[A-Z][A-Z_\d]*\b/
};
(function(Prism2) {
  var inner = /(?:\\.|[^\\\n\r]|(?:\r?\n|\r)(?!\r?\n|\r))/.source;
  function createInline(pattern, starAlternative) {
    pattern = pattern.replace(/<inner>/g, inner);
    if (starAlternative) {
      pattern = pattern + "|" + pattern.replace(/_/g, "\\*");
    }
    return RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + "(?:" + pattern + ")");
  }
  var tableCell = /(?:\\.|``.+?``|`[^`\r\n]+`|[^\\|\r\n`])+/.source;
  var tableRow = /\|?__(?:\|__)+\|?(?:(?:\r?\n|\r)|$)/.source.replace(/__/g, tableCell);
  var tableLine = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\r?\n|\r)/.source;
  Prism2.languages.markdown = Prism2.languages.extend("markup", {});
  Prism2.languages.insertBefore("markdown", "prolog", {
    blockquote: {
      pattern: /^>(?:[\t ]*>)*/m,
      alias: "punctuation"
    },
    table: {
      pattern: RegExp("^" + tableRow + tableLine + "(?:" + tableRow + ")*", "m"),
      inside: {
        "table-data-rows": {
          pattern: RegExp("^(" + tableRow + tableLine + ")(?:" + tableRow + ")*$"),
          lookbehind: true,
          inside: {
            "table-data": {
              pattern: RegExp(tableCell),
              inside: Prism2.languages.markdown
            },
            punctuation: /\|/
          }
        },
        "table-line": {
          pattern: RegExp("^(" + tableRow + ")" + tableLine + "$"),
          lookbehind: true,
          inside: {
            punctuation: /\||:?-{3,}:?/
          }
        },
        "table-header-row": {
          pattern: RegExp("^" + tableRow + "$"),
          inside: {
            "table-header": {
              pattern: RegExp(tableCell),
              alias: "important",
              inside: Prism2.languages.markdown
            },
            punctuation: /\|/
          }
        }
      }
    },
    code: [{
      pattern: /(^[ \t]*(?:\r?\n|\r))(?: {4}|\t).+(?:(?:\r?\n|\r)(?: {4}|\t).+)*/m,
      lookbehind: true,
      alias: "keyword"
    }, {
      pattern: /``.+?``|`[^`\r\n]+`/,
      alias: "keyword"
    }, {
      pattern: /^```[\s\S]*?^```$/m,
      greedy: true,
      inside: {
        "code-block": {
          pattern: /^(```.*(?:\r?\n|\r))[\s\S]+?(?=(?:\r?\n|\r)^```$)/m,
          lookbehind: true
        },
        "code-language": {
          pattern: /^(```).+/,
          lookbehind: true
        },
        punctuation: /```/
      }
    }],
    title: [{
      pattern: /\S.*(?:\r?\n|\r)(?:==+|--+)(?=[ \t]*$)/m,
      alias: "important",
      inside: {
        punctuation: /==+$|--+$/
      }
    }, {
      pattern: /(^\s*)#+.+/m,
      lookbehind: true,
      alias: "important",
      inside: {
        punctuation: /^#+|#+$/
      }
    }],
    hr: {
      pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
      lookbehind: true,
      alias: "punctuation"
    },
    list: {
      pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
      lookbehind: true,
      alias: "punctuation"
    },
    "url-reference": {
      pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
      inside: {
        variable: {
          pattern: /^(!?\[)[^\]]+/,
          lookbehind: true
        },
        string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
        punctuation: /^[\[\]!:]|[<>]/
      },
      alias: "url"
    },
    bold: {
      pattern: createInline(/__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__/.source, true),
      lookbehind: true,
      greedy: true,
      inside: {
        content: {
          pattern: /(^..)[\s\S]+(?=..$)/,
          lookbehind: true,
          inside: {}
        },
        punctuation: /\*\*|__/
      }
    },
    italic: {
      pattern: createInline(/_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_/.source, true),
      lookbehind: true,
      greedy: true,
      inside: {
        content: {
          pattern: /(^.)[\s\S]+(?=.$)/,
          lookbehind: true,
          inside: {}
        },
        punctuation: /[*_]/
      }
    },
    strike: {
      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\2/.source, false),
      lookbehind: true,
      greedy: true,
      inside: {
        content: {
          pattern: /(^~~?)[\s\S]+(?=\1$)/,
          lookbehind: true,
          inside: {}
        },
        punctuation: /~~?/
      }
    },
    url: {
      pattern: createInline(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)| ?\[(?:(?!\])<inner>)+\])/.source, false),
      lookbehind: true,
      greedy: true,
      inside: {
        variable: {
          pattern: /(\[)[^\]]+(?=\]$)/,
          lookbehind: true
        },
        content: {
          pattern: /(^!?\[)[^\]]+(?=\])/,
          lookbehind: true,
          inside: {}
        },
        string: {
          pattern: /"(?:\\.|[^"\\])*"(?=\)$)/
        }
      }
    }
  });
  ["url", "bold", "italic", "strike"].forEach(function(token) {
    ["url", "bold", "italic", "strike"].forEach(function(inside) {
      if (token !== inside) {
        Prism2.languages.markdown[token].inside.content.inside[inside] = Prism2.languages.markdown[inside];
      }
    });
  });
  Prism2.hooks.add("after-tokenize", function(env2) {
    if (env2.language !== "markdown" && env2.language !== "md") {
      return;
    }
    function walkTokens(tokens) {
      if (!tokens || typeof tokens === "string") {
        return;
      }
      for (var i = 0, l2 = tokens.length; i < l2; i++) {
        var token = tokens[i];
        if (token.type !== "code") {
          walkTokens(token.content);
          continue;
        }
        var codeLang = token.content[1];
        var codeBlock = token.content[3];
        if (codeLang && codeBlock && codeLang.type === "code-language" && codeBlock.type === "code-block" && typeof codeLang.content === "string") {
          var alias = "language-" + codeLang.content.trim().split(/\s+/)[0].toLowerCase();
          if (!codeBlock.alias) {
            codeBlock.alias = [alias];
          } else if (typeof codeBlock.alias === "string") {
            codeBlock.alias = [codeBlock.alias, alias];
          } else {
            codeBlock.alias.push(alias);
          }
        }
      }
    }
    walkTokens(env2.tokens);
  });
  Prism2.hooks.add("wrap", function(env2) {
    if (env2.type !== "code-block") {
      return;
    }
    var codeLang = "";
    for (var i = 0, l2 = env2.classes.length; i < l2; i++) {
      var cls = env2.classes[i];
      var match = /language-(.+)/.exec(cls);
      if (match) {
        codeLang = match[1];
        break;
      }
    }
    var grammar = Prism2.languages[codeLang];
    if (!grammar) {
      if (codeLang && codeLang !== "none" && Prism2.plugins.autoloader) {
        var id2 = "md-" + new Date().valueOf() + "-" + Math.floor(Math.random() * 1e16);
        env2.attributes["id"] = id2;
        Prism2.plugins.autoloader.loadLanguages(codeLang, function() {
          var ele = document.getElementById(id2);
          if (ele) {
            ele.innerHTML = Prism2.highlight(ele.textContent, Prism2.languages[codeLang], codeLang);
          }
        });
      }
    } else {
      var code = env2.content.replace(/&lt;/g, "<").replace(/&amp;/g, "&");
      env2.content = Prism2.highlight(code, grammar, codeLang);
    }
  });
  Prism2.languages.md = Prism2.languages.markdown;
})(Prism);
(function(Prism2) {
  Prism2.languages.diff = {
    coord: [
      /^(?:\*{3}|-{3}|\+{3}).*$/m,
      /^@@.*@@$/m,
      /^\d+.*$/m
    ]
  };
  var PREFIXES = {
    "deleted-sign": "-",
    "deleted-arrow": "<",
    "inserted-sign": "+",
    "inserted-arrow": ">",
    unchanged: " ",
    diff: "!"
  };
  Object.keys(PREFIXES).forEach(function(name) {
    var prefix2 = PREFIXES[name];
    var alias = [];
    if (!/^\w+$/.test(name)) {
      alias.push(/\w+/.exec(name)[0]);
    }
    if (name === "diff") {
      alias.push("bold");
    }
    Prism2.languages.diff[name] = {
      pattern: RegExp("^(?:[" + prefix2 + "].*(?:\r\n?|\n|(?![\\s\\S])))+", "m"),
      alias
    };
  });
  Object.defineProperty(Prism2.languages.diff, "PREFIXES", {
    value: PREFIXES
  });
})(Prism);
Prism.languages.git = {
  comment: /^#.*/m,
  deleted: /^[-–].*/m,
  inserted: /^\+.*/m,
  string: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/m,
  command: {
    pattern: /^.*\$ git .*$/m,
    inside: {
      parameter: /\s--?\w+/m
    }
  },
  coord: /^@@.*@@$/m,
  commit_sha1: /^commit \w{40}$/m
};
Prism.languages.go = Prism.languages.extend("clike", {
  keyword: /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
  builtin: /\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/,
  boolean: /\b(?:_|iota|nil|true|false)\b/,
  operator: /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
  number: /(?:\b0x[a-f\d]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e[-+]?\d+)?)i?/i,
  string: {
    pattern: /(["'`])(\\[\s\S]|(?!\1)[^\\])*\1/,
    greedy: true
  }
});
delete Prism.languages.go["class-name"];
(function(Prism2) {
  Prism2.languages.handlebars = {
    comment: /\{\{![\s\S]*?\}\}/,
    delimiter: {
      pattern: /^\{\{\{?|\}\}\}?$/i,
      alias: "punctuation"
    },
    string: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
    number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,
    boolean: /\b(?:true|false)\b/,
    block: {
      pattern: /^(\s*~?\s*)[#\/]\S+?(?=\s*~?\s*$|\s)/i,
      lookbehind: true,
      alias: "keyword"
    },
    brackets: {
      pattern: /\[[^\]]+\]/,
      inside: {
        punctuation: /\[|\]/,
        variable: /[\s\S]+/
      }
    },
    punctuation: /[!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]/,
    variable: /[^!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~\s]+/
  };
  Prism2.hooks.add("before-tokenize", function(env2) {
    var handlebarsPattern = /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;
    Prism2.languages["markup-templating"].buildPlaceholders(env2, "handlebars", handlebarsPattern);
  });
  Prism2.hooks.add("after-tokenize", function(env2) {
    Prism2.languages["markup-templating"].tokenizePlaceholders(env2, "handlebars");
  });
})(Prism);
Prism.languages.json = {
  property: {
    pattern: /"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
    greedy: true
  },
  string: {
    pattern: /"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
    greedy: true
  },
  comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
  number: /-?\d+\.?\d*(e[+-]?\d+)?/i,
  punctuation: /[{}[\],]/,
  operator: /:/,
  boolean: /\b(?:true|false)\b/,
  null: {
    pattern: /\bnull\b/,
    alias: "keyword"
  }
};
Prism.languages.less = Prism.languages.extend("css", {
  comment: [/\/\*[\s\S]*?\*\//, {
    pattern: /(^|[^\\])\/\/.*/,
    lookbehind: true
  }],
  atrule: {
    pattern: /@[\w-]+?(?:\([^{}]+\)|[^(){};])*?(?=\s*\{)/i,
    inside: {
      punctuation: /[:()]/
    }
  },
  selector: {
    pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\([^{}]*\)|[^{};@])*?(?=\s*\{)/,
    inside: {
      variable: /@+[\w-]+/
    }
  },
  property: /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/i,
  operator: /[+\-*\/]/
});
Prism.languages.insertBefore("less", "property", {
  variable: [
    {
      pattern: /@[\w-]+\s*:/,
      inside: {
        punctuation: /:/
      }
    },
    /@@?[\w-]+/
  ],
  "mixin-usage": {
    pattern: /([{;]\s*)[.#](?!\d)[\w-]+.*?(?=[(;])/,
    lookbehind: true,
    alias: "function"
  }
});
Prism.languages.makefile = {
  comment: {
    pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
    lookbehind: true
  },
  string: {
    pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
    greedy: true
  },
  builtin: /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
  symbol: {
    pattern: /^[^:=\r\n]+(?=\s*:(?!=))/m,
    inside: {
      variable: /\$+(?:[^(){}:#=\s]+|(?=[({]))/
    }
  },
  variable: /\$+(?:[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
  keyword: [
    /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
    {
      pattern: /(\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \t])/,
      lookbehind: true
    }
  ],
  operator: /(?:::|[?:+!])?=|[|@]/,
  punctuation: /[:;(){}]/
};
Prism.languages.objectivec = Prism.languages.extend("c", {
  keyword: /\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
  string: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|@"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
  operator: /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
});
delete Prism.languages.objectivec["class-name"];
Prism.languages.ocaml = {
  comment: /\(\*[\s\S]*?\*\)/,
  string: [{
    pattern: /"(?:\\.|[^\\\r\n"])*"/,
    greedy: true
  }, {
    pattern: /(['`])(?:\\(?:\d+|x[\da-f]+|.)|(?!\1)[^\\\r\n])\1/i,
    greedy: true
  }],
  number: /\b(?:0x[\da-f][\da-f_]+|(?:0[bo])?\d[\d_]*\.?[\d_]*(?:e[+-]?[\d_]+)?)/i,
  type: {
    pattern: /\B['`]\w*/,
    alias: "variable"
  },
  directive: {
    pattern: /\B#\w+/,
    alias: "function"
  },
  keyword: /\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\b/,
  boolean: /\b(?:false|true)\b/,
  operator: /:=|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\b/,
  punctuation: /[(){}\[\]|_.,:;]/
};
Prism.languages.python = {
  comment: {
    pattern: /(^|[^\\])#.*/,
    lookbehind: true
  },
  "string-interpolation": {
    pattern: /(?:f|rf|fr)(?:("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
    greedy: true,
    inside: {
      interpolation: {
        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,
        lookbehind: true,
        inside: {
          "format-spec": {
            pattern: /(:)[^:(){}]+(?=}$)/,
            lookbehind: true
          },
          "conversion-option": {
            pattern: /![sra](?=[:}]$)/,
            alias: "punctuation"
          },
          rest: null
        }
      },
      string: /[\s\S]+/
    }
  },
  "triple-quoted-string": {
    pattern: /(?:[rub]|rb|br)?("""|''')[\s\S]+?\1/i,
    greedy: true,
    alias: "string"
  },
  string: {
    pattern: /(?:[rub]|rb|br)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
    greedy: true
  },
  function: {
    pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
    lookbehind: true
  },
  "class-name": {
    pattern: /(\bclass\s+)\w+/i,
    lookbehind: true
  },
  decorator: {
    pattern: /(^\s*)@\w+(?:\.\w+)*/i,
    lookbehind: true,
    alias: ["annotation", "punctuation"],
    inside: {
      punctuation: /\./
    }
  },
  keyword: /\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
  builtin: /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
  boolean: /\b(?:True|False|None)\b/,
  number: /(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|\.\d+)(?:e[+-]?\d+)?j?\b/i,
  operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
  punctuation: /[{}[\];(),.:]/
};
Prism.languages.python["string-interpolation"].inside["interpolation"].inside.rest = Prism.languages.python;
Prism.languages.py = Prism.languages.python;
Prism.languages.reason = Prism.languages.extend("clike", {
  comment: {
    pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
    lookbehind: true
  },
  string: {
    pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
    greedy: true
  },
  "class-name": /\b[A-Z]\w*/,
  keyword: /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,
  operator: /\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:mod|land|lor|lxor|lsl|lsr|asr)\b/
});
Prism.languages.insertBefore("reason", "class-name", {
  character: {
    pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,
    alias: "string"
  },
  constructor: {
    pattern: /\b[A-Z]\w*\b(?!\s*\.)/,
    alias: "variable"
  },
  label: {
    pattern: /\b[a-z]\w*(?=::)/,
    alias: "symbol"
  }
});
delete Prism.languages.reason.function;
(function(Prism2) {
  Prism2.languages.sass = Prism2.languages.extend("css", {
    comment: {
      pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t]+.+)*/m,
      lookbehind: true
    }
  });
  Prism2.languages.insertBefore("sass", "atrule", {
    "atrule-line": {
      pattern: /^(?:[ \t]*)[@+=].+/m,
      inside: {
        atrule: /(?:@[\w-]+|[+=])/m
      }
    }
  });
  delete Prism2.languages.sass.atrule;
  var variable = /\$[-\w]+|#\{\$[-\w]+\}/;
  var operator = [/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|or|not)\b/, {
    pattern: /(\s+)-(?=\s)/,
    lookbehind: true
  }];
  Prism2.languages.insertBefore("sass", "property", {
    "variable-line": {
      pattern: /^[ \t]*\$.+/m,
      inside: {
        punctuation: /:/,
        variable,
        operator
      }
    },
    "property-line": {
      pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s]+.*)/m,
      inside: {
        property: [/[^:\s]+(?=\s*:)/, {
          pattern: /(:)[^:\s]+/,
          lookbehind: true
        }],
        punctuation: /:/,
        variable,
        operator,
        important: Prism2.languages.sass.important
      }
    }
  });
  delete Prism2.languages.sass.property;
  delete Prism2.languages.sass.important;
  Prism2.languages.insertBefore("sass", "punctuation", {
    selector: {
      pattern: /([ \t]*)\S(?:,?[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,?[^,\r\n]+)*)*/,
      lookbehind: true
    }
  });
})(Prism);
Prism.languages.scss = Prism.languages.extend("css", {
  comment: {
    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
    lookbehind: true
  },
  atrule: {
    pattern: /@[\w-]+(?:\([^()]+\)|[^(])*?(?=\s+[{;])/,
    inside: {
      rule: /@[\w-]+/
    }
  },
  url: /(?:[-a-z]+-)?url(?=\()/i,
  selector: {
    pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()]|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}]+[:{][^}]+))/m,
    inside: {
      parent: {
        pattern: /&/,
        alias: "important"
      },
      placeholder: /%[-\w]+/,
      variable: /\$[-\w]+|#\{\$[-\w]+\}/
    }
  },
  property: {
    pattern: /(?:[\w-]|\$[-\w]+|#\{\$[-\w]+\})+(?=\s*:)/,
    inside: {
      variable: /\$[-\w]+|#\{\$[-\w]+\}/
    }
  }
});
Prism.languages.insertBefore("scss", "atrule", {
  keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {
    pattern: /( +)(?:from|through)(?= )/,
    lookbehind: true
  }]
});
Prism.languages.insertBefore("scss", "important", {
  variable: /\$[-\w]+|#\{\$[-\w]+\}/
});
Prism.languages.insertBefore("scss", "function", {
  placeholder: {
    pattern: /%[-\w]+/,
    alias: "selector"
  },
  statement: {
    pattern: /\B!(?:default|optional)\b/i,
    alias: "keyword"
  },
  boolean: /\b(?:true|false)\b/,
  null: {
    pattern: /\bnull\b/,
    alias: "keyword"
  },
  operator: {
    pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/,
    lookbehind: true
  }
});
Prism.languages.scss["atrule"].inside.rest = Prism.languages.scss;
Prism.languages.sql = {
  comment: {
    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
    lookbehind: true
  },
  variable: [{
    pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
    greedy: true
  }, /@[\w.$]+/],
  string: {
    pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,
    greedy: true,
    lookbehind: true
  },
  function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
  keyword: /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
  boolean: /\b(?:TRUE|FALSE|NULL)\b/i,
  number: /\b0x[\da-f]+\b|\b\d+\.?\d*|\B\.\d+\b/i,
  operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
  punctuation: /[;[\]()`,.]/
};
(function(Prism2) {
  var inside = {
    url: /url\((["']?).*?\1\)/i,
    string: {
      pattern: /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,
      greedy: true
    },
    interpolation: null,
    func: null,
    important: /\B!(?:important|optional)\b/i,
    keyword: {
      pattern: /(^|\s+)(?:(?:if|else|for|return|unless)(?=\s+|$)|@[\w-]+)/,
      lookbehind: true
    },
    hexcode: /#[\da-f]{3,6}/i,
    number: /\b\d+(?:\.\d+)?%?/,
    boolean: /\b(?:true|false)\b/,
    operator: [
      /~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.+|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/
    ],
    punctuation: /[{}()\[\];:,]/
  };
  inside["interpolation"] = {
    pattern: /\{[^\r\n}:]+\}/,
    alias: "variable",
    inside: {
      delimiter: {
        pattern: /^{|}$/,
        alias: "punctuation"
      },
      rest: inside
    }
  };
  inside["func"] = {
    pattern: /[\w-]+\([^)]*\).*/,
    inside: {
      function: /^[^(]+/,
      rest: inside
    }
  };
  Prism2.languages.stylus = {
    comment: {
      pattern: /(^|[^\\])(\/\*[\s\S]*?\*\/|\/\/.*)/,
      lookbehind: true
    },
    "atrule-declaration": {
      pattern: /(^\s*)@.+/m,
      lookbehind: true,
      inside: {
        atrule: /^@[\w-]+/,
        rest: inside
      }
    },
    "variable-declaration": {
      pattern: /(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:(?:\{[^}]*\}|.+)|$)/m,
      lookbehind: true,
      inside: {
        variable: /^\S+/,
        rest: inside
      }
    },
    statement: {
      pattern: /(^[ \t]*)(?:if|else|for|return|unless)[ \t]+.+/m,
      lookbehind: true,
      inside: {
        keyword: /^\S+/,
        rest: inside
      }
    },
    "property-declaration": {
      pattern: /((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)[^{\r\n]*(?:;|[^{\r\n,](?=$)(?!(\r?\n|\r)(?:\{|\2[ \t]+)))/m,
      lookbehind: true,
      inside: {
        property: {
          pattern: /^[^\s:]+/,
          inside: {
            interpolation: inside.interpolation
          }
        },
        rest: inside
      }
    },
    selector: {
      pattern: /(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t]+)))/m,
      lookbehind: true,
      inside: {
        interpolation: inside.interpolation,
        punctuation: /[{},]/
      }
    },
    func: inside.func,
    string: inside.string,
    interpolation: inside.interpolation,
    punctuation: /[{}()\[\];:.]/
  };
})(Prism);
var typescript = Prism.util.clone(Prism.languages.typescript);
Prism.languages.tsx = Prism.languages.extend("jsx", typescript);
Prism.languages.wasm = {
  comment: [/\(;[\s\S]*?;\)/, {
    pattern: /;;.*/,
    greedy: true
  }],
  string: {
    pattern: /"(?:\\[\s\S]|[^"\\])*"/,
    greedy: true
  },
  keyword: [{
    pattern: /\b(?:align|offset)=/,
    inside: {
      operator: /=/
    }
  }, {
    pattern: /\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,
    inside: {
      punctuation: /\./
    }
  }, /\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],
  variable: /\$[\w!#$%&'*+\-./:<=>?@\\^_`|~]+/i,
  number: /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,
  punctuation: /[()]/
};
Prism.languages.yaml = {
  scalar: {
    pattern: /([\-:]\s*(?:![^\s]+)?[ \t]*[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)[^\r\n]+(?:\2[^\r\n]+)*)/,
    lookbehind: true,
    alias: "string"
  },
  comment: /#.*/,
  key: {
    pattern: /(\s*(?:^|[:\-,[{\r\n?])[ \t]*(?:![^\s]+)?[ \t]*)[^\r\n{[\]},#\s]+?(?=\s*:\s)/,
    lookbehind: true,
    alias: "atrule"
  },
  directive: {
    pattern: /(^[ \t]*)%.+/m,
    lookbehind: true,
    alias: "important"
  },
  datetime: {
    pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?)?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?)(?=[ \t]*(?:$|,|]|}))/m,
    lookbehind: true,
    alias: "number"
  },
  boolean: {
    pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:true|false)[ \t]*(?=$|,|]|})/im,
    lookbehind: true,
    alias: "important"
  },
  null: {
    pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)(?:null|~)[ \t]*(?=$|,|]|})/im,
    lookbehind: true,
    alias: "important"
  },
  string: {
    pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)("|')(?:(?!\2)[^\\\r\n]|\\.)*\2(?=[ \t]*(?:$|,|]|}|\s*#))/m,
    lookbehind: true,
    greedy: true
  },
  number: {
    pattern: /([:\-,[{]\s*(?:![^\s]+)?[ \t]*)[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+\.?\d*|\.?\d+)(?:e[+-]?\d+)?|\.inf|\.nan)[ \t]*(?=$|,|]|})/im,
    lookbehind: true
  },
  tag: /![^\s]+/,
  important: /[&*][\w]+/,
  punctuation: /---|[:[\]{}\-,|>?]|\.\.\./
};
Prism.languages.yml = Prism.languages.yaml;
var theme = {
  plain: {
    backgroundColor: "#2a2734",
    color: "#9a86fd"
  },
  styles: [{
    types: ["comment", "prolog", "doctype", "cdata", "punctuation"],
    style: {
      color: "#6c6783"
    }
  }, {
    types: ["namespace"],
    style: {
      opacity: 0.7
    }
  }, {
    types: ["tag", "operator", "number"],
    style: {
      color: "#e09142"
    }
  }, {
    types: ["property", "function"],
    style: {
      color: "#9a86fd"
    }
  }, {
    types: ["tag-id", "selector", "atrule-id"],
    style: {
      color: "#eeebff"
    }
  }, {
    types: ["attr-name"],
    style: {
      color: "#c4b9fe"
    }
  }, {
    types: ["boolean", "string", "entity", "url", "attr-value", "keyword", "control", "directive", "unit", "statement", "regex", "at-rule", "placeholder", "variable"],
    style: {
      color: "#ffcc99"
    }
  }, {
    types: ["deleted"],
    style: {
      textDecorationLine: "line-through"
    }
  }, {
    types: ["inserted"],
    style: {
      textDecorationLine: "underline"
    }
  }, {
    types: ["italic"],
    style: {
      fontStyle: "italic"
    }
  }, {
    types: ["important", "bold"],
    style: {
      fontWeight: "bold"
    }
  }, {
    types: ["important"],
    style: {
      color: "#c4b9fe"
    }
  }]
};
var defaultProps = {
  Prism,
  theme
};
function _defineProperty$1(obj2, key, value) {
  if (key in obj2) {
    Object.defineProperty(obj2, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj2[key] = value;
  }
  return obj2;
}
function _extends$3() {
  _extends$3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$3.apply(this, arguments);
}
var newlineRe = /\r\n|\r|\n/;
var normalizeEmptyLines = function(line) {
  if (line.length === 0) {
    line.push({
      types: ["plain"],
      content: "",
      empty: true
    });
  } else if (line.length === 1 && line[0].content === "") {
    line[0].empty = true;
  }
};
var appendTypes = function(types, add) {
  var typesSize = types.length;
  if (typesSize > 0 && types[typesSize - 1] === add) {
    return types;
  }
  return types.concat(add);
};
var normalizeTokens = function(tokens) {
  var typeArrStack = [[]];
  var tokenArrStack = [tokens];
  var tokenArrIndexStack = [0];
  var tokenArrSizeStack = [tokens.length];
  var i = 0;
  var stackIndex = 0;
  var currentLine = [];
  var acc = [currentLine];
  while (stackIndex > -1) {
    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {
      var content = void 0;
      var types = typeArrStack[stackIndex];
      var tokenArr = tokenArrStack[stackIndex];
      var token = tokenArr[i];
      if (typeof token === "string") {
        types = stackIndex > 0 ? types : ["plain"];
        content = token;
      } else {
        types = appendTypes(types, token.type);
        if (token.alias) {
          types = appendTypes(types, token.alias);
        }
        content = token.content;
      }
      if (typeof content !== "string") {
        stackIndex++;
        typeArrStack.push(types);
        tokenArrStack.push(content);
        tokenArrIndexStack.push(0);
        tokenArrSizeStack.push(content.length);
        continue;
      }
      var splitByNewlines = content.split(newlineRe);
      var newlineCount = splitByNewlines.length;
      currentLine.push({
        types,
        content: splitByNewlines[0]
      });
      for (var i$1 = 1; i$1 < newlineCount; i$1++) {
        normalizeEmptyLines(currentLine);
        acc.push(currentLine = []);
        currentLine.push({
          types,
          content: splitByNewlines[i$1]
        });
      }
    }
    stackIndex--;
    typeArrStack.pop();
    tokenArrStack.pop();
    tokenArrIndexStack.pop();
    tokenArrSizeStack.pop();
  }
  normalizeEmptyLines(currentLine);
  return acc;
};
var themeToDict = function(theme2, language) {
  var plain = theme2.plain;
  var base = Object.create(null);
  var themeDict = theme2.styles.reduce(function(acc, themeEntry) {
    var languages = themeEntry.languages;
    var style = themeEntry.style;
    if (languages && !languages.includes(language)) {
      return acc;
    }
    themeEntry.types.forEach(function(type) {
      var accStyle = _extends$3({}, acc[type], style);
      acc[type] = accStyle;
    });
    return acc;
  }, base);
  themeDict.root = plain;
  themeDict.plain = _extends$3({}, plain, {
    backgroundColor: null
  });
  return themeDict;
};
function objectWithoutProperties$1(obj2, exclude) {
  var target = {};
  for (var k2 in obj2)
    if (Object.prototype.hasOwnProperty.call(obj2, k2) && exclude.indexOf(k2) === -1)
      target[k2] = obj2[k2];
  return target;
}
var Highlight = /* @__PURE__ */ function(Component2) {
  function Highlight2() {
    var this$1 = this;
    var args = [], len = arguments.length;
    while (len--)
      args[len] = arguments[len];
    Component2.apply(this, args);
    _defineProperty$1(this, "getThemeDict", function(props) {
      if (this$1.themeDict !== void 0 && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {
        return this$1.themeDict;
      }
      this$1.prevTheme = props.theme;
      this$1.prevLanguage = props.language;
      var themeDict = props.theme ? themeToDict(props.theme, props.language) : void 0;
      return this$1.themeDict = themeDict;
    });
    _defineProperty$1(this, "getLineProps", function(ref) {
      var key = ref.key;
      var className = ref.className;
      var style = ref.style;
      var rest$1 = objectWithoutProperties$1(ref, ["key", "className", "style", "line"]);
      var rest = rest$1;
      var output = _extends$3({}, rest, {
        className: "token-line",
        style: void 0,
        key: void 0
      });
      var themeDict = this$1.getThemeDict(this$1.props);
      if (themeDict !== void 0) {
        output.style = themeDict.plain;
      }
      if (style !== void 0) {
        output.style = output.style !== void 0 ? _extends$3({}, output.style, style) : style;
      }
      if (key !== void 0) {
        output.key = key;
      }
      if (className) {
        output.className += " " + className;
      }
      return output;
    });
    _defineProperty$1(this, "getStyleForToken", function(ref) {
      var types = ref.types;
      var empty = ref.empty;
      var typesSize = types.length;
      var themeDict = this$1.getThemeDict(this$1.props);
      if (themeDict === void 0) {
        return void 0;
      } else if (typesSize === 1 && types[0] === "plain") {
        return empty ? {
          display: "inline-block"
        } : void 0;
      } else if (typesSize === 1 && !empty) {
        return themeDict[types[0]];
      }
      var baseStyle = empty ? {
        display: "inline-block"
      } : {};
      var typeStyles = types.map(function(type) {
        return themeDict[type];
      });
      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));
    });
    _defineProperty$1(this, "getTokenProps", function(ref) {
      var key = ref.key;
      var className = ref.className;
      var style = ref.style;
      var token = ref.token;
      var rest$1 = objectWithoutProperties$1(ref, ["key", "className", "style", "token"]);
      var rest = rest$1;
      var output = _extends$3({}, rest, {
        className: "token " + token.types.join(" "),
        children: token.content,
        style: this$1.getStyleForToken(token),
        key: void 0
      });
      if (style !== void 0) {
        output.style = output.style !== void 0 ? _extends$3({}, output.style, style) : style;
      }
      if (key !== void 0) {
        output.key = key;
      }
      if (className) {
        output.className += " " + className;
      }
      return output;
    });
  }
  if (Component2)
    Highlight2.__proto__ = Component2;
  Highlight2.prototype = Object.create(Component2 && Component2.prototype);
  Highlight2.prototype.constructor = Highlight2;
  Highlight2.prototype.render = function render2() {
    var ref = this.props;
    var Prism2 = ref.Prism;
    var language = ref.language;
    var code = ref.code;
    var children = ref.children;
    var themeDict = this.getThemeDict(this.props);
    var grammar = Prism2.languages[language];
    var mixedTokens = grammar !== void 0 ? Prism2.tokenize(code, grammar, language) : [code];
    var tokens = normalizeTokens(mixedTokens);
    return children({
      tokens,
      className: "prism-code language-" + language,
      style: themeDict !== void 0 ? themeDict.root : {},
      getLineProps: this.getLineProps,
      getTokenProps: this.getTokenProps
    });
  };
  return Highlight2;
}(Component);
var theme$1 = {
  plain: {
    color: "#393A34",
    backgroundColor: "#f6f8fa"
  },
  styles: [{
    types: ["comment", "prolog", "doctype", "cdata"],
    style: {
      color: "#999988",
      fontStyle: "italic"
    }
  }, {
    types: ["namespace"],
    style: {
      opacity: 0.7
    }
  }, {
    types: ["string", "attr-value"],
    style: {
      color: "#e3116c"
    }
  }, {
    types: ["punctuation", "operator"],
    style: {
      color: "#393A34"
    }
  }, {
    types: ["entity", "url", "symbol", "number", "boolean", "variable", "constant", "property", "regex", "inserted"],
    style: {
      color: "#36acaa"
    }
  }, {
    types: ["atrule", "keyword", "attr-name", "selector"],
    style: {
      color: "#00a4db"
    }
  }, {
    types: ["function", "deleted", "tag"],
    style: {
      color: "#d73a49"
    }
  }, {
    types: ["function-variable"],
    style: {
      color: "#6f42c1"
    }
  }, {
    types: ["tag", "selector", "keyword"],
    style: {
      color: "#00009f"
    }
  }]
};
const CodeBlock = ({
  children = "",
  className = ""
}) => {
  const language = className?.replace(/language-/, "");
  return /* @__PURE__ */ React.createElement(Highlight, _extends$2({}, defaultProps, {
    theme: theme$1,
    code: children.trim(),
    language
  }), ({
    className: className2,
    style,
    tokens,
    getLineProps,
    getTokenProps
  }) => /* @__PURE__ */ React.createElement("pre", {
    className: className2,
    style
  }, tokens.map((line, i) => /* @__PURE__ */ React.createElement("div", _extends$2({
    key: i
  }, getLineProps({
    line,
    key: i
  })), line.map((token, key) => /* @__PURE__ */ React.createElement("span", _extends$2({
    key
  }, getTokenProps({
    token,
    key
  }))))))));
};
const components = {
  pre: (props) => /* @__PURE__ */ React.createElement("div", props),
  code: CodeBlock
};
const MDX = ({
  children
}) => {
  return /* @__PURE__ */ React.createElement(MDXProvider, {
    components
  }, /* @__PURE__ */ React.createElement("div", {
    className: "markdown-body"
  }, children));
};
function createTheme({
  topNavs,
  logo,
  sideMenuData,
  footer,
  topbarOperations,
  search: search2 = true
} = {}) {
  const Theme2 = ({
    staticData,
    loadedData,
    loadState
  }) => {
    console.log("#Theme", staticData, loadedData, loadState);
    const menu = useMemo(() => {
      return sideMenuData ?? defaultMenu(staticData);
    }, [sideMenuData, staticData]);
    if (loadState.type === "loading") {
      return /* @__PURE__ */ React.createElement(Layout, {
        sideMenuData: menu,
        topNavs: topNavs ?? [],
        logo,
        path: loadState.routePath,
        footer,
        topbarOperations,
        pagesStaticData: staticData,
        search: search2
      }, /* @__PURE__ */ React.createElement("p", null, "initial Loading..."));
    }
    if (loadState.type === "load-error") {
      return /* @__PURE__ */ React.createElement(Layout, {
        sideMenuData: menu,
        topNavs: topNavs ?? [],
        logo,
        path: loadState.routePath,
        footer,
        topbarOperations,
        pagesStaticData: staticData,
        search: search2
      }, /* @__PURE__ */ React.createElement("p", null, "Load error"));
    }
    if (loadState.type === "404") {
      const Comp404 = loadedData["/404"]?.main?.default;
      return /* @__PURE__ */ React.createElement(Layout, {
        sideMenuData: menu,
        topNavs: topNavs ?? [],
        logo,
        path: loadState.routePath,
        footer,
        topbarOperations,
        pagesStaticData: staticData,
        search: search2
      }, Comp404 ? /* @__PURE__ */ React.createElement(Comp404, null) : /* @__PURE__ */ React.createElement("p", null, "Page not found."));
    }
    if (loadState.type !== "loaded") {
      return /* @__PURE__ */ React.createElement("p", null, "Unknown load loadState: ", loadState.type);
    }
    const pageData = loadedData[loadState.routePath];
    const pageStaticData = staticData[loadState.routePath];
    const isComposedPage = Object.keys(pageData).length > 1;
    return /* @__PURE__ */ React.createElement(Layout, {
      sideMenuData: menu,
      topNavs: topNavs ?? [],
      logo,
      path: loadState.routePath,
      footer,
      topbarOperations,
      pagesStaticData: staticData,
      search: search2
    }, Object.entries(pageData).map(([key, dataPart], idx) => {
      const ContentComp = dataPart.default;
      const pageStaticDataPart = pageStaticData[key];
      const isMD = pageStaticDataPart.sourceType === "md";
      const content = isMD ? /* @__PURE__ */ React.createElement(MDX, null, /* @__PURE__ */ React.createElement(ContentComp, null)) : /* @__PURE__ */ React.createElement(ContentComp, null);
      if (isComposedPage) {
        return /* @__PURE__ */ React.createElement("section", {
          style: {
            marginBottom: "40px"
          },
          key: idx
        }, /* @__PURE__ */ React.createElement("h2", null, pageStaticDataPart.title), pageStaticDataPart.description && /* @__PURE__ */ React.createElement("p", null, pageStaticDataPart.description), content);
      }
      return /* @__PURE__ */ React.createElement("div", {
        key: idx
      }, content);
    }));
  };
  return Theme2;
}
function defaultMenu(pages2) {
  return Object.entries(pages2).filter(([path]) => path !== "/404").filter(([path, staticData]) => !staticData.hideInMenu).sort((a, b2) => {
    const [pathA, staticDataA] = a;
    const [pathB, staticDataB] = b2;
    let ASort;
    let BSort;
    if (staticDataA.sort !== void 0)
      ASort = Number(staticDataA.sort);
    else if (staticDataA.main?.sort !== void 0)
      ASort = Number(staticDataA.main.sort);
    else
      ASort = 1;
    if (staticDataB.sort !== void 0)
      BSort = Number(staticDataB.sort);
    else if (staticDataB.main?.sort !== void 0)
      BSort = Number(staticDataB.main.sort);
    else
      BSort = 1;
    if (ASort !== BSort)
      return ASort - BSort;
    return pathA.localeCompare(pathB);
  }).map(([path, staticData]) => {
    return {
      path,
      text: staticData.title ?? staticData.main?.title ?? path
    };
  });
}
var _global$1 = createCommonjsModule(function(module) {
  var global2 = module.exports = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
  if (typeof __g == "number")
    __g = global2;
});
var _core$1 = createCommonjsModule(function(module) {
  var core = module.exports = {version: "2.6.11"};
  if (typeof __e == "number")
    __e = core;
});
var _aFunction$1 = function(it) {
  if (typeof it != "function")
    throw TypeError(it + " is not a function!");
  return it;
};
var _ctx$1 = function(fn, that, length) {
  _aFunction$1(fn);
  if (that === void 0)
    return fn;
  switch (length) {
    case 1:
      return function(a) {
        return fn.call(that, a);
      };
    case 2:
      return function(a, b2) {
        return fn.call(that, a, b2);
      };
    case 3:
      return function(a, b2, c2) {
        return fn.call(that, a, b2, c2);
      };
  }
  return function() {
    return fn.apply(that, arguments);
  };
};
var _isObject$1 = function(it) {
  return typeof it === "object" ? it !== null : typeof it === "function";
};
var _anObject$1 = function(it) {
  if (!_isObject$1(it))
    throw TypeError(it + " is not an object!");
  return it;
};
var _fails$1 = function(exec) {
  try {
    return !!exec();
  } catch (e2) {
    return true;
  }
};
var _descriptors$1 = !_fails$1(function() {
  return Object.defineProperty({}, "a", {get: function() {
    return 7;
  }}).a != 7;
});
var document$3 = _global$1.document;
var is$1 = _isObject$1(document$3) && _isObject$1(document$3.createElement);
var _domCreate$1 = function(it) {
  return is$1 ? document$3.createElement(it) : {};
};
var _ie8DomDefine$1 = !_descriptors$1 && !_fails$1(function() {
  return Object.defineProperty(_domCreate$1("div"), "a", {get: function() {
    return 7;
  }}).a != 7;
});
var _toPrimitive$1 = function(it, S) {
  if (!_isObject$1(it))
    return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == "function" && !_isObject$1(val = fn.call(it)))
    return val;
  if (typeof (fn = it.valueOf) == "function" && !_isObject$1(val = fn.call(it)))
    return val;
  if (!S && typeof (fn = it.toString) == "function" && !_isObject$1(val = fn.call(it)))
    return val;
  throw TypeError("Can't convert object to primitive value");
};
var dP$2 = Object.defineProperty;
var f$8 = _descriptors$1 ? Object.defineProperty : function defineProperty5(O, P, Attributes) {
  _anObject$1(O);
  P = _toPrimitive$1(P, true);
  _anObject$1(Attributes);
  if (_ie8DomDefine$1)
    try {
      return dP$2(O, P, Attributes);
    } catch (e2) {
    }
  if ("get" in Attributes || "set" in Attributes)
    throw TypeError("Accessors not supported!");
  if ("value" in Attributes)
    O[P] = Attributes.value;
  return O;
};
var _objectDp$1 = {
  f: f$8
};
var _propertyDesc$1 = function(bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value
  };
};
var _hide$1 = _descriptors$1 ? function(object, key, value) {
  return _objectDp$1.f(object, key, _propertyDesc$1(1, value));
} : function(object, key, value) {
  object[key] = value;
  return object;
};
var hasOwnProperty$3 = {}.hasOwnProperty;
var _has$1 = function(it, key) {
  return hasOwnProperty$3.call(it, key);
};
var PROTOTYPE$3 = "prototype";
var $export$1 = function(type, name, source) {
  var IS_FORCED = type & $export$1.F;
  var IS_GLOBAL = type & $export$1.G;
  var IS_STATIC = type & $export$1.S;
  var IS_PROTO = type & $export$1.P;
  var IS_BIND = type & $export$1.B;
  var IS_WRAP = type & $export$1.W;
  var exports = IS_GLOBAL ? _core$1 : _core$1[name] || (_core$1[name] = {});
  var expProto = exports[PROTOTYPE$3];
  var target = IS_GLOBAL ? _global$1 : IS_STATIC ? _global$1[name] : (_global$1[name] || {})[PROTOTYPE$3];
  var key, own, out;
  if (IS_GLOBAL)
    source = name;
  for (key in source) {
    own = !IS_FORCED && target && target[key] !== void 0;
    if (own && _has$1(exports, key))
      continue;
    out = own ? target[key] : source[key];
    exports[key] = IS_GLOBAL && typeof target[key] != "function" ? source[key] : IS_BIND && own ? _ctx$1(out, _global$1) : IS_WRAP && target[key] == out ? function(C) {
      var F = function(a, b2, c2) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0:
              return new C();
            case 1:
              return new C(a);
            case 2:
              return new C(a, b2);
          }
          return new C(a, b2, c2);
        }
        return C.apply(this, arguments);
      };
      F[PROTOTYPE$3] = C[PROTOTYPE$3];
      return F;
    }(out) : IS_PROTO && typeof out == "function" ? _ctx$1(Function.call, out) : out;
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      if (type & $export$1.R && expProto && !expProto[key])
        _hide$1(expProto, key, out);
    }
  }
};
$export$1.F = 1;
$export$1.G = 2;
$export$1.S = 4;
$export$1.P = 8;
$export$1.B = 16;
$export$1.W = 32;
$export$1.U = 64;
$export$1.R = 128;
var _export$1 = $export$1;
var toString$2 = {}.toString;
var _cof$1 = function(it) {
  return toString$2.call(it).slice(8, -1);
};
var _iobject$1 = Object("z").propertyIsEnumerable(0) ? Object : function(it) {
  return _cof$1(it) == "String" ? it.split("") : Object(it);
};
var _defined$1 = function(it) {
  if (it == void 0)
    throw TypeError("Can't call method on  " + it);
  return it;
};
var _toIobject$1 = function(it) {
  return _iobject$1(_defined$1(it));
};
var ceil$1 = Math.ceil;
var floor$1 = Math.floor;
var _toInteger$1 = function(it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor$1 : ceil$1)(it);
};
var min$2 = Math.min;
var _toLength$1 = function(it) {
  return it > 0 ? min$2(_toInteger$1(it), 9007199254740991) : 0;
};
var max$1 = Math.max;
var min$3 = Math.min;
var _toAbsoluteIndex$1 = function(index2, length) {
  index2 = _toInteger$1(index2);
  return index2 < 0 ? max$1(index2 + length, 0) : min$3(index2, length);
};
var _arrayIncludes$1 = function(IS_INCLUDES) {
  return function($this, el, fromIndex) {
    var O = _toIobject$1($this);
    var length = _toLength$1(O.length);
    var index2 = _toAbsoluteIndex$1(fromIndex, length);
    var value;
    if (IS_INCLUDES && el != el)
      while (length > index2) {
        value = O[index2++];
        if (value != value)
          return true;
      }
    else
      for (; length > index2; index2++)
        if (IS_INCLUDES || index2 in O) {
          if (O[index2] === el)
            return IS_INCLUDES || index2 || 0;
        }
    return !IS_INCLUDES && -1;
  };
};
var _library$1 = true;
var _shared$1 = createCommonjsModule(function(module) {
  var SHARED = "__core-js_shared__";
  var store = _global$1[SHARED] || (_global$1[SHARED] = {});
  (module.exports = function(key, value) {
    return store[key] || (store[key] = value !== void 0 ? value : {});
  })("versions", []).push({
    version: _core$1.version,
    mode: "pure",
    copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
  });
});
var id$1 = 0;
var px$1 = Math.random();
var _uid$1 = function(key) {
  return "Symbol(".concat(key === void 0 ? "" : key, ")_", (++id$1 + px$1).toString(36));
};
var shared$1 = _shared$1("keys");
var _sharedKey$1 = function(key) {
  return shared$1[key] || (shared$1[key] = _uid$1(key));
};
var arrayIndexOf$1 = _arrayIncludes$1(false);
var IE_PROTO$3 = _sharedKey$1("IE_PROTO");
var _objectKeysInternal$1 = function(object, names) {
  var O = _toIobject$1(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O)
    if (key != IE_PROTO$3)
      _has$1(O, key) && result.push(key);
  while (names.length > i)
    if (_has$1(O, key = names[i++])) {
      ~arrayIndexOf$1(result, key) || result.push(key);
    }
  return result;
};
var _enumBugKeys$1 = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
var _objectKeys$1 = Object.keys || function keys2(O) {
  return _objectKeysInternal$1(O, _enumBugKeys$1);
};
var f$9 = Object.getOwnPropertySymbols;
var _objectGops$1 = {
  f: f$9
};
var f$a = {}.propertyIsEnumerable;
var _objectPie$1 = {
  f: f$a
};
var _toObject$1 = function(it) {
  return Object(_defined$1(it));
};
var $assign$1 = Object.assign;
var _objectAssign$1 = !$assign$1 || _fails$1(function() {
  var A2 = {};
  var B = {};
  var S = Symbol();
  var K = "abcdefghijklmnopqrst";
  A2[S] = 7;
  K.split("").forEach(function(k2) {
    B[k2] = k2;
  });
  return $assign$1({}, A2)[S] != 7 || Object.keys($assign$1({}, B)).join("") != K;
}) ? function assign3(target, source) {
  var T = _toObject$1(target);
  var aLen = arguments.length;
  var index2 = 1;
  var getSymbols = _objectGops$1.f;
  var isEnum2 = _objectPie$1.f;
  while (aLen > index2) {
    var S = _iobject$1(arguments[index2++]);
    var keys3 = getSymbols ? _objectKeys$1(S).concat(getSymbols(S)) : _objectKeys$1(S);
    var length = keys3.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys3[j++];
      if (!_descriptors$1 || isEnum2.call(S, key))
        T[key] = S[key];
    }
  }
  return T;
} : $assign$1;
_export$1(_export$1.S + _export$1.F, "Object", {assign: _objectAssign$1});
var assign$2 = _core$1.Object.assign;
var assign$3 = createCommonjsModule(function(module) {
  module.exports = {default: assign$2, __esModule: true};
});
var _extends$4 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  var _assign2 = _interopRequireDefault(assign$3);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  exports.default = _assign2.default || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
});
var _extends$5 = /* @__PURE__ */ getDefaultExportFromCjs(_extends$4);
var classCallCheck$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
});
var _classCallCheck$1 = /* @__PURE__ */ getDefaultExportFromCjs(classCallCheck$1);
var _stringAt$1 = function(TO_STRING) {
  return function(that, pos) {
    var s2 = String(_defined$1(that));
    var i = _toInteger$1(pos);
    var l2 = s2.length;
    var a, b2;
    if (i < 0 || i >= l2)
      return TO_STRING ? "" : void 0;
    a = s2.charCodeAt(i);
    return a < 55296 || a > 56319 || i + 1 === l2 || (b2 = s2.charCodeAt(i + 1)) < 56320 || b2 > 57343 ? TO_STRING ? s2.charAt(i) : a : TO_STRING ? s2.slice(i, i + 2) : (a - 55296 << 10) + (b2 - 56320) + 65536;
  };
};
var _redefine$1 = _hide$1;
var _objectDps$1 = _descriptors$1 ? Object.defineProperties : function defineProperties3(O, Properties) {
  _anObject$1(O);
  var keys3 = _objectKeys$1(Properties);
  var length = keys3.length;
  var i = 0;
  var P;
  while (length > i)
    _objectDp$1.f(O, P = keys3[i++], Properties[P]);
  return O;
};
var document$4 = _global$1.document;
var _html$1 = document$4 && document$4.documentElement;
var IE_PROTO$4 = _sharedKey$1("IE_PROTO");
var Empty$1 = function() {
};
var PROTOTYPE$4 = "prototype";
var createDict$1 = function() {
  var iframe = _domCreate$1("iframe");
  var i = _enumBugKeys$1.length;
  var lt = "<";
  var gt = ">";
  var iframeDocument;
  iframe.style.display = "none";
  _html$1.appendChild(iframe);
  iframe.src = "javascript:";
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + "script" + gt + "document.F=Object" + lt + "/script" + gt);
  iframeDocument.close();
  createDict$1 = iframeDocument.F;
  while (i--)
    delete createDict$1[PROTOTYPE$4][_enumBugKeys$1[i]];
  return createDict$1();
};
var _objectCreate$1 = Object.create || function create5(O, Properties) {
  var result;
  if (O !== null) {
    Empty$1[PROTOTYPE$4] = _anObject$1(O);
    result = new Empty$1();
    Empty$1[PROTOTYPE$4] = null;
    result[IE_PROTO$4] = O;
  } else
    result = createDict$1();
  return Properties === void 0 ? result : _objectDps$1(result, Properties);
};
var _wks$1 = createCommonjsModule(function(module) {
  var store = _shared$1("wks");
  var Symbol2 = _global$1.Symbol;
  var USE_SYMBOL = typeof Symbol2 == "function";
  var $exports = module.exports = function(name) {
    return store[name] || (store[name] = USE_SYMBOL && Symbol2[name] || (USE_SYMBOL ? Symbol2 : _uid$1)("Symbol." + name));
  };
  $exports.store = store;
});
var def$1 = _objectDp$1.f;
var TAG$1 = _wks$1("toStringTag");
var _setToStringTag$1 = function(it, tag, stat) {
  if (it && !_has$1(it = stat ? it : it.prototype, TAG$1))
    def$1(it, TAG$1, {configurable: true, value: tag});
};
var IteratorPrototype$1 = {};
_hide$1(IteratorPrototype$1, _wks$1("iterator"), function() {
  return this;
});
var _iterCreate$1 = function(Constructor, NAME, next) {
  Constructor.prototype = _objectCreate$1(IteratorPrototype$1, {next: _propertyDesc$1(1, next)});
  _setToStringTag$1(Constructor, NAME + " Iterator");
};
var IE_PROTO$5 = _sharedKey$1("IE_PROTO");
var ObjectProto$2 = Object.prototype;
var _objectGpo$1 = Object.getPrototypeOf || function(O) {
  O = _toObject$1(O);
  if (_has$1(O, IE_PROTO$5))
    return O[IE_PROTO$5];
  if (typeof O.constructor == "function" && O instanceof O.constructor) {
    return O.constructor.prototype;
  }
  return O instanceof Object ? ObjectProto$2 : null;
};
var ITERATOR$1 = _wks$1("iterator");
var BUGGY$1 = !([].keys && "next" in [].keys());
var FF_ITERATOR$1 = "@@iterator";
var KEYS$1 = "keys";
var VALUES$1 = "values";
var _iterDefine$1 = function(Base2, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  _iterCreate$1(Constructor, NAME, next);
  var getMethod = function(kind) {
    if (!BUGGY$1 && kind in proto)
      return proto[kind];
    switch (kind) {
      case KEYS$1:
        return function keys3() {
          return new Constructor(this, kind);
        };
      case VALUES$1:
        return function values() {
          return new Constructor(this, kind);
        };
    }
    return function entries() {
      return new Constructor(this, kind);
    };
  };
  var TAG2 = NAME + " Iterator";
  var DEF_VALUES = DEFAULT == VALUES$1;
  var VALUES_BUG = false;
  var proto = Base2.prototype;
  var $native = proto[ITERATOR$1] || proto[FF_ITERATOR$1] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod("entries") : void 0;
  var $anyNative = NAME == "Array" ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype2;
  if ($anyNative) {
    IteratorPrototype2 = _objectGpo$1($anyNative.call(new Base2()));
    if (IteratorPrototype2 !== Object.prototype && IteratorPrototype2.next) {
      _setToStringTag$1(IteratorPrototype2, TAG2, true);
    }
  }
  if (DEF_VALUES && $native && $native.name !== VALUES$1) {
    VALUES_BUG = true;
    $default = function values() {
      return $native.call(this);
    };
  }
  if (FORCED && (BUGGY$1 || VALUES_BUG || !proto[ITERATOR$1])) {
    _hide$1(proto, ITERATOR$1, $default);
  }
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES$1),
      keys: IS_SET ? $default : getMethod(KEYS$1),
      entries: $entries
    };
    if (FORCED)
      for (key in methods) {
        if (!(key in proto))
          _redefine$1(proto, key, methods[key]);
      }
    else
      _export$1(_export$1.P + _export$1.F * (BUGGY$1 || VALUES_BUG), NAME, methods);
  }
  return methods;
};
var $at$1 = _stringAt$1(true);
_iterDefine$1(String, "String", function(iterated) {
  this._t = String(iterated);
  this._i = 0;
}, function() {
  var O = this._t;
  var index2 = this._i;
  var point;
  if (index2 >= O.length)
    return {value: void 0, done: true};
  point = $at$1(O, index2);
  this._i += point.length;
  return {value: point, done: false};
});
var _iterStep$1 = function(done, value) {
  return {value, done: !!done};
};
var es6_array_iterator$1 = _iterDefine$1(Array, "Array", function(iterated, kind) {
  this._t = _toIobject$1(iterated);
  this._i = 0;
  this._k = kind;
}, function() {
  var O = this._t;
  var kind = this._k;
  var index2 = this._i++;
  if (!O || index2 >= O.length) {
    this._t = void 0;
    return _iterStep$1(1);
  }
  if (kind == "keys")
    return _iterStep$1(0, index2);
  if (kind == "values")
    return _iterStep$1(0, O[index2]);
  return _iterStep$1(0, [index2, O[index2]]);
}, "values");
var TO_STRING_TAG$1 = _wks$1("toStringTag");
var DOMIterables$1 = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(",");
for (var i$1 = 0; i$1 < DOMIterables$1.length; i$1++) {
  var NAME$1 = DOMIterables$1[i$1];
  var Collection$1 = _global$1[NAME$1];
  var proto$1 = Collection$1 && Collection$1.prototype;
  if (proto$1 && !proto$1[TO_STRING_TAG$1])
    _hide$1(proto$1, TO_STRING_TAG$1, NAME$1);
}
var f$b = _wks$1;
var _wksExt$1 = {
  f: f$b
};
var iterator$2 = _wksExt$1.f("iterator");
var iterator$3 = createCommonjsModule(function(module) {
  module.exports = {default: iterator$2, __esModule: true};
});
var _meta$1 = createCommonjsModule(function(module) {
  var META2 = _uid$1("meta");
  var setDesc = _objectDp$1.f;
  var id2 = 0;
  var isExtensible = Object.isExtensible || function() {
    return true;
  };
  var FREEZE = !_fails$1(function() {
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function(it) {
    setDesc(it, META2, {value: {
      i: "O" + ++id2,
      w: {}
    }});
  };
  var fastKey = function(it, create8) {
    if (!_isObject$1(it))
      return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
    if (!_has$1(it, META2)) {
      if (!isExtensible(it))
        return "F";
      if (!create8)
        return "E";
      setMeta(it);
    }
    return it[META2].i;
  };
  var getWeak = function(it, create8) {
    if (!_has$1(it, META2)) {
      if (!isExtensible(it))
        return true;
      if (!create8)
        return false;
      setMeta(it);
    }
    return it[META2].w;
  };
  var onFreeze = function(it) {
    if (FREEZE && meta.NEED && isExtensible(it) && !_has$1(it, META2))
      setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY: META2,
    NEED: false,
    fastKey,
    getWeak,
    onFreeze
  };
});
var defineProperty$4 = _objectDp$1.f;
var _wksDefine$1 = function(name) {
  var $Symbol2 = _core$1.Symbol || (_core$1.Symbol = {});
  if (name.charAt(0) != "_" && !(name in $Symbol2))
    defineProperty$4($Symbol2, name, {value: _wksExt$1.f(name)});
};
var _enumKeys$1 = function(it) {
  var result = _objectKeys$1(it);
  var getSymbols = _objectGops$1.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum2 = _objectPie$1.f;
    var i = 0;
    var key;
    while (symbols.length > i)
      if (isEnum2.call(it, key = symbols[i++]))
        result.push(key);
  }
  return result;
};
var _isArray$1 = Array.isArray || function isArray2(arg) {
  return _cof$1(arg) == "Array";
};
var hiddenKeys$1 = _enumBugKeys$1.concat("length", "prototype");
var f$c = Object.getOwnPropertyNames || function getOwnPropertyNames5(O) {
  return _objectKeysInternal$1(O, hiddenKeys$1);
};
var _objectGopn$1 = {
  f: f$c
};
var gOPN$2 = _objectGopn$1.f;
var toString$3 = {}.toString;
var windowNames$1 = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
var getWindowNames$1 = function(it) {
  try {
    return gOPN$2(it);
  } catch (e2) {
    return windowNames$1.slice();
  }
};
var f$d = function getOwnPropertyNames6(it) {
  return windowNames$1 && toString$3.call(it) == "[object Window]" ? getWindowNames$1(it) : gOPN$2(_toIobject$1(it));
};
var _objectGopnExt$1 = {
  f: f$d
};
var gOPD$2 = Object.getOwnPropertyDescriptor;
var f$e = _descriptors$1 ? gOPD$2 : function getOwnPropertyDescriptor4(O, P) {
  O = _toIobject$1(O);
  P = _toPrimitive$1(P, true);
  if (_ie8DomDefine$1)
    try {
      return gOPD$2(O, P);
    } catch (e2) {
    }
  if (_has$1(O, P))
    return _propertyDesc$1(!_objectPie$1.f.call(O, P), O[P]);
};
var _objectGopd$1 = {
  f: f$e
};
var META$1 = _meta$1.KEY;
var gOPD$3 = _objectGopd$1.f;
var dP$3 = _objectDp$1.f;
var gOPN$3 = _objectGopnExt$1.f;
var $Symbol$1 = _global$1.Symbol;
var $JSON$1 = _global$1.JSON;
var _stringify$1 = $JSON$1 && $JSON$1.stringify;
var PROTOTYPE$5 = "prototype";
var HIDDEN$1 = _wks$1("_hidden");
var TO_PRIMITIVE$1 = _wks$1("toPrimitive");
var isEnum$1 = {}.propertyIsEnumerable;
var SymbolRegistry$1 = _shared$1("symbol-registry");
var AllSymbols$1 = _shared$1("symbols");
var OPSymbols$1 = _shared$1("op-symbols");
var ObjectProto$3 = Object[PROTOTYPE$5];
var USE_NATIVE$1 = typeof $Symbol$1 == "function" && !!_objectGops$1.f;
var QObject$1 = _global$1.QObject;
var setter$1 = !QObject$1 || !QObject$1[PROTOTYPE$5] || !QObject$1[PROTOTYPE$5].findChild;
var setSymbolDesc$1 = _descriptors$1 && _fails$1(function() {
  return _objectCreate$1(dP$3({}, "a", {
    get: function() {
      return dP$3(this, "a", {value: 7}).a;
    }
  })).a != 7;
}) ? function(it, key, D) {
  var protoDesc = gOPD$3(ObjectProto$3, key);
  if (protoDesc)
    delete ObjectProto$3[key];
  dP$3(it, key, D);
  if (protoDesc && it !== ObjectProto$3)
    dP$3(ObjectProto$3, key, protoDesc);
} : dP$3;
var wrap$1 = function(tag) {
  var sym = AllSymbols$1[tag] = _objectCreate$1($Symbol$1[PROTOTYPE$5]);
  sym._k = tag;
  return sym;
};
var isSymbol$1 = USE_NATIVE$1 && typeof $Symbol$1.iterator == "symbol" ? function(it) {
  return typeof it == "symbol";
} : function(it) {
  return it instanceof $Symbol$1;
};
var $defineProperty$1 = function defineProperty6(it, key, D) {
  if (it === ObjectProto$3)
    $defineProperty$1(OPSymbols$1, key, D);
  _anObject$1(it);
  key = _toPrimitive$1(key, true);
  _anObject$1(D);
  if (_has$1(AllSymbols$1, key)) {
    if (!D.enumerable) {
      if (!_has$1(it, HIDDEN$1))
        dP$3(it, HIDDEN$1, _propertyDesc$1(1, {}));
      it[HIDDEN$1][key] = true;
    } else {
      if (_has$1(it, HIDDEN$1) && it[HIDDEN$1][key])
        it[HIDDEN$1][key] = false;
      D = _objectCreate$1(D, {enumerable: _propertyDesc$1(0, false)});
    }
    return setSymbolDesc$1(it, key, D);
  }
  return dP$3(it, key, D);
};
var $defineProperties$1 = function defineProperties4(it, P) {
  _anObject$1(it);
  var keys3 = _enumKeys$1(P = _toIobject$1(P));
  var i = 0;
  var l2 = keys3.length;
  var key;
  while (l2 > i)
    $defineProperty$1(it, key = keys3[i++], P[key]);
  return it;
};
var $create$1 = function create6(it, P) {
  return P === void 0 ? _objectCreate$1(it) : $defineProperties$1(_objectCreate$1(it), P);
};
var $propertyIsEnumerable$1 = function propertyIsEnumerable2(key) {
  var E = isEnum$1.call(this, key = _toPrimitive$1(key, true));
  if (this === ObjectProto$3 && _has$1(AllSymbols$1, key) && !_has$1(OPSymbols$1, key))
    return false;
  return E || !_has$1(this, key) || !_has$1(AllSymbols$1, key) || _has$1(this, HIDDEN$1) && this[HIDDEN$1][key] ? E : true;
};
var $getOwnPropertyDescriptor$1 = function getOwnPropertyDescriptor5(it, key) {
  it = _toIobject$1(it);
  key = _toPrimitive$1(key, true);
  if (it === ObjectProto$3 && _has$1(AllSymbols$1, key) && !_has$1(OPSymbols$1, key))
    return;
  var D = gOPD$3(it, key);
  if (D && _has$1(AllSymbols$1, key) && !(_has$1(it, HIDDEN$1) && it[HIDDEN$1][key]))
    D.enumerable = true;
  return D;
};
var $getOwnPropertyNames$1 = function getOwnPropertyNames7(it) {
  var names = gOPN$3(_toIobject$1(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!_has$1(AllSymbols$1, key = names[i++]) && key != HIDDEN$1 && key != META$1)
      result.push(key);
  }
  return result;
};
var $getOwnPropertySymbols$1 = function getOwnPropertySymbols4(it) {
  var IS_OP = it === ObjectProto$3;
  var names = gOPN$3(IS_OP ? OPSymbols$1 : _toIobject$1(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (_has$1(AllSymbols$1, key = names[i++]) && (IS_OP ? _has$1(ObjectProto$3, key) : true))
      result.push(AllSymbols$1[key]);
  }
  return result;
};
if (!USE_NATIVE$1) {
  $Symbol$1 = function Symbol2() {
    if (this instanceof $Symbol$1)
      throw TypeError("Symbol is not a constructor!");
    var tag = _uid$1(arguments.length > 0 ? arguments[0] : void 0);
    var $set = function(value) {
      if (this === ObjectProto$3)
        $set.call(OPSymbols$1, value);
      if (_has$1(this, HIDDEN$1) && _has$1(this[HIDDEN$1], tag))
        this[HIDDEN$1][tag] = false;
      setSymbolDesc$1(this, tag, _propertyDesc$1(1, value));
    };
    if (_descriptors$1 && setter$1)
      setSymbolDesc$1(ObjectProto$3, tag, {configurable: true, set: $set});
    return wrap$1(tag);
  };
  _redefine$1($Symbol$1[PROTOTYPE$5], "toString", function toString2() {
    return this._k;
  });
  _objectGopd$1.f = $getOwnPropertyDescriptor$1;
  _objectDp$1.f = $defineProperty$1;
  _objectGopn$1.f = _objectGopnExt$1.f = $getOwnPropertyNames$1;
  _objectPie$1.f = $propertyIsEnumerable$1;
  _objectGops$1.f = $getOwnPropertySymbols$1;
  if (_descriptors$1 && !_library$1) {
    _redefine$1(ObjectProto$3, "propertyIsEnumerable", $propertyIsEnumerable$1);
  }
  _wksExt$1.f = function(name) {
    return wrap$1(_wks$1(name));
  };
}
_export$1(_export$1.G + _export$1.W + _export$1.F * !USE_NATIVE$1, {Symbol: $Symbol$1});
for (var es6Symbols$1 = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), j$1 = 0; es6Symbols$1.length > j$1; )
  _wks$1(es6Symbols$1[j$1++]);
for (var wellKnownSymbols$1 = _objectKeys$1(_wks$1.store), k$2 = 0; wellKnownSymbols$1.length > k$2; )
  _wksDefine$1(wellKnownSymbols$1[k$2++]);
_export$1(_export$1.S + _export$1.F * !USE_NATIVE$1, "Symbol", {
  for: function(key) {
    return _has$1(SymbolRegistry$1, key += "") ? SymbolRegistry$1[key] : SymbolRegistry$1[key] = $Symbol$1(key);
  },
  keyFor: function keyFor2(sym) {
    if (!isSymbol$1(sym))
      throw TypeError(sym + " is not a symbol!");
    for (var key in SymbolRegistry$1)
      if (SymbolRegistry$1[key] === sym)
        return key;
  },
  useSetter: function() {
    setter$1 = true;
  },
  useSimple: function() {
    setter$1 = false;
  }
});
_export$1(_export$1.S + _export$1.F * !USE_NATIVE$1, "Object", {
  create: $create$1,
  defineProperty: $defineProperty$1,
  defineProperties: $defineProperties$1,
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor$1,
  getOwnPropertyNames: $getOwnPropertyNames$1,
  getOwnPropertySymbols: $getOwnPropertySymbols$1
});
var FAILS_ON_PRIMITIVES$1 = _fails$1(function() {
  _objectGops$1.f(1);
});
_export$1(_export$1.S + _export$1.F * FAILS_ON_PRIMITIVES$1, "Object", {
  getOwnPropertySymbols: function getOwnPropertySymbols5(it) {
    return _objectGops$1.f(_toObject$1(it));
  }
});
$JSON$1 && _export$1(_export$1.S + _export$1.F * (!USE_NATIVE$1 || _fails$1(function() {
  var S = $Symbol$1();
  return _stringify$1([S]) != "[null]" || _stringify$1({a: S}) != "{}" || _stringify$1(Object(S)) != "{}";
})), "JSON", {
  stringify: function stringify2(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i)
      args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!_isObject$1(replacer) && it === void 0 || isSymbol$1(it))
      return;
    if (!_isArray$1(replacer))
      replacer = function(key, value) {
        if (typeof $replacer == "function")
          value = $replacer.call(this, key, value);
        if (!isSymbol$1(value))
          return value;
      };
    args[1] = replacer;
    return _stringify$1.apply($JSON$1, args);
  }
});
$Symbol$1[PROTOTYPE$5][TO_PRIMITIVE$1] || _hide$1($Symbol$1[PROTOTYPE$5], TO_PRIMITIVE$1, $Symbol$1[PROTOTYPE$5].valueOf);
_setToStringTag$1($Symbol$1, "Symbol");
_setToStringTag$1(Math, "Math", true);
_setToStringTag$1(_global$1.JSON, "JSON", true);
_wksDefine$1("asyncIterator");
_wksDefine$1("observable");
var symbol$2 = _core$1.Symbol;
var symbol$3 = createCommonjsModule(function(module) {
  module.exports = {default: symbol$2, __esModule: true};
});
var _typeof_1$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  var _iterator2 = _interopRequireDefault(iterator$3);
  var _symbol2 = _interopRequireDefault(symbol$3);
  var _typeof2 = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof _symbol2.default === "function" && obj2.constructor === _symbol2.default && obj2 !== _symbol2.default.prototype ? "symbol" : typeof obj2;
  };
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  exports.default = typeof _symbol2.default === "function" && _typeof2(_iterator2.default) === "symbol" ? function(obj2) {
    return typeof obj2 === "undefined" ? "undefined" : _typeof2(obj2);
  } : function(obj2) {
    return obj2 && typeof _symbol2.default === "function" && obj2.constructor === _symbol2.default && obj2 !== _symbol2.default.prototype ? "symbol" : typeof obj2 === "undefined" ? "undefined" : _typeof2(obj2);
  };
});
var _typeof$1 = /* @__PURE__ */ getDefaultExportFromCjs(_typeof_1$1);
var possibleConstructorReturn$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  var _typeof3 = _interopRequireDefault(_typeof_1$1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  exports.default = function(self2, call) {
    if (!self2) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self2;
  };
});
var _possibleConstructorReturn$1 = /* @__PURE__ */ getDefaultExportFromCjs(possibleConstructorReturn$1);
var check$1 = function(O, proto) {
  _anObject$1(O);
  if (!_isObject$1(proto) && proto !== null)
    throw TypeError(proto + ": can't set as prototype!");
};
var _setProto$1 = {
  set: Object.setPrototypeOf || ("__proto__" in {} ? function(test, buggy, set) {
    try {
      set = _ctx$1(Function.call, _objectGopd$1.f(Object.prototype, "__proto__").set, 2);
      set(test, []);
      buggy = !(test instanceof Array);
    } catch (e2) {
      buggy = true;
    }
    return function setPrototypeOf2(O, proto) {
      check$1(O, proto);
      if (buggy)
        O.__proto__ = proto;
      else
        set(O, proto);
      return O;
    };
  }({}, false) : void 0),
  check: check$1
};
_export$1(_export$1.S, "Object", {setPrototypeOf: _setProto$1.set});
var setPrototypeOf$2 = _core$1.Object.setPrototypeOf;
var setPrototypeOf$3 = createCommonjsModule(function(module) {
  module.exports = {default: setPrototypeOf$2, __esModule: true};
});
_export$1(_export$1.S, "Object", {create: _objectCreate$1});
var $Object$2 = _core$1.Object;
var create$3 = function create7(P, D) {
  return $Object$2.create(P, D);
};
var create$4 = createCommonjsModule(function(module) {
  module.exports = {default: create$3, __esModule: true};
});
var inherits$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  var _setPrototypeOf2 = _interopRequireDefault(setPrototypeOf$3);
  var _create2 = _interopRequireDefault(create$4);
  var _typeof3 = _interopRequireDefault(_typeof_1$1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  exports.default = function(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
    }
    subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass)
      _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
  };
});
var _inherits$1 = /* @__PURE__ */ getDefaultExportFromCjs(inherits$1);
var classnames$1 = createCommonjsModule(function(module) {
  /*!
    Copyright (c) 2017 Jed Watson.
    Licensed under the MIT License (MIT), see
    http://jedwatson.github.io/classnames
  */
  (function() {
    var hasOwn = {}.hasOwnProperty;
    function classNames() {
      var classes = [];
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        if (!arg)
          continue;
        var argType = typeof arg;
        if (argType === "string" || argType === "number") {
          classes.push(arg);
        } else if (Array.isArray(arg) && arg.length) {
          var inner = classNames.apply(null, arg);
          if (inner) {
            classes.push(inner);
          }
        } else if (argType === "object") {
          for (var key in arg) {
            if (hasOwn.call(arg, key) && arg[key]) {
              classes.push(key);
            }
          }
        }
      }
      return classes.join(" ");
    }
    if (module.exports) {
      classNames.default = classNames;
      module.exports = classNames;
    } else {
      window.classNames = classNames;
    }
  })();
});
function componentWillMount$1() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps$1(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate$1(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
componentWillMount$1.__suppressDeprecationWarning = true;
componentWillReceiveProps$1.__suppressDeprecationWarning = true;
componentWillUpdate$1.__suppressDeprecationWarning = true;
function polyfill$1(Component2) {
  var prototype = Component2.prototype;
  if (!prototype || !prototype.isReactComponent) {
    throw new Error("Can only polyfill class components");
  }
  if (typeof Component2.getDerivedStateFromProps !== "function" && typeof prototype.getSnapshotBeforeUpdate !== "function") {
    return Component2;
  }
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === "function") {
    foundWillMountName = "componentWillMount";
  } else if (typeof prototype.UNSAFE_componentWillMount === "function") {
    foundWillMountName = "UNSAFE_componentWillMount";
  }
  if (typeof prototype.componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "componentWillReceiveProps";
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
  }
  if (typeof prototype.componentWillUpdate === "function") {
    foundWillUpdateName = "componentWillUpdate";
  } else if (typeof prototype.UNSAFE_componentWillUpdate === "function") {
    foundWillUpdateName = "UNSAFE_componentWillUpdate";
  }
  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
    var componentName = Component2.displayName || Component2.name;
    var newApiName = typeof Component2.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
    throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" + componentName + " uses " + newApiName + " but also contains the following legacy lifecycles:" + (foundWillMountName !== null ? "\n  " + foundWillMountName : "") + (foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "") + (foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "") + "\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks");
  }
  if (typeof Component2.getDerivedStateFromProps === "function") {
    prototype.componentWillMount = componentWillMount$1;
    prototype.componentWillReceiveProps = componentWillReceiveProps$1;
  }
  if (typeof prototype.getSnapshotBeforeUpdate === "function") {
    if (typeof prototype.componentDidUpdate !== "function") {
      throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
    }
    prototype.componentWillUpdate = componentWillUpdate$1;
    var componentDidUpdate = prototype.componentDidUpdate;
    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }
  return Component2;
}
var reactLifecyclesCompat_es$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  polyfill: polyfill$1
});
var ieVersion$1 = typeof document !== "undefined" ? document.documentMode : void 0;
var isProduction$1 = function isProduction3() {
  var PRODUCTION_ENV = "production";
  var result = false;
  try {
    if (PRODUCTION_ENV === "production") {
      result = true;
    }
  } catch (err) {
  }
  return result;
};
var env$2 = {
  ieVersion: ieVersion$1,
  isProduction: isProduction$1
};
var _env$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ieVersion: ieVersion$1,
  isProduction: isProduction$1,
  default: env$2
});
function deprecated$1(props, instead, component) {
  if (!isProduction$1() && typeof console !== "undefined" && console.error) {
    return console.error("Warning: [ " + props + " ] is deprecated at [ " + component + " ], " + ("use [ " + instead + " ] instead of it."));
  }
}
function warning$1(msg) {
  if (!isProduction$1() && typeof console !== "undefined" && console.error) {
    return console.error("Warning: " + msg);
  }
}
var _log$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  deprecated: deprecated$1,
  warning: warning$1
});
function typeOf$2(obj2) {
  return Object.prototype.toString.call(obj2).replace(/\[object\s|]/g, "");
}
function isArrayLike$1(obj2) {
  var length = !!obj2 && "length" in obj2 && obj2.length;
  var type = typeOf$2(obj2);
  return type === "Array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj2;
}
function isPromise$1(obj2) {
  return !!obj2 && ((typeof obj2 === "undefined" ? "undefined" : _typeof$1(obj2)) === "object" || typeof obj2 === "function") && typeof obj2.then === "function";
}
function isPlainObject$1(obj2) {
  if (typeOf$2(obj2) !== "Object") {
    return false;
  }
  var ctor = obj2.constructor;
  if (typeof ctor !== "function") {
    return false;
  }
  var prot = ctor.prototype;
  if (typeOf$2(prot) !== "Object") {
    return false;
  }
  if (!prot.hasOwnProperty("isPrototypeOf")) {
    return false;
  }
  return true;
}
function shallowEqual$2(objA, objB, compare) {
  if (objA === objB) {
    return true;
  }
  if (!objA || !objB || (typeof objA === "undefined" ? "undefined" : _typeof$1(objA)) + (typeof objB === "undefined" ? "undefined" : _typeof$1(objB)) !== "objectobject") {
    return false;
  }
  var keyA = Object.keys(objA);
  var keyB = Object.keys(objB);
  var len = keyA.length;
  if (len !== keyB.length) {
    return false;
  }
  var hasCallback = typeof compare === "function";
  for (var i = 0; i < len; i++) {
    var key = keyA[i];
    if (!Object.prototype.hasOwnProperty.call(objB, key)) {
      return false;
    }
    var valA = objA[key];
    var valB = objB[key];
    var ret = hasCallback ? compare(valA, valB, key) : void 0;
    if (ret === false || ret === void 0 && valA !== valB) {
      return false;
    }
  }
  return true;
}
function each$1(obj2, callback, direction) {
  var reversed = direction === -1;
  var length = obj2.length;
  var value = void 0, i = reversed ? length - 1 : 0;
  if (isArrayLike$1(obj2)) {
    for (; i < length && i >= 0; reversed ? i-- : i++) {
      value = callback.call(obj2[i], obj2[i], i);
      if (value === false) {
        break;
      }
    }
  } else {
    for (i in obj2) {
      if (obj2.hasOwnProperty(i)) {
        value = callback.call(obj2[i], obj2[i], i);
        if (value === false) {
          break;
        }
      }
    }
  }
  return obj2;
}
var _isInObj$1 = function _isInObj3(key, obj2, isArray3) {
  return isArray3 ? obj2.indexOf(key) > -1 : key in obj2;
};
function pickOthers$7(holdProps, props) {
  var others = {};
  var isArray3 = typeOf$2(holdProps) === "Array";
  for (var key in props) {
    if (!_isInObj$1(key, holdProps, isArray3)) {
      others[key] = props[key];
    }
  }
  return others;
}
function pickAttrsWith$1(holdProps, prefix2) {
  var others = {};
  for (var key in holdProps) {
    if (key.match(prefix2)) {
      others[key] = holdProps[key];
    }
  }
  return others;
}
function isNil$2(value) {
  return value == null;
}
function deepMerge$1(target) {
  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }
  if (!sources.length)
    return target;
  var source = sources.shift();
  if (!isPlainObject$1(target)) {
    target = {};
  }
  if (isPlainObject$1(target) && isPlainObject$1(source)) {
    for (var key in source) {
      if (isPlainObject$1(source[key]) && !React.isValidElement(source[key])) {
        var _extends2;
        if (!target[key])
          _extends$5(target, (_extends2 = {}, _extends2[key] = {}, _extends2));
        if (!isPlainObject$1(target[key])) {
          target[key] = source[key];
        }
        deepMerge$1(target[key], source[key]);
      } else {
        var _extends3;
        _extends$5(target, (_extends3 = {}, _extends3[key] = source[key], _extends3));
      }
    }
  }
  return deepMerge$1.apply(void 0, [target].concat(sources));
}
function isFunctionComponent$1(component) {
  return typeOf$2(component) === "Function" && component.prototype && component.prototype.isReactComponent === void 0;
}
function isClassComponent$1(component) {
  return typeOf$2(component) === "Function" && component.prototype && component.prototype.isReactComponent !== void 0;
}
function isReactFragment$1(component) {
  if (isNil$2(component)) {
    return false;
  }
  if (component.type) {
    return component.type === React.Fragment;
  }
  return component === React.Fragment;
}
var _object$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  typeOf: typeOf$2,
  isArrayLike: isArrayLike$1,
  isPromise: isPromise$1,
  isPlainObject: isPlainObject$1,
  shallowEqual: shallowEqual$2,
  each: each$1,
  pickOthers: pickOthers$7,
  pickAttrsWith: pickAttrsWith$1,
  isNil: isNil$2,
  deepMerge: deepMerge$1,
  isFunctionComponent: isFunctionComponent$1,
  isClassComponent: isClassComponent$1,
  isReactFragment: isReactFragment$1
});
function camelcase$1(str2) {
  if (!/-/.test(str2)) {
    return str2 || "";
  }
  return str2.toLowerCase().replace(/-([a-z])/g, function($0, $1) {
    return $1.toUpperCase();
  });
}
function hyphenate$1(str2) {
  var strType = typeOf$2(str2);
  if (strType !== "String") {
    warning$1("[ hyphenate(str: string): string ] " + ("Expected arguments[0] to be a string but get a " + strType + ".") + "It will return an empty string without any processing.");
    return "";
  }
  return str2.replace(/([A-Z])/g, function($0) {
    return "-" + $0.toLowerCase();
  });
}
function template$1(tpl) {
  var object = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var tplType = typeOf$2(tpl);
  if (tplType !== "String") {
    warning$1("[ template(tpl: string, object: object): string ] " + ("Expected arguments[0] to be a string but get a " + tplType + ".") + "It will return an empty string without any processing.");
    return "";
  }
  return tpl.replace(/\{[a-z]*\}/g, function(str2) {
    var key = str2.substring(1, str2.length - 1);
    return object[key] || "";
  });
}
var _string$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  camelcase: camelcase$1,
  hyphenate: hyphenate$1,
  template: template$1
});
var hasDOM$1 = typeof window !== "undefined" && !!window.document && !!document.createElement;
function hasClass$1(node, className) {
  if (!hasDOM$1 || !node) {
    return false;
  }
  if (node.classList) {
    return node.classList.contains(className);
  } else {
    return node.className.indexOf(className) > -1;
  }
}
function addClass$2(node, className, _force) {
  if (!hasDOM$1 || !node) {
    return;
  }
  if (node.classList) {
    node.classList.add(className);
  } else if (_force === true || !hasClass$1(node, className)) {
    node.className += " " + className;
  }
}
function removeClass$3(node, className, _force) {
  if (!hasDOM$1 || !node) {
    return;
  }
  if (node.classList) {
    node.classList.remove(className);
  } else if (_force === true || hasClass$1(node, className)) {
    node.className = node.className.replace(className, "").replace(/\s+/g, " ").trim();
  }
}
function toggleClass$1(node, className) {
  if (!hasDOM$1 || !node) {
    return false;
  }
  if (node.classList) {
    return node.classList.toggle(className);
  } else {
    var flag = hasClass$1(node, className);
    flag ? removeClass$3(node, className, true) : addClass$2(node, className, true);
    return !flag;
  }
}
var matches$1 = function() {
  var matchesFn = null;
  if (hasDOM$1) {
    var _body = document.body || document.head;
    matchesFn = _body.matches ? "matches" : _body.webkitMatchesSelector ? "webkitMatchesSelector" : _body.msMatchesSelector ? "msMatchesSelector" : _body.mozMatchesSelector ? "mozMatchesSelector" : null;
  }
  return function(node, selector) {
    if (!hasDOM$1 || !node) {
      return false;
    }
    return matchesFn ? node[matchesFn](selector) : false;
  };
}();
function _getComputedStyle$1(node) {
  return node && node.nodeType === 1 ? window.getComputedStyle(node, null) : {};
}
var PIXEL_PATTERN$1 = /margin|padding|width|height|max|min|offset|size|top/i;
var removePixel$1 = {left: 1, top: 1, right: 1, bottom: 1};
function _getStyleValue$1(node, type, value) {
  type = type.toLowerCase();
  if (value === "auto") {
    if (type === "height") {
      return node.offsetHeight || 0;
    }
    if (type === "width") {
      return node.offsetWidth || 0;
    }
  }
  if (!(type in removePixel$1)) {
    removePixel$1[type] = PIXEL_PATTERN$1.test(type);
  }
  return removePixel$1[type] ? parseFloat(value) || 0 : value;
}
var floatMap$1 = {cssFloat: 1, styleFloat: 1, float: 1};
function getStyle$3(node, name) {
  if (!hasDOM$1 || !node) {
    return null;
  }
  var style = _getComputedStyle$1(node);
  if (arguments.length === 1) {
    return style;
  }
  name = floatMap$1[name] ? "cssFloat" in node.style ? "cssFloat" : "styleFloat" : name;
  return _getStyleValue$1(node, name, style.getPropertyValue(hyphenate$1(name)) || node.style[camelcase$1(name)]);
}
function setStyle$2(node, name, value) {
  if (!hasDOM$1 || !node) {
    return false;
  }
  if ((typeof name === "undefined" ? "undefined" : _typeof$1(name)) === "object" && arguments.length === 2) {
    each$1(name, function(val, key) {
      return setStyle$2(node, key, val);
    });
  } else {
    name = floatMap$1[name] ? "cssFloat" in node.style ? "cssFloat" : "styleFloat" : name;
    if (typeof value === "number" && PIXEL_PATTERN$1.test(name)) {
      value = value + "px";
    }
    node.style[camelcase$1(name)] = value;
  }
}
function scrollbar$1() {
  var scrollDiv = document.createElement("div");
  scrollDiv.className += "just-to-get-scrollbar-size";
  setStyle$2(scrollDiv, {
    position: "absolute",
    width: "100px",
    height: "100px",
    overflow: "scroll",
    top: "-9999px"
  });
  document.body && document.body.appendChild(scrollDiv);
  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  var scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;
  document.body.removeChild(scrollDiv);
  return {
    width: scrollbarWidth,
    height: scrollbarHeight
  };
}
function getOffset$2(node) {
  var rect = node.getBoundingClientRect();
  var win = node.ownerDocument.defaultView;
  return {
    top: rect.top + win.pageYOffset,
    left: rect.left + win.pageXOffset
  };
}
function getPixels$1(len) {
  var win = document.defaultView;
  if (typeof +len === "number" && !isNaN(+len)) {
    return +len;
  }
  if (typeof len === "string") {
    var PX_REG = /(\d+)px/;
    var VH_REG = /(\d+)vh/;
    if (Array.isArray(len.match(PX_REG))) {
      return +len.match(PX_REG)[1] || 0;
    }
    if (Array.isArray(len.match(VH_REG))) {
      var _1vh = win.innerHeight / 100;
      return +(len.match(VH_REG)[1] * _1vh) || 0;
    }
  }
  return 0;
}
function getClosest$1(dom2, selector) {
  if (!hasDOM$1 || !dom2) {
    return null;
  }
  if (!Element.prototype.closest) {
    if (!document.documentElement.contains(dom2))
      return null;
    do {
      if (getMatches$1(dom2, selector))
        return dom2;
      dom2 = dom2.parentElement;
    } while (dom2 !== null);
  } else {
    return dom2.closest(selector);
  }
  return null;
}
function getMatches$1(dom2, selector) {
  if (!hasDOM$1 || !dom2) {
    return null;
  }
  if (Element.prototype.matches) {
    return dom2.matches(selector);
  } else if (Element.prototype.msMatchesSelector) {
    return dom2.msMatchesSelector(selector);
  } else if (Element.prototype.webkitMatchesSelector) {
    return dom2.webkitMatchesSelector(selector);
  }
  return null;
}
var _dom$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  hasDOM: hasDOM$1,
  hasClass: hasClass$1,
  addClass: addClass$2,
  removeClass: removeClass$3,
  toggleClass: toggleClass$1,
  matches: matches$1,
  getStyle: getStyle$3,
  setStyle: setStyle$2,
  scrollbar: scrollbar$1,
  getOffset: getOffset$2,
  getPixels: getPixels$1,
  getClosest: getClosest$1,
  getMatches: getMatches$1
});
function _off$1(node, eventName, callback, useCapture) {
  if (node.removeEventListener) {
    node.removeEventListener(eventName, callback, useCapture || false);
  }
}
function on$2(node, eventName, callback, useCapture) {
  if (node.addEventListener) {
    node.addEventListener(eventName, callback, useCapture || false);
  }
  return {
    off: function off2() {
      return _off$1(node, eventName, callback, useCapture);
    }
  };
}
function once$1(node, eventName, callback, useCapture) {
  return on$2(node, eventName, function __fn() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    callback.apply(this, args);
    _off$1(node, eventName, __fn, useCapture);
  }, useCapture);
}
var _events$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  off: _off$1,
  on: on$2,
  once: once$1
});
var noop$i = function noop7() {
};
var prevent$1 = function prevent3() {
  return false;
};
function makeChain$7() {
  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  if (fns.length === 1) {
    return fns[0];
  }
  return function chainedFunction() {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    for (var i = 0, j = fns.length; i < j; i++) {
      if (fns[i] && fns[i].apply) {
        fns[i].apply(this, args);
      }
    }
  };
}
function bindCtx$g(ctx, fns, ns) {
  if (typeof fns === "string") {
    fns = [fns];
  }
  ns = ns || ctx;
  fns.forEach(function(fnName) {
    ns[fnName] = ns[fnName].bind(ctx);
  });
}
function promiseCall$1(ret, success) {
  var failure = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : noop$i;
  if (isPromise$1(ret)) {
    return ret.then(function(result) {
      success(result);
      return result;
    }).catch(function(e2) {
      failure(e2);
    });
  }
  return ret !== false ? success(ret) : failure(ret);
}
var _func$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  noop: noop$i,
  prevent: prevent$1,
  makeChain: makeChain$7,
  bindCtx: bindCtx$g,
  promiseCall: promiseCall$1
});
var animationEndEventNames$1 = {
  WebkitAnimation: "webkitAnimationEnd",
  OAnimation: "oAnimationEnd",
  animation: "animationend"
};
var transitionEventNames$1 = {
  WebkitTransition: "webkitTransitionEnd",
  OTransition: "oTransitionEnd",
  transition: "transitionend"
};
function _supportEnd$1(names) {
  if (!hasDOM$1) {
    return false;
  }
  var el = document.createElement("div");
  var ret = false;
  each$1(names, function(val, key) {
    if (el.style[key] !== void 0) {
      ret = {end: val};
      return false;
    }
  });
  return ret;
}
function _supportCSS$1(names) {
  if (!hasDOM$1) {
    return false;
  }
  var el = document.createElement("div");
  var ret = false;
  each$1(names, function(val, key) {
    each$1(val, function(item) {
      try {
        el.style[key] = item;
        ret = ret || el.style[key] === item;
      } catch (e2) {
      }
      return !ret;
    });
    return !ret;
  });
  return ret;
}
var animation$1 = _supportEnd$1(animationEndEventNames$1);
var transition$1 = _supportEnd$1(transitionEventNames$1);
var flex$1 = _supportCSS$1({
  display: ["flex", "-webkit-flex", "-moz-flex", "-ms-flexbox"]
});
var _support$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  animation: animation$1,
  transition: transition$1,
  flex: flex$1
});
var _KEYCODE$1 = {
  BACKSPACE: 8,
  TAB: 9,
  ENTER: 13,
  SHIFT: 16,
  CTRL: 17,
  ALT: 18,
  ESC: 27,
  SPACE: 32,
  END: 35,
  HOME: 36,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40,
  PAGE_UP: 33,
  PAGE_DOWN: 34,
  ESCAPE: 27,
  LEFT_ARROW: 37,
  UP_ARROW: 38,
  RIGHT_ARROW: 39,
  DOWN_ARROW: 40,
  CONTROL: 17,
  OPTION: 18,
  CMD: 91,
  COMMAND: 91,
  DELETE: 8
};
function _isVisible$1(node) {
  while (node) {
    if (node === document.body || node === document.documentElement) {
      break;
    }
    if (node.style.display === "none" || node.style.visibility === "hidden") {
      return false;
    }
    node = node.parentNode;
  }
  return true;
}
function _isFocusable$1(node) {
  var nodeName = node.nodeName.toLowerCase();
  var tabIndex = parseInt(node.getAttribute("tabindex"), 10);
  var hasTabIndex = !isNaN(tabIndex) && tabIndex > -1;
  if (_isVisible$1(node)) {
    if (nodeName === "input") {
      return !node.disabled && node.type !== "hidden";
    } else if (["select", "textarea", "button"].indexOf(nodeName) > -1) {
      return !node.disabled;
    } else if (nodeName === "a") {
      return node.getAttribute("href") || hasTabIndex;
    } else {
      return hasTabIndex;
    }
  }
  return false;
}
function getFocusNodeList$2(node) {
  var res = [];
  var nodeList = node.querySelectorAll("*");
  each$1(nodeList, function(item) {
    if (_isFocusable$1(item)) {
      var method = item.getAttribute("data-auto-focus") ? "unshift" : "push";
      res[method](item);
    }
  });
  if (_isFocusable$1(node)) {
    res.unshift(node);
  }
  return res;
}
var lastFocusElement$1 = null;
function saveLastFocusNode$2() {
  lastFocusElement$1 = document.activeElement;
}
function clearLastFocusNode$1() {
  lastFocusElement$1 = null;
}
function backLastFocusNode$2() {
  if (lastFocusElement$1) {
    try {
      lastFocusElement$1.focus();
    } catch (e2) {
    }
  }
}
function limitTabRange$1(node, e2) {
  if (e2.keyCode === _KEYCODE$1.TAB) {
    var tabNodeList = getFocusNodeList$2(node);
    var maxIndex = tabNodeList.length - 1;
    var index2 = tabNodeList.indexOf(document.activeElement);
    if (index2 > -1) {
      var targetIndex = index2 + (e2.shiftKey ? -1 : 1);
      targetIndex < 0 && (targetIndex = maxIndex);
      targetIndex > maxIndex && (targetIndex = 0);
      tabNodeList[targetIndex].focus();
      e2.preventDefault();
    }
  }
}
var _focus$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  getFocusNodeList: getFocusNodeList$2,
  saveLastFocusNode: saveLastFocusNode$2,
  clearLastFocusNode: clearLastFocusNode$1,
  backLastFocusNode: backLastFocusNode$2,
  limitTabRange: limitTabRange$1
});
var timestamp$1 = Date.now();
function uuid(prefix2) {
  prefix2 = prefix2 || "";
  return prefix2 + (timestamp$1++).toString(36);
}
function randomId$1(prefix2) {
  var max2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1e6;
  var rand = Math.ceil(Math.random() * max2);
  return prefix2 ? escapeForId$1(prefix2) + "-" + rand : rand.toString(10);
}
function escapeForId$1(text) {
  if (!text) {
    return "";
  }
  if ((typeof text === "undefined" ? "undefined" : _typeof$1(text)) === "object") {
    text = JSON.stringify(text);
  } else if (typeof text !== "string") {
    text = String(text);
  }
  return text.replace(/['"]/gm, "").replace(/[\s'"]/gm, "-");
}
var _htmlId$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  randomId: randomId$1,
  escapeForId: escapeForId$1
});
var dom$1 = _dom$1;
var env$3 = _env$1;
var events$1 = _events$1;
var func$1 = _func$1;
var log$1 = _log$1;
var obj$1 = _object$1;
var str$1 = _string$1;
var support$1 = _support$1;
var focus$1 = _focus$1;
var guid$1 = uuid;
var KEYCODE$1 = _KEYCODE$1;
var htmlId$1 = _htmlId$1;
var zhCN$1 = {
  momentLocale: "zh-cn",
  Timeline: {
    expand: "展开",
    fold: "收起"
  },
  Balloon: {
    close: "关闭"
  },
  Card: {
    expand: "展开",
    fold: "收起"
  },
  Calendar: {
    today: "今天",
    now: "此刻",
    ok: "确定",
    clear: "清除",
    month: "月",
    year: "年",
    prevYear: "上一年",
    nextYear: "下一年",
    prevMonth: "上个月",
    nextMonth: "下个月",
    prevDecade: "上十年",
    nextDecade: "后十年",
    yearSelectAriaLabel: "选择年份",
    monthSelectAriaLabel: "选择月份"
  },
  DatePicker: {
    placeholder: "请选择日期",
    datetimePlaceholder: "请选择日期和时间",
    monthPlaceholder: "请选择月",
    yearPlaceholder: "请选择年",
    weekPlaceholder: "请选择周",
    now: "此刻",
    selectTime: "选择时间",
    selectDate: "选择日期",
    ok: "确定",
    clear: "清除",
    startPlaceholder: "起始日期",
    endPlaceholder: "结束日期",
    hour: "时",
    minute: "分",
    second: "秒"
  },
  Dialog: {
    close: "关闭",
    ok: "确认",
    cancel: "取消"
  },
  Drawer: {
    close: "关闭"
  },
  Message: {
    closeAriaLabel: "关闭"
  },
  Pagination: {
    prev: "上一页",
    next: "下一页",
    goTo: "到第",
    page: "页",
    go: "确定",
    total: "第{current}页，共{total}页",
    labelPrev: "上一页，当前第{current}页",
    labelNext: "下一页，当前第{current}页",
    inputAriaLabel: "请输入跳转到第几页",
    selectAriaLabel: "请选择每页显示几条",
    pageSize: "每页显示："
  },
  Input: {
    clear: "清除"
  },
  List: {
    empty: "没有数据"
  },
  Select: {
    selectPlaceholder: "请选择",
    autoCompletePlaceholder: "请输入",
    notFoundContent: "无选项",
    maxTagPlaceholder: "已选择 {selected}/{total} 项",
    selectAll: "全选"
  },
  Table: {
    empty: "没有数据",
    ok: "确认",
    reset: "重置",
    asc: "升序",
    desc: "降序",
    expanded: "已展开",
    folded: "已折叠",
    filter: "筛选",
    selectAll: "全选"
  },
  TimePicker: {
    placeholder: "请选择时间",
    clear: "清除",
    hour: "时",
    minute: "分",
    second: "秒"
  },
  Transfer: {
    items: "项",
    item: "项",
    moveAll: "移动全部",
    searchPlaceholder: "请输入",
    moveToLeft: "撤销选中元素",
    moveToRight: "提交选中元素"
  },
  Upload: {
    card: {
      cancel: "取消",
      addPhoto: "上传图片",
      download: "下载",
      delete: "删除"
    },
    drag: {
      text: "点击或者拖动文件到虚线框内上传",
      hint: "支持 docx, xls, PDF, rar, zip, PNG, JPG 等类型的文件"
    },
    upload: {
      delete: "删除"
    }
  },
  Search: {
    buttonText: "搜索"
  },
  Tag: {
    delete: "删除"
  },
  Rating: {
    description: "评分选项"
  },
  Switch: {
    on: "已打开",
    off: "已关闭"
  },
  Tab: {
    closeAriaLabel: "关闭"
  }
};
var parseBoundary$1 = function parseBoundary3(input) {
  var obj2 = void 0;
  if (input === void 0 || input === null) {
    return {};
  } else if (typeof input === "boolean") {
    obj2 = {open: input};
  } else {
    obj2 = _extends$5({open: true}, input);
  }
  return obj2;
};
function getContextProps$2(props, context2, displayName) {
  var prefix2 = props.prefix, locale = props.locale, pure = props.pure, rtl = props.rtl, device = props.device, popupContainer = props.popupContainer, errorBoundary = props.errorBoundary;
  var nextPrefix = context2.nextPrefix, nextLocale = context2.nextLocale, nextPure = context2.nextPure, nextWarning = context2.nextWarning, nextRtl = context2.nextRtl, nextDevice = context2.nextDevice, nextPopupContainer = context2.nextPopupContainer, nextErrorBoundary = context2.nextErrorBoundary;
  var newPrefix = prefix2 || nextPrefix;
  var localeFromContext = void 0;
  if (nextLocale) {
    localeFromContext = nextLocale[displayName];
    if (localeFromContext) {
      localeFromContext.momentLocale = nextLocale.momentLocale;
    }
  }
  var newLocale = void 0;
  if (locale) {
    newLocale = obj$1.deepMerge({}, zhCN$1[displayName], localeFromContext, locale);
  } else if (localeFromContext) {
    newLocale = obj$1.deepMerge({}, zhCN$1[displayName], localeFromContext);
  }
  var newPure = typeof pure === "boolean" ? pure : nextPure;
  var newRtl = typeof rtl === "boolean" ? rtl : nextRtl;
  var newErrorBoundary = _extends$5({}, parseBoundary$1(nextErrorBoundary), parseBoundary$1(errorBoundary));
  if (!("open" in newErrorBoundary)) {
    newErrorBoundary.open = false;
  }
  return {
    prefix: newPrefix,
    locale: newLocale,
    pure: newPure,
    rtl: newRtl,
    warning: nextWarning,
    device: device || nextDevice || void 0,
    popupContainer: popupContainer || nextPopupContainer,
    errorBoundary: newErrorBoundary
  };
}
var objectWithoutProperties$2 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = function(obj2, keys3) {
    var target = {};
    for (var i in obj2) {
      if (keys3.indexOf(i) >= 0)
        continue;
      if (!Object.prototype.hasOwnProperty.call(obj2, i))
        continue;
      target[i] = obj2[i];
    }
    return target;
  };
});
var _objectWithoutProperties$2 = /* @__PURE__ */ getDefaultExportFromCjs(objectWithoutProperties$2);
var REACT_STATICS$2 = {
  childContextTypes: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS$2 = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var defineProperty$5 = Object.defineProperty;
var getOwnPropertyNames$2 = Object.getOwnPropertyNames;
var getOwnPropertySymbols$3 = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;
var getPrototypeOf$2 = Object.getPrototypeOf;
var objectPrototype$2 = getPrototypeOf$2 && getPrototypeOf$2(Object);
function hoistNonReactStatics$2(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== "string") {
    if (objectPrototype$2) {
      var inheritedComponent = getPrototypeOf$2(sourceComponent);
      if (inheritedComponent && inheritedComponent !== objectPrototype$2) {
        hoistNonReactStatics$2(targetComponent, inheritedComponent, blacklist);
      }
    }
    var keys3 = getOwnPropertyNames$2(sourceComponent);
    if (getOwnPropertySymbols$3) {
      keys3 = keys3.concat(getOwnPropertySymbols$3(sourceComponent));
    }
    for (var i = 0; i < keys3.length; ++i) {
      var key = keys3[i];
      if (!REACT_STATICS$2[key] && !KNOWN_STATICS$2[key] && (!blacklist || !blacklist[key])) {
        var descriptor = getOwnPropertyDescriptor$2(sourceComponent, key);
        try {
          defineProperty$5(targetComponent, key, descriptor);
        } catch (e2) {
        }
      }
    }
    return targetComponent;
  }
  return targetComponent;
}
var hoistNonReactStatics_cjs$2 = hoistNonReactStatics$2;
var _class$R, _temp$O;
DefaultUI$1.propTypes = {
  error: propTypes.object,
  errorInfo: propTypes.object
};
function DefaultUI$1() {
  return "";
}
var ErrorBoundary$1 = (_temp$O = _class$R = function(_React$Component) {
  _inherits$1(ErrorBoundary2, _React$Component);
  function ErrorBoundary2(props) {
    _classCallCheck$1(this, ErrorBoundary2);
    var _this2 = _possibleConstructorReturn$1(this, _React$Component.call(this, props));
    _this2.state = {error: null, errorInfo: null};
    return _this2;
  }
  ErrorBoundary2.prototype.componentDidCatch = function componentDidCatch(error, errorInfo) {
    this.setState({
      error,
      errorInfo
    });
    var afterCatch = this.props.afterCatch;
    if ("afterCatch" in this.props && typeof afterCatch === "function") {
      this.props.afterCatch(error, errorInfo);
    }
  };
  ErrorBoundary2.prototype.render = function render2() {
    var _props$fallbackUI = this.props.fallbackUI, FallbackUI = _props$fallbackUI === void 0 ? DefaultUI$1 : _props$fallbackUI;
    if (this.state.errorInfo) {
      return React.createElement(FallbackUI, {
        error: this.state.error,
        errorInfo: this.state.errorInfo
      });
    }
    return this.props.children;
  };
  return ErrorBoundary2;
}(React.Component), _class$R.propTypes = {
  children: propTypes.element,
  afterCatch: propTypes.func,
  fallbackUI: propTypes.func
}, _temp$O);
ErrorBoundary$1.displayName = "ErrorBoundary";
var shallowEqual$3 = obj$1.shallowEqual;
function getDisplayName$1(Component2) {
  return Component2.displayName || Component2.name || "Component";
}
var globalLocales$1 = void 0;
var currentGlobalLanguage$1 = "zh-cn";
var currentGlobalLocale$1 = {};
var currentGlobalRtl$1 = void 0;
function initLocales$1(locales) {
  globalLocales$1 = locales;
  if (locales) {
    currentGlobalLocale$1 = locales[currentGlobalLanguage$1];
    if (typeof currentGlobalRtl$1 !== "boolean") {
      currentGlobalRtl$1 = currentGlobalLocale$1 && currentGlobalLocale$1.rtl;
    }
  }
}
function setLanguage$1(language) {
  if (globalLocales$1) {
    currentGlobalLanguage$1 = language;
    currentGlobalLocale$1 = globalLocales$1[language];
    if (typeof currentGlobalRtl$1 !== "boolean") {
      currentGlobalRtl$1 = currentGlobalLocale$1 && currentGlobalLocale$1.rtl;
    }
  }
}
function setLocale$1(locale) {
  currentGlobalLocale$1 = _extends$5({}, globalLocales$1 ? globalLocales$1[currentGlobalLanguage$1] : {}, locale);
  if (typeof currentGlobalRtl$1 !== "boolean") {
    currentGlobalRtl$1 = currentGlobalLocale$1 && currentGlobalLocale$1.rtl;
  }
}
function setDirection$1(dir) {
  currentGlobalRtl$1 = dir === "rtl";
}
function getLocale$1() {
  return currentGlobalLocale$1;
}
function getLanguage$1() {
  return currentGlobalLanguage$1;
}
function getDirection$1() {
  return currentGlobalRtl$1;
}
function config$1(Component2) {
  var _class2, _temp3;
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  if (obj$1.isClassComponent(Component2) && Component2.prototype.shouldComponentUpdate === void 0) {
    Component2.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
      if (this.props.pure) {
        return !shallowEqual$3(this.props, nextProps) || !shallowEqual$3(this.state, nextState);
      }
      return true;
    };
  }
  var ConfigedComponent = (_temp3 = _class2 = function(_React$Component) {
    _inherits$1(ConfigedComponent2, _React$Component);
    function ConfigedComponent2(props, context2) {
      _classCallCheck$1(this, ConfigedComponent2);
      var _this2 = _possibleConstructorReturn$1(this, _React$Component.call(this, props, context2));
      _this2._getInstance = _this2._getInstance.bind(_this2);
      _this2._deprecated = _this2._deprecated.bind(_this2);
      return _this2;
    }
    ConfigedComponent2.prototype._getInstance = function _getInstance(ref) {
      var _this2 = this;
      this._instance = ref;
      if (this._instance && options.exportNames) {
        options.exportNames.forEach(function(name) {
          var field = _this2._instance[name];
          if (typeof field === "function") {
            _this2[name] = field.bind(_this2._instance);
          } else {
            _this2[name] = field;
          }
        });
      }
    };
    ConfigedComponent2.prototype._deprecated = function _deprecated() {
      if (this.context.nextWarning !== false) {
        log$1.deprecated.apply(log$1, arguments);
      }
    };
    ConfigedComponent2.prototype.getInstance = function getInstance() {
      return this._instance;
    };
    ConfigedComponent2.prototype.render = function render2() {
      var _props = this.props, prefix2 = _props.prefix, locale = _props.locale, pure = _props.pure, rtl = _props.rtl, device = _props.device, popupContainer = _props.popupContainer, errorBoundary = _props.errorBoundary, others = _objectWithoutProperties$2(_props, ["prefix", "locale", "pure", "rtl", "device", "popupContainer", "errorBoundary"]);
      var _context = this.context, nextPrefix = _context.nextPrefix, _context$nextLocale = _context.nextLocale, nextLocale = _context$nextLocale === void 0 ? {} : _context$nextLocale, nextPure = _context.nextPure, nextRtl = _context.nextRtl, nextDevice = _context.nextDevice, nextPopupContainer = _context.nextPopupContainer, nextErrorBoundary = _context.nextErrorBoundary;
      var displayName = options.componentName || getDisplayName$1(Component2);
      var contextProps = getContextProps$2({
        prefix: prefix2,
        locale,
        pure,
        device,
        popupContainer,
        rtl,
        errorBoundary
      }, {
        nextPrefix,
        nextLocale: _extends$5({}, currentGlobalLocale$1, nextLocale),
        nextPure,
        nextDevice,
        nextPopupContainer,
        nextRtl: typeof nextRtl === "boolean" ? nextRtl : currentGlobalRtl$1 === true ? true : void 0,
        nextErrorBoundary
      }, displayName);
      var newContextProps = ["prefix", "locale", "pure", "rtl", "device", "popupContainer"].reduce(function(ret, name) {
        if (typeof contextProps[name] !== "undefined") {
          ret[name] = contextProps[name];
        }
        return ret;
      }, {});
      if ("pure" in newContextProps && newContextProps.pure) {
        log$1.warning("pure of ConfigProvider is deprecated, use Function Component or React.PureComponent");
      }
      var newOthers = options.transform ? options.transform(others, this._deprecated) : others;
      var content = React.createElement(Component2, _extends$5({}, newOthers, newContextProps, {
        ref: obj$1.isClassComponent(Component2) ? this._getInstance : null
      }));
      var _contextProps$errorBo = contextProps.errorBoundary, open = _contextProps$errorBo.open, othersBoundary = _objectWithoutProperties$2(_contextProps$errorBo, ["open"]);
      return open ? React.createElement(ErrorBoundary$1, othersBoundary, content) : content;
    };
    return ConfigedComponent2;
  }(React.Component), _class2.propTypes = _extends$5({}, Component2.propTypes || {}, {
    prefix: propTypes.string,
    locale: propTypes.object,
    pure: propTypes.bool,
    rtl: propTypes.bool,
    device: propTypes.oneOf(["tablet", "desktop", "phone"]),
    popupContainer: propTypes.any,
    errorBoundary: propTypes.oneOfType([propTypes.bool, propTypes.object])
  }), _class2.contextTypes = _extends$5({}, Component2.contextTypes || {}, {
    nextPrefix: propTypes.string,
    nextLocale: propTypes.object,
    nextPure: propTypes.bool,
    nextRtl: propTypes.bool,
    nextWarning: propTypes.bool,
    nextDevice: propTypes.oneOf(["tablet", "desktop", "phone"]),
    nextPopupContainer: propTypes.any,
    nextErrorBoundary: propTypes.oneOfType([propTypes.bool, propTypes.object])
  }), _temp3);
  ConfigedComponent.displayName = "ConfigedComponent";
  ConfigedComponent.displayName = "Config(" + getDisplayName$1(Component2) + ")";
  hoistNonReactStatics_cjs$2(ConfigedComponent, Component2);
  return ConfigedComponent;
}
var mapKeys$1 = function mapKeys3(obj2, fn) {
  var result = {};
  for (var key in obj2) {
    if (Object.prototype.hasOwnProperty.call(obj2, key)) {
      var value = obj2[key];
      var newKey = fn(key, value);
      result[newKey] = value;
    }
  }
  return result;
};
var replaceKey$1 = function replaceKey3(key) {
  return key.replace(/^(next)([A-Z])/, function(match, p1, p2) {
    return p2.toLowerCase();
  });
};
var transformContext$1 = function transformContext3(source) {
  return mapKeys$1(source, replaceKey$1);
};
var Consumer$1 = function Consumer3(_ref, context2) {
  var children = _ref.children;
  return typeof children === "function" ? children(transformContext$1(context2)) : null;
};
Consumer$1.propTypes = {
  children: propTypes.func
};
Consumer$1.contextTypes = {
  nextPrefix: propTypes.string,
  nextLocale: propTypes.object,
  nextPure: propTypes.bool,
  newRtl: propTypes.bool,
  nextWarning: propTypes.bool,
  nextDevice: propTypes.oneOf(["tablet", "desktop", "phone"]),
  nextPopupContainer: propTypes.any
};
var Cache$1 = function() {
  function Cache2() {
    _classCallCheck$1(this, Cache2);
    this._root = null;
    this._store = new Map();
  }
  Cache2.prototype.empty = function empty() {
    return this._store.size === 0;
  };
  Cache2.prototype.has = function has2(key) {
    return this._store.has(key);
  };
  Cache2.prototype.get = function get(key, defaultValue) {
    var res = this.has(key) ? this._store.get(key) : this.root();
    return typeof res === "undefined" || res === null ? defaultValue : res;
  };
  Cache2.prototype.add = function add(key, value) {
    if (this.empty()) {
      this._root = key;
    }
    this._store.set(key, value);
  };
  Cache2.prototype.update = function update(key, value) {
    if (this.has(key)) {
      this._store.set(key, value);
    }
  };
  Cache2.prototype.remove = function remove(key) {
    this._store.delete(key);
    if (key === this._root) {
      var maps = this._store.keys();
      var nextkey = maps.next().value;
      this._root = nextkey;
    }
  };
  Cache2.prototype.root = function root() {
    return this._store.get(this._root);
  };
  return Cache2;
}();
var _class$S, _temp$P;
var childContextCache$1 = new Cache$1();
var setMomentLocale$1 = function setMomentLocale3(locale) {
  var moment = void 0;
  try {
    moment = require("moment");
  } catch (e2) {
  }
  if (moment && locale) {
    moment.locale(locale.momentLocale);
  }
};
var ConfigProvider$1 = (_temp$P = _class$S = function(_Component) {
  _inherits$1(ConfigProvider2, _Component);
  function ConfigProvider2() {
    _classCallCheck$1(this, ConfigProvider2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var _this2 = _possibleConstructorReturn$1(this, _Component.call.apply(_Component, [this].concat(args)));
    childContextCache$1.add(_this2, _extends$5({}, childContextCache$1.get(_this2, {}), _this2.getChildContext()));
    setMomentLocale$1(_this2.props.locale);
    _this2.state = {
      locale: _this2.props.locale
    };
    return _this2;
  }
  ConfigProvider2.prototype.getChildContext = function getChildContext() {
    var _props = this.props, prefix2 = _props.prefix, locale = _props.locale, pure = _props.pure, warning2 = _props.warning, rtl = _props.rtl, device = _props.device, popupContainer = _props.popupContainer, errorBoundary = _props.errorBoundary;
    var _context = this.context, nextPrefix = _context.nextPrefix, nextLocale = _context.nextLocale, nextPure = _context.nextPure, nextRtl = _context.nextRtl, nextWarning = _context.nextWarning, nextDevice = _context.nextDevice, nextPopupContainer = _context.nextPopupContainer, nextErrorBoundary = _context.nextErrorBoundary;
    return {
      nextPrefix: prefix2 || nextPrefix,
      nextLocale: locale || nextLocale,
      nextPure: typeof pure === "boolean" ? pure : nextPure,
      nextRtl: typeof rtl === "boolean" ? rtl : nextRtl,
      nextWarning: typeof warning2 === "boolean" ? warning2 : nextWarning,
      nextDevice: device || nextDevice,
      nextPopupContainer: popupContainer || nextPopupContainer,
      nextErrorBoundary: errorBoundary || nextErrorBoundary
    };
  };
  ConfigProvider2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if (nextProps.locale !== prevState.locale) {
      setMomentLocale$1(nextProps.locale);
      return {
        locale: nextProps.locale
      };
    }
    return null;
  };
  ConfigProvider2.prototype.componentDidUpdate = function componentDidUpdate() {
    childContextCache$1.add(this, _extends$5({}, childContextCache$1.get(this, {}), this.getChildContext()));
  };
  ConfigProvider2.prototype.componentWillUnmount = function componentWillUnmount() {
    childContextCache$1.remove(this);
  };
  ConfigProvider2.prototype.render = function render2() {
    return Children.only(this.props.children);
  };
  return ConfigProvider2;
}(Component), _class$S.propTypes = {
  prefix: propTypes.string,
  locale: propTypes.object,
  errorBoundary: propTypes.oneOfType([propTypes.bool, propTypes.object]),
  pure: propTypes.bool,
  warning: propTypes.bool,
  rtl: propTypes.bool,
  device: propTypes.oneOf(["tablet", "desktop", "phone"]),
  children: propTypes.any,
  popupContainer: propTypes.any
}, _class$S.defaultProps = {
  warning: true,
  errorBoundary: false
}, _class$S.contextTypes = {
  nextPrefix: propTypes.string,
  nextLocale: propTypes.object,
  nextPure: propTypes.bool,
  nextRtl: propTypes.bool,
  nextWarning: propTypes.bool,
  nextDevice: propTypes.oneOf(["tablet", "desktop", "phone"]),
  nextPopupContainer: propTypes.any,
  nextErrorBoundary: propTypes.oneOfType([propTypes.bool, propTypes.object])
}, _class$S.childContextTypes = {
  nextPrefix: propTypes.string,
  nextLocale: propTypes.object,
  nextPure: propTypes.bool,
  nextRtl: propTypes.bool,
  nextWarning: propTypes.bool,
  nextDevice: propTypes.oneOf(["tablet", "desktop", "phone"]),
  nextPopupContainer: propTypes.any,
  nextErrorBoundary: propTypes.oneOfType([propTypes.bool, propTypes.object])
}, _class$S.config = function(Component2, options) {
  return config$1(Component2, options);
}, _class$S.getContextProps = function(props, displayName) {
  return getContextProps$2(props, childContextCache$1.root() || {}, displayName);
}, _class$S.initLocales = initLocales$1, _class$S.setLanguage = setLanguage$1, _class$S.setLocale = setLocale$1, _class$S.setDirection = setDirection$1, _class$S.getLanguage = getLanguage$1, _class$S.getLocale = getLocale$1, _class$S.getDirection = getDirection$1, _class$S.Consumer = Consumer$1, _class$S.ErrorBoundary = ErrorBoundary$1, _class$S.getContext = function() {
  var _ref = childContextCache$1.root() || {}, nextPrefix = _ref.nextPrefix, nextLocale = _ref.nextLocale, nextPure = _ref.nextPure, nextRtl = _ref.nextRtl, nextWarning = _ref.nextWarning, nextDevice = _ref.nextDevice, nextPopupContainer = _ref.nextPopupContainer, nextErrorBoundary = _ref.nextErrorBoundary;
  return {
    prefix: nextPrefix,
    locale: nextLocale,
    pure: nextPure,
    rtl: nextRtl,
    warning: nextWarning,
    device: nextDevice,
    popupContainer: nextPopupContainer,
    errorBoundary: nextErrorBoundary
  };
}, _temp$P);
ConfigProvider$1.displayName = "ConfigProvider";
var NextConfigProvider = polyfill$1(ConfigProvider$1);
var interopRequireDefault$1 = createCommonjsModule(function(module) {
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {
      default: obj2
    };
  }
  module.exports = _interopRequireDefault;
});
var hasClass_1$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = hasClass2;
  function hasClass2(element, className) {
    if (element.classList)
      return !!className && element.classList.contains(className);
    else
      return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
  }
  module.exports = exports["default"];
});
var addClass_1$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = addClass2;
  var _hasClass = interopRequireDefault$1(hasClass_1$1);
  function addClass2(element, className) {
    if (element.classList)
      element.classList.add(className);
    else if (!(0, _hasClass.default)(element, className))
      if (typeof element.className === "string")
        element.className = element.className + " " + className;
      else
        element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
  }
  module.exports = exports["default"];
});
function replaceClassName$1(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
var removeClass$4 = function removeClass3(element, className) {
  if (element.classList)
    element.classList.remove(className);
  else if (typeof element.className === "string")
    element.className = replaceClassName$1(element.className, className);
  else
    element.setAttribute("class", replaceClassName$1(element.className && element.className.baseVal || "", className));
};
var require$$0 = /* @__PURE__ */ getAugmentedNamespace(source_production);
var _reactDom = /* @__PURE__ */ getAugmentedNamespace(source_production$1);
var _reactLifecyclesCompat = /* @__PURE__ */ getAugmentedNamespace(reactLifecyclesCompat_es$1);
var Transition_1$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;
  var PropTypes2 = _interopRequireWildcard(propTypes);
  var _react = _interopRequireDefault(require$$0);
  var _reactDom$1 = _interopRequireDefault(_reactDom);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  function _interopRequireWildcard(obj2) {
    if (obj2 && obj2.__esModule) {
      return obj2;
    } else {
      var newObj = {};
      if (obj2 != null) {
        for (var key in obj2) {
          if (Object.prototype.hasOwnProperty.call(obj2, key)) {
            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj2, key) : {};
            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj2[key];
            }
          }
        }
      }
      newObj.default = obj2;
      return newObj;
    }
  }
  function _objectWithoutPropertiesLoose2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function _inheritsLoose2(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var UNMOUNTED = "unmounted";
  exports.UNMOUNTED = UNMOUNTED;
  var EXITED = "exited";
  exports.EXITED = EXITED;
  var ENTERING = "entering";
  exports.ENTERING = ENTERING;
  var ENTERED = "entered";
  exports.ENTERED = ENTERED;
  var EXITING = "exiting";
  exports.EXITING = EXITING;
  var Transition = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose2(Transition2, _React$Component);
    function Transition2(props, context2) {
      var _this2;
      _this2 = _React$Component.call(this, props, context2) || this;
      var parentGroup = context2.transitionGroup;
      var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
      var initialStatus;
      _this2.appearStatus = null;
      if (props.in) {
        if (appear) {
          initialStatus = EXITED;
          _this2.appearStatus = ENTERING;
        } else {
          initialStatus = ENTERED;
        }
      } else {
        if (props.unmountOnExit || props.mountOnEnter) {
          initialStatus = UNMOUNTED;
        } else {
          initialStatus = EXITED;
        }
      }
      _this2.state = {
        status: initialStatus
      };
      _this2.nextCallback = null;
      return _this2;
    }
    var _proto = Transition2.prototype;
    _proto.getChildContext = function getChildContext() {
      return {
        transitionGroup: null
      };
    };
    Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
      var nextIn = _ref.in;
      if (nextIn && prevState.status === UNMOUNTED) {
        return {
          status: EXITED
        };
      }
      return null;
    };
    _proto.componentDidMount = function componentDidMount() {
      this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
      var nextStatus = null;
      if (prevProps !== this.props) {
        var status = this.state.status;
        if (this.props.in) {
          if (status !== ENTERING && status !== ENTERED) {
            nextStatus = ENTERING;
          }
        } else {
          if (status === ENTERING || status === ENTERED) {
            nextStatus = EXITING;
          }
        }
      }
      this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
      var timeout = this.props.timeout;
      var exit, enter, appear;
      exit = enter = appear = timeout;
      if (timeout != null && typeof timeout !== "number") {
        exit = timeout.exit;
        enter = timeout.enter;
        appear = timeout.appear !== void 0 ? timeout.appear : enter;
      }
      return {
        exit,
        enter,
        appear
      };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
      if (mounting === void 0) {
        mounting = false;
      }
      if (nextStatus !== null) {
        this.cancelNextCallback();
        var node = _reactDom$1.default.findDOMNode(this);
        if (nextStatus === ENTERING) {
          this.performEnter(node, mounting);
        } else {
          this.performExit(node);
        }
      } else if (this.props.unmountOnExit && this.state.status === EXITED) {
        this.setState({
          status: UNMOUNTED
        });
      }
    };
    _proto.performEnter = function performEnter(node, mounting) {
      var _this2 = this;
      var enter = this.props.enter;
      var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
      var timeouts = this.getTimeouts();
      var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
      if (!mounting && !enter) {
        this.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(node);
        });
        return;
      }
      this.props.onEnter(node, appearing);
      this.safeSetState({
        status: ENTERING
      }, function() {
        _this2.props.onEntering(node, appearing);
        _this2.onTransitionEnd(node, enterTimeout, function() {
          _this2.safeSetState({
            status: ENTERED
          }, function() {
            _this2.props.onEntered(node, appearing);
          });
        });
      });
    };
    _proto.performExit = function performExit(node) {
      var _this3 = this;
      var exit = this.props.exit;
      var timeouts = this.getTimeouts();
      if (!exit) {
        this.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(node);
        });
        return;
      }
      this.props.onExit(node);
      this.safeSetState({
        status: EXITING
      }, function() {
        _this3.props.onExiting(node);
        _this3.onTransitionEnd(node, timeouts.exit, function() {
          _this3.safeSetState({
            status: EXITED
          }, function() {
            _this3.props.onExited(node);
          });
        });
      });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
      if (this.nextCallback !== null) {
        this.nextCallback.cancel();
        this.nextCallback = null;
      }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
      callback = this.setNextCallback(callback);
      this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
      var _this4 = this;
      var active = true;
      this.nextCallback = function(event) {
        if (active) {
          active = false;
          _this4.nextCallback = null;
          callback(event);
        }
      };
      this.nextCallback.cancel = function() {
        active = false;
      };
      return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
      this.setNextCallback(handler);
      var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
      if (!node || doesNotHaveTimeoutOrListener) {
        setTimeout(this.nextCallback, 0);
        return;
      }
      if (this.props.addEndListener) {
        this.props.addEndListener(node, this.nextCallback);
      }
      if (timeout != null) {
        setTimeout(this.nextCallback, timeout);
      }
    };
    _proto.render = function render2() {
      var status = this.state.status;
      if (status === UNMOUNTED) {
        return null;
      }
      var _this$props = this.props, children = _this$props.children, childProps = _objectWithoutPropertiesLoose2(_this$props, ["children"]);
      delete childProps.in;
      delete childProps.mountOnEnter;
      delete childProps.unmountOnExit;
      delete childProps.appear;
      delete childProps.enter;
      delete childProps.exit;
      delete childProps.timeout;
      delete childProps.addEndListener;
      delete childProps.onEnter;
      delete childProps.onEntering;
      delete childProps.onEntered;
      delete childProps.onExit;
      delete childProps.onExiting;
      delete childProps.onExited;
      if (typeof children === "function") {
        return children(status, childProps);
      }
      var child = _react.default.Children.only(children);
      return _react.default.cloneElement(child, childProps);
    };
    return Transition2;
  }(_react.default.Component);
  Transition.contextTypes = {
    transitionGroup: PropTypes2.object
  };
  Transition.childContextTypes = {
    transitionGroup: function transitionGroup() {
    }
  };
  Transition.propTypes = {};
  function noop12() {
  }
  Transition.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop12,
    onEntering: noop12,
    onEntered: noop12,
    onExit: noop12,
    onExiting: noop12,
    onExited: noop12
  };
  Transition.UNMOUNTED = 0;
  Transition.EXITED = 1;
  Transition.ENTERING = 2;
  Transition.ENTERED = 3;
  Transition.EXITING = 4;
  var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);
  exports.default = _default;
});
var CSSTransition_1$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var PropTypes2 = _interopRequireWildcard(propTypes);
  var _addClass = _interopRequireDefault(addClass_1$1);
  var _removeClass = _interopRequireDefault(removeClass$4);
  var _react = _interopRequireDefault(require$$0);
  var _Transition = _interopRequireDefault(Transition_1$1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  function _interopRequireWildcard(obj2) {
    if (obj2 && obj2.__esModule) {
      return obj2;
    } else {
      var newObj = {};
      if (obj2 != null) {
        for (var key in obj2) {
          if (Object.prototype.hasOwnProperty.call(obj2, key)) {
            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj2, key) : {};
            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj2[key];
            }
          }
        }
      }
      newObj.default = obj2;
      return newObj;
    }
  }
  function _extends2() {
    _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends2.apply(this, arguments);
  }
  function _inheritsLoose2(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var addClass2 = function addClass3(node, classes) {
    return node && classes && classes.split(" ").forEach(function(c2) {
      return (0, _addClass.default)(node, c2);
    });
  };
  var removeClass4 = function removeClass5(node, classes) {
    return node && classes && classes.split(" ").forEach(function(c2) {
      return (0, _removeClass.default)(node, c2);
    });
  };
  var CSSTransition = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose2(CSSTransition2, _React$Component);
    function CSSTransition2() {
      var _this2;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this2 = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _this2.onEnter = function(node, appearing) {
        var _this$getClassNames = _this2.getClassNames(appearing ? "appear" : "enter"), className = _this$getClassNames.className;
        _this2.removeClasses(node, "exit");
        addClass2(node, className);
        if (_this2.props.onEnter) {
          _this2.props.onEnter(node, appearing);
        }
      };
      _this2.onEntering = function(node, appearing) {
        var _this$getClassNames2 = _this2.getClassNames(appearing ? "appear" : "enter"), activeClassName = _this$getClassNames2.activeClassName;
        _this2.reflowAndAddClass(node, activeClassName);
        if (_this2.props.onEntering) {
          _this2.props.onEntering(node, appearing);
        }
      };
      _this2.onEntered = function(node, appearing) {
        var appearClassName = _this2.getClassNames("appear").doneClassName;
        var enterClassName = _this2.getClassNames("enter").doneClassName;
        var doneClassName = appearing ? appearClassName + " " + enterClassName : enterClassName;
        _this2.removeClasses(node, appearing ? "appear" : "enter");
        addClass2(node, doneClassName);
        if (_this2.props.onEntered) {
          _this2.props.onEntered(node, appearing);
        }
      };
      _this2.onExit = function(node) {
        var _this$getClassNames3 = _this2.getClassNames("exit"), className = _this$getClassNames3.className;
        _this2.removeClasses(node, "appear");
        _this2.removeClasses(node, "enter");
        addClass2(node, className);
        if (_this2.props.onExit) {
          _this2.props.onExit(node);
        }
      };
      _this2.onExiting = function(node) {
        var _this$getClassNames4 = _this2.getClassNames("exit"), activeClassName = _this$getClassNames4.activeClassName;
        _this2.reflowAndAddClass(node, activeClassName);
        if (_this2.props.onExiting) {
          _this2.props.onExiting(node);
        }
      };
      _this2.onExited = function(node) {
        var _this$getClassNames5 = _this2.getClassNames("exit"), doneClassName = _this$getClassNames5.doneClassName;
        _this2.removeClasses(node, "exit");
        addClass2(node, doneClassName);
        if (_this2.props.onExited) {
          _this2.props.onExited(node);
        }
      };
      _this2.getClassNames = function(type) {
        var classNames = _this2.props.classNames;
        var isStringClassNames = typeof classNames === "string";
        var prefix2 = isStringClassNames && classNames ? classNames + "-" : "";
        var className = isStringClassNames ? prefix2 + type : classNames[type];
        var activeClassName = isStringClassNames ? className + "-active" : classNames[type + "Active"];
        var doneClassName = isStringClassNames ? className + "-done" : classNames[type + "Done"];
        return {
          className,
          activeClassName,
          doneClassName
        };
      };
      return _this2;
    }
    var _proto = CSSTransition2.prototype;
    _proto.removeClasses = function removeClasses(node, type) {
      var _this$getClassNames6 = this.getClassNames(type), className = _this$getClassNames6.className, activeClassName = _this$getClassNames6.activeClassName, doneClassName = _this$getClassNames6.doneClassName;
      className && removeClass4(node, className);
      activeClassName && removeClass4(node, activeClassName);
      doneClassName && removeClass4(node, doneClassName);
    };
    _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
      if (className) {
        node && node.scrollTop;
        addClass2(node, className);
      }
    };
    _proto.render = function render2() {
      var props = _extends2({}, this.props);
      delete props.classNames;
      return _react.default.createElement(_Transition.default, _extends2({}, props, {
        onEnter: this.onEnter,
        onEntered: this.onEntered,
        onEntering: this.onEntering,
        onExit: this.onExit,
        onExiting: this.onExiting,
        onExited: this.onExited
      }));
    };
    return CSSTransition2;
  }(_react.default.Component);
  CSSTransition.defaultProps = {
    classNames: ""
  };
  CSSTransition.propTypes = {};
  var _default = CSSTransition;
  exports.default = _default;
  module.exports = exports["default"];
});
var ChildMapping$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.getChildMapping = getChildMapping;
  exports.mergeChildMappings = mergeChildMappings;
  exports.getInitialChildMapping = getInitialChildMapping;
  exports.getNextChildMapping = getNextChildMapping;
  function getChildMapping(children, mapFn) {
    var mapper = function mapper2(child) {
      return mapFn && (0, require$$0.isValidElement)(child) ? mapFn(child) : child;
    };
    var result = Object.create(null);
    if (children)
      require$$0.Children.map(children, function(c2) {
        return c2;
      }).forEach(function(child) {
        result[child.key] = mapper(child);
      });
    return result;
  }
  function mergeChildMappings(prev, next) {
    prev = prev || {};
    next = next || {};
    function getValueForKey(key) {
      return key in next ? next[key] : prev[key];
    }
    var nextKeysPending = Object.create(null);
    var pendingKeys = [];
    for (var prevKey in prev) {
      if (prevKey in next) {
        if (pendingKeys.length) {
          nextKeysPending[prevKey] = pendingKeys;
          pendingKeys = [];
        }
      } else {
        pendingKeys.push(prevKey);
      }
    }
    var i;
    var childMapping = {};
    for (var nextKey in next) {
      if (nextKeysPending[nextKey]) {
        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
          var pendingNextKey = nextKeysPending[nextKey][i];
          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
      }
      childMapping[nextKey] = getValueForKey(nextKey);
    }
    for (i = 0; i < pendingKeys.length; i++) {
      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    }
    return childMapping;
  }
  function getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop];
  }
  function getInitialChildMapping(props, onExited) {
    return getChildMapping(props.children, function(child) {
      return (0, require$$0.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        appear: getProp(child, "appear", props),
        enter: getProp(child, "enter", props),
        exit: getProp(child, "exit", props)
      });
    });
  }
  function getNextChildMapping(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = getChildMapping(nextProps.children);
    var children = mergeChildMappings(prevChildMapping, nextChildMapping);
    Object.keys(children).forEach(function(key) {
      var child = children[key];
      if (!(0, require$$0.isValidElement)(child))
        return;
      var hasPrev = key in prevChildMapping;
      var hasNext = key in nextChildMapping;
      var prevChild = prevChildMapping[key];
      var isLeaving = (0, require$$0.isValidElement)(prevChild) && !prevChild.props.in;
      if (hasNext && (!hasPrev || isLeaving)) {
        children[key] = (0, require$$0.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: true,
          exit: getProp(child, "exit", nextProps),
          enter: getProp(child, "enter", nextProps)
        });
      } else if (!hasNext && hasPrev && !isLeaving) {
        children[key] = (0, require$$0.cloneElement)(child, {
          in: false
        });
      } else if (hasNext && hasPrev && (0, require$$0.isValidElement)(prevChild)) {
        children[key] = (0, require$$0.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: prevChild.props.in,
          exit: getProp(child, "exit", nextProps),
          enter: getProp(child, "enter", nextProps)
        });
      }
    });
    return children;
  }
});
var TransitionGroup_1$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _propTypes = _interopRequireDefault(propTypes);
  var _react = _interopRequireDefault(require$$0);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  function _objectWithoutPropertiesLoose2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function _extends2() {
    _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends2.apply(this, arguments);
  }
  function _inheritsLoose2(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  function _assertThisInitialized(self2) {
    if (self2 === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self2;
  }
  var values = Object.values || function(obj2) {
    return Object.keys(obj2).map(function(k2) {
      return obj2[k2];
    });
  };
  var defaultProps2 = {
    component: "div",
    childFactory: function childFactory(child) {
      return child;
    }
  };
  var TransitionGroup = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose2(TransitionGroup2, _React$Component);
    function TransitionGroup2(props, context2) {
      var _this2;
      _this2 = _React$Component.call(this, props, context2) || this;
      var handleExited = _this2.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this2)));
      _this2.state = {
        handleExited,
        firstRender: true
      };
      return _this2;
    }
    var _proto = TransitionGroup2.prototype;
    _proto.getChildContext = function getChildContext() {
      return {
        transitionGroup: {
          isMounting: !this.appeared
        }
      };
    };
    _proto.componentDidMount = function componentDidMount() {
      this.appeared = true;
      this.mounted = true;
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.mounted = false;
    };
    TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
      var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
      return {
        children: firstRender ? (0, ChildMapping$1.getInitialChildMapping)(nextProps, handleExited) : (0, ChildMapping$1.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
        firstRender: false
      };
    };
    _proto.handleExited = function handleExited(child, node) {
      var currentChildMapping = (0, ChildMapping$1.getChildMapping)(this.props.children);
      if (child.key in currentChildMapping)
        return;
      if (child.props.onExited) {
        child.props.onExited(node);
      }
      if (this.mounted) {
        this.setState(function(state) {
          var children = _extends2({}, state.children);
          delete children[child.key];
          return {
            children
          };
        });
      }
    };
    _proto.render = function render2() {
      var _this$props = this.props, Component2 = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLoose2(_this$props, ["component", "childFactory"]);
      var children = values(this.state.children).map(childFactory);
      delete props.appear;
      delete props.enter;
      delete props.exit;
      if (Component2 === null) {
        return children;
      }
      return _react.default.createElement(Component2, props, children);
    };
    return TransitionGroup2;
  }(_react.default.Component);
  TransitionGroup.childContextTypes = {
    transitionGroup: _propTypes.default.object.isRequired
  };
  TransitionGroup.propTypes = {};
  TransitionGroup.defaultProps = defaultProps2;
  var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);
  exports.default = _default;
  module.exports = exports["default"];
});
var ReplaceTransition_1$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = void 0;
  var _propTypes = _interopRequireDefault(propTypes);
  var _react = _interopRequireDefault(require$$0);
  var _TransitionGroup = _interopRequireDefault(TransitionGroup_1$1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  function _objectWithoutPropertiesLoose2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  function _inheritsLoose2(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var ReplaceTransition = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose2(ReplaceTransition2, _React$Component);
    function ReplaceTransition2() {
      var _this2;
      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
        _args[_key] = arguments[_key];
      }
      _this2 = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
      _this2.handleEnter = function() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        return _this2.handleLifecycle("onEnter", 0, args);
      };
      _this2.handleEntering = function() {
        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }
        return _this2.handleLifecycle("onEntering", 0, args);
      };
      _this2.handleEntered = function() {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }
        return _this2.handleLifecycle("onEntered", 0, args);
      };
      _this2.handleExit = function() {
        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
          args[_key5] = arguments[_key5];
        }
        return _this2.handleLifecycle("onExit", 1, args);
      };
      _this2.handleExiting = function() {
        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
          args[_key6] = arguments[_key6];
        }
        return _this2.handleLifecycle("onExiting", 1, args);
      };
      _this2.handleExited = function() {
        for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
          args[_key7] = arguments[_key7];
        }
        return _this2.handleLifecycle("onExited", 1, args);
      };
      return _this2;
    }
    var _proto = ReplaceTransition2.prototype;
    _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
      var _child$props;
      var children = this.props.children;
      var child = _react.default.Children.toArray(children)[idx];
      if (child.props[handler])
        (_child$props = child.props)[handler].apply(_child$props, originalArgs);
      if (this.props[handler])
        this.props[handler]((0, _reactDom.findDOMNode)(this));
    };
    _proto.render = function render2() {
      var _this$props = this.props, children = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose2(_this$props, ["children", "in"]);
      var _React$Children$toArr = _react.default.Children.toArray(children), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
      delete props.onEnter;
      delete props.onEntering;
      delete props.onEntered;
      delete props.onExit;
      delete props.onExiting;
      delete props.onExited;
      return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
        key: "first",
        onEnter: this.handleEnter,
        onEntering: this.handleEntering,
        onEntered: this.handleEntered
      }) : _react.default.cloneElement(second, {
        key: "second",
        onEnter: this.handleExit,
        onEntering: this.handleExiting,
        onEntered: this.handleExited
      }));
    };
    return ReplaceTransition2;
  }(_react.default.Component);
  ReplaceTransition.propTypes = {};
  var _default = ReplaceTransition;
  exports.default = _default;
  module.exports = exports["default"];
});
var reactTransitionGroup$1 = createCommonjsModule(function(module) {
  var _CSSTransition = _interopRequireDefault(CSSTransition_1$1);
  var _ReplaceTransition = _interopRequireDefault(ReplaceTransition_1$1);
  var _TransitionGroup = _interopRequireDefault(TransitionGroup_1$1);
  var _Transition = _interopRequireDefault(Transition_1$1);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  module.exports = {
    Transition: _Transition.default,
    TransitionGroup: _TransitionGroup.default,
    ReplaceTransition: _ReplaceTransition.default,
    CSSTransition: _CSSTransition.default
  };
});
var _class$T, _temp$Q;
var noop$j = function noop8() {
};
var on$3 = events$1.on, off$1 = events$1.off;
var addClass$3 = dom$1.addClass, removeClass$5 = dom$1.removeClass;
var prefixes$2 = ["-webkit-", "-moz-", "-o-", "ms-", ""];
function getStyleProperty$2(node, name) {
  var style = window.getComputedStyle(node);
  var ret = "";
  for (var i = 0; i < prefixes$2.length; i++) {
    ret = style.getPropertyValue(prefixes$2[i] + name);
    if (ret) {
      break;
    }
  }
  return ret;
}
var AnimateChild$1 = (_temp$Q = _class$T = function(_Component) {
  _inherits$1(AnimateChild2, _Component);
  function AnimateChild2(props) {
    _classCallCheck$1(this, AnimateChild2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    func$1.bindCtx(_this2, ["handleEnter", "handleEntering", "handleEntered", "handleExit", "handleExiting", "handleExited", "addEndListener"]);
    _this2.endListeners = {
      transitionend: [],
      animationend: []
    };
    _this2.timeoutMap = {};
    return _this2;
  }
  AnimateChild2.prototype.componentWillUnmount = function componentWillUnmount() {
    var _this3 = this;
    Object.keys(this.endListeners).forEach(function(eventName) {
      _this3.endListeners[eventName].forEach(function(listener) {
        off$1(_this3.node, eventName, listener);
      });
    });
    this.endListeners = {
      transitionend: [],
      animationend: []
    };
  };
  AnimateChild2.prototype.generateEndListener = function generateEndListener(node, done, eventName, id2) {
    var _this2 = this;
    return function endListener(e2) {
      if (e2 && e2.target === node) {
        if (_this2.timeoutMap[id2]) {
          clearTimeout(_this2.timeoutMap[id2]);
          delete _this2.timeoutMap[id2];
        }
        done();
        off$1(node, eventName, endListener);
        var listeners = _this2.endListeners[eventName];
        var index2 = listeners.indexOf(endListener);
        index2 > -1 && listeners.splice(index2, 1);
      }
    };
  };
  AnimateChild2.prototype.addEndListener = function addEndListener(node, done) {
    var _this4 = this;
    if (support$1.transition || support$1.animation) {
      var id2 = guid$1();
      this.node = node;
      if (support$1.transition) {
        var transitionEndListener = this.generateEndListener(node, done, "transitionend", id2);
        on$3(node, "transitionend", transitionEndListener);
        this.endListeners.transitionend.push(transitionEndListener);
      }
      if (support$1.animation) {
        var animationEndListener = this.generateEndListener(node, done, "animationend", id2);
        on$3(node, "animationend", animationEndListener);
        this.endListeners.animationend.push(animationEndListener);
      }
      setTimeout(function() {
        var transitionDelay = parseFloat(getStyleProperty$2(node, "transition-delay")) || 0;
        var transitionDuration = parseFloat(getStyleProperty$2(node, "transition-duration")) || 0;
        var animationDelay = parseFloat(getStyleProperty$2(node, "animation-delay")) || 0;
        var animationDuration = parseFloat(getStyleProperty$2(node, "animation-duration")) || 0;
        var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
        if (time) {
          _this4.timeoutMap[id2] = setTimeout(function() {
            done();
          }, time * 1e3 + 200);
        }
      }, 15);
    } else {
      done();
    }
  };
  AnimateChild2.prototype.removeEndtListener = function removeEndtListener() {
    this.transitionOff && this.transitionOff();
    this.animationOff && this.animationOff();
  };
  AnimateChild2.prototype.removeClassNames = function removeClassNames(node, names) {
    Object.keys(names).forEach(function(key) {
      removeClass$5(node, names[key]);
    });
  };
  AnimateChild2.prototype.handleEnter = function handleEnter(node, isAppearing) {
    var names = this.props.names;
    if (names) {
      this.removeClassNames(node, names);
      var className = isAppearing ? "appear" : "enter";
      addClass$3(node, names[className]);
    }
    var hook = isAppearing ? this.props.onAppear : this.props.onEnter;
    hook(node);
  };
  AnimateChild2.prototype.handleEntering = function handleEntering(node, isAppearing) {
    var _this5 = this;
    setTimeout(function() {
      var names = _this5.props.names;
      if (names) {
        var className = isAppearing ? "appearActive" : "enterActive";
        addClass$3(node, names[className]);
      }
      var hook = isAppearing ? _this5.props.onAppearing : _this5.props.onEntering;
      hook(node);
    }, 10);
  };
  AnimateChild2.prototype.handleEntered = function handleEntered(node, isAppearing) {
    var names = this.props.names;
    if (names) {
      var classNames = isAppearing ? [names.appear, names.appearActive] : [names.enter, names.enterActive];
      classNames.forEach(function(className) {
        removeClass$5(node, className);
      });
    }
    var hook = isAppearing ? this.props.onAppeared : this.props.onEntered;
    hook(node);
  };
  AnimateChild2.prototype.handleExit = function handleExit(node) {
    var names = this.props.names;
    if (names) {
      this.removeClassNames(node, names);
      addClass$3(node, names.leave);
    }
    this.props.onExit(node);
  };
  AnimateChild2.prototype.handleExiting = function handleExiting(node) {
    var _this6 = this;
    setTimeout(function() {
      var names = _this6.props.names;
      if (names) {
        addClass$3(node, names.leaveActive);
      }
      _this6.props.onExiting(node);
    }, 10);
  };
  AnimateChild2.prototype.handleExited = function handleExited(node) {
    var names = this.props.names;
    if (names) {
      [names.leave, names.leaveActive].forEach(function(className) {
        removeClass$5(node, className);
      });
    }
    this.props.onExited(node);
  };
  AnimateChild2.prototype.render = function render2() {
    var _props = this.props, names = _props.names, onAppear = _props.onAppear, onAppeared = _props.onAppeared, onAppearing = _props.onAppearing, onEnter = _props.onEnter, onEntering = _props.onEntering, onEntered = _props.onEntered, onExit = _props.onExit, onExiting = _props.onExiting, onExited = _props.onExited, others = _objectWithoutProperties$2(_props, ["names", "onAppear", "onAppeared", "onAppearing", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited"]);
    return React.createElement(reactTransitionGroup$1.Transition, _extends$5({}, others, {
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered,
      onExit: this.handleExit,
      onExiting: this.handleExiting,
      onExited: this.handleExited,
      addEndListener: this.addEndListener
    }));
  };
  return AnimateChild2;
}(Component), _class$T.propTypes = {
  names: propTypes.oneOfType([propTypes.string, propTypes.object]),
  onAppear: propTypes.func,
  onAppearing: propTypes.func,
  onAppeared: propTypes.func,
  onEnter: propTypes.func,
  onEntering: propTypes.func,
  onEntered: propTypes.func,
  onExit: propTypes.func,
  onExiting: propTypes.func,
  onExited: propTypes.func
}, _class$T.defaultProps = {
  onAppear: noop$j,
  onAppearing: noop$j,
  onAppeared: noop$j,
  onEnter: noop$j,
  onEntering: noop$j,
  onEntered: noop$j,
  onExit: noop$j,
  onExiting: noop$j,
  onExited: noop$j
}, _temp$Q);
AnimateChild$1.displayName = "AnimateChild";
var _class$U, _temp$R;
var noop$k = function noop9() {
};
var FirstChild$1 = function FirstChild3(props) {
  var childrenArray = React.Children.toArray(props.children);
  return childrenArray[0] || null;
};
var Animate$1 = (_temp$R = _class$U = function(_Component) {
  _inherits$1(Animate2, _Component);
  function Animate2() {
    _classCallCheck$1(this, Animate2);
    return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
  }
  Animate2.prototype.normalizeNames = function normalizeNames(names) {
    if (typeof names === "string") {
      return {
        appear: names + "-appear",
        appearActive: names + "-appear-active",
        enter: names + "-enter",
        enterActive: names + "-enter-active",
        leave: names + "-leave",
        leaveActive: names + "-leave-active"
      };
    }
    if ((typeof names === "undefined" ? "undefined" : _typeof$1(names)) === "object") {
      return {
        appear: names.appear,
        appearActive: names.appear + "-active",
        enter: "" + names.enter,
        enterActive: names.enter + "-active",
        leave: "" + names.leave,
        leaveActive: names.leave + "-active"
      };
    }
  };
  Animate2.prototype.render = function render2() {
    var _this2 = this;
    var _props = this.props, animation2 = _props.animation, children = _props.children, animationAppear = _props.animationAppear, singleMode = _props.singleMode, component = _props.component, beforeAppear = _props.beforeAppear, onAppear = _props.onAppear, afterAppear = _props.afterAppear, beforeEnter = _props.beforeEnter, onEnter = _props.onEnter, afterEnter = _props.afterEnter, beforeLeave = _props.beforeLeave, onLeave = _props.onLeave, afterLeave = _props.afterLeave, others = _objectWithoutProperties$2(_props, ["animation", "children", "animationAppear", "singleMode", "component", "beforeAppear", "onAppear", "afterAppear", "beforeEnter", "onEnter", "afterEnter", "beforeLeave", "onLeave", "afterLeave"]);
    var animateChildren = Children.map(children, function(child) {
      return React.createElement(AnimateChild$1, {
        key: child.key,
        names: _this2.normalizeNames(animation2),
        onAppear: beforeAppear,
        onAppearing: onAppear,
        onAppeared: afterAppear,
        onEnter: beforeEnter,
        onEntering: onEnter,
        onEntered: afterEnter,
        onExit: beforeLeave,
        onExiting: onLeave,
        onExited: afterLeave
      }, child);
    });
    return React.createElement(reactTransitionGroup$1.TransitionGroup, _extends$5({
      appear: animationAppear,
      component: singleMode ? FirstChild$1 : component
    }, others), animateChildren);
  };
  return Animate2;
}(Component), _class$U.propTypes = {
  animation: propTypes.oneOfType([propTypes.string, propTypes.object]),
  animationAppear: propTypes.bool,
  component: propTypes.any,
  singleMode: propTypes.bool,
  children: propTypes.oneOfType([propTypes.element, propTypes.arrayOf(propTypes.element)]),
  beforeAppear: propTypes.func,
  onAppear: propTypes.func,
  afterAppear: propTypes.func,
  beforeEnter: propTypes.func,
  onEnter: propTypes.func,
  afterEnter: propTypes.func,
  beforeLeave: propTypes.func,
  onLeave: propTypes.func,
  afterLeave: propTypes.func
}, _class$U.defaultProps = {
  animationAppear: true,
  component: "div",
  singleMode: true,
  beforeAppear: noop$k,
  onAppear: noop$k,
  afterAppear: noop$k,
  beforeEnter: noop$k,
  onEnter: noop$k,
  afterEnter: noop$k,
  beforeLeave: noop$k,
  onLeave: noop$k,
  afterLeave: noop$k
}, _temp$R);
Animate$1.displayName = "Animate";
var _class$V, _temp$S;
var noop$l = function noop10() {
};
var getStyle$4 = dom$1.getStyle;
var Expand$2 = (_temp$S = _class$V = function(_Component) {
  _inherits$1(Expand2, _Component);
  function Expand2(props) {
    _classCallCheck$1(this, Expand2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    func$1.bindCtx(_this2, ["beforeEnter", "onEnter", "afterEnter", "beforeLeave", "onLeave", "afterLeave"]);
    return _this2;
  }
  Expand2.prototype.beforeEnter = function beforeEnter(node) {
    if (this.leaving) {
      this.afterLeave(node);
    }
    this.cacheCurrentStyle(node);
    this.cacheComputedStyle(node);
    this.setCurrentStyleToZero(node);
    this.props.beforeEnter(node);
  };
  Expand2.prototype.onEnter = function onEnter(node) {
    this.setCurrentStyleToComputedStyle(node);
    this.props.onEnter(node);
  };
  Expand2.prototype.afterEnter = function afterEnter(node) {
    this.restoreCurrentStyle(node);
    this.props.afterEnter(node);
  };
  Expand2.prototype.beforeLeave = function beforeLeave(node) {
    this.leaving = true;
    this.cacheCurrentStyle(node);
    this.cacheComputedStyle(node);
    this.setCurrentStyleToComputedStyle(node);
    this.props.beforeLeave(node);
  };
  Expand2.prototype.onLeave = function onLeave(node) {
    this.setCurrentStyleToZero(node);
    this.props.onLeave(node);
  };
  Expand2.prototype.afterLeave = function afterLeave(node) {
    this.leaving = false;
    this.restoreCurrentStyle(node);
    this.props.afterLeave(node);
  };
  Expand2.prototype.cacheCurrentStyle = function cacheCurrentStyle(node) {
    this.styleBorderTopWidth = node.style.borderTopWidth;
    this.stylePaddingTop = node.style.paddingTop;
    this.styleHeight = node.style.height;
    this.stylePaddingBottom = node.style.paddingBottom;
    this.styleBorderBottomWidth = node.style.borderBottomWidth;
  };
  Expand2.prototype.cacheComputedStyle = function cacheComputedStyle(node) {
    this.borderTopWidth = getStyle$4(node, "borderTopWidth");
    this.paddingTop = getStyle$4(node, "paddingTop");
    this.height = node.offsetHeight;
    this.paddingBottom = getStyle$4(node, "paddingBottom");
    this.borderBottomWidth = getStyle$4(node, "borderBottomWidth");
  };
  Expand2.prototype.setCurrentStyleToZero = function setCurrentStyleToZero(node) {
    node.style.borderTopWidth = "0px";
    node.style.paddingTop = "0px";
    node.style.height = "0px";
    node.style.paddingBottom = "0px";
    node.style.borderBottomWidth = "0px";
  };
  Expand2.prototype.setCurrentStyleToComputedStyle = function setCurrentStyleToComputedStyle(node) {
    node.style.borderTopWidth = this.borderTopWidth + "px";
    node.style.paddingTop = this.paddingTop + "px";
    node.style.height = this.height + "px";
    node.style.paddingBottom = this.paddingBottom + "px";
    node.style.borderBottomWidth = this.borderBottomWidth + "px";
  };
  Expand2.prototype.restoreCurrentStyle = function restoreCurrentStyle(node) {
    node.style.borderTopWidth = this.styleBorderTopWidth;
    node.style.paddingTop = this.stylePaddingTop;
    node.style.height = this.styleHeight;
    node.style.paddingBottom = this.stylePaddingBottom;
    node.style.borderBottomWidth = this.styleBorderBottomWidth;
  };
  Expand2.prototype.render = function render2() {
    var _props = this.props, animation2 = _props.animation, others = _objectWithoutProperties$2(_props, ["animation"]);
    var newAnimation = animation2 || "expand";
    return React.createElement(Animate$1, _extends$5({}, others, {
      animation: newAnimation,
      beforeEnter: this.beforeEnter,
      onEnter: this.onEnter,
      afterEnter: this.afterEnter,
      beforeLeave: this.beforeLeave,
      onLeave: this.onLeave,
      afterLeave: this.afterLeave
    }));
  };
  return Expand2;
}(Component), _class$V.propTypes = {
  animation: propTypes.oneOfType([propTypes.string, propTypes.object]),
  beforeEnter: propTypes.func,
  onEnter: propTypes.func,
  afterEnter: propTypes.func,
  beforeLeave: propTypes.func,
  onLeave: propTypes.func,
  afterLeave: propTypes.func
}, _class$V.defaultProps = {
  beforeEnter: noop$l,
  onEnter: noop$l,
  afterEnter: noop$l,
  beforeLeave: noop$l,
  onLeave: noop$l,
  afterLeave: noop$l
}, _temp$S);
Expand$2.displayName = "Expand";
Animate$1.Expand = Expand$2;
var overlayManager$1 = {
  allOverlays: [],
  addOverlay: function addOverlay2(overlay) {
    this.removeOverlay(overlay);
    this.allOverlays.unshift(overlay);
  },
  isCurrentOverlay: function isCurrentOverlay2(overlay) {
    return overlay && this.allOverlays[0] === overlay;
  },
  removeOverlay: function removeOverlay2(overlay) {
    var i = this.allOverlays.indexOf(overlay);
    if (i > -1) {
      this.allOverlays.splice(i, 1);
    }
  }
};
function findNode$1(target, param) {
  if (!target) {
    return null;
  }
  if (typeof target === "string") {
    return document.getElementById(target);
  }
  if (typeof target === "function") {
    try {
      target = target(param);
    } catch (err) {
      target = null;
    }
  }
  if (!target) {
    return null;
  }
  try {
    return findDOMNode(target);
  } catch (err) {
    return target;
  }
}
var _class$W, _temp$T;
var makeChain$8 = func$1.makeChain;
var getContainerNode$1 = function getContainerNode3(props) {
  var targetNode = findNode$1(props.target);
  return findNode$1(props.container, targetNode);
};
var Gateway$2 = (_temp$T = _class$W = function(_Component) {
  _inherits$1(Gateway2, _Component);
  function Gateway2(props) {
    _classCallCheck$1(this, Gateway2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    _this2.saveChildRef = function(ref) {
      _this2.child = ref;
    };
    _this2.state = {
      containerNode: null
    };
    return _this2;
  }
  Gateway2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
    return {
      containerNode: getContainerNode$1(nextProps)
    };
  };
  Gateway2.prototype.componentDidMount = function componentDidMount() {
    this.setState({
      containerNode: getContainerNode$1(this.props)
    });
  };
  Gateway2.prototype.getChildNode = function getChildNode() {
    try {
      return findDOMNode(this.child);
    } catch (err) {
      return null;
    }
  };
  Gateway2.prototype.render = function render2() {
    var containerNode = this.state.containerNode;
    if (!containerNode) {
      return null;
    }
    var children = this.props.children;
    var child = children ? Children.only(children) : null;
    if (!child) {
      return null;
    }
    if (typeof child.ref === "string") {
      throw new Error("Can not set ref by string in Gateway, use function instead.");
    }
    child = React.cloneElement(child, {
      ref: makeChain$8(this.saveChildRef, child.ref)
    });
    return createPortal(child, containerNode);
  };
  return Gateway2;
}(Component), _class$W.propTypes = {
  children: propTypes.node,
  container: propTypes.any,
  target: propTypes.any
}, _class$W.defaultProps = {
  container: function container4() {
    return document.body;
  }
}, _temp$T);
Gateway$2.displayName = "Gateway";
var Gateway$3 = polyfill$1(Gateway$2);
var _class$X, _temp$U, _initialiseProps$4;
var VIEWPORT$1 = "viewport";
var getPageX$1 = function getPageX3() {
  return window.pageXOffset || document.documentElement.scrollLeft;
};
var getPageY$1 = function getPageY3() {
  return window.pageYOffset || document.documentElement.scrollTop;
};
function _getElementRect$1(elem, container6) {
  var offsetTop = 0, offsetLeft = 0, scrollTop = 0, scrollLeft = 0;
  var offsetHeight = elem.offsetHeight;
  var offsetWidth = elem.offsetWidth;
  do {
    if (!isNaN(elem.offsetTop)) {
      offsetTop += elem.offsetTop;
    }
    if (!isNaN(elem.offsetLeft)) {
      offsetLeft += elem.offsetLeft;
    }
    if (elem && elem.offsetParent) {
      if (!isNaN(elem.offsetParent.scrollLeft) && elem.offsetParent !== document.body) {
        scrollLeft += elem.offsetParent.scrollLeft;
      }
      if (!isNaN(elem.offsetParent.scrollTop) && elem.offsetParent !== document.body) {
        scrollTop += elem.offsetParent.scrollTop;
      }
    }
    elem = elem.offsetParent;
  } while (elem !== null && elem !== container6);
  var treatAsWindow = !container6 || container6 === document.body;
  return {
    top: offsetTop - scrollTop - (treatAsWindow ? document.documentElement.scrollTop || document.body.scrollTop : 0),
    left: offsetLeft - scrollLeft - (treatAsWindow ? document.documentElement.scrollLeft || document.body.scrollLeft : 0),
    height: offsetHeight,
    width: offsetWidth
  };
}
function _getViewportSize$1(container6) {
  if (!container6 || container6 === document.body) {
    return {
      width: document.documentElement.clientWidth,
      height: document.documentElement.clientHeight
    };
  }
  var _container$getBoundin = container6.getBoundingClientRect(), width = _container$getBoundin.width, height = _container$getBoundin.height;
  return {
    width,
    height
  };
}
var getContainer$1 = function getContainer3(_ref) {
  var container6 = _ref.container, autoFit = _ref.autoFit, baseElement = _ref.baseElement;
  var calcContainer = findNode$1(container6, baseElement);
  if (!calcContainer) {
    calcContainer = document.body;
  }
  if (!autoFit) {
    return calcContainer;
  }
  while (dom$1.getStyle(calcContainer, "position") === "static") {
    if (!calcContainer || calcContainer === document.body) {
      return document.body;
    }
    calcContainer = calcContainer.parentNode;
  }
  return calcContainer;
};
var Position$2 = (_temp$U = _class$X = function() {
  function Position2(props) {
    _classCallCheck$1(this, Position2);
    _initialiseProps$4.call(this);
    this.pinElement = props.pinElement;
    this.baseElement = props.baseElement;
    this.pinFollowBaseElementWhenFixed = props.pinFollowBaseElementWhenFixed;
    this.container = getContainer$1(props);
    this.autoFit = props.autoFit || false;
    this.align = props.align || "tl tl";
    this.offset = props.offset || [0, 0];
    this.needAdjust = props.needAdjust || false;
    this.isRtl = props.isRtl || false;
  }
  Position2.prototype.setPosition = function setPosition() {
    var pinElement = this.pinElement;
    var baseElement = this.baseElement;
    var pinFollowBaseElementWhenFixed = this.pinFollowBaseElementWhenFixed;
    var expectedAlign = this._getExpectedAlign();
    var isPinFixed = void 0, isBaseFixed = void 0, firstPositionResult = void 0;
    if (pinElement === VIEWPORT$1) {
      return;
    }
    if (dom$1.getStyle(pinElement, "position") !== "fixed") {
      dom$1.setStyle(pinElement, "position", "absolute");
      isPinFixed = false;
    } else {
      isPinFixed = true;
    }
    if (baseElement === VIEWPORT$1 || dom$1.getStyle(baseElement, "position") !== "fixed") {
      isBaseFixed = false;
    } else {
      isBaseFixed = true;
    }
    for (var i = 0; i < expectedAlign.length; i++) {
      var align = expectedAlign[i];
      var pinElementPoints = this._normalizePosition(pinElement, align.split(" ")[0], isPinFixed);
      var baseElementPoints = this._normalizePosition(baseElement, align.split(" ")[1], isPinFixed && !pinFollowBaseElementWhenFixed);
      var pinElementParentOffset = this._getParentOffset(pinElement);
      var pinElementParentScrollOffset = this._getParentScrollOffset(pinElement);
      var baseElementOffset = isPinFixed && isBaseFixed ? this._getLeftTop(baseElement) : baseElementPoints.offset(isPinFixed && pinFollowBaseElementWhenFixed);
      var top = baseElementOffset.top + baseElementPoints.y - pinElementParentOffset.top - pinElementPoints.y + pinElementParentScrollOffset.top;
      var left = baseElementOffset.left + baseElementPoints.x - pinElementParentOffset.left - pinElementPoints.x + pinElementParentScrollOffset.left;
      this._setPinElementPostion(pinElement, {left, top}, this.offset);
      if (!firstPositionResult) {
        firstPositionResult = {left, top};
      }
      if (this._isInViewport(pinElement, align)) {
        return align;
      }
    }
    var inViewportLeft = this._makeElementInViewport(pinElement, firstPositionResult.left, "Left", isPinFixed);
    var inViewportTop = this._makeElementInViewport(pinElement, firstPositionResult.top, "Top", isPinFixed);
    this._setPinElementPostion(pinElement, {left: inViewportLeft, top: inViewportTop}, this._calPinOffset(expectedAlign[0]));
    return expectedAlign[0];
  };
  Position2.prototype._getParentOffset = function _getParentOffset(element) {
    var parent = element.offsetParent || document.documentElement;
    var offset = void 0;
    if (parent === document.body && dom$1.getStyle(parent, "position") === "static") {
      offset = {
        top: 0,
        left: 0
      };
    } else {
      offset = this._getElementOffset(parent);
    }
    offset.top += parseFloat(dom$1.getStyle(parent, "border-top-width"), 10);
    offset.left += parseFloat(dom$1.getStyle(parent, "border-left-width"), 10);
    offset.offsetParent = parent;
    return offset;
  };
  Position2.prototype._makeElementInViewport = function _makeElementInViewport(pinElement, number, type, isPinFixed) {
    var result = number;
    var docElement = document.documentElement;
    var offsetParent = pinElement.offsetParent || document.documentElement;
    if (result < 0) {
      if (isPinFixed) {
        result = 0;
      } else if (offsetParent === document.body && dom$1.getStyle(offsetParent, "position") === "static") {
        result = Math.max(docElement["scroll" + type], document.body["scroll" + type]);
      }
    }
    return result;
  };
  Position2.prototype._normalizePosition = function _normalizePosition(element, align, ignoreElementOffset) {
    var points = this._normalizeElement(element, ignoreElementOffset);
    this._normalizeXY(points, align);
    return points;
  };
  Position2.prototype._normalizeXY = function _normalizeXY(points, align) {
    var x2 = align.split("")[1];
    var y2 = align.split("")[0];
    points.x = this._xyConverter(x2, points, "width");
    points.y = this._xyConverter(y2, points, "height");
    return points;
  };
  Position2.prototype._xyConverter = function _xyConverter(align, points, type) {
    var res = align.replace(/t|l/gi, "0%").replace(/c/gi, "50%").replace(/b|r/gi, "100%").replace(/(\d+)%/gi, function(m2, d2) {
      return points.size()[type] * (d2 / 100);
    });
    return parseFloat(res, 10) || 0;
  };
  Position2.prototype._getLeftTop = function _getLeftTop(element) {
    return {
      left: parseFloat(dom$1.getStyle(element, "left")) || 0,
      top: parseFloat(dom$1.getStyle(element, "top")) || 0
    };
  };
  Position2.prototype._normalizeElement = function _normalizeElement(element, ignoreElementOffset) {
    var _this2 = this;
    var result = {
      element,
      x: 0,
      y: 0
    }, isViewport = element === VIEWPORT$1, docElement = document.documentElement;
    result.offset = function(ignoreScroll) {
      if (ignoreElementOffset) {
        return {
          left: 0,
          top: 0
        };
      } else if (isViewport) {
        return {
          left: getPageX$1(),
          top: getPageY$1()
        };
      } else {
        return _this2._getElementOffset(element, ignoreScroll);
      }
    };
    result.size = function() {
      if (isViewport) {
        return {
          width: docElement.clientWidth,
          height: docElement.clientHeight
        };
      } else {
        return {
          width: element.offsetWidth,
          height: element.offsetHeight
        };
      }
    };
    return result;
  };
  Position2.prototype._getElementOffset = function _getElementOffset(element, ignoreScroll) {
    var rect = element.getBoundingClientRect();
    var docElement = document.documentElement;
    var body = document.body;
    var docClientLeft = docElement.clientLeft || body.clientLeft || 0;
    var docClientTop = docElement.clientTop || body.clientTop || 0;
    return {
      left: rect.left + (ignoreScroll ? 0 : getPageX$1()) - docClientLeft,
      top: rect.top + (ignoreScroll ? 0 : getPageY$1()) - docClientTop
    };
  };
  Position2.prototype._getExpectedAlign = function _getExpectedAlign() {
    var align = this.isRtl ? this._replaceAlignDir(this.align, /l|r/g, {l: "r", r: "l"}) : this.align;
    var expectedAlign = [align];
    if (this.needAdjust) {
      if (/t|b/g.test(align)) {
        expectedAlign.push(this._replaceAlignDir(align, /t|b/g, {t: "b", b: "t"}));
      }
      if (/l|r/g.test(align)) {
        expectedAlign.push(this._replaceAlignDir(align, /l|r/g, {l: "r", r: "l"}));
      }
      if (/c/g.test(align)) {
        expectedAlign.push(this._replaceAlignDir(align, /c(?= |$)/g, {c: "l"}));
        expectedAlign.push(this._replaceAlignDir(align, /c(?= |$)/g, {c: "r"}));
      }
      expectedAlign.push(this._replaceAlignDir(align, /l|r|t|b/g, {
        l: "r",
        r: "l",
        t: "b",
        b: "t"
      }));
    }
    return expectedAlign;
  };
  Position2.prototype._replaceAlignDir = function _replaceAlignDir(align, regExp, map) {
    return align.replace(regExp, function(res) {
      return map[res];
    });
  };
  Position2.prototype._isRightAligned = function _isRightAligned(align) {
    var _align$split = align.split(" "), pinAlign = _align$split[0], baseAlign = _align$split[1];
    return pinAlign[1] === "r" && pinAlign[1] === baseAlign[1];
  };
  Position2.prototype._isBottomAligned = function _isBottomAligned(align) {
    var _align$split2 = align.split(" "), pinAlign = _align$split2[0], baseAlign = _align$split2[1];
    return pinAlign[0] === "b" && pinAlign[0] === baseAlign[0];
  };
  Position2.prototype._isInViewport = function _isInViewport(element, align) {
    var viewportSize = _getViewportSize$1(this.container);
    var elementRect = _getElementRect$1(element, this.container);
    var viewportWidth = this._isRightAligned(align) ? viewportSize.width : viewportSize.width - 1;
    var viewportHeight = this._isBottomAligned(align) ? viewportSize.height : viewportSize.height - 1;
    if (this.autoFit) {
      return elementRect.top >= 0 && elementRect.top + element.offsetHeight <= viewportHeight;
    }
    return elementRect.left >= 0 && elementRect.left + element.offsetWidth <= viewportWidth && elementRect.top >= 0 && elementRect.top + element.offsetHeight <= viewportHeight;
  };
  Position2.prototype._setPinElementPostion = function _setPinElementPostion(pinElement, postion) {
    var offset = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [0, 0];
    var top = postion.top, left = postion.left;
    if (!this.isRtl) {
      dom$1.setStyle(pinElement, {
        left: left + offset[0] + "px",
        top: top + offset[1] + "px"
      });
      return;
    }
    var pinElementParentOffset = this._getParentOffset(pinElement);
    var _getElementRect2 = _getElementRect$1(pinElementParentOffset.offsetParent), offsetParentWidth = _getElementRect2.width;
    var _getElementRect3 = _getElementRect$1(pinElement), width = _getElementRect3.width;
    var right = offsetParentWidth - (left + width);
    dom$1.setStyle(pinElement, {
      left: "auto",
      right: right + offset[0] + "px",
      top: top + offset[1] + "px"
    });
  };
  return Position2;
}(), _class$X.VIEWPORT = VIEWPORT$1, _class$X.place = function(props) {
  return new Position$2(props).setPosition();
}, _initialiseProps$4 = function _initialiseProps6() {
  var _this2 = this;
  this._calPinOffset = function(align) {
    var offset = [].concat(_this2.offset);
    if (_this2.autoFit && align && _this2.container && _this2.container !== document.body) {
      var baseElementRect = _getElementRect$1(_this2.baseElement, _this2.container);
      var pinElementRect = _getElementRect$1(_this2.pinElement, _this2.container);
      var viewportSize = _getViewportSize$1(_this2.container);
      var pinAlign = align.split(" ")[0];
      var x2 = pinAlign.charAt(1);
      var y2 = pinAlign.charAt(0);
      if (pinElementRect.top < 0 || pinElementRect.top + pinElementRect.height > viewportSize.height) {
        offset[1] = -baseElementRect.top - (y2 === "t" ? baseElementRect.height : 0);
      }
    }
    return offset;
  };
  this._getParentScrollOffset = function(elem) {
    var top = 0;
    var left = 0;
    if (elem && elem.offsetParent && elem.offsetParent !== document.body) {
      if (!isNaN(elem.offsetParent.scrollTop)) {
        top += elem.offsetParent.scrollTop;
      }
      if (!isNaN(elem.offsetParent.scrollLeft)) {
        left += elem.offsetParent.scrollLeft;
      }
    }
    return {
      top,
      left
    };
  };
}, _temp$U);
var _class$Y, _temp$V;
var noop$m = func$1.noop, bindCtx$h = func$1.bindCtx;
var getStyle$5 = dom$1.getStyle;
var place$1 = Position$2.place;
var Position$3 = (_temp$V = _class$Y = function(_Component) {
  _inherits$1(Position2, _Component);
  function Position2(props) {
    _classCallCheck$1(this, Position2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    bindCtx$h(_this2, ["handleResize"]);
    return _this2;
  }
  Position2.prototype.componentDidMount = function componentDidMount() {
    this.setPosition();
    if (this.props.needListenResize) {
      events$1.on(window, "resize", this.handleResize);
    }
  };
  Position2.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    var props = this.props;
    if ("align" in props && props.align !== prevProps.align || props.shouldUpdatePosition) {
      this.shouldUpdatePosition = true;
    }
    if (this.shouldUpdatePosition) {
      this.setPosition();
      this.shouldUpdatePosition = false;
    }
  };
  Position2.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.props.needListenResize) {
      events$1.off(window, "resize", this.handleResize);
    }
    clearTimeout(this.resizeTimeout);
  };
  Position2.prototype.setPosition = function setPosition() {
    var _props = this.props, align = _props.align, offset = _props.offset, beforePosition = _props.beforePosition, onPosition = _props.onPosition, needAdjust = _props.needAdjust, container6 = _props.container, rtl = _props.rtl, pinFollowBaseElementWhenFixed = _props.pinFollowBaseElementWhenFixed, autoFit = _props.autoFit;
    beforePosition();
    var contentNode = this.getContentNode();
    var targetNode = this.getTargetNode();
    if (contentNode && targetNode) {
      var resultAlign = place$1({
        pinElement: contentNode,
        baseElement: targetNode,
        pinFollowBaseElementWhenFixed,
        align,
        offset,
        autoFit,
        container: container6,
        needAdjust,
        isRtl: rtl
      });
      var top = getStyle$5(contentNode, "top");
      var left = getStyle$5(contentNode, "left");
      onPosition({
        align: resultAlign.split(" "),
        top,
        left
      }, contentNode);
    }
  };
  Position2.prototype.getContentNode = function getContentNode() {
    try {
      return findDOMNode(this);
    } catch (err) {
      return null;
    }
  };
  Position2.prototype.getTargetNode = function getTargetNode() {
    var target = this.props.target;
    return target === Position$2.VIEWPORT ? Position$2.VIEWPORT : findNode$1(target, this.props);
  };
  Position2.prototype.handleResize = function handleResize() {
    var _this2 = this;
    clearTimeout(this.resizeTimeout);
    this.resizeTimeout = setTimeout(function() {
      _this2.setPosition();
    }, 200);
  };
  Position2.prototype.render = function render2() {
    return Children.only(this.props.children);
  };
  return Position2;
}(Component), _class$Y.VIEWPORT = Position$2.VIEWPORT, _class$Y.propTypes = {
  children: propTypes.node,
  target: propTypes.any,
  container: propTypes.any,
  align: propTypes.oneOfType([propTypes.string, propTypes.bool]),
  offset: propTypes.array,
  beforePosition: propTypes.func,
  onPosition: propTypes.func,
  needAdjust: propTypes.bool,
  autoFit: propTypes.bool,
  needListenResize: propTypes.bool,
  shouldUpdatePosition: propTypes.bool,
  rtl: propTypes.bool,
  pinFollowBaseElementWhenFixed: propTypes.bool
}, _class$Y.defaultProps = {
  align: "tl bl",
  offset: [0, 0],
  beforePosition: noop$m,
  onPosition: noop$m,
  needAdjust: true,
  autoFit: false,
  needListenResize: true,
  shouldUpdatePosition: false,
  rtl: false
}, _temp$V);
Position$3.displayName = "Position";
var _class$Z, _temp$W;
var saveLastFocusNode$3 = focus$1.saveLastFocusNode, getFocusNodeList$3 = focus$1.getFocusNodeList, backLastFocusNode$3 = focus$1.backLastFocusNode;
var makeChain$9 = func$1.makeChain, noop$n = func$1.noop, bindCtx$i = func$1.bindCtx;
var isScrollDisplay$1 = function isScrollDisplay3(element) {
  try {
    var scrollbarStyle = window.getComputedStyle(element, "::-webkit-scrollbar");
    return !scrollbarStyle || scrollbarStyle.getPropertyValue("display") !== "none";
  } catch (e2) {
  }
  return true;
};
var hasScroll$1 = function hasScroll3() {
  var doc = document.documentElement;
  return doc.scrollHeight > doc.clientHeight && dom$1.scrollbar().width > 0 && isScrollDisplay$1(document.documentElement) && isScrollDisplay$1(document.body);
};
var prefixes$3 = ["-webkit-", "-moz-", "-o-", "ms-", ""];
var getStyleProperty$3 = function getStyleProperty3(node, name) {
  var style = window.getComputedStyle(node);
  var ret = "";
  for (var i = 0; i < prefixes$3.length; i++) {
    ret = style.getPropertyValue(prefixes$3[i] + name);
    if (ret) {
      break;
    }
  }
  return ret;
};
var modals$1 = [];
var bodyOverflow$1 = void 0, bodyPaddingRight$1 = void 0;
var Overlay$3 = (_temp$W = _class$Z = function(_Component) {
  _inherits$1(Overlay2, _Component);
  function Overlay2(props) {
    _classCallCheck$1(this, Overlay2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    _this2.saveContentRef = function(ref) {
      _this2.contentRef = ref;
    };
    _this2.saveGatewayRef = function(ref) {
      _this2.gatewayRef = ref;
    };
    _this2.lastAlign = props.align;
    bindCtx$i(_this2, ["handlePosition", "handleAnimateEnd", "handleDocumentKeyDown", "handleDocumentClick", "handleMaskClick", "beforeOpen", "beforeClose"]);
    _this2.state = {
      visible: false,
      status: "none",
      animation: _this2.getAnimation(props),
      beforeOpen: _this2.beforeOpen,
      beforeClose: _this2.beforeClose
    };
    _this2.timeoutMap = {};
    return _this2;
  }
  Overlay2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var willOpen = !prevState.visible && nextProps.visible;
    var willClose = prevState.visible && !nextProps.visible;
    if (willOpen) {
      prevState.beforeOpen();
      nextProps.beforeOpen();
    } else if (willClose) {
      prevState.beforeClose();
      nextProps.beforeClose();
    }
    var nextState = {};
    if (nextProps.animation || nextProps.animation === false) {
      nextState.animation = nextProps.animation;
    }
    if (nextProps.animation !== false && support$1.animation) {
      if (willOpen) {
        nextState.visible = true;
        nextState.status = "mounting";
      } else if (willClose) {
        nextState.status = "leaving";
      }
    } else if ("visible" in nextProps && nextProps.visible !== prevState.visible) {
      nextState.visible = nextProps.visible;
    }
    return nextState;
  };
  Overlay2.prototype.componentDidMount = function componentDidMount() {
    if (this.state.visible) {
      this.doAnimation(true, false);
      this._isMounted = true;
    }
    this.addDocumentEvents();
    overlayManager$1.addOverlay(this);
  };
  Overlay2.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (!this._isMounted && this.props.visible) {
      this._isMounted = true;
    }
    if (this.props.align !== prevProps.align) {
      this.lastAlign = prevProps.align;
    }
    var willOpen = !prevProps.visible && this.props.visible;
    var willClose = prevProps.visible && !this.props.visible;
    (willOpen || willClose) && this.doAnimation(willOpen, willClose);
  };
  Overlay2.prototype.componentWillUnmount = function componentWillUnmount() {
    this._isDestroyed = true;
    this._isMounted = false;
    overlayManager$1.removeOverlay(this);
    this.removeDocumentEvents();
    if (this.focusTimeout) {
      clearTimeout(this.focusTimeout);
    }
    if (this._animation) {
      this._animation.off();
      this._animation = null;
    }
    this.beforeClose();
  };
  Overlay2.prototype.doAnimation = function doAnimation(open, close) {
    var _this2 = this;
    if (this.state.animation && support$1.animation) {
      if (open) {
        this.onEntering();
      } else if (close) {
        this.onLeaving();
      }
      this.addAnimationEvents();
    } else {
      if (open) {
        setTimeout(function() {
          _this2.props.onOpen();
          dom$1.addClass(_this2.getWrapperNode(), "opened");
          overlayManager$1.addOverlay(_this2);
          _this2.props.afterOpen();
        });
      } else if (close) {
        this.props.onClose();
        dom$1.removeClass(this.getWrapperNode(), "opened");
        overlayManager$1.removeOverlay(this);
        this.props.afterClose();
      }
      this.setFocusNode();
    }
  };
  Overlay2.prototype.getAnimation = function getAnimation(props) {
    if (props.animation === false) {
      return false;
    }
    if (props.animation) {
      return props.animation;
    }
    return this.getAnimationByAlign(props.align);
  };
  Overlay2.prototype.getAnimationByAlign = function getAnimationByAlign(align) {
    switch (align[0]) {
      case "t":
        return {
          in: "expandInDown",
          out: "expandOutUp"
        };
      case "b":
        return {
          in: "expandInUp",
          out: "expandOutDown"
        };
      default:
        return {
          in: "expandInDown",
          out: "expandOutUp"
        };
    }
  };
  Overlay2.prototype.addAnimationEvents = function addAnimationEvents() {
    var _this3 = this;
    setTimeout(function() {
      var node = _this3.getContentNode();
      if (node) {
        var id2 = guid$1();
        _this3._animation = events$1.on(node, support$1.animation.end, _this3.handleAnimateEnd.bind(_this3, id2));
        var animationDelay = parseFloat(getStyleProperty$3(node, "animation-delay")) || 0;
        var animationDuration = parseFloat(getStyleProperty$3(node, "animation-duration")) || 0;
        var time = animationDelay + animationDuration;
        if (time) {
          _this3.timeoutMap[id2] = setTimeout(function() {
            _this3.handleAnimateEnd(id2);
          }, time * 1e3 + 200);
        }
      }
    });
  };
  Overlay2.prototype.handlePosition = function handlePosition(config2) {
    var align = config2.align.join(" ");
    if (!("animation" in this.props) && this.props.needAdjust && this.lastAlign !== align) {
      this.setState({
        animation: this.getAnimationByAlign(align)
      });
    }
    var status = this.state.status;
    if (status === "mounting") {
      this.setState({
        status: "entering"
      });
    }
    this.lastAlign = align;
  };
  Overlay2.prototype.handleAnimateEnd = function handleAnimateEnd(id2) {
    if (this.timeoutMap[id2]) {
      clearTimeout(this.timeoutMap[id2]);
    }
    delete this.timeoutMap[id2];
    if (this._animation) {
      this._animation.off();
      this._animation = null;
    }
    if (!this._isMounted) {
      return;
    }
    if (this.state.status === "leaving") {
      this.setState({
        visible: false,
        status: "none"
      });
      this.onLeaved();
    } else if (this.state.status === "entering") {
      this.setState({
        status: "none"
      });
      this.onEntered();
    }
  };
  Overlay2.prototype.onEntering = function onEntering() {
    var _this4 = this;
    if (this._isDestroyed) {
      return;
    }
    setTimeout(function() {
      var wrapperNode = _this4.getWrapperNode();
      dom$1.addClass(wrapperNode, "opened");
      _this4.props.onOpen();
    });
  };
  Overlay2.prototype.onLeaving = function onLeaving() {
    var wrapperNode = this.getWrapperNode();
    dom$1.removeClass(wrapperNode, "opened");
    this.props.onClose();
  };
  Overlay2.prototype.onEntered = function onEntered() {
    overlayManager$1.addOverlay(this);
    this.setFocusNode();
    this.props.afterOpen();
  };
  Overlay2.prototype.onLeaved = function onLeaved() {
    overlayManager$1.removeOverlay(this);
    this.setFocusNode();
    this.props.afterClose();
  };
  Overlay2.prototype.beforeOpen = function beforeOpen() {
    if (this.props.disableScroll) {
      if (modals$1.length === 0) {
        var style = {
          overflow: "hidden"
        };
        var body = document.body;
        bodyOverflow$1 = body.style.overflow;
        if (hasScroll$1()) {
          bodyPaddingRight$1 = body.style.paddingRight;
          style.paddingRight = dom$1.getStyle(body, "paddingRight") + dom$1.scrollbar().width + "px";
        }
        dom$1.setStyle(body, style);
      }
      modals$1.push(this);
    }
  };
  Overlay2.prototype.beforeClose = function beforeClose() {
    if (this.props.disableScroll) {
      var index2 = modals$1.indexOf(this);
      if (index2 > -1) {
        if (modals$1.length === 1) {
          var style = {
            overflow: bodyOverflow$1
          };
          if (hasScroll$1()) {
            style.paddingRight = bodyPaddingRight$1;
          }
          dom$1.setStyle(document.body, style);
          bodyOverflow$1 = void 0;
          bodyPaddingRight$1 = void 0;
        }
        modals$1.splice(index2, 1);
      }
    }
  };
  Overlay2.prototype.setFocusNode = function setFocusNode() {
    var _this5 = this;
    if (!this.props.autoFocus) {
      return;
    }
    if (this.state.visible && !this._hasFocused) {
      saveLastFocusNode$3();
      this.focusTimeout = setTimeout(function() {
        var node = _this5.getContentNode();
        if (node) {
          var focusNodeList = getFocusNodeList$3(node);
          if (focusNodeList.length) {
            focusNodeList[0].focus();
          }
          _this5._hasFocused = true;
        }
      }, 100);
    } else if (!this.state.visible && this._hasFocused) {
      backLastFocusNode$3();
      this._hasFocused = false;
    }
  };
  Overlay2.prototype.getContent = function getContent() {
    return this.contentRef;
  };
  Overlay2.prototype.getContentNode = function getContentNode() {
    try {
      return findDOMNode(this.contentRef);
    } catch (err) {
      return null;
    }
  };
  Overlay2.prototype.getWrapperNode = function getWrapperNode() {
    return this.gatewayRef ? this.gatewayRef.getChildNode() : null;
  };
  Overlay2.prototype.addDocumentEvents = function addDocumentEvents() {
    if (this.props.canCloseByEsc) {
      this._keydownEvents = events$1.on(document, "keydown", this.handleDocumentKeyDown);
    }
    if (this.props.canCloseByOutSideClick) {
      this._clickEvents = events$1.on(document, "click", this.handleDocumentClick);
      this._touchEvents = events$1.on(document, "touchend", this.handleDocumentClick);
    }
  };
  Overlay2.prototype.removeDocumentEvents = function removeDocumentEvents() {
    var _this6 = this;
    ["_keydownEvents", "_clickEvents", "_touchEvents"].forEach(function(event) {
      if (_this6[event]) {
        _this6[event].off();
        _this6[event] = null;
      }
    });
  };
  Overlay2.prototype.handleDocumentKeyDown = function handleDocumentKeyDown(e2) {
    if (this.state.visible && e2.keyCode === KEYCODE$1.ESC && overlayManager$1.isCurrentOverlay(this)) {
      this.props.onRequestClose("keyboard", e2);
    }
  };
  Overlay2.prototype.isInShadowDOM = function isInShadowDOM(node) {
    return node.getRootNode ? node.getRootNode().nodeType === 11 : false;
  };
  Overlay2.prototype.getEventPath = function getEventPath(event) {
    return event.path || event.composedPath && event.composedPath() || this.composedPath(event.target);
  };
  Overlay2.prototype.composedPath = function composedPath(el) {
    var path = [];
    while (el) {
      path.push(el);
      if (el.tagName === "HTML") {
        path.push(document);
        path.push(window);
        return path;
      }
      el = el.parentElement;
    }
  };
  Overlay2.prototype.matchInShadowDOM = function matchInShadowDOM(node, e2) {
    if (this.isInShadowDOM(node)) {
      var eventPath = this.getEventPath(e2);
      return node === eventPath[0] || node.contains(eventPath[0]);
    }
    return false;
  };
  Overlay2.prototype.handleDocumentClick = function handleDocumentClick(e2) {
    var _this7 = this;
    if (this.state.visible) {
      var safeNode = this.props.safeNode;
      var safeNodes = Array.isArray(safeNode) ? [].concat(safeNode) : [safeNode];
      safeNodes.unshift(function() {
        return _this7.getWrapperNode();
      });
      for (var i = 0; i < safeNodes.length; i++) {
        var node = findNode$1(safeNodes[i], this.props);
        if (node && (node === e2.target || node.contains(e2.target) || this.matchInShadowDOM(node, e2) || e2.target !== document && !document.documentElement.contains(e2.target))) {
          return;
        }
      }
      this.props.onRequestClose("docClick", e2);
    }
  };
  Overlay2.prototype.handleMaskClick = function handleMaskClick(e2) {
    if (this.props.canCloseByMask) {
      this.props.onRequestClose("maskClick", e2);
    }
  };
  Overlay2.prototype.getInstance = function getInstance() {
    return this;
  };
  Overlay2.prototype.render = function render2() {
    var _props = this.props, prefix2 = _props.prefix, className = _props.className, style = _props.style, propChildren = _props.children, target = _props.target, align = _props.align, offset = _props.offset, container6 = _props.container, hasMask = _props.hasMask, needAdjust = _props.needAdjust, autoFit = _props.autoFit, beforePosition = _props.beforePosition, onPosition = _props.onPosition, wrapperStyle = _props.wrapperStyle, rtl = _props.rtl, propShouldUpdatePosition = _props.shouldUpdatePosition, cache2 = _props.cache, wrapperClassName = _props.wrapperClassName, onMaskMouseEnter = _props.onMaskMouseEnter, onMaskMouseLeave = _props.onMaskMouseLeave, maskClass = _props.maskClass, isChildrenInMask = _props.isChildrenInMask, pinFollowBaseElementWhenFixed = _props.pinFollowBaseElementWhenFixed;
    var _state = this.state, stateVisible = _state.visible, status = _state.status, animation2 = _state.animation;
    var children = stateVisible || cache2 && this._isMounted ? propChildren : null;
    if (children) {
      var _classnames, _classnames2;
      var child = Children.only(children);
      if (typeof child.type === "function" && !(child.type.prototype instanceof Component)) {
        child = React.createElement("div", {role: "none"}, child);
      }
      var childClazz = classnames$1((_classnames = {}, _classnames[prefix2 + "overlay-inner"] = true, _classnames[animation2.in] = status === "entering" || status === "mounting", _classnames[animation2.out] = status === "leaving", _classnames[child.props.className] = !!child.props.className, _classnames[className] = !!className, _classnames));
      if (typeof child.ref === "string") {
        throw new Error("Can not set ref by string in Overlay, use function instead.");
      }
      children = React.cloneElement(child, {
        className: childClazz,
        style: _extends$5({}, child.props.style, style),
        ref: makeChain$9(this.saveContentRef, child.ref),
        "aria-hidden": !stateVisible && cache2 && this._isMounted,
        onClick: this.props.onClick
      });
      if (align) {
        var shouldUpdatePosition = status === "leaving" ? false : propShouldUpdatePosition;
        children = React.createElement(Position$3, {
          children,
          target,
          align,
          offset,
          autoFit,
          container: container6,
          needAdjust,
          pinFollowBaseElementWhenFixed,
          beforePosition,
          onPosition: makeChain$9(this.handlePosition, onPosition),
          shouldUpdatePosition,
          rtl
        });
      }
      var wrapperClazz = classnames$1([prefix2 + "overlay-wrapper", wrapperClassName]);
      var newWrapperStyle = _extends$5({}, {
        display: stateVisible ? "" : "none"
      }, wrapperStyle);
      var maskClazz = classnames$1((_classnames2 = {}, _classnames2[prefix2 + "overlay-backdrop"] = true, _classnames2[maskClass] = !!maskClass, _classnames2));
      children = React.createElement("div", {className: wrapperClazz, style: newWrapperStyle, dir: rtl ? "rtl" : void 0}, hasMask ? React.createElement("div", {
        className: maskClazz,
        onClick: this.handleMaskClick,
        onMouseEnter: onMaskMouseEnter,
        onMouseLeave: onMaskMouseLeave,
        dir: rtl ? "rtl" : void 0
      }, isChildrenInMask && children) : null, !isChildrenInMask && children);
    }
    return React.createElement(Gateway$3, _extends$5({container: container6, target, children}, {ref: this.saveGatewayRef}));
  };
  return Overlay2;
}(Component), _class$Z.propTypes = {
  prefix: propTypes.string,
  pure: propTypes.bool,
  rtl: propTypes.bool,
  className: propTypes.string,
  style: propTypes.object,
  children: propTypes.any,
  visible: propTypes.bool,
  onRequestClose: propTypes.func,
  target: propTypes.any,
  align: propTypes.oneOfType([propTypes.string, propTypes.bool]),
  offset: propTypes.array,
  container: propTypes.any,
  hasMask: propTypes.bool,
  canCloseByEsc: propTypes.bool,
  canCloseByOutSideClick: propTypes.bool,
  canCloseByMask: propTypes.bool,
  beforeOpen: propTypes.func,
  onOpen: propTypes.func,
  afterOpen: propTypes.func,
  beforeClose: propTypes.func,
  onClose: propTypes.func,
  afterClose: propTypes.func,
  beforePosition: propTypes.func,
  onPosition: propTypes.func,
  shouldUpdatePosition: propTypes.bool,
  autoFocus: propTypes.bool,
  needAdjust: propTypes.bool,
  disableScroll: propTypes.bool,
  cache: propTypes.bool,
  safeNode: propTypes.any,
  wrapperClassName: propTypes.string,
  wrapperStyle: propTypes.object,
  animation: propTypes.oneOfType([propTypes.object, propTypes.bool]),
  onMaskMouseEnter: propTypes.func,
  onMaskMouseLeave: propTypes.func,
  onClick: propTypes.func,
  maskClass: propTypes.string,
  isChildrenInMask: propTypes.bool,
  pinFollowBaseElementWhenFixed: propTypes.bool
}, _class$Z.defaultProps = {
  prefix: "next-",
  pure: false,
  visible: false,
  onRequestClose: noop$n,
  target: Position$3.VIEWPORT,
  align: "tl bl",
  offset: [0, 0],
  hasMask: false,
  canCloseByEsc: true,
  canCloseByOutSideClick: true,
  canCloseByMask: true,
  beforeOpen: noop$n,
  onOpen: noop$n,
  afterOpen: noop$n,
  beforeClose: noop$n,
  onClose: noop$n,
  afterClose: noop$n,
  beforePosition: noop$n,
  onPosition: noop$n,
  onMaskMouseEnter: noop$n,
  onMaskMouseLeave: noop$n,
  shouldUpdatePosition: false,
  autoFocus: false,
  needAdjust: true,
  disableScroll: false,
  cache: false,
  isChildrenInMask: false,
  onClick: function onClick3(e2) {
    return e2.stopPropagation();
  },
  maskClass: ""
}, _temp$W);
Overlay$3.displayName = "Overlay";
var Overlay$4 = polyfill$1(Overlay$3);
var _class$_, _temp$X;
var noop$o = func$1.noop, makeChain$a = func$1.makeChain, bindCtx$j = func$1.bindCtx;
var Popup$6 = (_temp$X = _class$_ = function(_Component) {
  _inherits$1(Popup2, _Component);
  function Popup2(props) {
    _classCallCheck$1(this, Popup2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    _this2.state = {
      visible: typeof props.visible === "undefined" ? props.defaultVisible : props.visible
    };
    bindCtx$j(_this2, ["handleTriggerClick", "handleTriggerKeyDown", "handleTriggerMouseEnter", "handleTriggerMouseLeave", "handleTriggerFocus", "handleTriggerBlur", "handleContentMouseEnter", "handleContentMouseLeave", "handleContentMouseDown", "handleRequestClose", "handleMaskMouseEnter", "handleMaskMouseLeave"]);
    return _this2;
  }
  Popup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if ("visible" in nextProps) {
      return _extends$5({}, prevState, {
        visible: nextProps.visible
      });
    }
    return null;
  };
  Popup2.prototype.componentWillUnmount = function componentWillUnmount() {
    var _this2 = this;
    ["_timer", "_hideTimer", "_showTimer"].forEach(function(time) {
      _this2[time] && clearTimeout(_this2[time]);
    });
  };
  Popup2.prototype.handleVisibleChange = function handleVisibleChange(visible, type, e2) {
    if (!("visible" in this.props)) {
      this.setState({
        visible
      });
    }
    this.props.onVisibleChange(visible, type, e2);
  };
  Popup2.prototype.handleTriggerClick = function handleTriggerClick(e2) {
    if (this.state.visible && !this.props.canCloseByTrigger) {
      return;
    }
    this.handleVisibleChange(!this.state.visible, "fromTrigger", e2);
  };
  Popup2.prototype.handleTriggerKeyDown = function handleTriggerKeyDown(e2) {
    var triggerClickKeycode = this.props.triggerClickKeycode;
    var keycodes = Array.isArray(triggerClickKeycode) ? triggerClickKeycode : [triggerClickKeycode];
    if (keycodes.includes(e2.keyCode)) {
      e2.preventDefault();
      this.handleTriggerClick(e2);
    }
  };
  Popup2.prototype.handleTriggerMouseEnter = function handleTriggerMouseEnter(e2) {
    var _this3 = this;
    this._mouseNotFirstOnMask = false;
    if (this._hideTimer) {
      clearTimeout(this._hideTimer);
      this._hideTimer = null;
    }
    if (this._showTimer) {
      clearTimeout(this._showTimer);
      this._showTimer = null;
    }
    if (!this.state.visible) {
      this._showTimer = setTimeout(function() {
        _this3.handleVisibleChange(true, "fromTrigger", e2);
      }, this.props.delay);
    }
  };
  Popup2.prototype.handleTriggerMouseLeave = function handleTriggerMouseLeave(e2, type) {
    var _this4 = this;
    if (this._showTimer) {
      clearTimeout(this._showTimer);
      this._showTimer = null;
    }
    if (this.state.visible) {
      this._hideTimer = setTimeout(function() {
        _this4.handleVisibleChange(false, type || "fromTrigger", e2);
      }, this.props.delay);
    }
  };
  Popup2.prototype.handleTriggerFocus = function handleTriggerFocus(e2) {
    this.handleVisibleChange(true, "fromTrigger", e2);
  };
  Popup2.prototype.handleTriggerBlur = function handleTriggerBlur(e2) {
    if (!this._isForwardContent) {
      this.handleVisibleChange(false, "fromTrigger", e2);
    }
    this._isForwardContent = false;
  };
  Popup2.prototype.handleContentMouseDown = function handleContentMouseDown() {
    this._isForwardContent = true;
  };
  Popup2.prototype.handleContentMouseEnter = function handleContentMouseEnter() {
    clearTimeout(this._hideTimer);
  };
  Popup2.prototype.handleContentMouseLeave = function handleContentMouseLeave(e2) {
    this.handleTriggerMouseLeave(e2, "fromContent");
  };
  Popup2.prototype.handleMaskMouseEnter = function handleMaskMouseEnter() {
    if (!this._mouseNotFirstOnMask) {
      clearTimeout(this._hideTimer);
      this._hideTimer = null;
      this._mouseNotFirstOnMask = false;
    }
  };
  Popup2.prototype.handleMaskMouseLeave = function handleMaskMouseLeave() {
    this._mouseNotFirstOnMask = true;
  };
  Popup2.prototype.handleRequestClose = function handleRequestClose(type, e2) {
    this.handleVisibleChange(false, type, e2);
  };
  Popup2.prototype.renderTrigger = function renderTrigger() {
    var _this5 = this;
    var _props = this.props, trigger = _props.trigger, disabled = _props.disabled;
    var props = {
      key: "trigger",
      "aria-haspopup": true,
      "aria-expanded": this.state.visible
    };
    if (!this.state.visible) {
      props["aria-describedby"] = void 0;
    }
    if (!disabled) {
      var triggerType = this.props.triggerType;
      var triggerTypes = Array.isArray(triggerType) ? triggerType : [triggerType];
      var _ref = trigger && trigger.props || {}, onClick4 = _ref.onClick, onKeyDown = _ref.onKeyDown, onMouseEnter = _ref.onMouseEnter, onMouseLeave = _ref.onMouseLeave, onFocus = _ref.onFocus, onBlur = _ref.onBlur;
      triggerTypes.forEach(function(triggerType2) {
        switch (triggerType2) {
          case "click":
            props.onClick = makeChain$a(_this5.handleTriggerClick, onClick4);
            props.onKeyDown = makeChain$a(_this5.handleTriggerKeyDown, onKeyDown);
            break;
          case "hover":
            props.onMouseEnter = makeChain$a(_this5.handleTriggerMouseEnter, onMouseEnter);
            props.onMouseLeave = makeChain$a(_this5.handleTriggerMouseLeave, onMouseLeave);
            break;
          case "focus":
            props.onFocus = makeChain$a(_this5.handleTriggerFocus, onFocus);
            props.onBlur = makeChain$a(_this5.handleTriggerBlur, onBlur);
            break;
        }
      });
    }
    return trigger && React.cloneElement(trigger, props);
  };
  Popup2.prototype.renderContent = function renderContent() {
    var _this6 = this;
    var _props2 = this.props, children = _props2.children, triggerType = _props2.triggerType;
    var triggerTypes = Array.isArray(triggerType) ? triggerType : [triggerType];
    var content = Children.only(children);
    var _content$props = content.props, onMouseDown = _content$props.onMouseDown, onMouseEnter = _content$props.onMouseEnter, onMouseLeave = _content$props.onMouseLeave;
    var props = {
      key: "portal"
    };
    triggerTypes.forEach(function(triggerType2) {
      switch (triggerType2) {
        case "focus":
          props.onMouseDown = makeChain$a(_this6.handleContentMouseDown, onMouseDown);
          break;
        case "hover":
          props.onMouseEnter = makeChain$a(_this6.handleContentMouseEnter, onMouseEnter);
          props.onMouseLeave = makeChain$a(_this6.handleContentMouseLeave, onMouseLeave);
          break;
      }
    });
    return React.cloneElement(content, props);
  };
  Popup2.prototype.renderPortal = function renderPortal() {
    var _this7 = this;
    var _props3 = this.props, target = _props3.target, safeNode = _props3.safeNode, followTrigger = _props3.followTrigger, triggerType = _props3.triggerType, hasMask = _props3.hasMask, wrapperStyle = _props3.wrapperStyle, others = _objectWithoutProperties$2(_props3, ["target", "safeNode", "followTrigger", "triggerType", "hasMask", "wrapperStyle"]);
    var container6 = this.props.container;
    var findTriggerNode = function findTriggerNode2() {
      return findDOMNode(_this7);
    };
    var safeNodes = Array.isArray(safeNode) ? [].concat(safeNode) : [safeNode];
    safeNodes.unshift(findTriggerNode);
    var newWrapperStyle = wrapperStyle || {};
    if (followTrigger) {
      container6 = function container7(trigger) {
        return trigger && trigger.parentNode || trigger;
      };
      newWrapperStyle.position = "relative";
    }
    if (triggerType === "hover" && hasMask) {
      others.onMaskMouseEnter = this.handleMaskMouseEnter;
      others.onMaskMouseLeave = this.handleMaskMouseLeave;
    }
    return React.createElement(Overlay$4, _extends$5({}, others, {
      key: "overlay",
      ref: function ref(overlay) {
        return _this7.overlay = overlay;
      },
      visible: this.state.visible,
      target: target || findTriggerNode,
      container: container6,
      safeNode: safeNodes,
      wrapperStyle: newWrapperStyle,
      triggerType,
      hasMask,
      onRequestClose: this.handleRequestClose
    }), this.renderContent());
  };
  Popup2.prototype.render = function render2() {
    return [this.renderTrigger(), this.renderPortal()];
  };
  return Popup2;
}(Component), _class$_.propTypes = {
  children: propTypes.node,
  trigger: propTypes.element,
  triggerType: propTypes.oneOfType([propTypes.string, propTypes.array]),
  triggerClickKeycode: propTypes.oneOfType([propTypes.number, propTypes.array]),
  visible: propTypes.bool,
  defaultVisible: propTypes.bool,
  onVisibleChange: propTypes.func,
  disabled: propTypes.bool,
  autoFit: propTypes.bool,
  delay: propTypes.number,
  canCloseByTrigger: propTypes.bool,
  target: propTypes.any,
  safeNode: propTypes.any,
  followTrigger: propTypes.bool,
  container: propTypes.any,
  hasMask: propTypes.bool,
  wrapperStyle: propTypes.object,
  rtl: propTypes.bool
}, _class$_.defaultProps = {
  triggerType: "hover",
  triggerClickKeycode: [KEYCODE$1.SPACE, KEYCODE$1.ENTER],
  defaultVisible: false,
  onVisibleChange: noop$o,
  disabled: false,
  autoFit: false,
  delay: 200,
  canCloseByTrigger: true,
  followTrigger: false,
  container: function container5() {
    return document.body;
  },
  rtl: false
}, _temp$X);
Popup$6.displayName = "Popup";
var Popup$7 = polyfill$1(Popup$6);
Overlay$4.Gateway = Gateway$3;
Overlay$4.Position = Position$3;
Overlay$4.Popup = NextConfigProvider.config(Popup$7, {
  exportNames: ["overlay"]
});
var NextOverlay = NextConfigProvider.config(Overlay$4, {
  exportNames: ["getContent", "getContentNode"]
});
var customCache$1 = new Set();
function createFromIconfontCN$1() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var scriptUrl = options.scriptUrl, _options$extraCommonP = options.extraCommonProps, extraCommonProps = _options$extraCommonP === void 0 ? {} : _options$extraCommonP;
  var hasExist = customCache$1.has(scriptUrl);
  if (document.querySelector('script[data-namespace="' + scriptUrl + '"]')) {
    hasExist = true;
  }
  if (typeof document !== "undefined" && typeof window !== "undefined" && typeof document.createElement === "function" && typeof scriptUrl === "string" && scriptUrl.length && !hasExist) {
    var script = document.createElement("script");
    script.setAttribute("src", scriptUrl);
    script.setAttribute("data-namespace", scriptUrl);
    customCache$1.add(scriptUrl);
    document.body.appendChild(script);
  }
  var Iconfont = function Iconfont2(props) {
    var _cx;
    var type = props.type, size = props.size, children = props.children, className = props.className, _props$prefix = props.prefix, prefix2 = _props$prefix === void 0 ? "next-" : _props$prefix, others = _objectWithoutProperties$2(props, ["type", "size", "children", "className", "prefix"]);
    var content = null;
    if (props.type) {
      content = React.createElement("use", {xlinkHref: "#" + type});
    }
    if (children) {
      content = children;
    }
    var classes = classnames$1((_cx = {}, _cx[prefix2 + "icon-remote"] = true, _cx), className);
    return React.createElement(NextIcon, {size}, React.createElement("svg", _extends$5({
      className: classes,
      focusable: false
    }, others, extraCommonProps), content));
  };
  Iconfont.displayName = "Iconfont";
  return NextConfigProvider.config(Iconfont);
}
var _class$$, _temp$Y;
var Icon$2 = (_temp$Y = _class$$ = function(_Component) {
  _inherits$1(Icon2, _Component);
  function Icon2() {
    _classCallCheck$1(this, Icon2);
    return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
  }
  Icon2.prototype.render = function render2() {
    var _cx;
    var _props = this.props, prefix2 = _props.prefix, type = _props.type, size = _props.size, className = _props.className, rtl = _props.rtl, style = _props.style, children = _props.children;
    var others = obj$1.pickOthers(_extends$5({}, Icon2.propTypes), this.props);
    var classes = classnames$1((_cx = {}, _cx[prefix2 + "icon"] = true, _cx[prefix2 + "icon-" + type] = !!type, _cx["" + prefix2 + size] = !!size && typeof size === "string", _cx[className] = !!className, _cx));
    if (rtl && ["arrow-left", "arrow-right", "arrow-double-left", "arrow-double-right", "switch", "sorting", "descending", "ascending"].indexOf(type) !== -1) {
      others.dir = "rtl";
    }
    var sizeStyle = typeof size === "number" ? {
      width: size,
      height: size,
      lineHeight: size + "px",
      fontSize: size
    } : {};
    return React.createElement("i", _extends$5({}, others, {
      style: _extends$5({}, sizeStyle, style),
      className: classes
    }), children);
  };
  return Icon2;
}(Component), _class$$.propTypes = _extends$5({}, NextConfigProvider.propTypes, {
  type: propTypes.string,
  children: propTypes.node,
  size: propTypes.oneOfType([propTypes.oneOf(["xxs", "xs", "small", "medium", "large", "xl", "xxl", "xxxl", "inherit"]), propTypes.number]),
  className: propTypes.string,
  style: propTypes.object
}), _class$$.defaultProps = {
  prefix: "next-",
  size: "medium"
}, _class$$._typeMark = "icon", _temp$Y);
Icon$2.displayName = "Icon";
Icon$2.createFromIconfontCN = createFromIconfontCN$1;
var NextIcon = NextConfigProvider.config(Icon$2);
var _class$10, _temp$Z;
var noop$p = func$1.noop, bindCtx$k = func$1.bindCtx;
var PRESET_COLOR_REG$1 = /blue|green|orange|red|turquoise|yellow/;
var Tag$2 = (_temp$Z = _class$10 = function(_Component) {
  _inherits$1(Tag2, _Component);
  function Tag2(props) {
    _classCallCheck$1(this, Tag2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    _this2.onKeyDown = function(e2) {
      var _this$props = _this2.props, closable = _this$props.closable, closeArea = _this$props.closeArea, onClick4 = _this$props.onClick, disabled = _this$props.disabled;
      if (e2.keyCode !== KEYCODE$1.SPACE || disabled) {
        return;
      }
      e2.preventDefault();
      e2.stopPropagation();
      if (closable) {
        _this2.handleClose(closeArea);
      } else {
        typeof onClick4 === "function" && onClick4(e2);
      }
    };
    _this2.state = {
      visible: true
    };
    bindCtx$k(_this2, ["handleBodyClick", "handleTailClick", "handleAnimationInit", "handleAnimationEnd", "renderTailNode"]);
    return _this2;
  }
  Tag2.prototype.componentWillUnmount = function componentWillUnmount() {
    this.__destroyed = true;
  };
  Tag2.prototype.handleClose = function handleClose(from) {
    var _this2 = this;
    var _props = this.props, animation2 = _props.animation, onClose = _props.onClose;
    var hasAnimation = support$1.animation && animation2;
    var result = onClose(from, this.tagNode);
    if (result !== false && !this.__destroyed) {
      this.setState({
        visible: false
      }, function() {
        !hasAnimation && _this2.props.afterClose(_this2.tagNode);
      });
    }
  };
  Tag2.prototype.handleBodyClick = function handleBodyClick(e2) {
    var _props2 = this.props, closable = _props2.closable, closeArea = _props2.closeArea, onClick4 = _props2.onClick;
    if (closable && closeArea === "tag") {
      this.handleClose("tag");
    }
    if (typeof onClick4 === "function") {
      return onClick4(e2);
    }
  };
  Tag2.prototype.handleTailClick = function handleTailClick(e2) {
    e2 && e2.preventDefault();
    e2 && e2.stopPropagation();
    this.handleClose("tail");
  };
  Tag2.prototype.handleAnimationInit = function handleAnimationInit(node) {
    this.props.afterAppear(node);
  };
  Tag2.prototype.handleAnimationEnd = function handleAnimationEnd(node) {
    this.props.afterClose(node);
  };
  Tag2.prototype.renderAnimatedTag = function renderAnimatedTag(children, animationName) {
    return React.createElement(Animate$1, {
      animation: animationName,
      afterAppear: this.handleAnimationInit,
      afterLeave: this.handleAnimationEnd
    }, children);
  };
  Tag2.prototype.renderTailNode = function renderTailNode() {
    var _props3 = this.props, prefix2 = _props3.prefix, closable = _props3.closable, locale = _props3.locale;
    if (!closable) {
      return null;
    }
    return React.createElement("span", {
      className: prefix2 + "tag-close-btn",
      onClick: this.handleTailClick,
      role: "button",
      "aria-label": locale.delete
    }, React.createElement(NextIcon, {type: "close"}));
  };
  Tag2.prototype.isPresetColor = function isPresetColor() {
    var color = this.props.color;
    if (!color) {
      return false;
    }
    return PRESET_COLOR_REG$1.test(color);
  };
  Tag2.prototype.getTagStyle = function getTagStyle() {
    var _props4 = this.props, _props4$color = _props4.color, color = _props4$color === void 0 ? "" : _props4$color, style = _props4.style;
    var isPresetColor = this.isPresetColor();
    var customColorStyle = {
      backgroundColor: color,
      borderColor: color,
      color: "#fff"
    };
    return _extends$5({}, color && !isPresetColor ? customColorStyle : null, style);
  };
  Tag2.prototype.render = function render2() {
    var _classNames, _this3 = this;
    var _props5 = this.props, prefix2 = _props5.prefix, type = _props5.type, size = _props5.size, color = _props5.color, _shape = _props5._shape, closable = _props5.closable, closeArea = _props5.closeArea, className = _props5.className, children = _props5.children, animation2 = _props5.animation, disabled = _props5.disabled, rtl = _props5.rtl;
    var visible = this.state.visible;
    var isPresetColor = this.isPresetColor();
    var others = obj$1.pickOthers(Tag2.propTypes, this.props);
    var style = others.style, otherTagProps = _objectWithoutProperties$2(others, ["style"]);
    var shape = closable ? "closable" : _shape;
    var bodyClazz = classnames$1([prefix2 + "tag", prefix2 + "tag-" + shape, prefix2 + "tag-" + size], (_classNames = {}, _classNames[prefix2 + "tag-level-" + type] = !color, _classNames[prefix2 + "tag-closable"] = closable, _classNames[prefix2 + "tag-body-pointer"] = closable && closeArea === "tag", _classNames[prefix2 + "tag-" + color] = color && isPresetColor && type === "primary", _classNames[prefix2 + "tag-" + color + "-inverse"] = color && isPresetColor && type === "normal", _classNames), className);
    var tailNode = this.renderTailNode();
    var tagNode = !visible ? null : React.createElement("div", _extends$5({
      className: bodyClazz,
      onClick: this.handleBodyClick,
      onKeyDown: this.onKeyDown,
      tabIndex: disabled ? "" : "0",
      role: "button",
      "aria-disabled": disabled,
      disabled,
      dir: rtl ? "rtl" : void 0,
      ref: function ref(n2) {
        return _this3.tagNode = n2;
      },
      style: this.getTagStyle()
    }, otherTagProps), React.createElement("span", {className: prefix2 + "tag-body"}, children), tailNode);
    if (animation2 && support$1.animation) {
      return this.renderAnimatedTag(tagNode, prefix2 + "tag-zoom");
    }
    return tagNode;
  };
  return Tag2;
}(Component), _class$10.propTypes = {
  prefix: propTypes.string,
  type: propTypes.oneOf(["normal", "primary"]),
  size: propTypes.oneOf(["small", "medium", "large"]),
  color: propTypes.string,
  animation: propTypes.bool,
  closeArea: propTypes.oneOf(["tag", "tail"]),
  closable: propTypes.bool,
  onClose: propTypes.func,
  afterClose: propTypes.func,
  afterAppear: propTypes.func,
  className: propTypes.any,
  children: propTypes.node,
  onClick: propTypes.func,
  _shape: propTypes.oneOf(["default", "closable", "checkable"]),
  disabled: propTypes.bool,
  rtl: propTypes.bool,
  locale: propTypes.object
}, _class$10.defaultProps = {
  prefix: "next-",
  type: "normal",
  size: "medium",
  closeArea: "tail",
  animation: false,
  onClose: noop$p,
  afterClose: noop$p,
  afterAppear: noop$p,
  onClick: noop$p,
  _shape: "default",
  disabled: false,
  rtl: false,
  locale: zhCN$1.Tag
}, _temp$Z);
Tag$2.displayName = "Tag";
var Tag$3 = NextConfigProvider.config(Tag$2);
var _class$11, _temp$_;
var Group$7 = (_temp$_ = _class$11 = function(_Component) {
  _inherits$1(Group2, _Component);
  function Group2() {
    _classCallCheck$1(this, Group2);
    return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
  }
  Group2.prototype.render = function render2() {
    var _props = this.props, className = _props.className, prefix2 = _props.prefix, children = _props.children, rtl = _props.rtl, others = _objectWithoutProperties$2(_props, ["className", "prefix", "children", "rtl"]);
    var clazz = classnames$1((prefix2 || "next-") + "tag-group", className);
    return React.createElement("div", _extends$5({className: clazz, dir: rtl ? "rtl" : void 0}, others), children);
  };
  return Group2;
}(Component), _class$11.propTypes = {
  prefix: propTypes.string,
  className: propTypes.any,
  children: propTypes.node,
  rtl: propTypes.bool
}, _class$11.defaultProps = {
  prefix: "next-",
  rtl: false
}, _temp$_);
Group$7.displayName = "Group";
var _class$12, _temp$$;
var noop$q = func$1.noop, bindCtx$l = func$1.bindCtx;
var Selectable$2 = (_temp$$ = _class$12 = function(_Component) {
  _inherits$1(Selectable2, _Component);
  function Selectable2(props) {
    _classCallCheck$1(this, Selectable2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    _this2.state = {
      checked: "checked" in props ? props.checked : props.defaultChecked || false
    };
    bindCtx$l(_this2, ["handleClick"]);
    return _this2;
  }
  Selectable2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.checked !== void 0 && props.checked !== state.checked) {
      return {
        checked: props.checked
      };
    }
    return null;
  };
  Selectable2.prototype.handleClick = function handleClick(e2) {
    e2 && e2.preventDefault();
    if (this.props.disabled) {
      return false;
    }
    var checked = this.state.checked;
    this.setState({
      checked: !checked
    });
    this.props.onChange(!checked, e2);
  };
  Selectable2.prototype.render = function render2() {
    var attrFilterTarget = [
      "checked",
      "defaultChecked",
      "onChange",
      "className",
      "_shape",
      "closable"
    ];
    var others = obj$1.pickOthers(attrFilterTarget, this.props);
    var isChecked2 = "checked" in this.props ? this.props.checked : this.state.checked;
    var clazz = classnames$1(this.props.className, {
      checked: isChecked2
    });
    return React.createElement(Tag$3, _extends$5({}, others, {
      role: "checkbox",
      _shape: "checkable",
      "aria-checked": isChecked2,
      className: clazz,
      onClick: this.handleClick
    }));
  };
  return Selectable2;
}(Component), _class$12.propTypes = {
  checked: propTypes.bool,
  defaultChecked: propTypes.bool,
  onChange: propTypes.func,
  disabled: propTypes.bool,
  className: propTypes.any
}, _class$12.defaultProps = {
  onChange: noop$q
}, _temp$$);
Selectable$2.displayName = "Selectable";
var Selectable$3 = polyfill$1(Selectable$2);
var _class$13, _temp$10;
var Closeable$1 = (_temp$10 = _class$13 = function(_Component) {
  _inherits$1(Closeable2, _Component);
  function Closeable2() {
    _classCallCheck$1(this, Closeable2);
    return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
  }
  Closeable2.prototype.render = function render2() {
    var _props = this.props, disabled = _props.disabled, className = _props.className, closeArea = _props.closeArea, onClose = _props.onClose, afterClose = _props.afterClose, onClick4 = _props.onClick, type = _props.type, size = _props.size, children = _props.children, rtl = _props.rtl, others = _objectWithoutProperties$2(_props, ["disabled", "className", "closeArea", "onClose", "afterClose", "onClick", "type", "size", "children", "rtl"]);
    return React.createElement(Tag$3, _extends$5({}, others, {
      rtl,
      disabled,
      className,
      closeArea,
      onClose,
      afterClose,
      onClick: onClick4,
      type,
      size,
      closable: true
    }), children);
  };
  return Closeable2;
}(Component), _class$13.propTypes = {
  disabled: propTypes.bool,
  className: propTypes.any,
  closeArea: propTypes.oneOf(["tag", "tail"]),
  onClose: propTypes.func,
  afterClose: propTypes.func,
  onClick: propTypes.func,
  type: propTypes.oneOf(["normal", "primary"]),
  size: propTypes.oneOf(["small", "medium", "large"]),
  children: propTypes.any,
  rtl: propTypes.bool
}, _class$13.defaultProps = {
  disabled: false,
  type: "normal"
}, _temp$10);
Closeable$1.displayName = "Closeable";
var ConfigTag$1 = NextConfigProvider.config(Tag$3, {
  transfrom: function transfrom3(props, deprecated2) {
    var shape = props.shape, type = props.type;
    if (shape === "selectable") {
      deprecated2("shape=selectable", "Tag.Selectable", "Tag");
    }
    if (shape === "deletable") {
      deprecated2("shape=deletable", "Tag.Closeable", "Tag");
    }
    if (shape === "link") {
      deprecated2("shape=link", '<Tag><a href="x">x</a></Tag>', "Tag");
    }
    if (shape === "readonly" || shape === "interactive") {
      log$1.warning("Warning: [ shape=" + shape + " ] is deprecated at [ Tag ]");
    }
    if (type === "secondary") {
      log$1.warning("Warning: [ type=secondary ] is deprecated at [ Tag ]");
    }
    ["count", "marked", "value", "onChange"].forEach(function(key) {
      if (key in props) {
        log$1.warning("Warning: [ " + key + " ] is deprecated at [ Tag ]");
      }
    });
    if ("selected" in props || "defaultSelected" in props) {
      log$1.warning("Warning: [ selected|defaultSelected  ] is deprecated at [ Tag ], use [ checked|defaultChecked ] at [ Tag.Selectable ] instead of it");
    }
    if ("closed" in props) {
      log$1.warning("Warning: [ closed  ] is deprecated at [ Tag ], use [ onClose ] at [ Tag.Closeable ] instead of it");
    }
    if ("onSelect" in props) {
      deprecated2("onSelect", "<Tag.Selectable onChange/>", "Tag");
    }
    if ("afterClose" in props) {
      log$1.warning("Warning: [ afterClose  ] is deprecated at [ Tag ], use [ afterClose ] at [ Tag.Closeable ] instead of it");
    }
    return props;
  }
});
ConfigTag$1.Group = NextConfigProvider.config(Group$7);
ConfigTag$1.Selectable = NextConfigProvider.config(Selectable$3);
ConfigTag$1.Closable = NextConfigProvider.config(Closeable$1);
ConfigTag$1.Closeable = ConfigTag$1.Closable;
var _class$14, _temp2$3;
var Base$4 = (_temp2$3 = _class$14 = function(_React$Component) {
  _inherits$1(Base2, _React$Component);
  function Base2() {
    var _temp3, _this2, _ret;
    _classCallCheck$1(this, Base2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp3 = (_this2 = _possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this2), _this2.saveRef = function(input) {
      _this2.inputRef = input;
    }, _temp3), _possibleConstructorReturn$1(_this2, _ret);
  }
  Base2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if ("value" in nextProps && nextProps.value !== prevState.value) {
      var value = nextProps.value;
      return {
        value: value === void 0 || value === null ? "" : value
      };
    }
    return null;
  };
  Base2.prototype.ieHack = function ieHack(value) {
    return value;
  };
  Base2.prototype.onChange = function onChange9(e2) {
    if ("stopPropagation" in e2) {
      e2.stopPropagation();
    } else if ("cancelBubble" in e2) {
      e2.cancelBubble();
    }
    var value = e2.target.value;
    if (this.props.trim) {
      value = value.trim();
    }
    value = this.ieHack(value);
    if (!("value" in this.props)) {
      this.setState({
        value
      });
    }
    if (value && this.props.htmlType === "number") {
      value = Number(value);
    }
    this.props.onChange(value, e2);
  };
  Base2.prototype.onKeyDown = function onKeyDown(e2) {
    var value = e2.target.value;
    var maxLength = this.props.maxLength;
    var len = maxLength > 0 && value ? this.getValueLength(value) : 0;
    var opts = {};
    if (this.props.trim && e2.keyCode === 32) {
      opts.beTrimed = true;
    }
    if (maxLength > 0 && (len > maxLength + 1 || (len === maxLength || len === maxLength + 1) && e2.keyCode !== 8 && e2.keyCode !== 46)) {
      opts.overMaxLength = true;
    }
    this.props.onKeyDown(e2, opts);
  };
  Base2.prototype.onFocus = function onFocus(e2) {
    this.setState({
      focus: true
    });
    this.props.onFocus(e2);
  };
  Base2.prototype.onBlur = function onBlur(e2) {
    this.setState({
      focus: false
    });
    this.props.onBlur(e2);
  };
  Base2.prototype.renderLength = function renderLength() {
    var _classNames;
    var _props = this.props, maxLength = _props.maxLength, hasLimitHint = _props.hasLimitHint, prefix2 = _props.prefix, rtl = _props.rtl;
    var len = maxLength > 0 && this.state.value ? this.getValueLength(this.state.value) : 0;
    var classesLenWrap = classnames$1((_classNames = {}, _classNames[prefix2 + "input-len"] = true, _classNames[prefix2 + "error"] = len > maxLength, _classNames));
    var content = rtl ? maxLength + "/" + len : len + "/" + maxLength;
    return maxLength && hasLimitHint ? React.createElement("span", {className: classesLenWrap}, content) : null;
  };
  Base2.prototype.renderControl = function renderControl() {
    var lenWrap = this.renderLength();
    return lenWrap ? React.createElement("span", {className: this.props.prefix + "input-control"}, lenWrap) : null;
  };
  Base2.prototype.getClass = function getClass() {
    var _classNames2;
    var _props2 = this.props, disabled = _props2.disabled, state = _props2.state, prefix2 = _props2.prefix;
    return classnames$1((_classNames2 = {}, _classNames2[prefix2 + "input"] = true, _classNames2[prefix2 + "disabled"] = !!disabled, _classNames2[prefix2 + "error"] = state === "error", _classNames2[prefix2 + "warning"] = state === "warning", _classNames2[prefix2 + "focus"] = this.state.focus, _classNames2));
  };
  Base2.prototype.getProps = function getProps() {
    var _props3 = this.props, placeholder = _props3.placeholder, inputStyle = _props3.inputStyle, disabled = _props3.disabled, readOnly = _props3.readOnly, cutString = _props3.cutString, maxLength = _props3.maxLength, name = _props3.name;
    var props = {
      style: inputStyle,
      placeholder,
      disabled,
      readOnly,
      name,
      maxLength: cutString ? maxLength : void 0,
      value: this.state.value,
      onChange: this.onChange.bind(this),
      onBlur: this.onBlur.bind(this),
      onFocus: this.onFocus.bind(this)
    };
    if (disabled) {
      props["aria-disabled"] = disabled;
    }
    return props;
  };
  Base2.prototype.getInputNode = function getInputNode() {
    return this.inputRef;
  };
  Base2.prototype.focus = function focus2(start, end) {
    this.inputRef.focus();
    if (typeof start === "number") {
      this.inputRef.selectionStart = start;
    }
    if (typeof end === "number") {
      this.inputRef.selectionEnd = end;
    }
  };
  return Base2;
}(React.Component), _class$14.propTypes = _extends$5({}, NextConfigProvider.propTypes, {
  value: propTypes.oneOfType([propTypes.string, propTypes.number]),
  defaultValue: propTypes.oneOfType([propTypes.string, propTypes.number]),
  onChange: propTypes.func,
  onKeyDown: propTypes.func,
  disabled: propTypes.bool,
  maxLength: propTypes.number,
  hasLimitHint: propTypes.bool,
  cutString: propTypes.bool,
  readOnly: propTypes.bool,
  trim: propTypes.bool,
  placeholder: propTypes.string,
  onFocus: propTypes.func,
  onBlur: propTypes.func,
  getValueLength: propTypes.func,
  inputStyle: propTypes.object,
  className: propTypes.string,
  style: propTypes.object,
  htmlType: propTypes.string,
  name: propTypes.string,
  rtl: propTypes.bool,
  state: propTypes.oneOf(["error", "loading", "success", "warning"]),
  locale: propTypes.object,
  isPreview: propTypes.bool,
  renderPreview: propTypes.func,
  size: propTypes.oneOf(["small", "medium", "large"])
}), _class$14.defaultProps = {
  disabled: false,
  prefix: "next-",
  size: "medium",
  maxLength: null,
  hasLimitHint: false,
  cutString: true,
  readOnly: false,
  isPreview: false,
  trim: false,
  onFocus: func$1.noop,
  onBlur: func$1.noop,
  onChange: func$1.noop,
  onKeyDown: func$1.noop,
  getValueLength: func$1.noop,
  locale: zhCN$1.Input
}, _temp2$3);
Base$4.displayName = "Base";
var Base$5 = polyfill$1(Base$4);
var _class$15, _temp$11;
var Group$8 = (_temp$11 = _class$15 = function(_React$Component) {
  _inherits$1(Group2, _React$Component);
  function Group2() {
    _classCallCheck$1(this, Group2);
    return _possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
  }
  Group2.prototype.render = function render2() {
    var _classNames, _classNames2, _classNames3;
    var _props = this.props, className = _props.className, style = _props.style, children = _props.children, prefix2 = _props.prefix, addonBefore = _props.addonBefore, addonAfter = _props.addonAfter, addonBeforeClassName = _props.addonBeforeClassName, addonAfterClassName = _props.addonAfterClassName, rtl = _props.rtl, disabled = _props.disabled, others = _objectWithoutProperties$2(_props, ["className", "style", "children", "prefix", "addonBefore", "addonAfter", "addonBeforeClassName", "addonAfterClassName", "rtl", "disabled"]);
    var cls = classnames$1((_classNames = {}, _classNames[prefix2 + "input-group"] = true, _classNames[prefix2 + "disabled"] = disabled, _classNames[className] = !!className, _classNames));
    var addonCls = prefix2 + "input-group-addon";
    var beforeCls = classnames$1(addonCls, (_classNames2 = {}, _classNames2[prefix2 + "before"] = true, _classNames2[addonBeforeClassName] = addonBeforeClassName, _classNames2));
    var afterCls = classnames$1(addonCls, (_classNames3 = {}, _classNames3[prefix2 + "after"] = true, _classNames3[addonAfterClassName] = addonAfterClassName, _classNames3));
    var before = addonBefore ? React.createElement("span", {className: beforeCls}, addonBefore) : null;
    var after = addonAfter ? React.createElement("span", {className: afterCls}, addonAfter) : null;
    return React.createElement("span", _extends$5({}, others, {disabled, dir: rtl ? "rtl" : void 0, className: cls, style}), before, children, after);
  };
  return Group2;
}(React.Component), _class$15.propTypes = {
  prefix: propTypes.string,
  className: propTypes.string,
  style: propTypes.object,
  children: propTypes.node,
  addonBefore: propTypes.node,
  addonBeforeClassName: propTypes.string,
  addonAfter: propTypes.node,
  addonAfterClassName: propTypes.string,
  rtl: propTypes.bool
}, _class$15.defaultProps = {
  prefix: "next-"
}, _temp$11);
Group$8.displayName = "Group";
var Group$9 = NextConfigProvider.config(Group$8);
var _class$16, _temp$12;
function preventDefault$3(e2) {
  e2.preventDefault();
}
var Input$2 = (_temp$12 = _class$16 = function(_Base) {
  _inherits$1(Input2, _Base);
  function Input2(props) {
    _classCallCheck$1(this, Input2);
    var _this2 = _possibleConstructorReturn$1(this, _Base.call(this, props));
    _this2.handleKeyDown = function(e2) {
      if (e2.keyCode === 13) {
        _this2.props.onPressEnter(e2);
      }
      _this2.onKeyDown(e2);
    };
    _this2.handleKeyDownFromClear = function(e2) {
      if (e2.keyCode === 13) {
        _this2.onClear(e2);
      }
    };
    var value = void 0;
    if ("value" in props) {
      value = props.value;
    } else {
      value = props.defaultValue;
    }
    _this2.state = {
      value: typeof value === "undefined" ? "" : value
    };
    return _this2;
  }
  Input2.prototype.getValueLength = function getValueLength(value) {
    var nv = "" + value;
    var strLen = this.props.getValueLength(nv);
    if (typeof strLen !== "number") {
      strLen = nv.length;
    }
    return strLen;
  };
  Input2.prototype.renderControl = function renderControl() {
    var _props = this.props, hasClear = _props.hasClear, readOnly = _props.readOnly, state = _props.state, prefix2 = _props.prefix, hint = _props.hint, extra = _props.extra, locale = _props.locale;
    var lenWrap = this.renderLength();
    var stateWrap = null;
    if (state === "success") {
      stateWrap = React.createElement(NextIcon, {type: "success-filling", className: prefix2 + "input-success-icon"});
    } else if (state === "loading") {
      stateWrap = React.createElement(NextIcon, {type: "loading", className: prefix2 + "input-loading-icon"});
    } else if (state === "warning") {
      stateWrap = React.createElement(NextIcon, {type: "warning", className: prefix2 + "input-warning-icon"});
    }
    var clearWrap = null;
    var showClear = hasClear && !readOnly && !!("" + this.state.value);
    if (hint || showClear) {
      var hintIcon = null;
      if (hint) {
        if (typeof hint === "string") {
          hintIcon = React.createElement(NextIcon, {type: hint, className: prefix2 + "input-hint"});
        } else if (isValidElement(hint)) {
          hintIcon = cloneElement(hint, {
            className: classnames$1(hint.props.className, prefix2 + "input-hint")
          });
        } else {
          hintIcon = hint;
        }
      } else {
        hintIcon = React.createElement(NextIcon, {
          type: "delete-filling",
          role: "button",
          tabIndex: "0",
          className: prefix2 + "input-hint " + prefix2 + "input-clear-icon",
          "aria-label": locale.clear,
          onClick: this.onClear.bind(this),
          onMouseDown: preventDefault$3,
          onKeyDown: this.handleKeyDownFromClear
        });
      }
      clearWrap = React.createElement("span", {className: prefix2 + "input-hint-wrap"}, hasClear && hint ? React.createElement(NextIcon, {
        type: "delete-filling",
        role: "button",
        tabIndex: "0",
        className: prefix2 + "input-clear " + prefix2 + "input-clear-icon",
        "aria-label": locale.clear,
        onClick: this.onClear.bind(this),
        onMouseDown: preventDefault$3,
        onKeyDown: this.handleKeyDownFromClear
      }) : null, hintIcon);
    }
    if (state === "loading") {
      clearWrap = null;
    }
    return clearWrap || lenWrap || stateWrap || extra ? React.createElement("span", {className: prefix2 + "input-control"}, clearWrap, lenWrap, stateWrap, extra) : null;
  };
  Input2.prototype.renderLabel = function renderLabel() {
    var _props2 = this.props, label = _props2.label, prefix2 = _props2.prefix, id2 = _props2.id;
    return label ? React.createElement("label", {className: prefix2 + "input-label", htmlFor: id2}, label) : null;
  };
  Input2.prototype.renderInner = function renderInner(inner, cls) {
    return inner ? React.createElement("span", {className: cls}, inner) : null;
  };
  Input2.prototype.onClear = function onClear(e2) {
    if (this.props.disabled) {
      return;
    }
    if (!("value" in this.props)) {
      this.setState({
        value: ""
      });
    }
    this.props.onChange("", e2, "clear");
    this.focus();
  };
  Input2.prototype.render = function render2() {
    var _classNames, _classNames2, _classNames3, _classNames4, _classNames5, _classNames6, _classNames7;
    var _props3 = this.props, size = _props3.size, htmlType = _props3.htmlType, htmlSize = _props3.htmlSize, autoComplete = _props3.autoComplete, autoFocus = _props3.autoFocus, disabled = _props3.disabled, style = _props3.style, innerBefore = _props3.innerBefore, innerAfter = _props3.innerAfter, innerBeforeClassName = _props3.innerBeforeClassName, innerAfterClassName = _props3.innerAfterClassName, className = _props3.className, hasBorder = _props3.hasBorder, prefix2 = _props3.prefix, isPreview = _props3.isPreview, renderPreview = _props3.renderPreview, addonBefore = _props3.addonBefore, addonAfter = _props3.addonAfter, addonTextBefore = _props3.addonTextBefore, addonTextAfter = _props3.addonTextAfter, inputRender3 = _props3.inputRender, rtl = _props3.rtl;
    var hasAddon = addonBefore || addonAfter || addonTextBefore || addonTextAfter;
    var cls = classnames$1(this.getClass(), (_classNames = {}, _classNames["" + prefix2 + size] = true, _classNames[prefix2 + "hidden"] = this.props.htmlType === "hidden", _classNames[prefix2 + "noborder"] = !hasBorder || this.props.htmlType === "file", _classNames[prefix2 + "input-group-auto-width"] = hasAddon, _classNames[prefix2 + "disabled"] = disabled, _classNames[className] = !!className && !hasAddon, _classNames));
    var innerCls = prefix2 + "input-inner";
    var innerBeforeCls = classnames$1((_classNames2 = {}, _classNames2[innerCls] = true, _classNames2[prefix2 + "before"] = true, _classNames2[innerBeforeClassName] = innerBeforeClassName, _classNames2));
    var innerAfterCls = classnames$1((_classNames3 = {}, _classNames3[innerCls] = true, _classNames3[prefix2 + "after"] = true, _classNames3[innerAfterClassName] = innerAfterClassName, _classNames3));
    var previewCls = classnames$1((_classNames4 = {}, _classNames4[prefix2 + "form-preview"] = true, _classNames4[className] = !!className, _classNames4));
    var props = this.getProps();
    var dataProps = obj$1.pickAttrsWith(this.props, "data-");
    var others = obj$1.pickOthers(_extends$5({}, dataProps, Input2.propTypes), this.props);
    if (isPreview) {
      var value = props.value;
      var label = this.props.label;
      if (typeof renderPreview === "function") {
        return React.createElement("div", _extends$5({}, others, {className: previewCls}), renderPreview(value, this.props));
      }
      return React.createElement("div", _extends$5({}, others, {className: previewCls}), addonBefore || addonTextBefore, label, innerBefore, value, innerAfter, addonAfter || addonTextAfter);
    }
    var inputEl = React.createElement("input", _extends$5({}, others, props, {
      height: "100%",
      type: htmlType,
      size: htmlSize,
      autoFocus,
      autoComplete,
      onKeyDown: this.handleKeyDown,
      ref: this.saveRef
    }));
    var inputWrap = React.createElement("span", _extends$5({}, dataProps, {dir: rtl ? "rtl" : void 0, className: cls, style: hasAddon ? void 0 : style}), this.renderLabel(), this.renderInner(innerBefore, innerBeforeCls), inputRender3(inputEl), this.renderInner(innerAfter, innerAfterCls), this.renderControl());
    var groupCls = classnames$1((_classNames5 = {}, _classNames5[prefix2 + "input-group-text"] = true, _classNames5["" + prefix2 + size] = !!size, _classNames5[prefix2 + "disabled"] = disabled, _classNames5));
    var addonBeforeCls = classnames$1((_classNames6 = {}, _classNames6[groupCls] = addonTextBefore, _classNames6));
    var addonAfterCls = classnames$1((_classNames7 = {}, _classNames7[groupCls] = addonTextAfter, _classNames7));
    if (hasAddon) {
      return React.createElement(Group$9, _extends$5({}, dataProps, {
        className,
        style,
        disabled,
        addonBefore: addonBefore || addonTextBefore,
        addonBeforeClassName: addonBeforeCls,
        addonAfter: addonAfter || addonTextAfter,
        addonAfterClassName: addonAfterCls
      }), inputWrap);
    }
    return inputWrap;
  };
  return Input2;
}(Base$5), _class$16.getDerivedStateFromProps = Base$5.getDerivedStateFromProps, _class$16.propTypes = _extends$5({}, Base$5.propTypes, {
  label: propTypes.node,
  hasClear: propTypes.bool,
  hasBorder: propTypes.bool,
  state: propTypes.oneOf(["error", "loading", "success", "warning"]),
  onPressEnter: propTypes.func,
  onClear: propTypes.func,
  htmlType: propTypes.string,
  htmlSize: propTypes.string,
  hint: propTypes.oneOfType([propTypes.string, propTypes.node]),
  innerBefore: propTypes.node,
  innerAfter: propTypes.node,
  addonBefore: propTypes.node,
  addonAfter: propTypes.node,
  addonTextBefore: propTypes.node,
  addonTextAfter: propTypes.node,
  autoComplete: propTypes.string,
  autoFocus: propTypes.bool,
  inputRender: propTypes.func,
  extra: propTypes.node,
  innerBeforeClassName: propTypes.string,
  innerAfterClassName: propTypes.string,
  isPreview: propTypes.bool,
  renderPreview: propTypes.func
}), _class$16.defaultProps = _extends$5({}, Base$5.defaultProps, {
  autoComplete: "off",
  hasBorder: true,
  isPreview: false,
  onPressEnter: func$1.noop,
  inputRender: function inputRender2(el) {
    return el;
  }
}), _temp$12);
var _class$17, _temp2$4;
function preventDefault$4(e2) {
  e2.preventDefault();
}
var Password$1 = (_temp2$4 = _class$17 = function(_Input) {
  _inherits$1(Password2, _Input);
  function Password2() {
    var _temp3, _this2, _ret;
    _classCallCheck$1(this, Password2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp3 = (_this2 = _possibleConstructorReturn$1(this, _Input.call.apply(_Input, [this].concat(args))), _this2), _this2.state = {
      hint: "eye",
      htmlType: "password"
    }, _this2.toggleEye = function(e2) {
      e2.preventDefault();
      var eyeClose = _this2.state.hint === "eye-close";
      _this2.setState({
        hint: eyeClose ? "eye" : "eye-close",
        htmlType: eyeClose || !_this2.props.showToggle ? "password" : "text"
      });
    }, _temp3), _possibleConstructorReturn$1(_this2, _ret);
  }
  Password2.prototype.render = function render2() {
    var _props = this.props, showToggle = _props.showToggle, others = _objectWithoutProperties$2(_props, ["showToggle"]);
    var _state = this.state, hint = _state.hint, htmlType = _state.htmlType;
    var extra = showToggle ? React.createElement(NextIcon, {
      type: hint,
      onClick: this.toggleEye,
      onMouseDown: preventDefault$4
    }) : null;
    return React.createElement(Input$2, _extends$5({}, others, {extra, htmlType}));
  };
  return Password2;
}(Input$2), _class$17.getDerivedStateFromProps = Input$2.getDerivedStateFromProps, _class$17.propTypes = _extends$5({}, Input$2.propTypes, {
  showToggle: propTypes.bool
}), _class$17.defaultProps = _extends$5({}, Input$2.defaultProps, {
  showToggle: true
}), _temp2$4);
var _class$18, _temp$13, _initialiseProps$5;
function onNextFrame$1(cb) {
  if (window.requestAnimationFrame) {
    return window.requestAnimationFrame(cb);
  }
  return window.setTimeout(cb, 1);
}
function clearNextFrameAction$1(nextFrameId) {
  if (window.cancelAnimationFrame) {
    window.cancelAnimationFrame(nextFrameId);
  } else {
    window.clearTimeout(nextFrameId);
  }
}
var isMacSafari$1 = typeof navigator !== "undefined" && navigator && navigator.userAgent ? navigator.userAgent.match(/^((?!chrome|android|windows).)*safari/i) : false;
var hiddenStyle$1 = {
  visibility: "hidden",
  position: "absolute",
  zIndex: "-1000",
  top: "-1000px",
  overflowY: "hidden",
  left: 0,
  right: 0
};
var TextArea$1 = (_temp$13 = _class$18 = function(_Base) {
  _inherits$1(TextArea2, _Base);
  function TextArea2(props) {
    _classCallCheck$1(this, TextArea2);
    var _this2 = _possibleConstructorReturn$1(this, _Base.call(this, props));
    _initialiseProps$5.call(_this2);
    var value = void 0;
    if ("value" in props) {
      value = props.value;
    } else {
      value = props.defaultValue;
    }
    _this2.state = {
      value: typeof value === "undefined" ? "" : value
    };
    return _this2;
  }
  TextArea2.prototype.componentDidMount = function componentDidMount() {
    var autoHeight = this.props.autoHeight;
    if (autoHeight) {
      if ((typeof autoHeight === "undefined" ? "undefined" : _typeof$1(autoHeight)) === "object") {
        this.setState(this._getMinMaxHeight(autoHeight, this.state.value));
      } else {
        this.setState({
          height: this._getHeight(this.state.value),
          overflowY: "hidden"
        });
      }
    }
  };
  TextArea2.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.autoHeight && this.props.value !== prevProps.value) {
      this._resizeTextArea(this.props.value);
    }
  };
  TextArea2.prototype._getMinMaxHeight = function _getMinMaxHeight(_ref, value) {
    var minRows = _ref.minRows, maxRows = _ref.maxRows;
    var node = ReactDOM.findDOMNode(this.helpRef);
    if (!node) {
      return {};
    }
    node.setAttribute("rows", minRows);
    var minHeight = node.clientHeight;
    node.setAttribute("rows", maxRows);
    var maxHeight = node.clientHeight;
    node.setAttribute("rows", "1");
    var height = this._getHeight(value);
    return {
      minHeight,
      maxHeight,
      height,
      overflowY: height <= maxHeight ? "hidden" : void 0
    };
  };
  TextArea2.prototype._getHeight = function _getHeight(value) {
    var node = ReactDOM.findDOMNode(this.helpRef);
    if (!node) {
      return 0;
    }
    node.value = value;
    return node.scrollHeight;
  };
  TextArea2.prototype.ieHack = function ieHack(value) {
    if (env$3.ieVersion === 9 && this.props.maxLength) {
      var maxLength = parseInt(this.props.maxLength);
      var len = this.getValueLength(value, true);
      if (len > maxLength && this.props.cutString) {
        value = value.replace(/\n/g, "\n\n");
        value = value.substr(0, maxLength);
        value = value.replace(/\n\n/g, "\n");
      }
    }
    this.props.autoHeight && this._resizeTextArea(value);
    return value;
  };
  TextArea2.prototype.getValueLength = function getValueLength(value) {
    var _props = this.props, maxLength = _props.maxLength, cutString = _props.cutString;
    var nv = "" + value;
    var strLen = this.props.getValueLength(nv);
    if (typeof strLen !== "number") {
      strLen = nv.length;
    }
    if (env$3.ieVersion || isMacSafari$1) {
      strLen = strLen + nv.split("\n").length - 1;
      if (strLen > maxLength && cutString) {
        strLen = maxLength;
      }
    }
    return strLen;
  };
  TextArea2.prototype.saveTextAreaRef = function saveTextAreaRef(textArea) {
    this.inputRef = textArea;
  };
  TextArea2.prototype.saveHelpRef = function saveHelpRef(ref) {
    this.helpRef = ref;
  };
  TextArea2.prototype.render = function render2() {
    var _classNames, _classNames2;
    var _props2 = this.props, rows = _props2.rows, style = _props2.style, className = _props2.className, autoHeight = _props2.autoHeight, isPreview = _props2.isPreview, renderPreview = _props2.renderPreview, prefix2 = _props2.prefix, rtl = _props2.rtl, hasBorder = _props2.hasBorder, size = _props2.size;
    var cls = classnames$1(this.getClass(), (_classNames = {}, _classNames["" + prefix2 + size] = size === "large" || false, _classNames[prefix2 + "input-textarea"] = true, _classNames[prefix2 + "noborder"] = !hasBorder, _classNames[className] = !!className, _classNames));
    var props = this.getProps();
    var dataProps = obj$1.pickAttrsWith(this.props, "data-");
    var others = obj$1.pickOthers(_extends$5({}, dataProps, TextArea2.propTypes), this.props);
    var textareStyle = _extends$5({}, props.style, {
      height: this.state.height,
      minHeight: this.state.minHeight,
      maxHeight: this.state.maxHeight,
      overflowY: this.state.overflowY
    });
    var previewCls = classnames$1((_classNames2 = {}, _classNames2[prefix2 + "input-textarea"] = true, _classNames2[prefix2 + "form-preview"] = true, _classNames2[className] = !!className, _classNames2));
    var wrapStyle = autoHeight ? _extends$5({}, style, {position: "relative"}) : style;
    if (isPreview) {
      var value = props.value;
      if ("renderPreview" in this.props) {
        return React.createElement("div", _extends$5({}, others, {className: previewCls}), renderPreview(value, this.props));
      }
      return React.createElement("div", _extends$5({}, others, {className: previewCls}), value.split("\n").map(function(data, i) {
        return React.createElement("p", {key: "p-" + i}, data);
      }));
    }
    return React.createElement("span", _extends$5({className: cls, style: wrapStyle, dir: rtl ? "rtl" : void 0}, dataProps), React.createElement("textarea", _extends$5({}, others, props, {
      "data-real": true,
      rows,
      style: textareStyle,
      ref: this.saveRef.bind(this),
      onKeyDown: this.onKeyDown.bind(this)
    })), autoHeight ? React.createElement("textarea", {
      "data-fake": true,
      ref: this.saveHelpRef.bind(this),
      style: _extends$5({}, props.style, hiddenStyle$1),
      rows: "1"
    }) : null, this.renderControl());
  };
  return TextArea2;
}(Base$5), _class$18.getDerivedStateFromProps = Base$5.getDerivedStateFromProps, _class$18.propTypes = _extends$5({}, Base$5.propTypes, {
  hasBorder: propTypes.bool,
  state: propTypes.oneOf(["error", "warning"]),
  autoHeight: propTypes.oneOfType([propTypes.bool, propTypes.object]),
  rows: propTypes.number,
  isPreview: propTypes.bool,
  renderPreview: propTypes.func
}), _class$18.defaultProps = _extends$5({}, Base$5.defaultProps, {
  hasBorder: true,
  isPreview: false,
  rows: 4,
  autoHeight: false
}), _initialiseProps$5 = function _initialiseProps7() {
  var _this2 = this;
  this._resizeTextArea = function(value) {
    if (_this2.nextFrameActionId) {
      clearNextFrameAction$1(_this2.nextFrameActionId);
    }
    _this2.nextFrameActionId = onNextFrame$1(function() {
      var height = _this2._getHeight(value);
      var maxHeight = _this2.state.maxHeight ? _this2.state.maxHeight : Infinity;
      _this2.setState({
        height: _this2._getHeight(value),
        overflowY: height <= maxHeight ? "hidden" : void 0
      });
    });
  };
}, _temp$13);
Input$2.Password = NextConfigProvider.config(Password$1, {
  exportNames: ["getInputNode", "focus"]
});
Input$2.TextArea = NextConfigProvider.config(TextArea$1, {
  exportNames: ["getInputNode", "focus"]
});
Input$2.Group = Group$9;
var NextInput = NextConfigProvider.config(Input$2, {
  exportNames: ["getInputNode", "focus"]
});
var _class$19, _temp$14;
var bindCtx$m = func$1.bindCtx;
var pickOthers$8 = obj$1.pickOthers;
var Item$2 = (_temp$14 = _class$19 = function(_Component) {
  _inherits$1(Item2, _Component);
  function Item2(props) {
    _classCallCheck$1(this, Item2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    bindCtx$m(_this2, ["handleClick", "handleKeyDown"]);
    return _this2;
  }
  Item2.prototype.componentDidMount = function componentDidMount() {
    this.itemNode = findDOMNode(this);
    var _props = this.props, parentMode = _props.parentMode, root = _props.root, menu = _props.menu;
    if (menu) {
      this.menuNode = findDOMNode(menu);
    } else if (parentMode === "popup") {
      this.menuNode = this.itemNode.parentNode;
    } else {
      this.menuNode = findDOMNode(root);
      var _root$props = root.props, prefix2 = _root$props.prefix, header = _root$props.header, footer = _root$props.footer;
      if (header || footer) {
        this.menuNode = this.menuNode.querySelector("." + prefix2 + "menu-content");
      }
    }
    this.setFocus();
  };
  Item2.prototype.componentDidUpdate = function componentDidUpdate() {
    this.setFocus();
  };
  Item2.prototype.focusable = function focusable() {
    var _props2 = this.props, root = _props2.root, type = _props2.type, disabled = _props2.disabled;
    var focusable2 = root.props.focusable;
    return focusable2 && (type === "submenu" || !disabled);
  };
  Item2.prototype.getFocused = function getFocused() {
    var _props3 = this.props, _key = _props3._key, root = _props3.root;
    var focusedKey = root.state.focusedKey;
    return focusedKey === _key;
  };
  Item2.prototype.setFocus = function setFocus() {
    var focused = this.getFocused();
    if (focused) {
      if (this.focusable()) {
        this.itemNode.focus({preventScroll: true});
      }
      if (this.menuNode && this.menuNode.scrollHeight > this.menuNode.clientHeight) {
        var scrollBottom = this.menuNode.clientHeight + this.menuNode.scrollTop;
        var itemBottom = this.itemNode.offsetTop + this.itemNode.offsetHeight;
        if (itemBottom > scrollBottom) {
          this.menuNode.scrollTop = itemBottom - this.menuNode.clientHeight;
        } else if (this.itemNode.offsetTop < this.menuNode.scrollTop) {
          this.menuNode.scrollTop = this.itemNode.offsetTop;
        }
      }
    }
  };
  Item2.prototype.handleClick = function handleClick(e2) {
    e2.stopPropagation();
    var _props4 = this.props, _key = _props4._key, root = _props4.root, disabled = _props4.disabled;
    if (!disabled) {
      root.handleItemClick(_key, this, e2);
      this.props.onClick && this.props.onClick(e2);
    } else {
      e2.preventDefault();
    }
  };
  Item2.prototype.handleKeyDown = function handleKeyDown(e2) {
    var _props5 = this.props, _key = _props5._key, root = _props5.root, type = _props5.type;
    if (this.focusable()) {
      root.handleItemKeyDown(_key, type, this, e2);
      switch (e2.keyCode) {
        case KEYCODE$1.ENTER: {
          if (!(type === "submenu")) {
            this.handleClick(e2);
          }
          break;
        }
      }
    }
    this.props.onKeyDown && this.props.onKeyDown(e2);
  };
  Item2.prototype.getTitle = function getTitle(children) {
    if (typeof children === "string") {
      return children;
    }
    return;
  };
  Item2.prototype.render = function render2() {
    var _cx;
    var _props6 = this.props, inlineLevel = _props6.inlineLevel, root = _props6.root, replaceClassName2 = _props6.replaceClassName, groupIndent = _props6.groupIndent, component = _props6.component, disabled = _props6.disabled, className = _props6.className, children = _props6.children, needIndent = _props6.needIndent, parentMode = _props6.parentMode, _key = _props6._key;
    var others = pickOthers$8(Object.keys(Item2.propTypes), this.props);
    var _root$props2 = root.props, prefix2 = _root$props2.prefix, focusable = _root$props2.focusable, inlineIndent = _root$props2.inlineIndent, itemClassName = _root$props2.itemClassName, rtl = _root$props2.rtl;
    var focused = this.getFocused();
    var newClassName = replaceClassName2 ? className : classnames$1((_cx = {}, _cx[prefix2 + "menu-item"] = true, _cx[prefix2 + "disabled"] = disabled, _cx[prefix2 + "focused"] = !focusable && focused, _cx[itemClassName] = !!itemClassName, _cx[className] = !!className, _cx));
    if (disabled) {
      others["aria-disabled"] = true;
      others["aria-hidden"] = true;
    }
    others.tabIndex = root.state.tabbableKey === _key ? "0" : "-1";
    if (parentMode === "inline" && inlineLevel > 1 && inlineIndent > 0 && needIndent) {
      var _extends2;
      var paddingProp = rtl ? "paddingRight" : "paddingLeft";
      others.style = _extends$5({}, others.style || {}, (_extends2 = {}, _extends2[paddingProp] = inlineLevel * inlineIndent - (groupIndent || 0) * 0.4 * inlineIndent + "px", _extends2));
    }
    var TagName = component;
    var role = "menuitem";
    if ("selectMode" in root.props) {
      role = "option";
    }
    return React.createElement(TagName, _extends$5({
      role,
      title: this.getTitle(children)
    }, others, {
      className: newClassName,
      onClick: this.handleClick,
      onKeyDown: this.handleKeyDown
    }), React.createElement("div", {className: prefix2 + "menu-item-inner"}, children));
  };
  return Item2;
}(Component), _class$19.propTypes = {
  _key: propTypes.string,
  level: propTypes.number,
  inlineLevel: propTypes.number,
  groupIndent: propTypes.number,
  root: propTypes.object,
  menu: propTypes.any,
  parent: propTypes.object,
  parentMode: propTypes.oneOf(["inline", "popup"]),
  type: propTypes.oneOf(["submenu", "item"]),
  component: propTypes.string,
  disabled: propTypes.bool,
  className: propTypes.string,
  onClick: propTypes.func,
  onKeyDown: propTypes.func,
  needIndent: propTypes.bool,
  replaceClassName: propTypes.bool
}, _class$19.defaultProps = {
  component: "li",
  groupIndent: 0,
  replaceClassName: false,
  needIndent: true
}, _temp$14);
Item$2.displayName = "Item";
var _class$1a, _temp$15;
var bindCtx$n = func$1.bindCtx;
var pickOthers$9 = obj$1.pickOthers;
var SelectableItem$1 = (_temp$15 = _class$1a = function(_Component) {
  _inherits$1(SelectableItem2, _Component);
  function SelectableItem2(props) {
    _classCallCheck$1(this, SelectableItem2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    bindCtx$n(_this2, ["handleKeyDown", "handleClick"]);
    return _this2;
  }
  SelectableItem2.prototype.getSelected = function getSelected() {
    var _props = this.props, _key = _props._key, root = _props.root, selected = _props.selected;
    var selectMode = root.props.selectMode;
    var selectedKeys = root.state.selectedKeys;
    return selected || !!selectMode && selectedKeys.indexOf(_key) > -1;
  };
  SelectableItem2.prototype.handleSelect = function handleSelect(e2) {
    var _props2 = this.props, _key = _props2._key, root = _props2.root, onSelect = _props2.onSelect;
    if (onSelect) {
      onSelect(!this.getSelected(), this, e2);
    } else {
      root.handleSelect(_key, !this.getSelected(), this);
    }
  };
  SelectableItem2.prototype.handleKeyDown = function handleKeyDown(e2) {
    if (e2.keyCode === KEYCODE$1.SPACE && !this.props.disabled) {
      this.handleSelect(e2);
    }
    this.props.onKeyDown && this.props.onKeyDown(e2);
  };
  SelectableItem2.prototype.handleClick = function handleClick(e2) {
    this.handleSelect(e2);
    this.props.onClick && this.props.onClick(e2);
  };
  SelectableItem2.prototype.renderSelectedIcon = function renderSelectedIcon(selected) {
    var _cx;
    var _props3 = this.props, root = _props3.root, inlineIndent = _props3.inlineIndent, needIndent = _props3.needIndent, hasSelectedIcon = _props3.hasSelectedIcon, isSelectIconRight = _props3.isSelectIconRight, type = _props3.type;
    var _root$props = root.props, prefix2 = _root$props.prefix, rootSelectedIcon = _root$props.hasSelectedIcon, rootSelectIconRight = _root$props.isSelectIconRight, icons = _root$props.icons;
    var iconsSelect = icons.select;
    if (!isValidElement(icons.select) && icons.select) {
      iconsSelect = React.createElement("span", null, icons.select);
    }
    var cls = classnames$1((_cx = {}, _cx[prefix2 + "menu-icon-selected"] = true, _cx[prefix2 + "menu-symbol-icon-selected"] = !iconsSelect, _cx[prefix2 + "menu-icon-right"] = ("isSelectIconRight" in this.props ? isSelectIconRight : rootSelectIconRight) && type !== "submenu", _cx));
    return ("hasSelectedIcon" in this.props ? hasSelectedIcon : rootSelectedIcon) && selected ? React.cloneElement(iconsSelect || React.createElement(NextIcon, {type: "select"}), {
      style: needIndent && inlineIndent > 0 ? {left: inlineIndent + "px"} : null,
      className: cls
    }) : null;
  };
  SelectableItem2.prototype.render = function render2() {
    var _cx2;
    var _props4 = this.props, _key = _props4._key, root = _props4.root, className = _props4.className, disabled = _props4.disabled, helper = _props4.helper, children = _props4.children, needIndent = _props4.needIndent;
    var prefix2 = root.props.prefix;
    var others = pickOthers$9(Object.keys(SelectableItem2.propTypes), this.props);
    var selected = this.getSelected();
    var newProps = _extends$5({
      _key,
      root,
      disabled,
      type: "item",
      className: classnames$1((_cx2 = {}, _cx2[prefix2 + "selected"] = selected, _cx2[className] = !!className, _cx2)),
      onKeyDown: this.handleKeyDown,
      onClick: !disabled ? this.handleClick : this.props.onClick,
      needIndent
    }, others);
    if (!("title" in newProps) && typeof children === "string") {
      newProps.title = children;
    }
    var textProps = {};
    if ("selectMode" in root.props) {
      textProps["aria-selected"] = selected;
    }
    return React.createElement(Item$2, newProps, this.renderSelectedIcon(selected), React.createElement("span", _extends$5({className: prefix2 + "menu-item-text"}, textProps), children), helper ? React.createElement("div", {className: prefix2 + "menu-item-helper"}, helper) : null);
  };
  return SelectableItem2;
}(Component), _class$1a.menuChildType = "item", _class$1a.propTypes = {
  _key: propTypes.string,
  root: propTypes.object,
  selected: propTypes.bool,
  onSelect: propTypes.func,
  inlineIndent: propTypes.number,
  disabled: propTypes.bool,
  helper: propTypes.node,
  children: propTypes.node,
  className: propTypes.string,
  onKeyDown: propTypes.func,
  onClick: propTypes.func,
  needIndent: propTypes.bool,
  hasSelectedIcon: propTypes.bool,
  isSelectIconRight: propTypes.bool,
  icons: propTypes.object
}, _class$1a.defaultProps = {
  disabled: false,
  needIndent: true,
  icons: {}
}, _temp$15);
SelectableItem$1.displayName = "SelectableItem";
var getWidth$1 = function getWidth3(elem) {
  var width = elem && typeof elem.getBoundingClientRect === "function" && elem.getBoundingClientRect().width;
  if (width) {
    width = +width.toFixed(6);
  }
  return width || 0;
};
var normalizeToArray$1 = function normalizeToArray3(items) {
  if (items) {
    if (Array.isArray(items)) {
      return items;
    }
    return [items];
  }
  return [];
};
var isSibling$1 = function isSibling3(currentPos, targetPos) {
  var currentNums = currentPos.split("-").slice(0, -1);
  var targetNums = targetPos.split("-").slice(0, -1);
  return currentNums.length === targetNums.length && currentNums.every(function(num, index2) {
    return num === targetNums[index2];
  });
};
var isAncestor$1 = function isAncestor3(currentPos, targetPos) {
  var currentNums = currentPos.split("-");
  var targetNums = targetPos.split("-");
  return currentNums.length > targetNums.length && targetNums.every(function(num, index2) {
    return num === currentNums[index2];
  });
};
var isAvailablePos$1 = function isAvailablePos3(refPos, targetPos, _p2n) {
  var _p2n$targetPos = _p2n[targetPos], type = _p2n$targetPos.type, disabled = _p2n$targetPos.disabled;
  return isSibling$1(refPos, targetPos) && (type === "item" && !disabled || type === "submenu");
};
var getFirstAvaliablelChildKey$1 = function getFirstAvaliablelChildKey3(parentPos, _p2n) {
  var pos = Object.keys(_p2n).find(function(p2) {
    return isAvailablePos$1(parentPos + "-0", p2, _p2n);
  });
  return pos ? _p2n[pos].key : null;
};
var getChildSelected$1 = function getChildSelected3(_ref) {
  var selectMode = _ref.selectMode, selectedKeys = _ref.selectedKeys, _k2n = _ref._k2n, _key = _ref._key;
  if (!_k2n) {
    return false;
  }
  var _keyPos = (_k2n[_key] && _k2n[_key].pos) + "-";
  return !!selectMode && selectedKeys.some(function(key) {
    return _k2n[key] && _k2n[key].pos.indexOf(_keyPos) === 0;
  });
};
var _class$1b, _temp$16;
var bindCtx$o = func$1.bindCtx;
var setStyle$3 = dom$1.setStyle;
var Popup$8 = NextOverlay.Popup;
var PopupItem$2 = (_temp$16 = _class$1b = function(_Component) {
  _inherits$1(PopupItem2, _Component);
  function PopupItem2(props) {
    _classCallCheck$1(this, PopupItem2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    bindCtx$o(_this2, ["handleOpen", "handlePopupOpen", "handlePopupClose", "getPopup"]);
    return _this2;
  }
  PopupItem2.prototype.getPopup = function getPopup(ref) {
    this.popup = ref;
  };
  PopupItem2.prototype.getOpen = function getOpen() {
    var _props = this.props, _key = _props._key, root = _props.root;
    var openKeys = root.state.openKeys;
    return openKeys.indexOf(_key) > -1;
  };
  PopupItem2.prototype.getPopupProps = function getPopupProps() {
    var popupProps = this.props.root.props.popupProps;
    if (typeof popupProps === "function") {
      popupProps = popupProps(this.props);
    }
    return popupProps;
  };
  PopupItem2.prototype.handleOpen = function handleOpen(open, triggerType, e2) {
    var _props2 = this.props, _key = _props2._key, root = _props2.root;
    root.handleOpen(_key, open, triggerType, e2);
    var popupProps = this.popupProps;
    popupProps.onVisibleChange && popupProps.onVisibleChange(open, triggerType, e2);
  };
  PopupItem2.prototype.handlePopupOpen = function handlePopupOpen() {
    var _props3 = this.props, root = _props3.root, level = _props3.level, align = _props3.align, autoWidth = _props3.autoWidth;
    var _root$props = root.props, rootPopupAutoWidth = _root$props.popupAutoWidth, rootPopupAlign = _root$props.popupAlign, direction = _root$props.direction;
    var popupAlign = align || rootPopupAlign;
    var popupAutoWidth = "autoWidth" in this.props ? autoWidth : rootPopupAutoWidth;
    try {
      var itemNode = findDOMNode(this);
      var menuNode = itemNode.parentNode;
      this.popupNode = this.popup.getInstance().overlay.getInstance().getContentNode();
      root.popupNodes.push(this.popupNode);
      if (popupAutoWidth) {
        var targetNode = direction === "hoz" && level === 1 ? itemNode : menuNode;
        if (targetNode.offsetWidth > this.popupNode.offsetWidth) {
          setStyle$3(this.popupNode, "width", targetNode.offsetWidth + "px");
        }
      }
      if (popupAlign === "outside" && !(direction === "hoz" && level === 1)) {
        setStyle$3(this.popupNode, "height", menuNode.offsetHeight + "px");
        setStyle$3(this.popupNode, "overflow-y", "scroll");
      }
      var popupProps = this.popupProps;
      popupProps.onOpen && popupProps.onOpen();
    } catch (error) {
      return null;
    }
  };
  PopupItem2.prototype.handlePopupClose = function handlePopupClose() {
    var root = this.props.root;
    var popupNodes = root.popupNodes;
    var index2 = popupNodes.indexOf(this.popupNode);
    index2 > -1 && popupNodes.splice(index2, 1);
    var popupProps = this.popupProps;
    popupProps.onClose && popupProps.onClose();
  };
  PopupItem2.prototype.renderItem = function renderItem(selectable, children, others) {
    var _cx;
    var _props4 = this.props, _key = _props4._key, root = _props4.root, level = _props4.level, inlineLevel = _props4.inlineLevel, label = _props4.label, className = _props4.className;
    var _root$props2 = root.props, prefix2 = _root$props2.prefix, selectMode = _root$props2.selectMode;
    var NewItem = selectable ? SelectableItem$1 : Item$2;
    var open = this.getOpen();
    var _root$state = root.state, selectedKeys = _root$state.selectedKeys, _k2n = _root$state._k2n;
    var isChildSelected = getChildSelected$1({
      _key,
      _k2n,
      selectMode,
      selectedKeys
    });
    var itemProps = {
      "aria-haspopup": true,
      "aria-expanded": open,
      _key,
      root,
      level,
      inlineLevel,
      type: "submenu"
    };
    itemProps.className = classnames$1((_cx = {}, _cx[prefix2 + "opened"] = open, _cx[prefix2 + "child-selected"] = isChildSelected, _cx[className] = !!className, _cx));
    return React.createElement(NewItem, _extends$5({}, itemProps, others), React.createElement("span", {className: prefix2 + "menu-item-text"}, label), children);
  };
  PopupItem2.prototype.renderPopup = function renderPopup(trigger, triggerType, positionProps, children) {
    var _this2 = this;
    var _props5 = this.props, root = _props5.root, level = _props5.level, selectable = _props5.selectable;
    var direction = root.props.direction;
    this.popupProps = this.getPopupProps();
    var open = this.getOpen();
    if (direction === "hoz" && level === 1 && selectable) {
      positionProps.target = function() {
        return findDOMNode(_this2);
      };
    }
    return React.createElement(Popup$8, _extends$5({
      ref: this.getPopup
    }, positionProps, this.popupProps, {
      canCloseByEsc: false,
      trigger,
      triggerType,
      visible: open,
      pinFollowBaseElementWhenFixed: true,
      onVisibleChange: this.handleOpen,
      onOpen: this.handlePopupOpen,
      onClose: this.handlePopupClose
    }), children);
  };
  PopupItem2.prototype.render = function render2() {
    var _this3 = this;
    var _props6 = this.props, root = _props6.root, level = _props6.level, hasSubMenu = _props6.hasSubMenu, selectableFromProps = _props6.selectable, children = _props6.children, triggerType = _props6.triggerType, align = _props6.align, noIcon = _props6.noIcon, rtl = _props6.rtl;
    var others = obj$1.pickOthers(Object.keys(PopupItem2.propTypes), this.props);
    var _root$props3 = root.props, prefix2 = _root$props3.prefix, selectMode = _root$props3.selectMode, direction = _root$props3.direction, rootPopupAlign = _root$props3.popupAlign, rootTriggerType = _root$props3.triggerType;
    var popupAlign = align || rootPopupAlign;
    var newTriggerType = triggerType || (hasSubMenu ? rootTriggerType : "hover");
    var newChildren = Array.isArray(children) ? children[0] : children;
    var selectable = selectMode && selectableFromProps;
    var triggerIsIcon = selectable && newTriggerType === "click";
    var open = this.getOpen();
    var positionProps = {};
    var arrowProps = void 0;
    if (direction === "hoz" && level === 1) {
      var _cx2;
      positionProps.align = "tl bl";
      positionProps.offset = [0, 0];
      arrowProps = {
        type: "arrow-down",
        className: classnames$1((_cx2 = {}, _cx2[prefix2 + "menu-hoz-icon-arrow"] = true, _cx2[prefix2 + "open"] = open, _cx2))
      };
    } else {
      if (popupAlign === "outside") {
        positionProps.target = function() {
          return findDOMNode(root);
        };
        positionProps.align = "tl tr";
        rtl ? positionProps.offset = [-2, 0] : positionProps.offset = [2, 0];
      } else {
        if (triggerIsIcon) {
          positionProps.target = function() {
            return findDOMNode(_this3);
          };
        }
        positionProps.align = "tl tr";
        rtl ? positionProps.offset = [2, -8] : positionProps.offset = [-2, -8];
      }
      arrowProps = {
        type: "arrow-right",
        className: prefix2 + "menu-icon-arrow " + prefix2 + "menu-symbol-popupfold"
      };
    }
    var arrow = React.createElement(NextIcon, arrowProps);
    var trigger = triggerIsIcon ? arrow : this.renderItem(selectable, noIcon ? null : arrow, others);
    var popup = this.renderPopup(trigger, newTriggerType, positionProps, newChildren);
    return triggerIsIcon ? this.renderItem(selectable, popup, others) : popup;
  };
  return PopupItem2;
}(Component), _class$1b.menuChildType = "submenu", _class$1b.propTypes = {
  _key: propTypes.string,
  root: propTypes.object,
  level: propTypes.number,
  hasSubMenu: propTypes.bool,
  noIcon: propTypes.bool,
  rtl: propTypes.bool,
  selectable: propTypes.bool,
  label: propTypes.node,
  children: propTypes.node,
  className: propTypes.string,
  triggerType: propTypes.oneOf(["click", "hover"]),
  align: propTypes.oneOf(["outside", "follow"]),
  autoWidth: propTypes.bool
}, _class$1b.defaultProps = {
  selectable: false,
  noIcon: false
}, _temp$16);
PopupItem$2.displayName = "PopupItem";
var _class$1c, _temp$17;
var Expand$3 = Animate$1.Expand;
var bindCtx$p = func$1.bindCtx;
var SubMenu$1 = (_temp$17 = _class$1c = function(_Component) {
  _inherits$1(SubMenu2, _Component);
  function SubMenu2(props) {
    _classCallCheck$1(this, SubMenu2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    bindCtx$p(_this2, ["handleMouseEnter", "handleMouseLeave", "handleClick", "handleOpen", "afterLeave"]);
    return _this2;
  }
  SubMenu2.prototype.componentDidMount = function componentDidMount() {
    this.itemNode = findDOMNode(this);
  };
  SubMenu2.prototype.afterLeave = function afterLeave() {
    var _props = this.props, focused = _props.focused, root = _props.root;
    var focusable = root.props.focusable;
    if (focusable && focused) {
      this.itemNode.focus();
    }
  };
  SubMenu2.prototype.getOpen = function getOpen() {
    var _props2 = this.props, _key = _props2._key, root = _props2.root;
    var openKeys = root.state.openKeys;
    return openKeys.indexOf(_key) > -1;
  };
  SubMenu2.prototype.handleMouseEnter = function handleMouseEnter(e2) {
    this.handleOpen(true);
    this.props.onMouseEnter && this.props.onMouseEnter(e2);
  };
  SubMenu2.prototype.handleMouseLeave = function handleMouseLeave(e2) {
    this.handleOpen(false);
    this.props.onMouseLeave && this.props.onMouseLeave(e2);
  };
  SubMenu2.prototype.handleClick = function handleClick(e2) {
    var _props3 = this.props, root = _props3.root, selectable = _props3.selectable;
    var selectMode = root.props.selectMode;
    if (selectMode && selectable) {
      e2.stopPropagation();
    }
    var open = this.getOpen();
    this.handleOpen(!open);
  };
  SubMenu2.prototype.handleOpen = function handleOpen(open, triggerType, e2) {
    var _props4 = this.props, _key = _props4._key, root = _props4.root;
    root.handleOpen(_key, open, triggerType, e2);
  };
  SubMenu2.prototype.passParentToChildren = function passParentToChildren(children) {
    var _this2 = this;
    var _props5 = this.props, mode = _props5.mode, root = _props5.root;
    return Children.map(children, function(child) {
      if (typeof child !== "function" && (typeof child === "undefined" ? "undefined" : _typeof$1(child)) !== "object") {
        return child;
      }
      return cloneElement(child, {
        parent: _this2,
        parentMode: mode || root.props.mode
      });
    });
  };
  SubMenu2.prototype.renderInline = function renderInline() {
    var _cx, _cx2, _cx3, _cx4;
    var _props6 = this.props, _key = _props6._key, level = _props6.level, inlineLevel = _props6.inlineLevel, root = _props6.root, className = _props6.className, selectableFromProps = _props6.selectable, label = _props6.label, children = _props6.children, noIcon = _props6.noIcon, subMenuContentClassName = _props6.subMenuContentClassName, propsTriggerType = _props6.triggerType, parentMode = _props6.parentMode;
    var _root$props = root.props, prefix2 = _root$props.prefix, selectMode = _root$props.selectMode, rootTriggerType = _root$props.triggerType, inlineArrowDirection = _root$props.inlineArrowDirection, expandAnimation = _root$props.expandAnimation, rtl = _root$props.rtl;
    var triggerType = propsTriggerType || rootTriggerType;
    var open = this.getOpen();
    var _root$state = root.state, selectedKeys = _root$state.selectedKeys, _k2n = _root$state._k2n;
    var isChildSelected = getChildSelected$1({
      _key,
      _k2n,
      selectMode,
      selectedKeys
    });
    var others = obj$1.pickOthers(Object.keys(SubMenu2.propTypes), this.props);
    var liProps = {
      className: classnames$1((_cx = {}, _cx[prefix2 + "menu-sub-menu-wrapper"] = true, _cx[className] = !!className, _cx))
    };
    var itemProps = {
      "aria-expanded": open,
      _key,
      level,
      role: "listitem",
      inlineLevel,
      root,
      type: "submenu",
      component: "div",
      parentMode,
      className: classnames$1((_cx2 = {}, _cx2[prefix2 + "opened"] = open, _cx2[prefix2 + "child-selected"] = isChildSelected, _cx2))
    };
    if (typeof label === "string") {
      itemProps.title = label;
    }
    var arrorProps = {
      type: inlineArrowDirection === "right" ? "arrow-right" : "arrow-down",
      className: classnames$1((_cx3 = {}, _cx3[prefix2 + "menu-icon-arrow"] = true, _cx3[prefix2 + "menu-icon-arrow-down"] = inlineArrowDirection === "down", _cx3[prefix2 + "menu-icon-arrow-right"] = inlineArrowDirection === "right", _cx3[prefix2 + "open"] = open, _cx3))
    };
    var selectable = !!selectMode && selectableFromProps;
    var NewItem = selectable ? SelectableItem$1 : Item$2;
    if (triggerType === "hover") {
      liProps.onMouseEnter = this.handleMouseEnter;
      liProps.onMouseLeave = this.handleMouseLeave;
    } else if (selectable) {
      arrorProps.onClick = this.handleClick;
    } else {
      itemProps.onClick = this.handleClick;
    }
    var newSubMenuContentClassName = classnames$1((_cx4 = {}, _cx4[prefix2 + "menu-sub-menu"] = true, _cx4[subMenuContentClassName] = !!subMenuContentClassName, _cx4));
    var roleMenu = "menu", roleItem = "menuitem";
    if ("selectMode" in root.props) {
      roleMenu = "listbox";
      roleItem = "option";
    }
    var subMenu = open ? React.createElement("ul", {
      role: roleMenu,
      dir: rtl ? "rtl" : void 0,
      className: newSubMenuContentClassName
    }, this.passParentToChildren(children)) : null;
    return React.createElement("li", _extends$5({role: roleItem}, others, liProps), React.createElement(NewItem, itemProps, React.createElement("span", {className: prefix2 + "menu-item-text"}, label), noIcon ? null : React.createElement(NextIcon, arrorProps)), expandAnimation ? React.createElement(Expand$3, {
      animationAppear: false,
      afterLeave: this.afterLeave
    }, subMenu) : subMenu);
  };
  SubMenu2.prototype.renderPopup = function renderPopup() {
    var _cx5;
    var _props7 = this.props, children = _props7.children, subMenuContentClassName = _props7.subMenuContentClassName, noIcon = _props7.noIcon, others = _objectWithoutProperties$2(_props7, ["children", "subMenuContentClassName", "noIcon"]);
    var root = this.props.root;
    var _root$props2 = root.props, prefix2 = _root$props2.prefix, popupClassName = _root$props2.popupClassName, popupStyle = _root$props2.popupStyle, rtl = _root$props2.rtl;
    var newClassName = classnames$1((_cx5 = {}, _cx5[prefix2 + "menu"] = true, _cx5[prefix2 + "ver"] = true, _cx5[popupClassName] = !!popupClassName, _cx5[subMenuContentClassName] = !!subMenuContentClassName, _cx5));
    others.rtl = rtl;
    return React.createElement(PopupItem$2, _extends$5({}, others, {noIcon, hasSubMenu: true}), React.createElement("ul", {
      role: "menu",
      dir: rtl ? "rtl" : void 0,
      className: newClassName,
      style: popupStyle
    }, this.passParentToChildren(children)));
  };
  SubMenu2.prototype.render = function render2() {
    var _props8 = this.props, mode = _props8.mode, root = _props8.root;
    var newMode = mode || root.props.mode;
    return newMode === "popup" ? this.renderPopup() : this.renderInline();
  };
  return SubMenu2;
}(Component), _class$1c.menuChildType = "submenu", _class$1c.propTypes = {
  _key: propTypes.string,
  root: propTypes.object,
  level: propTypes.number,
  inlineLevel: propTypes.number,
  groupIndent: propTypes.number,
  noIcon: propTypes.bool,
  label: propTypes.node,
  selectable: propTypes.bool,
  mode: propTypes.oneOf(["inline", "popup"]),
  children: propTypes.node,
  onMouseEnter: propTypes.func,
  onMouseLeave: propTypes.func,
  subMenuContentClassName: propTypes.string,
  triggerType: propTypes.oneOf(["click", "hover"]),
  align: propTypes.oneOf(["outside", "follow"]),
  parentMode: propTypes.oneOf(["inline", "popup"]),
  parent: propTypes.any
}, _class$1c.defaultProps = {
  groupIndent: 0,
  noIcon: false,
  selectable: false
}, _temp$17);
SubMenu$1.displayName = "SubMenu";
var _class$1d, _temp$18;
var bindCtx$q = func$1.bindCtx;
var pickOthers$a = obj$1.pickOthers, isNil$3 = obj$1.isNil;
var noop$r = function noop11() {
};
var MENUITEM_OVERFLOWED_CLASSNAME$1 = "menuitem-overflowed";
var getIndicatorsItem$1 = function getIndicatorsItem3(items, isPlaceholder) {
  var _cx;
  var prefix2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
  var renderMore = arguments[3];
  var moreCls = classnames$1((_cx = {}, _cx[prefix2 + "menu-more"] = true, _cx));
  var style = {};
  if (isPlaceholder) {
    style.visibility = "hidden";
    style.display = "inline-block";
  } else if (items && items.length === 0) {
    style.display = "none";
    style.visibility = "unset";
  }
  if (renderMore && typeof renderMore === "function") {
    var moreNode = renderMore(items);
    var renderMoreCls = classnames$1(moreCls, moreNode.props && moreNode.props.className);
    return React.isValidElement(moreNode) ? React.cloneElement(moreNode, {
      style,
      className: renderMoreCls
    }) : moreNode;
  }
  return React.createElement(SubMenu$1, {label: "···", noIcon: true, className: moreCls, style}, items);
};
var addIndicators$1 = function addIndicators3(_ref) {
  var children = _ref.children, lastVisibleIndex = _ref.lastVisibleIndex, prefix2 = _ref.prefix, renderMore = _ref.renderMore;
  var arr = [];
  children.forEach(function(child, index2) {
    if (!child) {
      return;
    }
    var overflowedItems = [];
    if (index2 > lastVisibleIndex) {
      child = React.cloneElement(child, {
        key: "more-" + index2,
        style: {display: "none"},
        className: (child && child.className || "") + " " + MENUITEM_OVERFLOWED_CLASSNAME$1
      });
    }
    if (index2 === lastVisibleIndex + 1) {
      overflowedItems = children.slice(lastVisibleIndex + 1).map(function(c2, i) {
        return React.cloneElement(c2, {
          key: "more-" + index2 + "-" + i
        });
      });
      arr.push(getIndicatorsItem$1(overflowedItems, false, prefix2, renderMore));
    }
    arr.push(child);
  });
  arr.push(getIndicatorsItem$1([], true, prefix2, renderMore));
  return arr;
};
var getNewChildren$1 = function getNewChildren3(_ref2) {
  var children = _ref2.children, root = _ref2.root, mode = _ref2.mode, lastVisibleIndex = _ref2.lastVisibleIndex, hozInLine = _ref2.hozInLine, prefix2 = _ref2.prefix, renderMore = _ref2.renderMore;
  var k2n = {};
  var p2n = {};
  var arr = hozInLine ? addIndicators$1({
    children,
    lastVisibleIndex,
    prefix: prefix2,
    renderMore
  }) : children;
  var loop = function loop2(children2, posPrefix) {
    var indexWrapper = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {index: 0};
    var inlineLevel = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1;
    var keyArray = [];
    return Children.map(children2, function(child) {
      if (child && (typeof child.type === "function" || _typeof$1(child.type) === "object") && "menuChildType" in child.type) {
        var newChild = void 0;
        var pos = void 0;
        var props = {root};
        if (["item", "submenu", "group"].indexOf(child.type.menuChildType) > -1) {
          pos = posPrefix + "-" + indexWrapper.index++;
          var key = typeof child.key === "string" ? child.key : pos;
          if (keyArray.indexOf(key) > -1) {
            return;
          }
          keyArray.push(key);
          var level = pos.split("-").length - 1;
          k2n[key] = p2n[pos] = {
            key,
            pos,
            mode: child.props.mode,
            type: child.type.menuChildType,
            disabled: child.props.disabled,
            label: child.props.label || child.props.children
          };
          props.level = level;
          props.inlineLevel = inlineLevel;
          props._key = key;
          props.groupIndent = child.type.menuChildType === "group" ? 1 : 0;
        }
        var childLevel = (child.props.mode || mode) === "popup" ? 1 : inlineLevel + 1;
        switch (child.type.menuChildType) {
          case "submenu":
            newChild = cloneElement(child, props, loop2(child.props.children, pos, void 0, childLevel));
            break;
          case "group":
            newChild = cloneElement(child, props, loop2(child.props.children, posPrefix, indexWrapper, props.level));
            break;
          case "item":
          case "divider":
            newChild = cloneElement(child, props);
            break;
          default:
            newChild = child;
            break;
        }
        return newChild;
      }
      return child;
    });
  };
  var newChildren = loop(arr, "0");
  return {
    newChildren,
    _k2n: k2n,
    _p2n: p2n
  };
};
var Menu$4 = (_temp$18 = _class$1d = function(_Component) {
  _inherits$1(Menu2, _Component);
  function Menu2(props) {
    _classCallCheck$1(this, Menu2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    _this2.getUpdateChildren = function() {
      var _this$state = _this2.state, root = _this$state.root, lastVisibleIndex = _this$state.lastVisibleIndex;
      return getNewChildren$1(_extends$5({
        root,
        lastVisibleIndex
      }, _this2.props));
    };
    _this2.menuContentRef = function(ref) {
      _this2.menuContent = ref;
    };
    _this2.menuHeaderRef = function(ref) {
      _this2.menuHeader = ref;
    };
    _this2.menuFooterRef = function(ref) {
      _this2.menuFooter = ref;
    };
    var _this$props = _this2.props, prefix2 = _this$props.prefix, children = _this$props.children, selectedKeys = _this$props.selectedKeys, defaultSelectedKeys = _this$props.defaultSelectedKeys, focusedKey = _this$props.focusedKey, focusable = _this$props.focusable, autoFocus = _this$props.autoFocus, hozInLine = _this$props.hozInLine, renderMore = _this$props.renderMore;
    _this2.state = {
      lastVisibleIndex: void 0
    };
    var _getNewChildren = getNewChildren$1(_extends$5({
      root: _this2
    }, _this2.props)), newChildren = _getNewChildren.newChildren, _k2n = _getNewChildren._k2n, _p2n = _getNewChildren._p2n;
    var tabbableKey = focusable ? getFirstAvaliablelChildKey$1("0", _p2n) : void 0;
    _this2.state = {
      root: _this2,
      lastVisibleIndex: void 0,
      newChildren,
      _k2n,
      _p2n,
      tabbableKey,
      openKeys: _this2.getInitOpenKeys(props, _k2n, _p2n),
      selectedKeys: normalizeToArray$1(selectedKeys || defaultSelectedKeys),
      focusedKey: !isNil$3(_this2.props.focusedKey) ? focusedKey : focusable && autoFocus ? tabbableKey : null
    };
    bindCtx$q(_this2, ["handleOpen", "handleSelect", "handleItemClick", "handleItemKeyDown", "onBlur", "adjustChildrenWidth"]);
    _this2.popupNodes = [];
    return _this2;
  }
  Menu2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var state = {};
    if ("openKeys" in nextProps) {
      state.openKeys = normalizeToArray$1(nextProps.openKeys);
    }
    if ("selectedKeys" in nextProps) {
      state.selectedKeys = normalizeToArray$1(nextProps.selectedKeys);
    }
    if ("focusedKey" in nextProps) {
      state.focusedKey = nextProps.focusedKey;
    }
    var _getNewChildren2 = getNewChildren$1(_extends$5({
      root: prevState.root,
      lastVisibleIndex: prevState.lastVisibleIndex
    }, nextProps)), newChildren = _getNewChildren2.newChildren, _k2n = _getNewChildren2._k2n, _p2n = _getNewChildren2._p2n;
    state.newChildren = newChildren;
    state._k2n = _k2n;
    state._p2n = _p2n;
    if (nextProps.focusable) {
      if (prevState.tabbableKey in _k2n) {
        if (prevState.focusedKey) {
          state.tabbableKey = prevState.focusedKey;
        }
      } else {
        state.tabbableKey = getFirstAvaliablelChildKey$1("0", _p2n);
      }
    }
    return state;
  };
  Menu2.prototype.componentDidMount = function componentDidMount() {
    this.menuNode = findDOMNode(this);
    this.adjustChildrenWidth();
    if (this.props.hozInLine) {
      events$1.on(window, "resize", this.adjustChildrenWidth);
    }
  };
  Menu2.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (prevState.lastVisibleIndex !== this.state.lastVisibleIndex) {
      this.adjustChildrenWidth();
    }
  };
  Menu2.prototype.componentWillUnmount = function componentWillUnmount() {
    events$1.off(window, "resize", this.adjustChildrenWidth);
  };
  Menu2.prototype.adjustChildrenWidth = function adjustChildrenWidth() {
    var _props = this.props, direction = _props.direction, prefix2 = _props.prefix, header = _props.header, footer = _props.footer, hozInLine = _props.hozInLine;
    if (direction !== "hoz" || !hozInLine) {
      return;
    }
    if (!this.menuNode && !this.menuContent) {
      return;
    }
    var children = [], spaceWidth = void 0;
    if (header || footer) {
      children = this.menuContent.children;
      spaceWidth = getWidth$1(this.menuNode) - getWidth$1(this.menuHeader) - getWidth$1(this.menuFooter);
    } else {
      children = this.menuNode.children;
      spaceWidth = getWidth$1(this.menuNode);
    }
    if (children.length < 2) {
      return;
    }
    var currentSumWidth = 0, lastVisibleIndex = -1;
    var moreNode = "";
    var menuItemNodes = [].slice.call(children).filter(function(node) {
      if (node.className.split(" ").indexOf(prefix2 + "menu-more") < 0) {
        return true;
      } else {
        moreNode = node;
      }
      return false;
    });
    var overflowedItems = menuItemNodes.filter(function(c2) {
      return c2.className.split(" ").indexOf(MENUITEM_OVERFLOWED_CLASSNAME$1) >= 0;
    });
    overflowedItems.forEach(function(c2) {
      dom$1.setStyle(c2, "display", "inline-block");
    });
    dom$1.setStyle(moreNode, "display", "inline-block");
    var moreWidth = getWidth$1(moreNode);
    this.menuItemSizes = menuItemNodes.map(function(c2) {
      return getWidth$1(c2);
    });
    var totalLen = this.menuItemSizes.length;
    overflowedItems.forEach(function(c2) {
      dom$1.setStyle(c2, "display", "none");
    });
    this.menuItemSizes.forEach(function(liWidth, i) {
      currentSumWidth += liWidth;
      if (i >= totalLen - 1 && currentSumWidth <= spaceWidth || currentSumWidth + moreWidth <= spaceWidth) {
        lastVisibleIndex++;
      }
    });
    if (lastVisibleIndex >= totalLen - 1) {
      dom$1.setStyle(moreNode, "display", "none");
    }
    this.setState(_extends$5({
      lastVisibleIndex
    }, this.getUpdateChildren()));
  };
  Menu2.prototype.onBlur = function onBlur(e2) {
    this.setState({
      focusedKey: void 0
    });
    this.props.onBlur && this.props.onBlur(e2);
  };
  Menu2.prototype.getInitOpenKeys = function getInitOpenKeys(props, _k2n, _p2n) {
    var initOpenKeys = void 0;
    var openKeys = props.openKeys, defaultOpenKeys = props.defaultOpenKeys, defaultOpenAll = props.defaultOpenAll, mode = props.mode, openMode = props.openMode;
    if (openKeys) {
      initOpenKeys = openKeys;
    } else if (defaultOpenAll && mode === "inline" && openMode === "multiple") {
      initOpenKeys = Object.keys(_k2n).filter(function(key) {
        return _k2n[key].type === "submenu";
      });
    } else {
      initOpenKeys = defaultOpenKeys;
    }
    return normalizeToArray$1(initOpenKeys);
  };
  Menu2.prototype.handleOpen = function handleOpen(key, open, triggerType, e2) {
    var newOpenKeys = void 0;
    var _props2 = this.props, mode = _props2.mode, openMode = _props2.openMode;
    var _state = this.state, openKeys = _state.openKeys, _k2n = _state._k2n;
    var index2 = openKeys.indexOf(key);
    if (open && index2 === -1) {
      if (mode === "inline") {
        if (openMode === "single") {
          newOpenKeys = openKeys.filter(function(k2) {
            return _k2n[k2] && !isSibling$1(_k2n[key].pos, _k2n[k2].pos);
          });
          newOpenKeys.push(key);
        } else {
          newOpenKeys = openKeys.concat(key);
        }
      } else {
        newOpenKeys = openKeys.filter(function(k2) {
          return _k2n[k2] && isAncestor$1(_k2n[key].pos, _k2n[k2].pos);
        });
        newOpenKeys.push(key);
      }
    } else if (!open && index2 > -1) {
      if (mode === "inline") {
        newOpenKeys = [].concat(openKeys.slice(0, index2), openKeys.slice(index2 + 1));
      } else if (triggerType === "docClick") {
        if (!this.popupNodes.concat(this.menuNode).some(function(node) {
          return node.contains(e2.target);
        })) {
          newOpenKeys = [];
        }
      } else {
        newOpenKeys = openKeys.filter(function(k2) {
          return k2 !== key && _k2n[k2] && !isAncestor$1(_k2n[k2].pos, _k2n[key].pos);
        });
      }
    }
    if (newOpenKeys) {
      if (isNil$3(this.props.openKeys)) {
        this.setState(_extends$5({
          openKeys: newOpenKeys
        }, this.getUpdateChildren()));
      }
      this.props.onOpen(newOpenKeys, {
        key,
        open
      });
    }
  };
  Menu2.prototype.getPath = function getPath(key, _k2n, _p2n) {
    var keyPath = [];
    var labelPath = [];
    var pos = _k2n[key].pos;
    var nums = pos.split("-");
    for (var i = 1; i < nums.length - 1; i++) {
      var parentNums = nums.slice(0, i + 1);
      var parentPos = parentNums.join("-");
      var parent = _p2n[parentPos];
      keyPath.push(parent.key);
      labelPath.push(parent.label);
    }
    return {
      keyPath,
      labelPath
    };
  };
  Menu2.prototype.handleSelect = function handleSelect(key, select, menuItem) {
    var _state2 = this.state, _k2n = _state2._k2n, _p2n = _state2._p2n;
    var pos = _k2n[key].pos;
    var level = pos.split("-").length - 1;
    if (this.props.shallowSelect && level > 1) {
      return;
    }
    var newSelectedKeys = void 0;
    var selectMode = this.props.selectMode;
    var selectedKeys = this.state.selectedKeys;
    var index2 = selectedKeys.indexOf(key);
    if (select && index2 === -1) {
      if (selectMode === "single") {
        newSelectedKeys = [key];
      } else if (selectMode === "multiple") {
        newSelectedKeys = selectedKeys.concat(key);
      }
    } else if (!select && index2 > -1 && selectMode === "multiple") {
      newSelectedKeys = [].concat(selectedKeys.slice(0, index2), selectedKeys.slice(index2 + 1));
    }
    if (newSelectedKeys) {
      if (isNil$3(this.props.selectedKeys)) {
        this.setState({
          selectedKeys: newSelectedKeys
        });
      }
      this.props.onSelect(newSelectedKeys, menuItem, _extends$5({
        key,
        select,
        label: _k2n[key].label
      }, this.getPath(key, _k2n, _p2n)));
    }
  };
  Menu2.prototype.handleItemClick = function handleItemClick(key, item, e2) {
    var _k2n = this.state._k2n;
    if (this.props.focusable) {
      if (isNil$3(this.props.focusedKey)) {
        this.setState({
          focusedKey: key
        });
      }
      this.props.onItemFocus(key, item, e2);
    }
    if (item.props.type === "item") {
      if (item.props.parentMode === "popup" && this.state.openKeys.length) {
        if (isNil$3(this.props.openKeys)) {
          this.setState({
            openKeys: []
          });
        }
        this.props.onOpen([], {
          key: this.state.openKeys.sort(function(prevKey, nextKey) {
            return _k2n[nextKey].pos.split("-").length - _k2n[prevKey].pos.split("-").length;
          })[0],
          open: false
        });
      }
      this.props.onItemClick(key, item, e2);
    }
  };
  Menu2.prototype.getAvailableKey = function getAvailableKey(pos, prev) {
    var _p2n = this.state._p2n;
    var ps = Object.keys(_p2n).filter(function(p2) {
      return isAvailablePos$1(pos, p2, _p2n);
    });
    if (ps.length > 1) {
      var index2 = ps.indexOf(pos);
      var targetIndex = void 0;
      if (prev) {
        targetIndex = index2 === 0 ? ps.length - 1 : index2 - 1;
      } else {
        targetIndex = index2 === ps.length - 1 ? 0 : index2 + 1;
      }
      return _p2n[ps[targetIndex]].key;
    }
    return null;
  };
  Menu2.prototype.getParentKey = function getParentKey(pos) {
    return this.state._p2n[pos.slice(0, pos.length - 2)].key;
  };
  Menu2.prototype.handleItemKeyDown = function handleItemKeyDown(key, type, item, e2) {
    if ([KEYCODE$1.UP, KEYCODE$1.DOWN, KEYCODE$1.RIGHT, KEYCODE$1.LEFT, KEYCODE$1.ENTER, KEYCODE$1.ESC, KEYCODE$1.SPACE].indexOf(e2.keyCode) > -1) {
      e2.preventDefault();
      e2.stopPropagation();
    }
    var focusedKey = this.state.focusedKey;
    var _state3 = this.state, _p2n = _state3._p2n, _k2n = _state3._k2n;
    var direction = this.props.direction;
    var pos = _k2n[key].pos;
    var level = pos.split("-").length - 1;
    switch (e2.keyCode) {
      case KEYCODE$1.UP: {
        var avaliableKey = this.getAvailableKey(pos, true);
        if (avaliableKey) {
          focusedKey = avaliableKey;
        }
        break;
      }
      case KEYCODE$1.DOWN: {
        var _avaliableKey = void 0;
        if (direction === "hoz" && level === 1 && type === "submenu") {
          this.handleOpen(key, true);
          _avaliableKey = getFirstAvaliablelChildKey$1(pos, _p2n);
        } else {
          _avaliableKey = this.getAvailableKey(pos, false);
        }
        if (_avaliableKey) {
          focusedKey = _avaliableKey;
        }
        break;
      }
      case KEYCODE$1.RIGHT: {
        var _avaliableKey2 = void 0;
        if (direction === "hoz" && level === 1) {
          _avaliableKey2 = this.getAvailableKey(pos, false);
        } else if (type === "submenu") {
          this.handleOpen(key, true);
          _avaliableKey2 = getFirstAvaliablelChildKey$1(pos, _p2n);
        }
        if (_avaliableKey2) {
          focusedKey = _avaliableKey2;
        }
        break;
      }
      case KEYCODE$1.ENTER: {
        if (type === "submenu") {
          this.handleOpen(key, true);
          var _avaliableKey3 = getFirstAvaliablelChildKey$1(pos, _p2n);
          if (_avaliableKey3) {
            focusedKey = _avaliableKey3;
          }
        }
        break;
      }
      case KEYCODE$1.LEFT: {
        if (direction === "hoz" && level === 1) {
          var _avaliableKey4 = this.getAvailableKey(pos, true);
          if (_avaliableKey4) {
            focusedKey = _avaliableKey4;
          }
        } else if (level > 1) {
          var parentKey = this.getParentKey(pos);
          this.handleOpen(parentKey, false);
          focusedKey = parentKey;
        }
        break;
      }
      case KEYCODE$1.ESC:
        if (level > 1) {
          var _parentKey = this.getParentKey(pos);
          this.handleOpen(_parentKey, false);
          focusedKey = _parentKey;
        }
        break;
      case KEYCODE$1.TAB:
        focusedKey = null;
        break;
    }
    if (focusedKey !== this.state.focusedKey) {
      if (isNil$3(this.props.focusedKey)) {
        this.setState({
          focusedKey
        });
      }
      this.props.onItemKeyDown(focusedKey, item, e2);
      this.props.onItemFocus(focusedKey, e2);
    }
  };
  Menu2.prototype.render = function render2() {
    var _cx2;
    var _props3 = this.props, prefix2 = _props3.prefix, className = _props3.className, direction = _props3.direction, hozAlign = _props3.hozAlign, header = _props3.header, footer = _props3.footer, embeddable = _props3.embeddable, selectMode = _props3.selectMode, hozInLine = _props3.hozInLine, rtl = _props3.rtl, flatenContent = _props3.flatenContent;
    var newChildren = this.state.newChildren;
    var others = pickOthers$a(Object.keys(Menu2.propTypes), this.props);
    var newClassName = classnames$1((_cx2 = {}, _cx2[prefix2 + "menu"] = true, _cx2[prefix2 + "ver"] = direction === "ver", _cx2[prefix2 + "hoz"] = direction === "hoz", _cx2[prefix2 + "menu-embeddable"] = embeddable, _cx2[prefix2 + "menu-nowrap"] = hozInLine, _cx2[prefix2 + "menu-selectable-" + selectMode] = selectMode, _cx2[className] = !!className, _cx2));
    var role = direction === "hoz" ? "menubar" : "menu";
    var ariaMultiselectable = void 0;
    if ("selectMode" in this.props) {
      role = "listbox";
      ariaMultiselectable = selectMode === "multiple";
    }
    var headerElement = header ? React.createElement("li", {className: prefix2 + "menu-header", ref: this.menuHeaderRef}, header) : null;
    var itemsElement = !flatenContent && (header || footer) ? React.createElement("ul", {className: prefix2 + "menu-content", ref: this.menuContentRef}, newChildren) : newChildren;
    var footerElement = footer ? React.createElement("li", {className: prefix2 + "menu-footer", ref: this.menuFooterRef}, footer) : null;
    var shouldWrapItemsAndFooter = hozAlign === "right" && !!header;
    if (rtl) {
      others.dir = "rtl";
    }
    return React.createElement("ul", _extends$5({
      role,
      onBlur: this.onBlur,
      className: newClassName,
      onKeyDown: this.handleEnter,
      "aria-multiselectable": ariaMultiselectable
    }, others), headerElement, shouldWrapItemsAndFooter ? React.createElement("div", {className: prefix2 + "menu-hoz-right"}, itemsElement, footerElement) : null, !shouldWrapItemsAndFooter ? itemsElement : null, !shouldWrapItemsAndFooter ? footerElement : null);
  };
  return Menu2;
}(Component), _class$1d.isNextMenu = true, _class$1d.propTypes = _extends$5({}, NextConfigProvider.propTypes, {
  prefix: propTypes.string,
  pure: propTypes.bool,
  rtl: propTypes.bool,
  className: propTypes.string,
  children: propTypes.node,
  onItemClick: propTypes.func,
  openKeys: propTypes.oneOfType([propTypes.string, propTypes.array]),
  defaultOpenKeys: propTypes.oneOfType([propTypes.string, propTypes.array]),
  defaultOpenAll: propTypes.bool,
  onOpen: propTypes.func,
  mode: propTypes.oneOf(["inline", "popup"]),
  triggerType: propTypes.oneOf(["click", "hover"]),
  openMode: propTypes.oneOf(["single", "multiple"]),
  inlineIndent: propTypes.number,
  inlineArrowDirection: propTypes.oneOf(["down", "right"]),
  popupAutoWidth: propTypes.bool,
  popupAlign: propTypes.oneOf(["follow", "outside"]),
  popupProps: propTypes.oneOfType([propTypes.object, propTypes.func]),
  popupClassName: propTypes.string,
  popupStyle: propTypes.object,
  selectedKeys: propTypes.oneOfType([propTypes.string, propTypes.array]),
  defaultSelectedKeys: propTypes.oneOfType([propTypes.string, propTypes.array]),
  onSelect: propTypes.func,
  selectMode: propTypes.oneOf(["single", "multiple"]),
  shallowSelect: propTypes.bool,
  hasSelectedIcon: propTypes.bool,
  labelToggleChecked: propTypes.bool,
  isSelectIconRight: propTypes.bool,
  direction: propTypes.oneOf(["ver", "hoz"]),
  hozAlign: propTypes.oneOf(["left", "right"]),
  hozInLine: propTypes.bool,
  renderMore: propTypes.func,
  header: propTypes.node,
  footer: propTypes.node,
  autoFocus: propTypes.bool,
  focusedKey: propTypes.string,
  focusable: propTypes.bool,
  onItemFocus: propTypes.func,
  onBlur: propTypes.func,
  embeddable: propTypes.bool,
  onItemKeyDown: propTypes.func,
  expandAnimation: propTypes.bool,
  itemClassName: propTypes.string,
  icons: propTypes.object,
  flatenContent: propTypes.bool
}), _class$1d.defaultProps = {
  prefix: "next-",
  pure: false,
  defaultOpenKeys: [],
  defaultOpenAll: false,
  onOpen: noop$r,
  mode: "inline",
  triggerType: "click",
  openMode: "multiple",
  inlineIndent: 20,
  inlineArrowDirection: "down",
  popupAutoWidth: false,
  popupAlign: "follow",
  popupProps: {},
  defaultSelectedKeys: [],
  onSelect: noop$r,
  shallowSelect: false,
  hasSelectedIcon: true,
  isSelectIconRight: false,
  labelToggleChecked: true,
  direction: "ver",
  hozAlign: "left",
  hozInLine: false,
  autoFocus: false,
  focusable: true,
  embeddable: false,
  onItemFocus: noop$r,
  onItemKeyDown: noop$r,
  onItemClick: noop$r,
  expandAnimation: true,
  icons: {}
}, _temp$18);
Menu$4.displayName = "Menu";
var Menu$5 = polyfill$1(Menu$4);
_export$1(_export$1.S + _export$1.F * !_descriptors$1, "Object", {defineProperty: _objectDp$1.f});
var $Object$3 = _core$1.Object;
var defineProperty$6 = function defineProperty7(it, key, desc) {
  return $Object$3.defineProperty(it, key, desc);
};
var defineProperty$7 = createCommonjsModule(function(module) {
  module.exports = {default: defineProperty$6, __esModule: true};
});
var createClass$1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  var _defineProperty2 = _interopRequireDefault(defineProperty$7);
  function _interopRequireDefault(obj2) {
    return obj2 && obj2.__esModule ? obj2 : {default: obj2};
  }
  exports.default = function() {
    function defineProperties5(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        (0, _defineProperty2.default)(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties5(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties5(Constructor, staticProps);
      return Constructor;
    };
  }();
});
var _createClass$1 = /* @__PURE__ */ getDefaultExportFromCjs(createClass$1);
var makeChain$b = func$1.makeChain;
var UIState$1 = function(_Component) {
  _inherits$1(UIState2, _Component);
  function UIState2(props) {
    _classCallCheck$1(this, UIState2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    _this2.state = {};
    ["_onUIFocus", "_onUIBlur"].forEach(function(item) {
      _this2[item] = _this2[item].bind(_this2);
    });
    return _this2;
  }
  UIState2.prototype.getStateElement = function getStateElement(base) {
    var _props = this.props, onFocus = _props.onFocus, onBlur = _props.onBlur;
    return React.cloneElement(base, {
      onFocus: makeChain$b(this._onUIFocus, onFocus),
      onBlur: makeChain$b(this._onUIBlur, onBlur)
    });
  };
  UIState2.prototype.getStateClassName = function getStateClassName() {
    var focused = this.state.focused;
    return classnames$1({
      focused
    });
  };
  UIState2.prototype.resetUIState = function resetUIState() {
    this.setState({
      focused: false
    });
  };
  UIState2.prototype._onUIFocus = function _onUIFocus() {
    this.setState({
      focused: true
    });
  };
  UIState2.prototype._onUIBlur = function _onUIBlur() {
    this.setState({
      focused: false
    });
  };
  return UIState2;
}(Component);
UIState$1.displayName = "UIState";
function withContext$2(Checkbox2) {
  var _class2, _temp3;
  return _temp3 = _class2 = function(_React$Component) {
    _inherits$1(WrappedComp, _React$Component);
    function WrappedComp() {
      _classCallCheck$1(this, WrappedComp);
      return _possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
    }
    WrappedComp.prototype.render = function render2() {
      return React.createElement(Checkbox2, _extends$5({}, this.props, {context: this.context}));
    };
    return WrappedComp;
  }(React.Component), _class2.displayName = "Checkbox", _class2.contextTypes = {
    onChange: propTypes.func,
    __group__: propTypes.bool,
    selectedValue: propTypes.array,
    disabled: propTypes.bool,
    prefix: propTypes.string
  }, _temp3;
}
var _class$1e, _temp$19;
var noop$s = func$1.noop;
function isChecked$1(selectedValue, value) {
  return selectedValue.indexOf(value) > -1;
}
var Checkbox$2 = (_temp$19 = _class$1e = function(_UIState) {
  _inherits$1(Checkbox2, _UIState);
  function Checkbox2(props) {
    _classCallCheck$1(this, Checkbox2);
    var _this2 = _possibleConstructorReturn$1(this, _UIState.call(this, props));
    var context2 = props.context;
    var checked = void 0, indeterminate = void 0;
    if ("checked" in props) {
      checked = props.checked;
    } else {
      checked = props.defaultChecked;
    }
    if ("indeterminate" in props) {
      indeterminate = props.indeterminate;
    } else {
      indeterminate = props.defaultIndeterminate;
    }
    if (context2.__group__) {
      checked = isChecked$1(context2.selectedValue, props.value);
    }
    _this2.state = {
      checked,
      indeterminate
    };
    _this2.onChange = _this2.onChange.bind(_this2);
    return _this2;
  }
  Checkbox2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
    var nextContext = nextProps.context;
    var state = {};
    if (nextContext.__group__) {
      if ("selectedValue" in nextContext) {
        state.checked = isChecked$1(nextContext.selectedValue, nextProps.value);
      }
    } else if ("checked" in nextProps) {
      state.checked = nextProps.checked;
    }
    if ("indeterminate" in nextProps) {
      state.indeterminate = nextProps.indeterminate;
    }
    return state;
  };
  Checkbox2.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
    var shallowEqual2 = obj$1.shallowEqual;
    return !shallowEqual2(this.props, nextProps) || !shallowEqual2(this.state, nextState) || !shallowEqual2(this.context, nextContext);
  };
  Checkbox2.prototype.onChange = function onChange9(e2) {
    var _props = this.props, context2 = _props.context, value = _props.value;
    var checked = e2.target.checked;
    if (this.disabled) {
      return;
    }
    if (context2.__group__) {
      context2.onChange(value, e2);
    } else {
      if (!("checked" in this.props)) {
        this.setState({
          checked
        });
      }
      if (!("indeterminate" in this.props)) {
        this.setState({
          indeterminate: false
        });
      }
      this.props.onChange(checked, e2);
    }
  };
  Checkbox2.prototype.render = function render2() {
    var _classnames, _classnames2;
    var _props2 = this.props, id2 = _props2.id, className = _props2.className, children = _props2.children, style = _props2.style, label = _props2.label, onMouseEnter = _props2.onMouseEnter, onMouseLeave = _props2.onMouseLeave, rtl = _props2.rtl, isPreview = _props2.isPreview, renderPreview = _props2.renderPreview, context2 = _props2.context, value = _props2.value, name = _props2.name, otherProps = _objectWithoutProperties$2(_props2, ["id", "className", "children", "style", "label", "onMouseEnter", "onMouseLeave", "rtl", "isPreview", "renderPreview", "context", "value", "name"]);
    var checked = !!this.state.checked;
    var disabled = this.disabled;
    var indeterminate = !!this.state.indeterminate;
    var prefix2 = context2.prefix || this.props.prefix;
    var others = obj$1.pickOthers(Checkbox2.propTypes, otherProps);
    var othersData = obj$1.pickAttrsWith(others, "data-");
    if (otherProps.title) {
      othersData.title = otherProps.title;
    }
    var childInput = React.createElement("input", _extends$5({}, obj$1.pickOthers(Checkbox2.propTypes, otherProps), {
      id: id2,
      value,
      name,
      disabled,
      checked,
      type: "checkbox",
      onChange: this.onChange,
      "aria-checked": indeterminate ? "mixed" : checked,
      className: prefix2 + "checkbox-input"
    }));
    if (!disabled) {
      childInput = this.getStateElement(childInput);
    }
    var cls = classnames$1((_classnames = {}, _classnames[prefix2 + "checkbox-wrapper"] = true, _classnames[className] = !!className, _classnames.checked = checked, _classnames.disabled = disabled, _classnames.indeterminate = indeterminate, _classnames[this.getStateClassName()] = true, _classnames));
    var labelCls = prefix2 + "checkbox-label";
    var type = indeterminate ? "semi-select" : "select";
    if (isPreview) {
      var previewCls = classnames$1(className, prefix2 + "form-preview");
      if ("renderPreview" in this.props) {
        return React.createElement("div", _extends$5({
          id: id2,
          dir: rtl ? "rtl" : void 0
        }, othersData, {
          className: previewCls
        }), renderPreview(checked, this.props));
      }
      return React.createElement("p", _extends$5({
        id: id2,
        dir: rtl ? "rtl" : void 0
      }, othersData, {
        className: previewCls
      }), checked && (children || label || this.state.value));
    }
    var iconCls = classnames$1((_classnames2 = {
      zoomIn: indeterminate
    }, _classnames2[prefix2 + "checkbox-semi-select-icon"] = indeterminate, _classnames2[prefix2 + "checkbox-select-icon"] = !indeterminate, _classnames2));
    return React.createElement("label", _extends$5({}, othersData, {
      className: cls,
      style,
      dir: rtl ? "rtl" : void 0,
      onMouseEnter,
      onMouseLeave
    }), React.createElement("span", {className: prefix2 + "checkbox"}, React.createElement("span", {className: prefix2 + "checkbox-inner"}, React.createElement(NextIcon, {type, size: "xs", className: iconCls})), childInput), [label, children].map(function(item, i) {
      return [void 0, null].indexOf(item) === -1 ? React.createElement("span", {key: i, className: labelCls}, item) : null;
    }));
  };
  _createClass$1(Checkbox2, [{
    key: "disabled",
    get: function get() {
      var props = this.props;
      var context2 = props.context;
      return props.disabled || "disabled" in context2 && context2.disabled;
    }
  }]);
  return Checkbox2;
}(UIState$1), _class$1e.displayName = "Checkbox", _class$1e.propTypes = _extends$5({}, NextConfigProvider.propTypes, {
  prefix: propTypes.string,
  rtl: propTypes.bool,
  className: propTypes.string,
  id: propTypes.string,
  style: propTypes.object,
  checked: propTypes.bool,
  defaultChecked: propTypes.bool,
  disabled: propTypes.bool,
  label: propTypes.node,
  indeterminate: propTypes.bool,
  defaultIndeterminate: propTypes.bool,
  onChange: propTypes.func,
  onMouseEnter: propTypes.func,
  onMouseLeave: propTypes.func,
  value: propTypes.oneOfType([propTypes.string, propTypes.number]),
  name: propTypes.string,
  isPreview: propTypes.bool,
  renderPreview: propTypes.func
}), _class$1e.defaultProps = {
  defaultChecked: false,
  defaultIndeterminate: false,
  onChange: noop$s,
  onMouseEnter: noop$s,
  onMouseLeave: noop$s,
  prefix: "next-",
  isPreview: false
}, _temp$19);
var Checkbox$3 = NextConfigProvider.config(withContext$2(polyfill$1(Checkbox$2)));
var _class$1f, _temp$1a;
var pickOthers$b = obj$1.pickOthers;
var CheckboxGroup$1 = (_temp$1a = _class$1f = function(_Component) {
  _inherits$1(CheckboxGroup2, _Component);
  function CheckboxGroup2(props) {
    _classCallCheck$1(this, CheckboxGroup2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    var value = [];
    if ("value" in props) {
      value = props.value;
    } else if ("defaultValue" in props) {
      value = props.defaultValue;
    }
    if (!Array.isArray(value)) {
      if (value === null || value === void 0) {
        value = [];
      } else {
        value = [value];
      }
    }
    _this2.state = {
      value: [].concat(value)
    };
    _this2.onChange = _this2.onChange.bind(_this2);
    return _this2;
  }
  CheckboxGroup2.prototype.getChildContext = function getChildContext() {
    return {
      __group__: true,
      onChange: this.onChange,
      selectedValue: this.state.value,
      disabled: this.props.disabled
    };
  };
  CheckboxGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
    if ("value" in nextProps) {
      var value = nextProps.value;
      if (!Array.isArray(value)) {
        if (value === null || value === void 0) {
          value = [];
        } else {
          value = [value];
        }
      }
      return {value};
    }
    return null;
  };
  CheckboxGroup2.prototype.onChange = function onChange9(currentValue, e2) {
    var value = this.state.value;
    var index2 = value.indexOf(currentValue);
    var valTemp = [].concat(value);
    if (index2 === -1) {
      valTemp.push(currentValue);
    } else {
      valTemp.splice(index2, 1);
    }
    if (!("value" in this.props)) {
      this.setState({value: valTemp});
    }
    this.props.onChange(valTemp, e2);
  };
  CheckboxGroup2.prototype.render = function render2() {
    var _this2 = this, _classnames;
    var _props = this.props, className = _props.className, style = _props.style, prefix2 = _props.prefix, disabled = _props.disabled, itemDirection = _props.itemDirection, rtl = _props.rtl, isPreview = _props.isPreview, renderPreview = _props.renderPreview;
    var others = pickOthers$b(CheckboxGroup2.propTypes, this.props);
    var children = void 0;
    var previewed = [];
    if (this.props.children) {
      children = React.Children.map(this.props.children, function(child) {
        if (!React.isValidElement(child)) {
          return child;
        }
        var checked = _this2.state.value && _this2.state.value.indexOf(child.props.value) > -1;
        if (checked) {
          previewed.push({
            label: child.props.children,
            value: child.props.value
          });
        }
        return React.cloneElement(child, child.props.rtl === void 0 ? {rtl} : null);
      });
    } else {
      children = this.props.dataSource.map(function(item, index2) {
        var option = item;
        if ((typeof item === "undefined" ? "undefined" : _typeof$1(item)) !== "object") {
          option = {
            label: item,
            value: item,
            disabled
          };
        }
        var checked = _this2.state.value && _this2.state.value.indexOf(option.value) > -1;
        if (checked) {
          previewed.push({
            label: option.label,
            value: option.value
          });
        }
        return React.createElement(Checkbox$3, {
          key: index2,
          value: option.value,
          checked,
          rtl,
          disabled: disabled || option.disabled,
          label: option.label
        });
      });
    }
    if (isPreview) {
      var previewCls = classnames$1(className, prefix2 + "form-preview");
      if ("renderPreview" in this.props) {
        return React.createElement("div", _extends$5({}, others, {
          dir: rtl ? "rtl" : void 0,
          className: previewCls
        }), renderPreview(previewed, this.props));
      }
      return React.createElement("p", _extends$5({}, others, {
        dir: rtl ? "rtl" : void 0,
        className: previewCls
      }), previewed.map(function(item) {
        return item.label;
      }).join(", "));
    }
    var cls = classnames$1((_classnames = {}, _classnames[prefix2 + "checkbox-group"] = true, _classnames[prefix2 + "checkbox-group-" + itemDirection] = true, _classnames[className] = !!className, _classnames.disabled = disabled, _classnames));
    return React.createElement("span", _extends$5({
      dir: rtl ? "rtl" : void 0
    }, others, {
      className: cls,
      style
    }), children);
  };
  return CheckboxGroup2;
}(Component), _class$1f.propTypes = {
  prefix: propTypes.string,
  rtl: propTypes.bool,
  className: propTypes.string,
  style: propTypes.object,
  disabled: propTypes.bool,
  dataSource: propTypes.oneOfType([propTypes.arrayOf(propTypes.string), propTypes.arrayOf(propTypes.object)]),
  value: propTypes.oneOfType([propTypes.array, propTypes.string, propTypes.number]),
  defaultValue: propTypes.oneOfType([propTypes.array, propTypes.string, propTypes.number]),
  children: propTypes.arrayOf(propTypes.element),
  onChange: propTypes.func,
  itemDirection: propTypes.oneOf(["hoz", "ver"]),
  isPreview: propTypes.bool,
  renderPreview: propTypes.func
}, _class$1f.defaultProps = {
  dataSource: [],
  onChange: function onChange5() {
  },
  prefix: "next-",
  itemDirection: "hoz",
  isPreview: false
}, _class$1f.childContextTypes = {
  onChange: propTypes.func,
  __group__: propTypes.bool,
  selectedValue: propTypes.array,
  disabled: propTypes.bool
}, _temp$1a);
CheckboxGroup$1.displayName = "CheckboxGroup";
var Group$a = NextConfigProvider.config(polyfill$1(CheckboxGroup$1));
Checkbox$3.Group = Group$a;
function withContext$3(Radio2) {
  var _class2, _temp3;
  return _temp3 = _class2 = function(_React$Component) {
    _inherits$1(WrappedComp, _React$Component);
    function WrappedComp() {
      _classCallCheck$1(this, WrappedComp);
      return _possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
    }
    WrappedComp.prototype.render = function render2() {
      return React.createElement(Radio2, _extends$5({}, this.props, {context: this.context}));
    };
    return WrappedComp;
  }(React.Component), _class2.displayName = "Radio", _class2.contextTypes = {
    onChange: propTypes.func,
    __group__: propTypes.bool,
    isButton: propTypes.bool,
    selectedValue: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.bool]),
    disabled: propTypes.bool
  }, _temp3;
}
var _class$1g, _temp$1b;
var makeChain$c = func$1.makeChain, noop$t = func$1.noop;
var Radio$2 = (_temp$1b = _class$1g = function(_UIState) {
  _inherits$1(Radio2, _UIState);
  function Radio2(props) {
    _classCallCheck$1(this, Radio2);
    var _this2 = _possibleConstructorReturn$1(this, _UIState.call(this, props));
    var context2 = props.context;
    var checked = void 0;
    if (context2.__group__) {
      checked = context2.selectedValue === props.value;
    } else if ("checked" in props) {
      checked = props.checked;
    } else {
      checked = props.defaultChecked;
    }
    _this2.state = {checked};
    _this2.onChange = _this2.onChange.bind(_this2);
    return _this2;
  }
  Radio2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
    var nextContext = nextProps.context;
    if (nextContext.__group__ && "selectedValue" in nextContext) {
      return {
        checked: nextContext.selectedValue === nextProps.value
      };
    } else if ("checked" in nextProps) {
      return {
        checked: nextProps.checked
      };
    }
    return null;
  };
  Radio2.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
    var shallowEqual2 = obj$1.shallowEqual;
    return !shallowEqual2(this.props, nextProps) || !shallowEqual2(this.state, nextState) || !shallowEqual2(this.context, nextContext);
  };
  Radio2.prototype.componentDidUpdate = function componentDidUpdate() {
    if (this.disabled) {
      this.resetUIState();
    }
  };
  Radio2.prototype.onChange = function onChange9(e2) {
    var checked = e2.target.checked;
    var _props = this.props, context2 = _props.context, value = _props.value;
    if (context2.__group__) {
      context2.onChange(value, e2);
    } else if (this.state.checked !== checked) {
      if (!("checked" in this.props)) {
        this.setState({
          checked
        });
      }
      this.props.onChange(checked, e2);
    }
  };
  Radio2.prototype.render = function render2() {
    var _classnames, _classnames2, _classnames3;
    var _props2 = this.props, id2 = _props2.id, className = _props2.className, children = _props2.children, style = _props2.style, label = _props2.label, onMouseEnter = _props2.onMouseEnter, onMouseLeave = _props2.onMouseLeave, tabIndex = _props2.tabIndex, rtl = _props2.rtl, name = _props2.name, isPreview = _props2.isPreview, renderPreview = _props2.renderPreview, value = _props2.value, context2 = _props2.context, otherProps = _objectWithoutProperties$2(_props2, ["id", "className", "children", "style", "label", "onMouseEnter", "onMouseLeave", "tabIndex", "rtl", "name", "isPreview", "renderPreview", "value", "context"]);
    var checked = !!this.state.checked;
    var disabled = this.disabled;
    var isButton = context2.isButton;
    var prefix2 = context2.prefix || this.props.prefix;
    var others = obj$1.pickOthers(Radio2.propTypes, otherProps);
    var othersData = obj$1.pickAttrsWith(others, "data-");
    if (isPreview) {
      var previewCls = classnames$1(className, prefix2 + "form-preview");
      if ("renderPreview" in this.props) {
        return React.createElement("div", _extends$5({
          id: id2,
          dir: rtl ? "rtl" : "ltr"
        }, others, {
          className: previewCls
        }), renderPreview(checked, this.props));
      }
      return React.createElement("p", _extends$5({
        id: id2,
        dir: rtl ? "rtl" : "ltr"
      }, others, {
        className: previewCls
      }), checked && (children || label || value));
    }
    var input = React.createElement("input", _extends$5({}, obj$1.pickOthers(othersData, others), {
      name,
      id: id2,
      tabIndex,
      disabled,
      checked,
      type: "radio",
      onChange: this.onChange,
      "aria-checked": checked,
      className: prefix2 + "radio-input"
    }));
    if (!disabled) {
      input = this.getStateElement(input);
    }
    var cls = classnames$1((_classnames = {}, _classnames[prefix2 + "radio"] = true, _classnames.checked = checked, _classnames.disabled = disabled, _classnames[this.getStateClassName()] = true, _classnames));
    var clsInner = classnames$1((_classnames2 = {}, _classnames2[prefix2 + "radio-inner"] = true, _classnames2.press = checked, _classnames2.unpress = !checked, _classnames2));
    var clsWrapper = classnames$1((_classnames3 = {}, _classnames3[prefix2 + "radio-wrapper"] = true, _classnames3[className] = !!className, _classnames3.checked = checked, _classnames3.disabled = disabled, _classnames3[this.getStateClassName()] = true, _classnames3));
    var childrenCls = prefix2 + "radio-label";
    var radioComp = !isButton ? React.createElement("span", {className: cls}, React.createElement("span", {className: clsInner}), input) : React.createElement("span", {className: prefix2 + "radio-single-input"}, input);
    return React.createElement("label", _extends$5({}, othersData, {
      dir: rtl ? "rtl" : "ltr",
      style,
      "aria-checked": checked,
      "aria-disabled": disabled,
      className: clsWrapper,
      onMouseEnter: disabled ? onMouseEnter : makeChain$c(this._onUIMouseEnter, onMouseEnter),
      onMouseLeave: disabled ? onMouseLeave : makeChain$c(this._onUIMouseLeave, onMouseLeave)
    }), radioComp, [children, label].map(function(d2, i) {
      return d2 !== void 0 ? React.createElement("span", {key: i, className: childrenCls}, d2) : null;
    }));
  };
  _createClass$1(Radio2, [{
    key: "disabled",
    get: function get() {
      var props = this.props;
      var context2 = props.context;
      var disabled = props.disabled || context2.__group__ && "disabled" in context2 && context2.disabled;
      return disabled;
    }
  }]);
  return Radio2;
}(UIState$1), _class$1g.displayName = "Radio", _class$1g.propTypes = _extends$5({}, NextConfigProvider.propTypes, {
  className: propTypes.string,
  id: propTypes.string,
  style: propTypes.object,
  checked: propTypes.bool,
  defaultChecked: propTypes.bool,
  label: propTypes.node,
  onChange: propTypes.func,
  onMouseEnter: propTypes.func,
  onMouseLeave: propTypes.func,
  disabled: propTypes.bool,
  value: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.bool]),
  name: propTypes.string,
  isPreview: propTypes.bool,
  renderPreview: propTypes.func
}), _class$1g.defaultProps = {
  onChange: noop$t,
  onMouseLeave: noop$t,
  onMouseEnter: noop$t,
  tabIndex: 0,
  prefix: "next-",
  isPreview: false
}, _class$1g.contextTypes = {
  onChange: propTypes.func,
  __group__: propTypes.bool,
  isButton: propTypes.bool,
  selectedValue: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.bool]),
  disabled: propTypes.bool
}, _temp$1b);
var Radio$3 = NextConfigProvider.config(withContext$3(polyfill$1(Radio$2)));
var _class$1h, _temp$1c;
var pickOthers$c = obj$1.pickOthers;
var RadioGroup$2 = (_temp$1c = _class$1h = function(_Component) {
  _inherits$1(RadioGroup2, _Component);
  function RadioGroup2(props) {
    _classCallCheck$1(this, RadioGroup2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    var value = "";
    if ("value" in props) {
      value = props.value;
    } else if ("defaultValue" in props) {
      value = props.defaultValue;
    }
    _this2.state = {value};
    _this2.onChange = _this2.onChange.bind(_this2);
    return _this2;
  }
  RadioGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if ("value" in props && props.value !== state.value) {
      return {
        value: props.value
      };
    }
    return null;
  };
  RadioGroup2.prototype.getChildContext = function getChildContext() {
    var disabled = this.props.disabled;
    return {
      __group__: true,
      isButton: this.props.shape === "button",
      onChange: this.onChange,
      selectedValue: this.state.value,
      disabled
    };
  };
  RadioGroup2.prototype.onChange = function onChange9(currentValue, e2) {
    if (!("value" in this.props)) {
      this.setState({value: currentValue});
    }
    if (currentValue !== this.state.value) {
      this.props.onChange(currentValue, e2);
    }
  };
  RadioGroup2.prototype.render = function render2() {
    var _this2 = this, _classnames;
    var _props = this.props, rtl = _props.rtl, className = _props.className, disabled = _props.disabled, shape = _props.shape, size = _props.size, style = _props.style, prefix2 = _props.prefix, itemDirection = _props.itemDirection, component = _props.component, isPreview = _props.isPreview, renderPreview = _props.renderPreview;
    var others = pickOthers$c(Object.keys(RadioGroup2.propTypes), this.props);
    if (rtl) {
      others.dir = "rtl";
    }
    var children = void 0;
    var previewed = {};
    if (this.props.children) {
      children = React.Children.map(this.props.children, function(child, index2) {
        if (!React.isValidElement(child)) {
          return child;
        }
        var checked = _this2.state.value === child.props.value;
        if (checked) {
          previewed.label = child.props.children;
          previewed.value = child.props.value;
        }
        var tabIndex = index2 === 0 && !_this2.state.value || checked ? 0 : -1;
        var childrtl = child.props.rtl === void 0 ? rtl : child.props.rtl;
        if (child.type && child.type.displayName === "Config(Radio)") {
          return React.cloneElement(child, {
            checked,
            tabIndex,
            rtl: childrtl
          });
        }
        return React.cloneElement(child, {
          checked,
          rtl: childrtl
        });
      });
    } else {
      children = this.props.dataSource.map(function(item, index2) {
        var option = item;
        if ((typeof item === "undefined" ? "undefined" : _typeof$1(item)) !== "object") {
          option = {
            label: item,
            value: item,
            disabled
          };
        }
        var checked = _this2.state.value === option.value;
        if (checked) {
          previewed.label = option.label;
          previewed.value = option.value;
        }
        return React.createElement(Radio$3, {
          key: index2,
          tabIndex: index2 === 0 && !_this2.state.value || checked ? 0 : -1,
          value: option.value,
          checked,
          label: option.label,
          disabled: disabled || option.disabled
        });
      });
    }
    if (isPreview) {
      var previewCls = classnames$1(className, prefix2 + "form-preview");
      if ("renderPreview" in this.props) {
        return React.createElement("div", _extends$5({}, others, {className: previewCls}), renderPreview(previewed, this.props));
      }
      return React.createElement("p", _extends$5({}, others, {className: previewCls}), previewed.label);
    }
    var isButtonShape = shape === "button";
    var cls = classnames$1((_classnames = {}, _classnames[prefix2 + "radio-group"] = true, _classnames[prefix2 + "radio-group-" + itemDirection] = !isButtonShape, _classnames[prefix2 + "radio-button"] = isButtonShape, _classnames[prefix2 + "radio-button-" + size] = isButtonShape, _classnames[className] = !!className, _classnames.disabled = disabled, _classnames));
    var TagName = component;
    return React.createElement(TagName, _extends$5({}, others, {
      "aria-disabled": disabled,
      role: "radiogroup",
      className: cls,
      style
    }), children);
  };
  return RadioGroup2;
}(Component), _class$1h.propTypes = _extends$5({}, NextConfigProvider.propTypes, {
  prefix: propTypes.string,
  className: propTypes.string,
  style: propTypes.object,
  name: propTypes.string,
  value: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.bool]),
  defaultValue: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.bool]),
  component: propTypes.oneOfType([propTypes.string, propTypes.func]),
  onChange: propTypes.func,
  disabled: propTypes.bool,
  shape: propTypes.oneOf(["normal", "button"]),
  size: propTypes.oneOf(["large", "medium", "small"]),
  dataSource: propTypes.oneOfType([propTypes.arrayOf(propTypes.string), propTypes.arrayOf(propTypes.object)]),
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.element), propTypes.element]),
  itemDirection: propTypes.oneOf(["hoz", "ver"]),
  isPreview: propTypes.bool,
  renderPreview: propTypes.func
}), _class$1h.defaultProps = {
  dataSource: [],
  size: "medium",
  onChange: function onChange6() {
  },
  prefix: "next-",
  component: "div",
  itemDirection: "hoz",
  isPreview: false
}, _class$1h.childContextTypes = {
  onChange: propTypes.func,
  __group__: propTypes.bool,
  isButton: propTypes.bool,
  selectedValue: propTypes.oneOfType([propTypes.string, propTypes.number, propTypes.bool]),
  disabled: propTypes.bool
}, _temp$1c);
RadioGroup$2.displayName = "RadioGroup";
var RadioGroup$3 = NextConfigProvider.config(polyfill$1(RadioGroup$2));
Radio$3.Group = RadioGroup$3;
var _class$1i, _temp$1d;
var noop$u = {};
var bindCtx$r = func$1.bindCtx;
var pickOthers$d = obj$1.pickOthers;
var CheckableItem$1 = (_temp$1d = _class$1i = function(_Component) {
  _inherits$1(CheckableItem2, _Component);
  function CheckableItem2(props) {
    _classCallCheck$1(this, CheckableItem2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    bindCtx$r(_this2, ["stopPropagation", "handleKeyDown", "handleClick"]);
    _this2.id = htmlId$1.escapeForId("checkable-item-" + (props.id || props._key));
    return _this2;
  }
  CheckableItem2.prototype.stopPropagation = function stopPropagation(e2) {
    e2.stopPropagation();
  };
  CheckableItem2.prototype.handleCheck = function handleCheck(e2) {
    var _props = this.props, checkType = _props.checkType, checked = _props.checked, onChange9 = _props.onChange;
    if (!(checkType === "radio" && checked)) {
      onChange9(!checked, e2);
    }
  };
  CheckableItem2.prototype.handleKeyDown = function handleKeyDown(e2) {
    if (e2.keyCode === KEYCODE$1.SPACE && !this.props.checkDisabled) {
      this.handleCheck(e2);
    }
    this.props.onKeyDown && this.props.onKeyDown(e2);
  };
  CheckableItem2.prototype.handleClick = function handleClick(e2) {
    this.handleCheck(e2);
    this.props.onClick && this.props.onClick(e2);
  };
  CheckableItem2.prototype.renderCheck = function renderCheck() {
    var _props2 = this.props, root = _props2.root, checked = _props2.checked, indeterminate = _props2.indeterminate, disabled = _props2.disabled, checkType = _props2.checkType, checkDisabled = _props2.checkDisabled, onChange9 = _props2.onChange;
    var labelToggleChecked = root.props.labelToggleChecked;
    var Check = checkType === "radio" ? Radio$3 : Checkbox$3;
    var checkProps = {
      tabIndex: "-1",
      checked,
      disabled: disabled || checkDisabled
    };
    if (checkType === "checkbox") {
      checkProps.indeterminate = indeterminate;
    }
    if (!labelToggleChecked) {
      checkProps.onChange = onChange9;
      checkProps.onClick = this.stopPropagation;
    }
    return React.createElement(Check, _extends$5({"aria-labelledby": this.id}, checkProps));
  };
  CheckableItem2.prototype.render = function render2() {
    var _props3 = this.props, _key = _props3._key, root = _props3.root, checked = _props3.checked, disabled = _props3.disabled, onClick4 = _props3.onClick, helper = _props3.helper, children = _props3.children;
    var _root$props = root.props, prefix2 = _root$props.prefix, labelToggleChecked = _root$props.labelToggleChecked;
    var others = pickOthers$d(Object.keys(CheckableItem2.propTypes), this.props);
    var newProps = _extends$5({
      _key,
      root,
      disabled,
      type: "item",
      onClick: onClick4,
      onKeyDown: this.handleKeyDown
    }, others);
    if (labelToggleChecked && !disabled) {
      newProps.onClick = this.handleClick;
    }
    var title = void 0;
    if (typeof children === "string") {
      title = children;
    }
    return React.createElement(Item$2, _extends$5({"aria-checked": checked, title}, newProps), this.renderCheck(), React.createElement("span", {className: prefix2 + "menu-item-text", id: this.id}, children), helper ? React.createElement("div", {className: prefix2 + "menu-item-helper"}, helper) : null);
  };
  return CheckableItem2;
}(Component), _class$1i.propTypes = {
  _key: propTypes.string,
  root: propTypes.object,
  disabled: propTypes.bool,
  inlineIndent: propTypes.number,
  checked: propTypes.bool,
  indeterminate: propTypes.bool,
  onChange: propTypes.func,
  checkType: propTypes.oneOf(["checkbox", "radio"]),
  checkDisabled: propTypes.bool,
  helper: propTypes.node,
  children: propTypes.node,
  onKeyDown: propTypes.func,
  onClick: propTypes.func,
  id: propTypes.string
}, _class$1i.defaultProps = {
  disabled: false,
  checked: false,
  indeterminate: false,
  checkType: "checkbox",
  checkDisabled: false,
  onChange: noop$u
}, _temp$1d);
CheckableItem$1.displayName = "CheckableItem";
var _class$1j, _temp$1e;
var CheckboxItem$1 = (_temp$1e = _class$1j = function(_Component) {
  _inherits$1(CheckboxItem2, _Component);
  function CheckboxItem2() {
    _classCallCheck$1(this, CheckboxItem2);
    return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
  }
  CheckboxItem2.prototype.render = function render2() {
    var _props = this.props, checkboxDisabled = _props.checkboxDisabled, others = _objectWithoutProperties$2(_props, ["checkboxDisabled"]);
    return React.createElement(CheckableItem$1, _extends$5({
      role: "menuitemcheckbox",
      checkType: "checkbox",
      checkDisabled: checkboxDisabled
    }, others));
  };
  return CheckboxItem2;
}(Component), _class$1j.menuChildType = "item", _class$1j.propTypes = {
  checked: propTypes.bool,
  indeterminate: propTypes.bool,
  disabled: propTypes.bool,
  onChange: propTypes.func,
  helper: propTypes.node,
  children: propTypes.node,
  checkboxDisabled: propTypes.bool
}, _class$1j.defaultProps = {
  checked: false,
  indeterminate: false,
  disabled: false,
  onChange: function onChange7() {
  },
  checkboxDisabled: false
}, _temp$1e);
CheckboxItem$1.displayName = "CheckboxItem";
var _class$1k, _temp$1f;
var RadioItem$1 = (_temp$1f = _class$1k = function(_Component) {
  _inherits$1(RadioItem2, _Component);
  function RadioItem2() {
    _classCallCheck$1(this, RadioItem2);
    return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
  }
  RadioItem2.prototype.render = function render2() {
    return React.createElement(CheckableItem$1, _extends$5({
      role: "menuitemradio",
      checkType: "radio"
    }, this.props));
  };
  return RadioItem2;
}(Component), _class$1k.menuChildType = "item", _class$1k.propTypes = {
  checked: propTypes.bool,
  disabled: propTypes.bool,
  onChange: propTypes.func,
  helper: propTypes.node,
  children: propTypes.node
}, _class$1k.defaultProps = {
  checked: false,
  disabled: false,
  onChange: function onChange8() {
  }
}, _temp$1f);
RadioItem$1.displayName = "RadioItem";
var _class$1l, _temp$1g;
var Group$b = (_temp$1g = _class$1l = function(_Component) {
  _inherits$1(Group2, _Component);
  function Group2() {
    _classCallCheck$1(this, Group2);
    return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
  }
  Group2.prototype.render = function render2() {
    var _cx;
    var _props = this.props, root = _props.root, className = _props.className, label = _props.label, children = _props.children, parentMode = _props.parentMode, others = _objectWithoutProperties$2(_props, ["root", "className", "label", "children", "parentMode"]);
    var prefix2 = root.props.prefix;
    var newClassName = classnames$1((_cx = {}, _cx[prefix2 + "menu-group-label"] = true, _cx[className] = !!className, _cx));
    var newChildren = children.map(function(child) {
      var _cx2;
      if (typeof child !== "function" && (typeof child === "undefined" ? "undefined" : _typeof$1(child)) !== "object") {
        return child;
      }
      var className2 = child.props.className;
      var newChildClassName = classnames$1((_cx2 = {}, _cx2[prefix2 + "menu-group-item"] = true, _cx2[className2] = !!className2, _cx2));
      return cloneElement(child, {
        parentMode,
        className: newChildClassName
      });
    });
    return [React.createElement(Item$2, _extends$5({
      key: "menu-group-label",
      className: newClassName,
      replaceClassName: true,
      root,
      parentMode
    }, others), label)].concat(newChildren);
  };
  return Group2;
}(Component), _class$1l.menuChildType = "group", _class$1l.propTypes = {
  root: propTypes.object,
  className: propTypes.string,
  label: propTypes.node,
  children: propTypes.node,
  parentMode: propTypes.oneOf(["inline", "popup"])
}, _temp$1g);
Group$b.displayName = "Group";
var _class$1m, _temp$1h;
var Divider$1 = (_temp$1h = _class$1m = function(_Component) {
  _inherits$1(Divider2, _Component);
  function Divider2() {
    _classCallCheck$1(this, Divider2);
    return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
  }
  Divider2.prototype.render = function render2() {
    var _cx;
    var _props = this.props, root = _props.root, className = _props.className, others = _objectWithoutProperties$2(_props, ["root", "className"]);
    var prefix2 = root.props.prefix;
    var newClassName = classnames$1((_cx = {}, _cx[prefix2 + "menu-divider"] = true, _cx[className] = !!className, _cx));
    return React.createElement("li", _extends$5({role: "separator", className: newClassName}, others));
  };
  return Divider2;
}(Component), _class$1m.menuChildType = "divider", _class$1m.propTypes = {
  root: propTypes.object,
  className: propTypes.string
}, _temp$1h);
Divider$1.displayName = "Divider";
var _class$1n, _temp$1i;
var bindCtx$s = func$1.bindCtx;
var getContextProps$3 = NextConfigProvider.getContextProps;
var Menu$6 = NextConfigProvider.config(Menu$5);
var menuInstance$1 = void 0;
var ContextMenu$1 = (_temp$1i = _class$1n = function(_Component) {
  _inherits$1(ContextMenu2, _Component);
  function ContextMenu2(props) {
    _classCallCheck$1(this, ContextMenu2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    _this2.state = {
      visible: true
    };
    bindCtx$s(_this2, ["handleOverlayClose", "handleOverlayOpen", "handleItemClick", "getOverlay"]);
    return _this2;
  }
  ContextMenu2.prototype.getOverlay = function getOverlay(ref) {
    this.overlay = ref;
  };
  ContextMenu2.prototype.close = function close() {
    this.setState({
      visible: false
    });
    menuInstance$1 = null;
  };
  ContextMenu2.prototype.handleOverlayClose = function handleOverlayClose(triggerType, e2) {
    var clickedPopupMenu = triggerType === "docClick" && this.popupNodes.some(function(node) {
      return node.contains(e2.target);
    });
    if (!clickedPopupMenu) {
      this.close();
      var overlayProps = this.props.overlayProps;
      if (overlayProps && overlayProps.onRequestClose) {
        for (var _len = arguments.length, others = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          others[_key - 2] = arguments[_key];
        }
        overlayProps.onRequestClose.apply(overlayProps, [triggerType, e2].concat(others));
      }
    }
  };
  ContextMenu2.prototype.handleOverlayOpen = function handleOverlayOpen() {
    this.popupNodes = this.overlay.getInstance().getContent().getInstance().popupNodes;
    var overlayProps = this.props.overlayProps;
    if (overlayProps && overlayProps.onOpen) {
      overlayProps.onOpen();
    }
  };
  ContextMenu2.prototype.handleItemClick = function handleItemClick() {
    var _props;
    this.close();
    this.props.onItemClick && (_props = this.props).onItemClick.apply(_props, arguments);
  };
  ContextMenu2.prototype.render = function render2() {
    var _cx, _cx2;
    var _props2 = this.props, className = _props2.className, popupClassName = _props2.popupClassName, target = _props2.target, align = _props2.align, offset = _props2.offset, afterClose = _props2.afterClose, _props2$overlayProps = _props2.overlayProps, overlayProps = _props2$overlayProps === void 0 ? {} : _props2$overlayProps, others = _objectWithoutProperties$2(_props2, ["className", "popupClassName", "target", "align", "offset", "afterClose", "overlayProps"]);
    var contextProps = getContextProps$3(this.props);
    var prefix2 = contextProps.prefix;
    var visible = this.state.visible;
    var newOverlayProps = _extends$5({}, contextProps, overlayProps, {
      target,
      align,
      offset,
      afterClose,
      visible,
      onRequestClose: this.handleOverlayClose,
      onOpen: this.handleOverlayOpen,
      ref: this.getOverlay
    });
    var menuProps = _extends$5({}, contextProps, {
      triggerType: "hover"
    }, others, {
      className: classnames$1((_cx = {}, _cx[prefix2 + "context"] = true, _cx[className] = !!className, _cx)),
      popupClassName: classnames$1((_cx2 = {}, _cx2[prefix2 + "context"] = true, _cx2[popupClassName] = !!popupClassName, _cx2)),
      onItemClick: this.handleItemClick
    });
    newOverlayProps.rtl = false;
    return React.createElement(NextOverlay, newOverlayProps, React.createElement(Menu$6, menuProps));
  };
  return ContextMenu2;
}(Component), _class$1n.propTypes = {
  className: propTypes.string,
  popupClassName: propTypes.string,
  target: propTypes.any,
  align: propTypes.string,
  offset: propTypes.array,
  overlayProps: propTypes.object,
  afterClose: propTypes.func,
  mode: propTypes.oneOf(["inline", "popup"]),
  onOpen: propTypes.func,
  onItemClick: propTypes.func
}, _class$1n.defaultProps = {
  prefix: "next-",
  align: "tl tl",
  mode: "popup"
}, _temp$1i);
ContextMenu$1.displayName = "ContextMenu";
function create$5(props) {
  if (menuInstance$1) {
    menuInstance$1.destroy();
  }
  var afterClose = props.afterClose, others = _objectWithoutProperties$2(props, ["afterClose"]);
  var div = document.createElement("div");
  document.body.appendChild(div);
  var closeChain = function closeChain2() {
    unmountComponentAtNode(div);
    document.body.removeChild(div);
    afterClose && afterClose();
  };
  var newContext = NextConfigProvider.getContext();
  var menu = void 0;
  render(React.createElement(NextConfigProvider, newContext, React.createElement(ContextMenu$1, _extends$5({
    ref: function ref(_ref) {
      menu = _ref;
    },
    afterClose: closeChain
  }, others))), div);
  menuInstance$1 = {
    destroy: function destroy() {
      if (menu) {
        menu.close();
      }
    }
  };
  return menuInstance$1;
}
Menu$5.SubMenu = SubMenu$1;
Menu$5.Item = SelectableItem$1;
Menu$5.CheckboxItem = CheckboxItem$1;
Menu$5.RadioItem = RadioItem$1;
Menu$5.PopupItem = PopupItem$2;
Menu$5.Group = Group$b;
Menu$5.Divider = Divider$1;
Menu$5.create = create$5;
var transform$1 = function transform8(props, deprecated2) {
  if ("indentSize" in props) {
    deprecated2("indentSize", "inlineIndent", "Menu");
    var _props = props, indentSize = _props.indentSize, others = _objectWithoutProperties$2(_props, ["indentSize"]);
    props = _extends$5({inlineIndent: indentSize}, others);
  }
  if ("onDeselect" in props) {
    deprecated2("onDeselect", "onSelect", "Menu");
    if (props.onDeselect) {
      var _props2 = props, onDeselect = _props2.onDeselect, onSelect = _props2.onSelect, _others = _objectWithoutProperties$2(_props2, ["onDeselect", "onSelect"]);
      var newOnSelect = function newOnSelect2(selectedKeys, item, extra) {
        if (!extra.select) {
          onDeselect(extra.key);
        }
        if (onSelect) {
          onSelect(selectedKeys, item, extra);
        }
      };
      props = _extends$5({onSelect: newOnSelect}, _others);
    }
  }
  return props;
};
var NextMenu = NextConfigProvider.config(Menu$5, {
  transform: transform$1
});
function isSingle$1(mode) {
  return !mode || mode === "single";
}
function isNull$1(n2) {
  return n2 === null || n2 === void 0;
}
function escapeForReg$1(str2) {
  return str2.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function filter$1(key, item) {
  var _key = escapeForReg$1("" + key);
  var regExp = new RegExp("(" + _key + ")", "ig");
  return regExp.test("" + item.value) || regExp.test("" + item.label);
}
function loopMap$1(dataSource2, callback) {
  var result = [];
  dataSource2.forEach(function(option) {
    if (option.children) {
      var children = loopMap$1(option.children, callback);
      result.push(_extends$5({}, option, {
        children
      }));
    } else {
      var tmp = callback(option);
      tmp && result.push(tmp);
    }
  });
  return result;
}
function parseDataSourceFromChildren$1(children) {
  var deep = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var source = [];
  Children.forEach(children, function(child, index2) {
    if (!child) {
      return;
    }
    var type = child.type, childProps = child.props;
    var item2 = {deep};
    var isOption = false;
    var isOptionGroup = false;
    if (typeof type === "function" && type._typeMark === "next_select_option" || type === "option") {
      isOption = true;
    }
    if (typeof type === "function" && type._typeMark === "next_select_option_group" || type === "optgroup") {
      isOptionGroup = true;
    }
    if (!isOption && !isOptionGroup) {
      return;
    }
    if (isOption) {
      var isStrChild = typeof childProps.children === "string";
      item2.value = "value" in childProps ? childProps.value : "key" in childProps ? childProps.key : isStrChild ? childProps.children : "" + index2;
      item2.label = childProps.label || childProps.children || "" + item2.value;
      if ("title" in childProps) {
        item2.title = childProps.title;
      }
      childProps.disabled === true && (item2.disabled = true);
      _extends$5(item2, childProps["data-extra"] || {});
    } else if (isOptionGroup && deep < 1) {
      item2.label = childProps.label || "Group";
      item2.children = parseDataSourceFromChildren$1(childProps.children, deep + 1);
    }
    source.push(item2);
  });
  return source;
}
function normalizeDataSource$1(dataSource2) {
  var deep = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var showDataSourceChildren = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  var source = [];
  dataSource2.forEach(function(item, index2) {
    if (/string|boolean|number/.test(typeof item === "undefined" ? "undefined" : _typeof$1(item))) {
      item = {label: "" + item, value: item};
    }
    if (item.__isAddon) {
      return;
    }
    var item2 = {deep};
    if (Array.isArray(item.children) && deep < 1 && showDataSourceChildren) {
      item2.label = item.label || item.value || "Group " + index2;
      item2.children = normalizeDataSource$1(item.children, deep + 1);
    } else {
      var _item = item, value = _item.value, label = _item.label, disabled = _item.disabled, title = _item.title, others = _objectWithoutProperties$2(_item, ["value", "label", "disabled", "title"]);
      item2.value = !isNull$1(value) ? value : "" + index2;
      item2.label = label || "" + item2.value;
      if ("title" in item) {
        item2.title = title;
      }
      disabled === true && (item2.disabled = true);
      _extends$5(item2, others);
    }
    source.push(item2);
  });
  return source;
}
function flattingDataSource$1(dataSource2) {
  var source = [];
  dataSource2.forEach(function(item) {
    if (Array.isArray(item.children)) {
      source.push.apply(source, flattingDataSource$1(item.children));
    } else {
      source.push(item);
    }
  });
  return source;
}
function filterDataSource$1(dataSource2, key, filter2, addonKey) {
  if (!Array.isArray(dataSource2)) {
    return [];
  }
  if (typeof key === "undefined" || key === null) {
    return [].concat(dataSource2);
  }
  var addKey = true;
  var menuDataSource = loopMap$1(dataSource2, function(option) {
    if (key === "" + option.value) {
      addKey = false;
    }
    return filter2(key, option) && !option.__isAddon && option;
  });
  if (addonKey && key && addKey) {
    menuDataSource.unshift({
      value: key,
      label: key,
      __isAddon: true
    });
  }
  return menuDataSource;
}
function getKeyItemByValue$1(value, valueMap) {
  var item = void 0;
  if ((typeof value === "undefined" ? "undefined" : _typeof$1(value)) === "object") {
    if (value.hasOwnProperty("value")) {
      item = value;
    } else {
      item = _extends$5({
        value: ""
      }, value);
    }
  } else {
    item = valueMap["" + value] || {
      value,
      label: value
    };
  }
  return item;
}
function getValueDataSource$1(value, mapValueDS, mapMenuDS) {
  if (isNull$1(value)) {
    return {};
  }
  var newValue = [];
  var newValueDS = [];
  var newMapValueDS = {};
  var _newMapDS = _extends$5({}, mapValueDS, mapMenuDS);
  if (Array.isArray(value)) {
    value.forEach(function(v2) {
      var item2 = getKeyItemByValue$1(v2, _newMapDS);
      newValueDS.push(item2);
      newMapValueDS["" + item2.value] = item2;
      newValue.push(item2.value);
    });
    return {
      value: newValue,
      valueDS: newValueDS,
      mapValueDS: newMapValueDS
    };
  } else {
    var _mapValueDS;
    var item = getKeyItemByValue$1(value, _newMapDS);
    return {
      value: item.value,
      valueDS: item,
      mapValueDS: (_mapValueDS = {}, _mapValueDS["" + item.value] = item, _mapValueDS)
    };
  }
}
function valueToSelectKey$1(value) {
  var val = void 0;
  if ((typeof value === "undefined" ? "undefined" : _typeof$1(value)) === "object" && value.hasOwnProperty("value")) {
    val = value.value;
  } else {
    val = value;
  }
  return "" + val;
}
var DataStore$1 = function() {
  function DataStore2(options) {
    _classCallCheck$1(this, DataStore2);
    this.options = _extends$5({
      filter: filter$1,
      key: void 0,
      addonKey: false,
      filterLocal: true,
      showDataSourceChildren: true
    }, options);
    this.dataSource = [];
    this.menuDataSource = [];
    this.mapDataSource = {};
    this.enabledDataSource = [];
    this.flattenDataSource = [];
  }
  DataStore2.prototype.setOptions = function setOptions(options) {
    _extends$5(this.options, options);
  };
  DataStore2.prototype.updateByDS = function updateByDS(dataSource2) {
    var isChildren = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    this.dataSource = isChildren ? parseDataSourceFromChildren$1(dataSource2) : normalizeDataSource$1(dataSource2, 0, this.options.showDataSourceChildren);
    return this.updateAll();
  };
  DataStore2.prototype.updateByKey = function updateByKey(key) {
    if (key === this.options.key) {
      return this.getMenuDS();
    }
    this.options.key = key;
    return this.updateAll();
  };
  DataStore2.prototype.getOriginDS = function getOriginDS() {
    return this.dataSource;
  };
  DataStore2.prototype.getMenuDS = function getMenuDS() {
    return this.menuDataSource;
  };
  DataStore2.prototype.getFlattenDS = function getFlattenDS() {
    return this.flattenDataSource;
  };
  DataStore2.prototype.getEnableDS = function getEnableDS() {
    return this.enabledDataSource;
  };
  DataStore2.prototype.getMapDS = function getMapDS() {
    return this.mapDataSource;
  };
  DataStore2.prototype.updateAll = function updateAll() {
    var _this2 = this;
    var _options = this.options, key = _options.key, filter2 = _options.filter, filterLocal = _options.filterLocal, showDataSourceChildren = _options.showDataSourceChildren;
    this.menuDataSource = filterDataSource$1(this.dataSource, filterLocal ? key : "", filter2, this.options.addonKey);
    this.flattenDataSource = showDataSourceChildren ? flattingDataSource$1(this.menuDataSource) : this.menuDataSource;
    this.mapDataSource = {};
    this.flattenDataSource.forEach(function(item) {
      _this2.mapDataSource["" + item.value] = item;
    });
    this.enabledDataSource = this.flattenDataSource.filter(function(item) {
      return !item.disabled;
    });
    return this.menuDataSource;
  };
  return DataStore2;
}();
var _class$1o, _temp$1j;
var NOOP$1 = function NOOP3() {
};
var MAX_SYNC_UPDATES$1 = 40;
var isEqualSubset$1 = function isEqualSubset3(a, b2) {
  for (var key in b2) {
    if (a[key] !== b2[key]) {
      return false;
    }
  }
  return true;
};
var getOffset$3 = function getOffset3(el) {
  var offset = el.clientLeft || 0;
  do {
    offset += el.offsetTop || 0;
    el = el.offsetParent;
  } while (el);
  return offset;
};
var constrain$1 = function constrain3(from, size, _ref) {
  var children = _ref.children, minSize = _ref.minSize;
  var length = children && children.length;
  size = Math.max(size, minSize);
  if (size > length) {
    size = length;
  }
  from = from ? Math.max(Math.min(from, length - size), 0) : 0;
  return {from, size};
};
var VirtualList$3 = (_temp$1j = _class$1o = function(_Component) {
  _inherits$1(VirtualList2, _Component);
  function VirtualList2(props) {
    _classCallCheck$1(this, VirtualList2);
    var _this2 = _possibleConstructorReturn$1(this, _Component.call(this, props));
    var jumpIndex = props.jumpIndex;
    var _constrain = constrain$1(jumpIndex, 0, props), from = _constrain.from, size = _constrain.size;
    _this2.state = {from, size};
    _this2.cache = {};
    _this2.cacheAdd = {};
    _this2.scrollTo = _this2.scrollTo.bind(_this2);
    _this2.cachedScroll = null;
    _this2.unstable = false;
    _this2.updateCounter = 0;
    return _this2;
  }
  VirtualList2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var from = prevState.from, size = prevState.size;
    return constrain$1(from, size, nextProps);
  };
  VirtualList2.prototype.componentDidMount = function componentDidMount() {
    var jumpIndex = this.props.jumpIndex;
    this.updateFrameAndClearCache = this.updateFrameAndClearCache.bind(this);
    events$1.on(window, "resize", this.updateFrameAndClearCache);
    this.updateFrame(this.scrollTo.bind(this, jumpIndex));
  };
  VirtualList2.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    var _this2 = this;
    var oldIndex = prevProps.jumpIndex;
    var newIndex = this.props.jumpIndex;
    if (oldIndex !== newIndex) {
      this.updateFrame(this.scrollTo.bind(this, newIndex));
    }
    if (this.unstable) {
      return;
    }
    if (++this.updateCounter > MAX_SYNC_UPDATES$1) {
      this.unstable = true;
    }
    if (!this.updateCounterTimeoutId) {
      this.updateCounterTimeoutId = setTimeout(function() {
        _this2.updateCounter = 0;
        delete _this2.updateCounterTimeoutId;
      }, 0);
    }
    this.updateFrame();
  };
  VirtualList2.prototype.componentWillUnmount = function componentWillUnmount() {
    events$1.off(window, "resize", this.updateFrameAndClearCache);
    events$1.off(this.scrollParent, "scroll", this.updateFrameAndClearCache);
    events$1.off(this.scrollParent, "mousewheel", NOOP$1);
  };
  VirtualList2.prototype.maybeSetState = function maybeSetState(b2, cb) {
    if (isEqualSubset$1(this.state, b2)) {
      return cb();
    }
    this.setState(b2, cb);
  };
  VirtualList2.prototype.getEl = function getEl() {
    return this.el || this.items || {};
  };
  VirtualList2.prototype.getScrollParent = function getScrollParent() {
    var el = this.getEl();
    el = el.parentElement;
    switch (window.getComputedStyle(el).overflowY) {
      case "auto":
      case "scroll":
      case "overlay":
      case "visible":
        return el;
    }
    return window;
  };
  VirtualList2.prototype.getScroll = function getScroll2() {
    var scrollParent = this.scrollParent;
    var scrollKey = "scrollTop";
    var actual = scrollParent === window ? document.body[scrollKey] || document.documentElement[scrollKey] : scrollParent[scrollKey];
    var max2 = this.getScrollSize() - this.getViewportSize();
    var scroll = Math.max(0, Math.min(actual, max2));
    var el = this.getEl();
    this.cachedScroll = getOffset$3(scrollParent) + scroll - getOffset$3(el);
    return this.cachedScroll;
  };
  VirtualList2.prototype.setScroll = function setScroll(offset) {
    var scrollParent = this.scrollParent;
    offset += getOffset$3(this.getEl());
    if (scrollParent === window) {
      return window.scrollTo(0, offset);
    }
    offset -= getOffset$3(this.scrollParent);
    scrollParent.scrollTop = offset;
  };
  VirtualList2.prototype.getViewportSize = function getViewportSize() {
    var scrollParent = this.scrollParent;
    return scrollParent === window ? window.innerHeight : scrollParent.clientHeight;
  };
  VirtualList2.prototype.getScrollSize = function getScrollSize() {
    var scrollParent = this.scrollParent;
    var _document = document, body = _document.body, documentElement = _document.documentElement;
    var key = "scrollHeight";
    return scrollParent === window ? Math.max(body[key], documentElement[key]) : scrollParent[key];
  };
  VirtualList2.prototype.getStartAndEnd = function getStartAndEnd() {
    var threshold = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props.threshold;
    var scroll = this.getScroll();
    var trueScroll = scroll;
    var start = Math.max(0, trueScroll - threshold);
    var end = trueScroll + this.getViewportSize() + threshold;
    return {start, end};
  };
  VirtualList2.prototype.updateFrameAndClearCache = function updateFrameAndClearCache(cb) {
    this.cachedScroll = null;
    return this.updateFrame(cb);
  };
  VirtualList2.prototype.updateFrame = function updateFrame(cb) {
    this.updateScrollParent();
    if (typeof cb !== "function") {
      cb = NOOP$1;
    }
    return this.updateVariableFrame(cb);
  };
  VirtualList2.prototype.updateScrollParent = function updateScrollParent() {
    var prev = this.scrollParent;
    this.scrollParent = this.getScrollParent();
    if (prev === this.scrollParent) {
      return;
    }
    if (prev) {
      events$1.off(prev, "scroll", this.updateFrameAndClearCache);
      events$1.off(prev, "mousewheel", NOOP$1);
    }
    events$1.on(this.scrollParent, "scroll", this.updateFrameAndClearCache);
    events$1.on(this.scrollParent, "mousewheel", NOOP$1);
  };
  VirtualList2.prototype.updateVariableFrame = function updateVariableFrame(cb) {
    if (!this.props.itemSizeGetter) {
      this.cacheSizes();
    }
    var _getStartAndEnd = this.getStartAndEnd(), start = _getStartAndEnd.start, end = _getStartAndEnd.end;
    var _props = this.props, pageSize = _props.pageSize, children = _props.children;
    var length = children.length;
    var space = 0;
    var from = 0;
    var size = 0;
    var maxFrom = length - 1;
    while (from < maxFrom) {
      var itemSize = this.getSizeOf(from);
      if (itemSize === null || itemSize === void 0 || space + itemSize > start) {
        break;
      }
      space += itemSize;
      ++from;
    }
    var maxSize = length - from;
    while (size < maxSize && space < end) {
      var _itemSize = this.getSizeOf(from + size);
      if (_itemSize === null || _itemSize === void 0) {
        size = Math.min(size + pageSize, maxSize);
        break;
      }
      space += _itemSize;
      ++size;
    }
    this.maybeSetState({from, size}, cb);
  };
  VirtualList2.prototype.getSpaceBefore = function getSpaceBefore(index2) {
    var cache2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!index2) {
      return 0;
    }
    if (cache2[index2] !== null && cache2[index2] !== void 0) {
      return cache2[index2] || 0;
    }
    var from = index2;
    while (from > 0 && (cache2[from] === null || cache2[from] === void 0)) {
      from--;
    }
    var space = cache2[from] || 0;
    for (var i = from; i < index2; ++i) {
      cache2[i] = space;
      var itemSize = this.getSizeOf(i);
      if (itemSize === null || itemSize === void 0) {
        break;
      }
      space += itemSize;
    }
    cache2[index2] = space;
    return cache2[index2] || 0;
  };
  VirtualList2.prototype.cacheSizes = function cacheSizes() {
    var cache2 = this.cache;
    var from = this.state.from;
    var _items = this.items, children = _items.children, _items$props = _items.props, props = _items$props === void 0 ? {} : _items$props;
    var itemEls = children || props.children || [];
    try {
      for (var i = 0, l2 = itemEls.length; i < l2; ++i) {
        var ulRef = findDOMNode(this.items);
        var height = ulRef.children[i].offsetHeight;
        if (height > 0) {
          cache2[from + i] = height;
        }
      }
    } catch (error) {
    }
  };
  VirtualList2.prototype.getSizeOf = function getSizeOf(index2) {
    var _this3 = this;
    var cache2 = this.cache;
    var _props2 = this.props, itemSizeGetter = _props2.itemSizeGetter, jumpIndex = _props2.jumpIndex;
    if (index2 in cache2) {
      return cache2[index2];
    }
    if (itemSizeGetter) {
      return itemSizeGetter(index2);
    }
    var height = Object.keys(this.cache).map(function(key) {
      return _this3.cache[key];
    }).pop();
    if (!this.defaultItemHeight && jumpIndex > -1 && height) {
      this.defaultItemHeight = height;
    }
    if (this.defaultItemHeight) {
      return this.defaultItemHeight;
    }
  };
  VirtualList2.prototype.scrollTo = function scrollTo(index2) {
    this.setScroll(this.getSpaceBefore(index2, this.cacheAdd));
  };
  VirtualList2.prototype.renderMenuItems = function renderMenuItems() {
    var _this4 = this;
    var _props3 = this.props, children = _props3.children, itemsRenderer3 = _props3.itemsRenderer;
    var _state = this.state, from = _state.from, size = _state.size;
    var items = [];
    for (var i = 0; i < size; ++i) {
      items.push(children[from + i]);
    }
    return itemsRenderer3(items, function(c2) {
      _this4.items = c2;
      return _this4.items;
    });
  };
  VirtualList2.prototype.render = function render2() {
    var _cx, _this5 = this;
    var _props4 = this.props, _props4$children = _props4.children, children = _props4$children === void 0 ? [] : _props4$children, prefix2 = _props4.prefix, className = _props4.className;
    var length = children.length;
    var from = this.state.from;
    var items = this.renderMenuItems();
    var style = {position: "relative"};
    var size = this.getSpaceBefore(length, this.cacheAdd);
    if (size) {
      style.height = size;
    }
    var offset = this.getSpaceBefore(from, this.cacheAdd);
    var transform10 = "translate(0px, " + offset + "px)";
    var listStyle = {
      msTransform: transform10,
      WebkitTransform: transform10,
      transform: transform10
    };
    var cls = classnames$1((_cx = {}, _cx[prefix2 + "virtual-list-wrapper"] = true, _cx[className] = !!className, _cx));
    return React.createElement("div", {
      className: cls,
      style,
      ref: function ref(c2) {
        _this5.el = c2;
        return _this5.el;
      }
    }, React.createElement("div", {style: listStyle}, items));
  };
  return VirtualList2;
}(Component), _class$1o.displayName = "VirtualList", _class$1o.propTypes = {
  prefix: propTypes.string,
  children: propTypes.any,
  minSize: propTypes.number,
  pageSize: propTypes.number,
  itemsRenderer: propTypes.func,
  threshold: propTypes.number,
  itemSizeGetter: propTypes.func,
  jumpIndex: propTypes.number,
  className: propTypes.string
}, _class$1o.defaultProps = {
  prefix: "next-",
  itemsRenderer: function itemsRenderer2(items, ref) {
    return React.createElement("ul", {ref}, items);
  },
  minSize: 1,
  pageSize: 10,
  jumpIndex: 0,
  threshold: 100
}, _temp$1j);
VirtualList$3.displayName = "VirtualList";
var VirtualList$4 = polyfill$1(VirtualList$3);
var NextVirtualList = NextConfigProvider.config(VirtualList$4);
var _class$1p, _temp$1k;
var Popup$9 = NextOverlay.Popup;
var MenuItem$1 = NextMenu.Item, MenuGroup$1 = NextMenu.Group;
var noop$v = func$1.noop, bindCtx$t = func$1.bindCtx, makeChain$d = func$1.makeChain;
function preventDefault$5(e2) {
  e2.preventDefault();
}
var Base$6 = (_temp$1k = _class$1p = function(_React$Component) {
  _inherits$1(Base2, _React$Component);
  function Base2(props) {
    _classCallCheck$1(this, Base2);
    var _this2 = _possibleConstructorReturn$1(this, _React$Component.call(this, props));
    _this2.saveSelectRef = function(ref) {
      _this2.selectDOM = findDOMNode(ref);
    };
    _this2.saveInputRef = function(ref) {
      if (ref && ref.getInstance()) {
        _this2.inputRef = ref.getInstance();
      }
    };
    _this2.savePopupRef = function(ref) {
      _this2.popupRef = ref;
      if (_this2.props.popupProps && typeof _this2.props.popupProps.ref === "function") {
        _this2.props.popupProps.ref(ref);
      }
    };
    _this2.dataStore = new DataStore$1({
      filter: props.filter,
      filterLocal: props.filterLocal,
      showDataSourceChildren: props.showDataSourceChildren
    });
    var mode = props.mode;
    var value = "value" in props ? props.value : props.defaultValue;
    if (props.mode !== "single" && value && !Array.isArray(value)) {
      value = [value];
    }
    _this2.state = {
      dataStore: _this2.dataStore,
      value,
      visible: "visible" in props ? props.visible : props.defaultVisible,
      dataSource: _this2.setDataSource(_this2.props),
      width: 100,
      highlightKey: "highlightKey" in props ? props.highlightKey : props.defaultHighlightKey,
      srReader: ""
    };
    bindCtx$t(_this2, ["handleMenuBodyClick", "handleVisibleChange", "focusInput", "beforeOpen", "beforeClose", "afterClose", "handleResize"]);
    return _this2;
  }
  Base2.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;
    setTimeout(function() {
      return _this2.syncWidth();
    }, 0);
    events$1.on(window, "resize", this.handleResize);
  };
  Base2.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (prevProps.label !== this.props.label || prevState.value !== this.state.value) {
      this.syncWidth();
    }
  };
  Base2.prototype.componentWillUnmount = function componentWillUnmount() {
    events$1.off(window, "resize", this.handleResize);
    clearTimeout(this.resizeTimeout);
  };
  Base2.prototype.syncWidth = function syncWidth() {
    var _this3 = this;
    var _props2 = this.props, popupStyle = _props2.popupStyle, popupProps = _props2.popupProps;
    if (popupStyle && "width" in popupStyle || popupProps && popupProps.style && "width" in popupProps.style) {
      return;
    }
    var width = dom$1.getStyle(this.selectDOM, "width");
    if (width && this.width !== width) {
      this.width = width;
      if (this.popupRef && this.shouldAutoWidth()) {
        setTimeout(function() {
          if (_this3.popupRef && _this3.popupRef.getInstance().overlay) {
            dom$1.setStyle(_this3.popupRef.getInstance().overlay.getInstance().getContentNode(), "width", _this3.width);
          }
        }, 0);
      }
    }
  };
  Base2.prototype.handleResize = function handleResize() {
    var _this4 = this;
    clearTimeout(this.resizeTimeout);
    if (this.state.visible) {
      this.resizeTimeout = setTimeout(function() {
        _this4.syncWidth();
      }, 200);
    }
  };
  Base2.prototype.setDataSource = function setDataSource(props) {
    var dataSource2 = props.dataSource, children = props.children;
    if (Children.count(children)) {
      return this.dataStore.updateByDS(children, true);
    } else if (Array.isArray(dataSource2)) {
      return this.dataStore.updateByDS(dataSource2, false);
    }
    return [];
  };
  Base2.prototype.setVisible = function setVisible(visible, type) {
    if (this.props.disabled && visible || this.state.visible === visible) {
      return;
    }
    if (!("visible" in this.props)) {
      this.setState({
        visible
      });
    }
    this.props.onVisibleChange(visible, type);
  };
  Base2.prototype.setFirstHightLightKeyForMenu = function setFirstHightLightKeyForMenu() {
    if (!this.props.autoHighlightFirstItem) {
      return;
    }
    if (this.dataStore.getMenuDS().length && this.dataStore.getEnableDS().length) {
      var highlightKey = "" + this.dataStore.getEnableDS()[0].value;
      this.setState({
        highlightKey
      });
      this.props.onToggleHighlightItem(highlightKey, "autoFirstItem");
    }
  };
  Base2.prototype.handleChange = function handleChange(value) {
    var _props3;
    if (!("value" in this.props)) {
      this.setState({
        value
      });
    }
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    (_props3 = this.props).onChange.apply(_props3, [value].concat(args));
  };
  Base2.prototype.handleMenuBodyClick = function handleMenuBodyClick(e2) {
    this.focusInput(e2);
  };
  Base2.prototype.toggleHighlightItem = function toggleHighlightItem(dir) {
    if (!this.state.visible) {
      this.setVisible(true, "enter");
      return;
    }
    var maxCount = this.dataStore.getEnableDS().length;
    if (!maxCount) {
      return false;
    }
    var highlightKey = this.state.highlightKey;
    var highlightIndex = -1;
    highlightKey !== null && this.dataStore.getEnableDS().some(function(item, index2) {
      if ("" + item.value === highlightKey) {
        highlightIndex = index2;
      }
      return highlightIndex > -1;
    });
    highlightIndex += dir;
    if (highlightIndex < 0) {
      highlightIndex = maxCount - 1;
    }
    if (highlightIndex >= maxCount) {
      highlightIndex = 0;
    }
    var highlightItem = this.dataStore.getEnableDS()[highlightIndex];
    highlightKey = highlightItem ? "" + highlightItem.value : null;
    this.setState({highlightKey, srReader: highlightItem.label});
    this.scrollMenuIntoView();
    return highlightItem;
  };
  Base2.prototype.scrollMenuIntoView = function scrollMenuIntoView() {
    var _this5 = this;
    var prefix2 = this.props.prefix;
    clearTimeout(this.highlightTimer);
    this.highlightTimer = setTimeout(function() {
      try {
        var menuNode = findDOMNode(_this5.menuRef);
        var itemNode = menuNode.querySelector("." + prefix2 + "select-menu-item." + prefix2 + "focused");
        itemNode && itemNode.scrollIntoViewIfNeeded();
      } catch (ex) {
      }
    });
  };
  Base2.prototype.renderMenuHeader = function renderMenuHeader() {
    var menuProps = this.props.menuProps;
    if (menuProps && "header" in menuProps) {
      return menuProps.header;
    }
    return null;
  };
  Base2.prototype.handleSelect = function handleSelect() {
  };
  Base2.prototype.renderMenu = function renderMenu() {
    var _classNames, _this6 = this;
    var _props4 = this.props, prefix2 = _props4.prefix, mode = _props4.mode, locale = _props4.locale, notFoundContent = _props4.notFoundContent, useVirtual = _props4.useVirtual, menuProps = _props4.menuProps;
    var _state = this.state, dataSource2 = _state.dataSource, highlightKey = _state.highlightKey;
    var value = this.state.value;
    var selectedKeys = void 0;
    if (isNull$1(value) || value.length === 0 || this.isAutoComplete) {
      selectedKeys = [];
    } else if (isSingle$1(mode)) {
      selectedKeys = [valueToSelectKey$1(value)];
    } else {
      selectedKeys = [].concat(value).map(function(n2) {
        return valueToSelectKey$1(n2);
      });
    }
    var children = this.renderMenuItem(dataSource2);
    var menuClassName = classnames$1((_classNames = {}, _classNames[prefix2 + "select-menu"] = true, _classNames[prefix2 + "select-menu-empty"] = !children || !children.length, _classNames));
    if (!children || !children.length) {
      children = React.createElement("span", {className: prefix2 + "select-menu-empty-content"}, notFoundContent || locale.notFoundContent);
    }
    var customProps = _extends$5({}, menuProps, {
      children,
      role: "listbox",
      selectedKeys,
      focusedKey: highlightKey,
      focusable: false,
      selectMode: isSingle$1(mode) ? "single" : "multiple",
      onSelect: this.handleMenuSelect,
      onItemClick: this.handleItemClick,
      header: this.renderMenuHeader(),
      onClick: this.handleMenuBodyClick,
      onMouseDown: preventDefault$5,
      className: menuClassName
    });
    var menuStyle = this.shouldAutoWidth() ? {width: this.width} : {minWidth: this.width};
    return useVirtual && children.length ? React.createElement("div", {className: prefix2 + "select-menu-wrapper", style: _extends$5({position: "relative"}, menuStyle)}, React.createElement(NextVirtualList, {
      itemsRenderer: function itemsRenderer3(items, _ref) {
        return React.createElement(NextMenu, _extends$5({
          ref: function ref(c2) {
            _ref(c2);
            _this6.menuRef = c2;
          },
          flatenContent: true
        }, customProps), items);
      }
    }, children)) : React.createElement(NextMenu, _extends$5({}, customProps, {style: menuStyle}));
  };
  Base2.prototype.renderMenuItem = function renderMenuItem(dataSource2) {
    var _this7 = this;
    var _props5 = this.props, prefix2 = _props5.prefix, itemRender3 = _props5.itemRender, showDataSourceChildren = _props5.showDataSourceChildren;
    var searchKey = void 0;
    if (this.isAutoComplete) {
      searchKey = this.state.value;
    } else {
      searchKey = this.state.searchValue;
    }
    return dataSource2.map(function(item, index2) {
      if (!item) {
        return null;
      }
      if (Array.isArray(item.children) && showDataSourceChildren) {
        return React.createElement(MenuGroup$1, {key: index2, label: item.label}, _this7.renderMenuItem(item.children));
      } else {
        var itemProps = {
          role: "option",
          key: item.value,
          className: prefix2 + "select-menu-item",
          disabled: item.disabled
        };
        if ("title" in item) {
          itemProps.title = item.title;
        }
        return React.createElement(MenuItem$1, itemProps, itemRender3(item, searchKey));
      }
    });
  };
  Base2.prototype.focusInput = function focusInput() {
    this.inputRef.focus();
  };
  Base2.prototype.focus = function focus2() {
    var _inputRef;
    (_inputRef = this.inputRef).focus.apply(_inputRef, arguments);
  };
  Base2.prototype.beforeOpen = function beforeOpen() {
    var _state2 = this.state, value = _state2.value, highlightKey = _state2.highlightKey;
    if (this.props.mode === "single" && !value && !highlightKey) {
      this.setFirstHightLightKeyForMenu();
    }
    this.syncWidth();
  };
  Base2.prototype.beforeClose = function beforeClose() {
  };
  Base2.prototype.afterClose = function afterClose() {
  };
  Base2.prototype.shouldAutoWidth = function shouldAutoWidth() {
    if (this.props.popupComponent) {
      return false;
    }
    return this.props.autoWidth;
  };
  Base2.prototype.render = function render2(props) {
    var _classNames2;
    var prefix2 = props.prefix, mode = props.mode, popupProps = props.popupProps, popupContainer = props.popupContainer, popupClassName = props.popupClassName, popupStyle = props.popupStyle, popupContent = props.popupContent, canCloseByTrigger = props.canCloseByTrigger, followTrigger = props.followTrigger, cache2 = props.cache, popupComponent = props.popupComponent, isPreview = props.isPreview, renderPreview = props.renderPreview, style = props.style, className = props.className;
    var cls = classnames$1((_classNames2 = {}, _classNames2[prefix2 + "select-auto-complete-menu"] = !popupContent && this.isAutoComplete, _classNames2[prefix2 + "select-" + mode + "-menu"] = !popupContent && !!mode, _classNames2), popupClassName || popupProps.className);
    if (isPreview) {
      if (this.isAutoComplete) {
        return React.createElement(NextInput, {
          style,
          className,
          isPreview,
          renderPreview,
          value: this.state.value
        });
      } else {
        var value = this.state.value;
        var valueDS = this.state.value;
        if (!this.useDetailValue()) {
          if (value === this.valueDataSource.value) {
            valueDS = this.valueDataSource.valueDS;
          } else {
            valueDS = getValueDataSource$1(value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS()).valueDS;
          }
        }
        if (typeof renderPreview === "function") {
          var _classNames3;
          var previewCls = classnames$1((_classNames3 = {}, _classNames3[prefix2 + "form-preview"] = true, _classNames3[className] = !!className, _classNames3));
          return React.createElement("div", {style, className: previewCls}, renderPreview(valueDS, this.props));
        } else {
          var fillProps = this.props.fillProps;
          if (mode === "single") {
            return React.createElement(NextInput, {
              style,
              className,
              isPreview,
              value: valueDS ? fillProps ? valueDS[fillProps] : valueDS.label : ""
            });
          } else {
            return React.createElement(NextInput, {
              style,
              className,
              isPreview,
              value: (valueDS || []).map(function(i) {
                return i.label;
              }).join(", ")
            });
          }
        }
      }
    }
    var _props = _extends$5({
      triggerType: "click",
      autoFocus: !!this.props.popupAutoFocus,
      cache: cache2
    }, popupProps, {
      beforeOpen: makeChain$d(this.beforeOpen, popupProps.beforeOpen),
      beforeClose: makeChain$d(this.beforeClose, popupProps.beforeClose),
      afterClose: makeChain$d(this.afterClose, popupProps.afterClose),
      canCloseByTrigger,
      followTrigger,
      visible: this.state.visible,
      onVisibleChange: this.handleVisibleChange,
      shouldUpdatePosition: true,
      container: popupContainer || popupProps.container,
      className: cls,
      style: popupStyle || popupProps.style
    });
    var Tag2 = popupComponent ? popupComponent : Popup$9;
    return React.createElement(Tag2, _extends$5({}, _props, {trigger: this.renderSelect(), ref: this.savePopupRef}), popupContent ? React.createElement("div", {
      className: prefix2 + "select-popup-wrap",
      style: this.shouldAutoWidth() ? {width: this.width} : {}
    }, popupContent) : this.renderMenu());
  };
  return Base2;
}(React.Component), _class$1p.propTypes = {
  prefix: propTypes.string,
  size: propTypes.oneOf(["small", "medium", "large"]),
  value: propTypes.any,
  defaultValue: propTypes.any,
  placeholder: propTypes.string,
  autoWidth: propTypes.bool,
  label: propTypes.node,
  hasClear: propTypes.bool,
  state: propTypes.oneOf(["error", "loading"]),
  readOnly: propTypes.bool,
  disabled: propTypes.bool,
  visible: propTypes.bool,
  defaultVisible: propTypes.bool,
  onVisibleChange: propTypes.func,
  popupContainer: propTypes.any,
  popupClassName: propTypes.any,
  popupStyle: propTypes.object,
  popupProps: propTypes.object,
  followTrigger: propTypes.bool,
  popupContent: propTypes.node,
  menuProps: propTypes.object,
  filterLocal: propTypes.bool,
  filter: propTypes.func,
  defaultHighlightKey: propTypes.string,
  highlightKey: propTypes.string,
  onToggleHighlightItem: propTypes.func,
  autoHighlightFirstItem: propTypes.bool,
  useVirtual: propTypes.bool,
  className: propTypes.any,
  children: propTypes.any,
  dataSource: propTypes.array,
  itemRender: propTypes.func,
  mode: propTypes.string,
  notFoundContent: propTypes.node,
  locale: propTypes.object,
  rtl: propTypes.bool,
  popupComponent: propTypes.any,
  isPreview: propTypes.bool,
  renderPreview: propTypes.func,
  showDataSourceChildren: propTypes.bool
}, _class$1p.defaultProps = {
  prefix: "next-",
  size: "medium",
  autoWidth: true,
  onChange: noop$v,
  onVisibleChange: noop$v,
  onToggleHighlightItem: noop$v,
  popupProps: {},
  filterLocal: true,
  filter: filter$1,
  itemRender: function itemRender2(item) {
    return item.label || item.value;
  },
  locale: zhCN$1.Select,
  autoHighlightFirstItem: true,
  showDataSourceChildren: true,
  defaultHighlightKey: null
}, _temp$1k);
Base$6.displayName = "Base";
var _class$1q, _temp$1l;
var bindCtx$u = func$1.bindCtx, noop$w = func$1.noop;
var isIE9$1 = env$3.ieVersion === 9;
var Select$2 = (_temp$1l = _class$1q = function(_Base) {
  _inherits$1(Select2, _Base);
  function Select2(props) {
    _classCallCheck$1(this, Select2);
    var _this2 = _possibleConstructorReturn$1(this, _Base.call(this, props));
    _this2.handleWrapClick = function(e2) {
      if (e2.target.nodeName !== "INPUT") {
        e2.preventDefault();
      }
      _this2.focusInput();
    };
    _this2.handleArrowClick = function(e2) {
      e2.preventDefault();
      _this2.focusInput();
      _this2.state.visible && _this2.hasSearch() && _this2.setVisible(false);
    };
    _this2.handleClear = function(e2) {
      e2.stopPropagation();
      _this2.handleChange(void 0, "clear");
    };
    _this2.valueDataSource = {
      valueDS: [],
      mapValueDS: {}
    };
    var searchValue = "searchValue" in props ? props.searchValue : "";
    _this2.dataStore.setOptions({
      key: searchValue,
      addonKey: props.mode === "tag"
    });
    _extends$5(_this2.state, {
      searchValue,
      dataSource: _this2.setDataSource(props)
    });
    if (typeof _this2.state.value !== "undefined") {
      _this2.valueDataSource = getValueDataSource$1(_this2.state.value, _this2.valueDataSource.mapValueDS, _this2.dataStore.getMapDS());
    }
    bindCtx$u(_this2, ["handleMenuSelect", "handleItemClick", "handleSearch", "handleSearchKeyDown", "handleSelectAll", "maxTagPlaceholder"]);
    return _this2;
  }
  Select2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var state = {};
    if ("value" in nextProps && nextProps.value !== prevState.value) {
      _extends$5(state, {
        value: nextProps.value
      });
    }
    if ("highlightKey" in nextProps && nextProps.highlightKey !== prevState.highlightKey) {
      _extends$5(state, {
        highlightKey: nextProps.highlightKey
      });
    }
    if ("searchValue" in nextProps && nextProps.searchValue !== prevState.searchValue) {
      var searchValue = nextProps.searchValue;
      _extends$5(state, {
        searchValue: searchValue === void 0 || searchValue === null ? "" : searchValue
      });
    }
    if ("visible" in nextProps && nextProps.visible !== prevState.visible) {
      _extends$5(state, {
        visible: nextProps.visible
      });
    }
    if (Object.keys(state).length) {
      return state;
    }
    return null;
  };
  Select2.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    var props = this.props;
    if ("searchValue" in props && this.state.searchValue !== prevState.searchValue) {
      this.dataStore.setOptions({key: this.state.searchValue});
    }
    if (props.mode !== prevProps.mode) {
      this.dataStore.setOptions({
        addonKey: props.mode === "tag"
      });
    }
    if (props.mode !== prevProps.mode) {
      this.dataStore.setOptions({
        addonKey: props.mode === "tag"
      });
    }
    if (props.filter !== prevProps.filter) {
      this.dataStore.setOptions({
        filter: props.filter
      });
    }
    if (props.filterLocal !== prevProps.filterLocal) {
      this.dataStore.setOptions({
        filterLocal: props.filterLocal
      });
    }
    if (prevProps.children !== props.children || prevProps.dataSource !== props.dataSource) {
      this.setState({
        dataSource: this.setDataSource(props)
      });
      if (!props.popupContent) {
        this.setFirstHightLightKeyForMenu();
      }
    }
    if ("value" in props) {
      this.valueDataSource = getValueDataSource$1(props.value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
      this.updateSelectAllYet(this.valueDataSource.value);
    } else if ("defaultValue" in props && props.defaultValue === this.valueDataSource.value && (props.children !== prevProps.children || props.dataSource !== prevProps.dataSource)) {
      this.valueDataSource = getValueDataSource$1(props.defaultValue, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
    }
    if (prevProps.label !== this.props.label || prevState.value !== this.state.value || props.searchValue !== this.state.searchValue) {
      this.syncWidth();
    }
  };
  Select2.prototype.componentDidMount = function componentDidMount() {
    if (isIE9$1) {
      this.ie9Hack();
    }
    _Base.prototype.componentDidMount.call(this);
  };
  Select2.prototype.ie9Hack = function ie9Hack() {
    try {
      var width = this.selectDOM.currentStyle.width;
      this.setState({
        fixWidth: width !== "auto"
      });
    } catch (e2) {
    }
  };
  Select2.prototype.useDetailValue = function useDetailValue() {
    var _props = this.props, popupContent = _props.popupContent, useDetailValue2 = _props.useDetailValue, dataSource2 = _props.dataSource;
    return useDetailValue2 || popupContent && !dataSource2;
  };
  Select2.prototype.hasSearch = function hasSearch() {
    var _props2 = this.props, showSearch = _props2.showSearch, mode = _props2.mode;
    return showSearch || mode === "tag";
  };
  Select2.prototype.handleMenuSelect = function handleMenuSelect(keys3, item) {
    var _props3 = this.props, mode = _props3.mode, readOnly = _props3.readOnly, disabled = _props3.disabled;
    if (readOnly || disabled) {
      return false;
    }
    var isSingle2 = mode === "single";
    if (isSingle2) {
      return this.handleSingleSelect(keys3[0], "itemClick");
    } else {
      return this.handleMultipleSelect(keys3, "itemClick", item.props && item.props._key);
    }
  };
  Select2.prototype.handleItemClick = function handleItemClick() {
    if (!this.props.popupAutoFocus) {
      this.focusInput();
    }
  };
  Select2.prototype.handleSingleSelect = function handleSingleSelect(key, triggerType) {
    var cacheValue = this.props.cacheValue;
    var itemObj = getValueDataSource$1(key, cacheValue ? this.valueDataSource.mapValueDS : {}, this.dataStore.getMapDS());
    this.valueDataSource = itemObj;
    this.setVisible(false, triggerType);
    if (this.useDetailValue()) {
      return this.handleChange(itemObj.valueDS, triggerType);
    } else {
      this.handleChange(itemObj.value, triggerType, itemObj.valueDS);
    }
    this.setState({
      highlightKey: key
    });
    if (!("searchValue" in this.props) && this.state.searchValue) {
      this.handleSearchClear(triggerType);
    }
  };
  Select2.prototype.handleMultipleSelect = function handleMultipleSelect(keys3, triggerType, key, keepSearchValue) {
    var _this2 = this;
    var itemObj = getValueDataSource$1(keys3, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
    var _props4 = this.props, cacheValue = _props4.cacheValue, mode = _props4.mode, hiddenSelected = _props4.hiddenSelected;
    if (cacheValue || mode === "tag") {
      this.valueDataSource = itemObj;
    }
    if (hiddenSelected) {
      this.setVisible(false, triggerType);
    }
    key && this.state.visible && this.setState({
      highlightKey: key
    });
    if (this.useDetailValue()) {
      this.handleChange(itemObj.valueDS, triggerType);
    } else {
      this.handleChange(itemObj.value, triggerType, itemObj.valueDS);
    }
    this.updateSelectAllYet(itemObj.value);
    if (!("searchValue" in this.props) && this.state.searchValue && !keepSearchValue) {
      setTimeout(function() {
        _this2.handleSearchClear(triggerType);
      });
    }
  };
  Select2.prototype.updateSelectAllYet = function updateSelectAllYet(value) {
    var _this3 = this;
    this.selectAllYet = false;
    if (this.props.hasSelectAll && Array.isArray(value)) {
      var selectAllValues = this.dataStore.getEnableDS().map(function(item) {
        return item.value;
      });
      if (selectAllValues.length <= value.length) {
        this.selectAllYet = true;
        selectAllValues.forEach(function(val) {
          if (value.indexOf(val) === -1) {
            _this3.selectAllYet = false;
            return;
          }
        });
      }
    }
  };
  Select2.prototype.handleSearchValue = function handleSearchValue(value) {
    if (this.state.searchValue === value) {
      return;
    }
    var filterLocal = this.props.filterLocal;
    if (filterLocal) {
      if (!("searchValue" in this.props)) {
        this.setState({
          searchValue: value,
          dataSource: this.dataStore.updateByKey(value)
        });
        this.setFirstHightLightKeyForMenu();
      }
    } else if (!("searchValue" in this.props)) {
      this.setState({
        searchValue: value
      });
    }
  };
  Select2.prototype.handleSearch = function handleSearch(value) {
    this.handleSearchValue(value);
    if (!this.state.visible && value) {
      this.setVisible(true);
    }
    this.props.onSearch(value);
  };
  Select2.prototype.handleSearchClear = function handleSearchClear(triggerType) {
    this.handleSearchValue("");
    this.props.onSearchClear(triggerType);
  };
  Select2.prototype.handleSearchKeyDown = function handleSearchKeyDown(e2) {
    var _props5 = this.props, popupContent = _props5.popupContent, onKeyDown = _props5.onKeyDown, showSearch = _props5.showSearch, mode = _props5.mode, hasClear = _props5.hasClear, onToggleHighlightItem = _props5.onToggleHighlightItem, readOnly = _props5.readOnly, disabled = _props5.disabled;
    if (popupContent) {
      return onKeyDown(e2);
    }
    var proxy = "search";
    var hasSearch = this.hasSearch();
    switch (e2.keyCode) {
      case KEYCODE$1.UP:
        e2.preventDefault();
        onToggleHighlightItem(this.toggleHighlightItem(-1, e2), "up");
        break;
      case KEYCODE$1.DOWN:
        e2.preventDefault();
        onToggleHighlightItem(this.toggleHighlightItem(1, e2), "down");
        break;
      case KEYCODE$1.ENTER:
        e2.preventDefault();
        if (readOnly || disabled) {
          break;
        }
        this.chooseHighlightItem(proxy, e2);
        break;
      case KEYCODE$1.ESC:
        e2.preventDefault();
        this.state.visible && this.setVisible(false, "keyDown");
        break;
      case KEYCODE$1.SPACE:
        e2.stopPropagation();
        !hasSearch && e2.preventDefault();
        break;
      case KEYCODE$1.BACKSPACE:
        if (readOnly || disabled) {
          break;
        }
        if (mode === "multiple" && showSearch || mode === "tag") {
          var valueDS = this.valueDataSource.valueDS;
          if (valueDS && valueDS.length && !valueDS[valueDS.length - 1].disabled) {
            this.handleDeleteTag(e2);
          }
        } else if (mode === "single" && hasClear && !this.state.visible) {
          this.handleClear(e2);
        }
        break;
    }
    onKeyDown(e2);
  };
  Select2.prototype.chooseMultipleItem = function chooseMultipleItem(key) {
    var value = this.state.value || [];
    var keys3 = value.map(function(v2) {
      return valueToSelectKey$1(v2);
    });
    var keepSearchValue = false;
    var index2 = keys3.map(function(v2) {
      return "" + v2;
    }).indexOf(key);
    if (index2 > -1) {
      keys3.splice(index2, 1);
      keepSearchValue = true;
    } else {
      keys3.push(key);
    }
    this.handleMultipleSelect(keys3, "enter", null, keepSearchValue);
  };
  Select2.prototype.chooseHighlightItem = function chooseHighlightItem(proxy, e2) {
    var mode = this.props.mode;
    if (!this.state.visible) {
      if (mode === "tag" && this.state.searchValue) {
        this.chooseMultipleItem(this.state.searchValue);
      }
      return false;
    }
    var highlightKey = this.state.highlightKey;
    if (highlightKey === null || !this.dataStore.getMenuDS().length) {
      return;
    }
    if (mode === "single") {
      this.handleSingleSelect(highlightKey, "enter");
    } else {
      this.chooseMultipleItem(highlightKey);
      e2 && e2.stopPropagation();
    }
  };
  Select2.prototype.handleTagClose = function handleTagClose(item) {
    var readOnly = this.props.readOnly;
    if (readOnly)
      return false;
    if (this.useDetailValue()) {
      var value = this.state.value.filter(function(v2) {
        return item.value !== v2.value;
      });
      this.handleChange(value, "tag");
    } else {
      var _value = this.state.value.filter(function(v2) {
        return item.value !== v2;
      });
      this.handleMultipleSelect(_value, "tag");
    }
    this.props.onRemove(item);
    return false;
  };
  Select2.prototype.handleDeleteTag = function handleDeleteTag(e2) {
    var value = this.state.value;
    var searchValue = this.state.searchValue;
    if (searchValue || !value || !value.length) {
      return false;
    }
    e2.preventDefault();
    var nextValues = value.slice(0, value.length - 1);
    if (this.useDetailValue()) {
      this.handleChange(nextValues, "tag");
    } else {
      this.handleMultipleSelect(nextValues, "tag");
    }
  };
  Select2.prototype.handleSelectAll = function handleSelectAll(e2) {
    e2 && e2.preventDefault();
    var nextValues = void 0;
    if (this.selectAllYet) {
      nextValues = [];
    } else {
      nextValues = this.dataStore.getEnableDS().map(function(item) {
        return item.value;
      });
    }
    this.handleMultipleSelect(nextValues, "selectAll");
  };
  Select2.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
    this.setVisible(visible, type);
  };
  Select2.prototype.afterClose = function afterClose() {
    if (this.hasSearch()) {
      this.handleSearchClear("popupClose");
    }
  };
  Select2.prototype.maxTagPlaceholder = function maxTagPlaceholder(selectedValues, totalValues) {
    var locale = this.props.locale;
    return "" + str$1.template(locale.maxTagPlaceholder, {
      selected: selectedValues.length,
      total: totalValues.length
    });
  };
  Select2.prototype.renderValues = function renderValues() {
    var _this4 = this;
    var _props6 = this.props, prefix2 = _props6.prefix, mode = _props6.mode, size = _props6.size, valueRender3 = _props6.valueRender, fillProps = _props6.fillProps, disabled = _props6.disabled, maxTagCount = _props6.maxTagCount, maxTagPlaceholder = _props6.maxTagPlaceholder, tagInline = _props6.tagInline, tagClosable = _props6.tagClosable;
    var value = this.state.value;
    if (isNull$1(value)) {
      return null;
    }
    if (!this.useDetailValue()) {
      if (value === this.valueDataSource.value) {
        value = this.valueDataSource.valueDS;
      } else {
        value = getValueDataSource$1(value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS()).valueDS;
      }
    }
    if (mode === "single") {
      if (!value) {
        return null;
      }
      var retvalue = fillProps && (typeof value === "undefined" ? "undefined" : _typeof$1(value)) === "object" && fillProps in value ? value[fillProps] : valueRender3(value);
      return typeof retvalue === "number" ? retvalue.toString() : retvalue;
    } else if (value) {
      var limitedCountValue = value;
      var maxTagPlaceholderEl = void 0;
      var totalValue = this.dataStore.getFlattenDS();
      var holder = "maxTagPlaceholder" in this.props ? maxTagPlaceholder : this.maxTagPlaceholder;
      if (maxTagCount !== void 0 && value.length > maxTagCount && !tagInline) {
        limitedCountValue = limitedCountValue.slice(0, maxTagCount);
        maxTagPlaceholderEl = React.createElement(ConfigTag$1, {key: "_count", type: "primary", size: size === "large" ? "medium" : "small", animation: false}, holder(value, totalValue));
      }
      if (value.length > 0 && tagInline) {
        maxTagPlaceholderEl = React.createElement("div", {className: prefix2 + "select-tag-compact", key: "_count"}, holder(value, totalValue));
      }
      value = limitedCountValue;
      if (!Array.isArray(value)) {
        value = [value];
      }
      var selectedValueNodes = value.map(function(v2) {
        if (!v2) {
          return null;
        }
        var labelNode = fillProps ? v2[fillProps] : valueRender3(v2);
        return React.createElement(ConfigTag$1, {
          key: v2.value,
          disabled: disabled || v2.disabled,
          type: "primary",
          size: size === "large" ? "medium" : "small",
          animation: false,
          onClose: _this4.handleTagClose.bind(_this4, v2),
          closable: tagClosable
        }, labelNode);
      });
      if (maxTagPlaceholderEl) {
        if (tagInline) {
          selectedValueNodes.unshift(maxTagPlaceholderEl);
        } else {
          selectedValueNodes.push(maxTagPlaceholderEl);
        }
      }
      return selectedValueNodes;
    }
    return null;
  };
  Select2.prototype.hasClear = function hasClear() {
    var _props7 = this.props, hasClear2 = _props7.hasClear, readOnly = _props7.readOnly, disabled = _props7.disabled, showSearch = _props7.showSearch;
    var _state = this.state, value = _state.value, visible = _state.visible;
    return typeof value !== "undefined" && value !== null && hasClear2 && !readOnly && !disabled && !(showSearch && visible);
  };
  Select2.prototype.renderExtraNode = function renderExtraNode() {
    var _props8 = this.props, hasArrow = _props8.hasArrow, hasClear = _props8.hasClear, prefix2 = _props8.prefix;
    var ret = [];
    if (hasArrow) {
      ret.push(React.createElement("span", {key: "arrow", "aria-hidden": true, onClick: this.handleArrowClick, className: prefix2 + "select-arrow"}, React.createElement(NextIcon, {type: "arrow-down", className: prefix2 + "select-symbol-fold"})));
    }
    if (hasClear) {
      ret.push(React.createElement("span", {key: "clear", "aria-hidden": true, onClick: this.handleClear, className: prefix2 + "select-clear"}, React.createElement(NextIcon, {type: "delete-filling"})));
    }
    return ret;
  };
  Select2.prototype.renderSelect = function renderSelect() {
    var _classNames, _this5 = this;
    var _props9 = this.props, prefix2 = _props9.prefix, showSearch = _props9.showSearch, placeholder = _props9.placeholder, mode = _props9.mode, size = _props9.size, className = _props9.className, style = _props9.style, readOnly = _props9.readOnly, disabled = _props9.disabled, hasBorder = _props9.hasBorder, label = _props9.label, locale = _props9.locale, state = _props9.state, onBlur = _props9.onBlur, onFocus = _props9.onFocus, onMouseEnter = _props9.onMouseEnter, onMouseLeave = _props9.onMouseLeave, rtl = _props9.rtl;
    var others = obj$1.pickOthers(Select2.propTypes, this.props);
    var othersData = obj$1.pickAttrsWith(others, "data-");
    var visible = this.state.visible;
    var isSingle2 = mode === "single";
    var hasSearch = this.hasSearch();
    var valueNodes = this.renderValues();
    var _placeholder = placeholder || locale.selectPlaceholder || locale.selectPlaceHolder;
    if (valueNodes && valueNodes.length) {
      _placeholder = null;
    }
    if (showSearch && visible && isSingle2 && typeof valueNodes === "string") {
      _placeholder = valueNodes;
    }
    var extra = this.renderExtraNode();
    var triggerClazz = classnames$1([prefix2 + "select", prefix2 + "select-trigger", prefix2 + "select-" + mode, "" + prefix2 + size, className], (_classNames = {}, _classNames[prefix2 + "active"] = visible, _classNames[prefix2 + "inactive"] = !visible, _classNames[prefix2 + "no-search"] = !hasSearch, _classNames[prefix2 + "has-search"] = hasSearch, _classNames[prefix2 + "select-in-ie"] = isIE9$1, _classNames[prefix2 + "select-in-ie-fixwidth"] = this.state.fixWidth, _classNames[prefix2 + "has-clear"] = this.hasClear(), _classNames));
    var valuetext = this.valueDataSource.valueDS ? this.valueDataSource.valueDS.label : "";
    return React.createElement("span", _extends$5({}, othersData, {
      className: triggerClazz,
      style,
      dir: rtl ? "rtl" : void 0,
      ref: this.saveSelectRef,
      onClick: this.handleWrapClick,
      onMouseEnter,
      onMouseLeave,
      onMouseDown: this.handleWrapClick
    }), React.createElement(NextInput, _extends$5({
      "aria-valuetext": valuetext
    }, obj$1.pickOthers(othersData, others), {
      role: "combobox",
      tabIndex: 0,
      "aria-expanded": this.state.visible,
      "aria-disabled": disabled,
      state,
      label,
      extra,
      value: this.state.searchValue,
      size,
      readOnly: !this.hasSearch() || readOnly,
      disabled,
      placeholder: _placeholder,
      hasBorder,
      hasClear: false,
      htmlSize: "1",
      inputRender: function inputRender3(inputEl) {
        return _this5.renderSearchInput(valueNodes, _placeholder, inputEl);
      },
      onChange: this.handleSearch,
      onKeyDown: this.handleSearchKeyDown,
      onFocus,
      onBlur,
      className: prefix2 + "select-inner",
      ref: this.saveInputRef
    })), React.createElement("span", {className: prefix2 + "sr-only", "aria-live": "polite"}, this.state.srReader));
  };
  Select2.prototype.renderSearchInput = function renderSearchInput(valueNodes, placeholder, inputEl) {
    var _classNames2;
    var _props10 = this.props, prefix2 = _props10.prefix, mode = _props10.mode, tagInline = _props10.tagInline;
    var isSingle2 = mode === "single";
    var mirrorText = this.state.searchValue;
    var cls = classnames$1((_classNames2 = {}, _classNames2[prefix2 + "select-values"] = true, _classNames2[prefix2 + "input-text-field"] = true, _classNames2[prefix2 + "select-compact"] = !isSingle2 && tagInline, _classNames2));
    var searchInput = [isSingle2 && valueNodes ? React.createElement("em", {key: "select-value"}, valueNodes) : valueNodes];
    var triggerSearch = React.createElement("span", {key: "trigger-search", className: prefix2 + "select-trigger-search"}, inputEl, React.createElement("span", {"aria-hidden": true}, mirrorText || placeholder, " "));
    if (!isSingle2 && tagInline) {
      searchInput.unshift(triggerSearch);
    } else {
      searchInput.push(triggerSearch);
    }
    return React.createElement("span", {className: cls}, searchInput);
  };
  Select2.prototype.renderMenuHeader = function renderMenuHeader() {
    var _classNames3, _classNames4;
    var _props11 = this.props, prefix2 = _props11.prefix, hasSelectAll = _props11.hasSelectAll, mode = _props11.mode, locale = _props11.locale, menuProps = _props11.menuProps;
    if (menuProps && "header" in menuProps) {
      return menuProps.header;
    }
    var sourceCount = this.dataStore.getEnableDS().length;
    if (!hasSelectAll || mode === "single" || !sourceCount) {
      return null;
    }
    var text = typeof hasSelectAll === "boolean" ? locale.selectAll : hasSelectAll;
    var selectAllYet = this.selectAllYet;
    var cls = classnames$1((_classNames3 = {}, _classNames3[prefix2 + "select-all"] = true, _classNames3[prefix2 + "selected"] = selectAllYet, _classNames3));
    var clsInner = classnames$1((_classNames4 = {}, _classNames4[prefix2 + "select-all-inner"] = true, _classNames4));
    return React.createElement("div", {key: "all", onClick: this.handleSelectAll, className: cls, style: {lineHeight: "unset"}}, selectAllYet ? React.createElement(NextIcon, {className: prefix2 + "menu-icon-selected", style: {display: "none"}, type: "select"}) : null, React.createElement("span", {className: clsInner}, text));
  };
  Select2.prototype.render = function render2() {
    var mode = this.props.mode;
    var props = _extends$5({}, this.props);
    if (this.hasSearch()) {
      props.canCloseByTrigger = false;
    }
    if (mode === "single") {
      props.cache = true;
    }
    return _Base.prototype.render.call(this, props);
  };
  return Select2;
}(Base$6), _class$1q.propTypes = _extends$5({}, Base$6.propTypes, {
  mode: propTypes.oneOf(["single", "multiple", "tag"]),
  value: propTypes.any,
  defaultValue: propTypes.any,
  onChange: propTypes.func,
  dataSource: propTypes.arrayOf(propTypes.oneOfType([propTypes.shape({
    value: propTypes.any,
    label: propTypes.any,
    disabled: propTypes.bool,
    children: propTypes.array
  }), propTypes.bool, propTypes.number, propTypes.string])),
  hasBorder: propTypes.bool,
  hasArrow: propTypes.bool,
  showSearch: propTypes.bool,
  onSearch: propTypes.func,
  onSearchClear: propTypes.func,
  hasSelectAll: propTypes.oneOfType([propTypes.bool, propTypes.string]),
  fillProps: propTypes.string,
  useDetailValue: propTypes.bool,
  cacheValue: propTypes.bool,
  valueRender: propTypes.func,
  itemRender: propTypes.func,
  notFoundContent: propTypes.node,
  style: propTypes.object,
  searchValue: propTypes.string,
  tagInline: propTypes.bool,
  tagClosable: propTypes.bool,
  maxTagCount: propTypes.number,
  maxTagPlaceholder: propTypes.func,
  hiddenSelected: propTypes.bool,
  onRemove: propTypes.func,
  onFocus: propTypes.func,
  onBlur: propTypes.func,
  onMouseEnter: propTypes.func,
  onMouseLeave: propTypes.func,
  onKeyDown: propTypes.func,
  locale: propTypes.object,
  popupAutoFocus: propTypes.bool,
  showDataSourceChildren: propTypes.bool
}), _class$1q.defaultProps = _extends$5({}, Base$6.defaultProps, {
  locale: zhCN$1.Select,
  mode: "single",
  showSearch: false,
  cacheValue: true,
  tagInline: false,
  onSearch: noop$w,
  onSearchClear: noop$w,
  hasArrow: true,
  onRemove: noop$w,
  valueRender: function valueRender2(item) {
    return item.label || item.value;
  },
  onKeyDown: noop$w,
  onFocus: noop$w,
  onBlur: noop$w,
  onMouseEnter: noop$w,
  onMouseLeave: noop$w,
  popupAutoFocus: false,
  tagClosable: true
}), _class$1q.displayName = "Select", _temp$1l);
var Select$3 = polyfill$1(Select$2);
var _class$1r, _temp$1m;
var bindCtx$v = func$1.bindCtx, noop$x = func$1.noop;
var AutoComplete$3 = (_temp$1m = _class$1r = function(_Base) {
  _inherits$1(AutoComplete2, _Base);
  function AutoComplete2(props) {
    _classCallCheck$1(this, AutoComplete2);
    var _this2 = _possibleConstructorReturn$1(this, _Base.call(this, props));
    _this2.handleChange = function(value, proxy, item) {
      var _this$props = _this2.props, disabled = _this$props.disabled, readOnly = _this$props.readOnly, filterLocal = _this$props.filterLocal;
      if (disabled || readOnly) {
        return false;
      }
      var actionType = typeof proxy === "string" ? proxy : "change";
      _this2.isInputing = actionType === "change";
      if (filterLocal) {
        _this2.setState({
          dataSource: _this2.dataStore.updateByKey(value)
        });
        _this2.shouldControlPopup(_this2.props, actionType);
        _this2.setFirstHightLightKeyForMenu();
      }
      if (!("value" in _this2.props)) {
        _this2.setState({
          value
        });
      }
      _this2.props.onChange(value, actionType, item);
      if (actionType === "itemClick" || actionType === "enter") {
        _this2.setVisible(false, actionType);
      }
    };
    _this2.isAutoComplete = true;
    _this2.isInputing = false;
    _this2.dataStore.setOptions({key: _this2.state.value});
    _extends$5(_this2.state, {
      dataSource: _this2.setDataSource(props)
    });
    bindCtx$v(_this2, ["handleTriggerKeyDown", "handleMenuSelect", "handleItemClick"]);
    return _this2;
  }
  AutoComplete2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var state = {};
    if ("value" in nextProps && nextProps.value !== prevState.value) {
      _extends$5(state, {
        value: nextProps.value
      });
    }
    if ("visible" in nextProps && nextProps.visible !== prevState.visible) {
      _extends$5(state, {
        visible: nextProps.visible
      });
    }
    if (Object.keys(state).length) {
      return state;
    }
    return null;
  };
  AutoComplete2.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    var props = this.props;
    if ("value" in props) {
      this.dataStore.setOptions({key: props.value});
    }
    if (props.filter !== prevProps.filter) {
      this.dataStore.setOptions({
        filter: props.filter
      });
    }
    if (props.filterLocal !== prevProps.filterLocal) {
      this.dataStore.setOptions({
        filterLocal: props.filterLocal
      });
    }
    if (prevProps.children !== props.children || prevProps.dataSource !== props.dataSource) {
      this.setState({
        dataSource: this.setDataSource(props)
      });
      if (!props.filterLocal && this.isInputing) {
        this.shouldControlPopup(props, "update");
      }
      if (!props.filterLocal && !props.popupContent) {
        this.setFirstHightLightKeyForMenu();
      }
    }
  };
  AutoComplete2.prototype.shouldControlPopup = function shouldControlPopup() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
    var type = arguments[1];
    var hasPopup = props.popupContent || this.dataStore.getMenuDS().length;
    if (hasPopup) {
      this.setVisible(true, type);
    } else {
      this.setVisible(false, type);
    }
  };
  AutoComplete2.prototype.handleMenuSelect = function handleMenuSelect(keys3) {
    var key = keys3[0];
    var mapDS = this.dataStore.getMapDS();
    if (key in mapDS) {
      var item = mapDS[key];
      this.handleSelectEvent(key, item, "itemClick");
    }
  };
  AutoComplete2.prototype.handleItemClick = function handleItemClick() {
    this.setVisible(false, "itemClick");
  };
  AutoComplete2.prototype.handleSelectEvent = function handleSelectEvent(key, item, triggerType) {
    var value = item && item[this.props.fillProps] || key;
    if (triggerType === "itemClick" || triggerType === "enter") {
      this.setVisible(false, triggerType);
    }
    this.handleChange(value, triggerType, item);
  };
  AutoComplete2.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
    if (!("visible" in this.props) && visible && !this.props.popupContent && !this.dataStore.getMenuDS().length) {
      return;
    }
    this.setVisible(visible, type);
  };
  AutoComplete2.prototype.beforeClose = function beforeClose() {
    this.isInputing = false;
  };
  AutoComplete2.prototype.handleTriggerKeyDown = function handleTriggerKeyDown(e2) {
    var _props = this.props, popupContent = _props.popupContent, onToggleHighlightItem = _props.onToggleHighlightItem, onKeyDown = _props.onKeyDown;
    if (popupContent) {
      e2.stopPropagation();
      return onKeyDown(e2);
    }
    switch (e2.keyCode) {
      case KEYCODE$1.UP:
        e2.preventDefault();
        onToggleHighlightItem(this.toggleHighlightItem(-1, e2), "up");
        break;
      case KEYCODE$1.DOWN:
        e2.preventDefault();
        onToggleHighlightItem(this.toggleHighlightItem(1, e2), "down");
        break;
      case KEYCODE$1.ENTER:
        e2.preventDefault();
        this.chooseHighlightItem(e2);
        break;
      case KEYCODE$1.SPACE:
        e2.stopPropagation();
        break;
      case KEYCODE$1.ESC:
        e2.preventDefault();
        this.state.visible && this.setVisible(false, "esc");
        break;
    }
    onKeyDown(e2);
  };
  AutoComplete2.prototype.chooseHighlightItem = function chooseHighlightItem() {
    if (!this.state.visible) {
      return false;
    }
    var highlightKey = this.state.highlightKey;
    var highlightItem = this.dataStore.getEnableDS().find(function(item) {
      return highlightKey === "" + item.value;
    });
    if (highlightItem) {
      this.handleSelectEvent(highlightKey, highlightItem, "enter");
    }
  };
  AutoComplete2.prototype.hasClear = function hasClear() {
    var _props2 = this.props, hasClear2 = _props2.hasClear, readOnly = _props2.readOnly, disabled = _props2.disabled;
    var value = this.state.value;
    return value && hasClear2 && !readOnly && !disabled;
  };
  AutoComplete2.prototype.renderSelect = function renderSelect() {
    var _classNames;
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
    var placeholder = props.placeholder, size = props.size, prefix2 = props.prefix, className = props.className, style = props.style, label = props.label, readOnly = props.readOnly, disabled = props.disabled, highlightHolder = props.highlightHolder, locale = props.locale, hasClear = props.hasClear, state = props.state, rtl = props.rtl;
    var others = obj$1.pickOthers(AutoComplete2.propTypes, props);
    var othersData = obj$1.pickAttrsWith(others, "data-");
    var value = this.state.value;
    var visible = this.state.visible;
    var triggerClazz = classnames$1([prefix2 + "select", prefix2 + "select-auto-complete", prefix2 + "size-" + size, className], (_classNames = {}, _classNames[prefix2 + "active"] = visible, _classNames[prefix2 + "disabled"] = disabled, _classNames));
    var _placeholder = placeholder || locale.autoCompletePlaceholder || locale.autoCompletePlaceHolder;
    if (highlightHolder && visible) {
      _placeholder = this.state.highlightKey || _placeholder;
    }
    var _inputProps = _extends$5({}, obj$1.pickOthers(othersData, others), {
      state,
      ref: this.saveInputRef,
      hasClear,
      value,
      size,
      disabled,
      readOnly,
      placeholder: _placeholder,
      label,
      onChange: this.handleChange,
      onKeyDown: this.handleTriggerKeyDown
    });
    return React.createElement("span", _extends$5({}, othersData, {
      className: triggerClazz,
      style,
      dir: rtl ? "rtl" : void 0,
      ref: this.saveSelectRef,
      onClick: this.focusInput
    }), React.createElement(NextInput, _extends$5({
      role: "combobox",
      "aria-autocomplete": "list",
      "aria-disabled": disabled,
      "aria-expanded": this.state.visible
    }, _inputProps)), React.createElement("span", {className: prefix2 + "sr-only", "aria-live": "polite"}, this.state.srReader));
  };
  AutoComplete2.prototype.render = function render2() {
    var _this2 = this;
    if (this.hasClear()) {
      var safeNode = this.props.popupProps.safeNode || [];
      var safeNodes = Array.isArray(safeNode) ? safeNode : [safeNode];
      safeNodes.push(function() {
        return _this2.clearNode;
      });
      this.props.popupProps.safeNode = safeNodes;
    }
    return _Base.prototype.render.call(this, _extends$5({}, this.props, {canCloseByTrigger: false}));
  };
  return AutoComplete2;
}(Base$6), _class$1r.propTypes = _extends$5({}, Base$6.propTypes, {
  value: propTypes.oneOfType([propTypes.string, propTypes.number]),
  defaultValue: propTypes.oneOfType([propTypes.string, propTypes.number]),
  onChange: propTypes.func,
  dataSource: propTypes.arrayOf(propTypes.oneOfType([propTypes.shape({
    value: propTypes.string,
    label: propTypes.any,
    disabled: propTypes.bool,
    children: propTypes.array
  }), propTypes.string])),
  fillProps: propTypes.string,
  itemRender: propTypes.func,
  onKeyDown: propTypes.func,
  highlightHolder: propTypes.bool,
  style: propTypes.object
}), _class$1r.defaultProps = _extends$5({}, Base$6.defaultProps, {
  onKeyDown: noop$x,
  fillProps: "value"
}), _temp$1m);
var AutoComplete$4 = polyfill$1(AutoComplete$3);
var _class$1s, _temp$1n;
var Option$1 = (_temp$1n = _class$1s = function(_React$Component) {
  _inherits$1(Option2, _React$Component);
  function Option2() {
    _classCallCheck$1(this, Option2);
    return _possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
  }
  Option2.prototype.render = function render2() {
    return this.props.children;
  };
  return Option2;
}(React.Component), _class$1s.propTypes = {
  value: propTypes.any.isRequired,
  disabled: propTypes.bool,
  children: propTypes.any
}, _class$1s._typeMark = "next_select_option", _temp$1n);
Option$1.displayName = "Option";
var _class$1t, _temp$1o;
var OptionGroup$1 = (_temp$1o = _class$1t = function(_React$Component) {
  _inherits$1(OptionGroup2, _React$Component);
  function OptionGroup2() {
    _classCallCheck$1(this, OptionGroup2);
    return _possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
  }
  OptionGroup2.prototype.render = function render2() {
    return this.props.children;
  };
  return OptionGroup2;
}(React.Component), _class$1t.propTypes = {
  label: propTypes.node,
  children: propTypes.any
}, _class$1t._typeMark = "next_select_option_group", _temp$1o);
OptionGroup$1.displayName = "OptionGroup";
Select$3.AutoComplete = NextConfigProvider.config(AutoComplete$4, {
  componentName: "Select"
});
Select$3.Option = Option$1;
Select$3.OptionGroup = OptionGroup$1;
function _transform$1(props, deprecated2) {
  var shape = props.shape, container6 = props.container, multiple = props.multiple, filterBy = props.filterBy, overlay = props.overlay, safeNode = props.safeNode, noFoundContent = props.noFoundContent, others = _objectWithoutProperties$2(props, ["shape", "container", "multiple", "filterBy", "overlay", "safeNode", "noFoundContent"]);
  var newprops = others;
  if (shape === "arrow-only") {
    deprecated2("shape=arrow-only", "hasBorder=false", "Select");
    newprops.hasBorder = false;
  }
  if (container6) {
    deprecated2("container", "popupContainer", "Select");
    newprops.popupContainer = container6;
  }
  if (multiple) {
    deprecated2("multiple", "mode=multiple", "Select");
    newprops.mode = "multiple";
  }
  if (filterBy) {
    deprecated2("filterBy", "filter", "Select");
    newprops.filter = filterBy;
  }
  if (overlay) {
    deprecated2("overlay", "popupContent", "Select");
    newprops.popupContent = overlay;
    newprops.autoWidth = false;
  }
  if (noFoundContent) {
    deprecated2("noFoundContent", "notFoundContent", "Select");
    newprops.notFoundContent = noFoundContent;
  }
  if (safeNode) {
    deprecated2("safeNode", "popupProps={safeNode}", "Select");
    newprops.popupProps = {
      safeNode
    };
  }
  return newprops;
}
Select$3.Combobox = NextConfigProvider.config(Select$3, {
  transform: function transform9(props, deprecated2) {
    deprecated2("Select.Combobox", "<Select showSearch={true}/>", "Select");
    var newprops = _transform$1(props, deprecated2);
    if (props.onInputUpdate) {
      newprops.onSearch = props.onInputUpdate;
      newprops.showSearch = true;
    }
    return newprops;
  }
});
var NextSelect = NextConfigProvider.config(Select$3, {
  transform: _transform$1,
  exportNames: ["focusInput", "handleSearchClear"]
});
const HOC = (WrappedComponents) => {
  const Wrapper = React.forwardRef((props, ref) => {
    const [defaultOffsetY, onPosition] = useDefaultOffsetY();
    const popupProps = {
      align: "tl bl",
      offset: [0, defaultOffsetY],
      onPosition,
      ...props.popupProps
    };
    return /* @__PURE__ */ React.createElement(WrappedComponents, {
      ref,
      ...props,
      popupProps
    });
  });
  hoistNonReactStatics_cjs(Wrapper, WrappedComponents);
  return Wrapper;
};
const OverlayHOC = (WrappedComponents) => {
  const Wrapper = React.forwardRef((props, ref) => {
    const [defaultOffsetY, onPosition] = useDefaultOffsetY();
    return /* @__PURE__ */ React.createElement(WrappedComponents, {
      ref,
      align: "tl bl",
      offset: [0, defaultOffsetY],
      onPosition,
      ...props
    });
  });
  hoistNonReactStatics_cjs(Wrapper, WrappedComponents);
  return Wrapper;
};
function useDefaultOffsetY() {
  const [defaultOffsetY, set] = useState(4);
  function onPosition(config2, node) {
    const str2 = getComputedStyle(node).getPropertyValue("--overlay-offset") || "4";
    const newOffset = parseInt(str2.trim());
    if (Number.isFinite(newOffset) && newOffset !== defaultOffsetY) {
      set(newOffset);
    }
  }
  return [defaultOffsetY, onPosition];
}
let Select$4 = React.forwardRef((props, ref) => {
  return /* @__PURE__ */ React.createElement(NextSelect, {
    autoWidth: false,
    ...props,
    ref
  });
});
Select$4 = HOC(Select$4);
hoistNonReactStatics_cjs(Select$4, NextSelect);
Select$4.AutoComplete = HOC(NextSelect.AutoComplete);
var Select$5 = Select$4;
;
;
;
;
;
;
;
;
const dataSource = [
  {label: "公有云主题", value: "theme-xconsole"},
  {label: "公有云主题(经典)", value: "theme-wind"},
  {label: "混合云亮色主题", value: "theme-hybridcloud"},
  {label: "混合云暗色主题", value: "theme-hybridcloud-dark"},
  {label: "云效主题", value: "theme-yunxiao"},
  {label: "Aone主题", value: "theme-aone"},
  {label: "Teamix主题", value: "theme-teamix"}
];
const mapThemeToImport = {
  "theme-xconsole": () => import("./d51cf033.js"),
  "theme-wind": () => import("./d51cf033.js"),
  "theme-hybridcloud": () => import("./9cb4371a.js"),
  "theme-hybridcloud-dark": () => import("./b9ca7d18.js"),
  "theme-yunxiao": () => import("./77704137.js"),
  "theme-aone": () => import("./bad2c55b.js"),
  "theme-teamix": () => import("./1067b19f.js")
};
const styleEl = document.createElement("style");
styleEl.className = "theme-switcher";
styleEl.setAttribute("type", "text/css");
document.head.appendChild(styleEl);
loadTheme("theme-xconsole");
const ToggleTheme = () => {
  const onChange9 = (val) => {
    loadTheme(val);
  };
  return /* @__PURE__ */ React.createElement(NextConfigProvider, {
    prefix: "next-"
  }, /* @__PURE__ */ React.createElement(Select$5, {
    dataSource,
    onChange: onChange9,
    defaultValue: "theme-xconsole",
    followTrigger: true
  }));
};
var Theme = createTheme({
  topNavs: [
    {
      text: "走查稿",
      href: "https://yuque.antfin-inc.com/docs/share/c343f5a6-0b4e-4653-8739-9038a3adccc7?#"
    }
  ],
  logo: "Cloud Design",
  topbarOperations: /* @__PURE__ */ React.createElement(ToggleTheme, null)
});
function loadTheme(val) {
  document.documentElement.className = val;
  mapThemeToImport[val]().then(({default: cssText}) => {
    styleEl.innerHTML = cssText;
  });
}
const App = () => {
  const renderPage = (routePath) => {
    if (!pages[routePath]) {
      throw new Error(`page not exist. routePath: ${routePath}`);
    }
    return React.createElement(PageLoader, {Theme, pages, routePath});
  };
  const pageRoutes = Object.keys(pages).filter((path) => path !== "/404").map((path) => getPageRoute(path, pages[path].staticData, renderPage));
  return React.createElement(Switch, null, pageRoutes, React.createElement(Route, {key: "same", path: "*", render: ({match}) => {
    return React.createElement(PageLoader, {Theme, pages, routePath: match.url});
  }}));
};
function getPageRoute(path, staticData, renderPage) {
  return React.createElement(Route, Object.assign({
    key: "same",
    exact: true,
    path
  }, staticData._routeConfig), renderPage(path));
}
const Router$1 = HashRouter;
const basename = void 0;
const Client = ({initCache}) => {
  const [dataCache, setDataCache] = useState(initCache !== null && initCache !== void 0 ? initCache : {});
  return React.createElement(Router$1, {basename}, React.createElement(dataCacheCtx.Provider, {value: dataCache}, React.createElement(setDataCacheCtx.Provider, {value: setDataCache}, React.createElement(App, null))));
};
ReactDOM.render(React.createElement(Client, null), document.getElementById("root"));
export {useEffect as $, Animate$1 as A, dom$1 as B, Component as C, support$1 as D, env$3 as E, createCommonjsModule as F, commonjsGlobal as G, getDefaultExportFromCjs as H, useState as I, ReactDOM as J, KEYCODE$1 as K, Checkbox$3 as L, NextVirtualList as M, NextConfigProvider as N, HOC as O, PureComponent as P, guid$1 as Q, React as R, Select$5 as S, focus$1 as T, str$1 as U, htmlId$1 as V, interopRequireDefault$1 as W, cloneElement as X, useMemo as Y, OverlayHOC as Z, _inherits$1 as _, _classCallCheck$1 as a, useLayoutEffect as a0, _extends as a1, _objectWithoutPropertiesLoose as a2, useReducer as a3, useRef as a4, unstable_batchedUpdates as a5, require$$0 as a6, createContext as a7, forwardRef as a8, _inheritsLoose as a9, getAugmentedNamespace as aa, Fragment as ab, uuid as ac, useCallback as ad, ConfigTag$1 as ae, Redirect as af, createElement$1 as ag, _possibleConstructorReturn$1 as b, createElement as c, classnames$1 as d, events$1 as e, findDOMNode as f, _extends$5 as g, hoistNonReactStatics_cjs as h, propTypes as i, func$1 as j, _objectWithoutProperties$2 as k, isValidElement as l, Children as m, _typeof$1 as n, obj$1 as o, polyfill$1 as p, log$1 as q, reactIs as r, NextInput as s, NextIcon as t, useContext as u, NextOverlay as v, NextSelect as w, Radio$3 as x, NextMenu as y, zhCN$1 as z};
